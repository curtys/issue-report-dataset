{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Your log files seem to indicate that some of your content is corrupt:\n\nCaused by: java.lang.IllegalArgumentException: invalid QName literal\n\tat org.apache.jackrabbit.name.QName.valueOf(QName.java:618)\n\tat org.apache.jackrabbit.core.state.util.Serializer.deserialize(Serializer.java:124)\n\tat org.apache.jackrabbit.core.state.obj.ObjectPersistenceManager.load(ObjectPersistenceManager.java:206)\n\t... 61 more\n\n\nPlease note that using the ObjectPersistenceManager on a production system is not recommended because it is not transactional. You should consider using DerbyPersistenceManager as your version storage.",
            "date": "2006-08-29T13:28:53.000+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "To reproduce this issue I tried to re-index a repository with 100'000 nodes. I was able to re-index the repository with as little as 32 mb heap size. My profiler did not show any exceptional memory usage in the search index. The memory usage was actually quite low.\n\nCan you please try to re-index your repository without the text filters? Maybe there is a memory leak in one of the filters when an exception is thrown on an invalid or corrupt document.\n\nHaving a heap dump for analysis would also be helpful. Can you please run the re-indexing process with the following JVM option: -Xrunhprof:heap=sites,doe=n\nThis will allow you to create a heap dump on a Ctrl-Break (on Windows) or kill -QUIT (on Unix) on the JVM process.\n\nThanks a lot.",
            "date": "2006-08-31T19:56:04.000+0000",
            "id": 1
        },
        {
            "author": "Christian Zanata",
            "body": "Hi Marcel,\nwe think the problem is in PdfTextFilter or in PdfBox libraries. We are not sure about that and we still investigate in that direction. It seems that after an exception something don't free the resources.",
            "date": "2006-09-01T07:58:45.000+0000",
            "id": 2
        },
        {
            "author": "Ian Boston",
            "body": "2 things with pdfbox\n\nIf you dont religiously close the streams it causes oom problems and a GC wont get to the finalize fast enough to avoid OOM\n\n2. PDFBox has to build the entire document including all the graphics images before it can render the text. If you have a refactored PDF you can get 1000's of graphics line segments, this causes PDBBox to use lots of CPU and Heap converting to a text stream.\n\nI am using PDFBox in a different search engine in the same way and it randomly causes lots of problems with refactored PDF files.\n\nHTH",
            "date": "2006-09-01T11:14:41.000+0000",
            "id": 3
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "I tried to re-index my repsoitory without the text filters and it works fine.\nSo the bug is in one of the text filters ...\nThese text filters i used before \norg.apache.jackrabbit.core.query.lucene.TextPlainTextFilter\norg.apache.jackrabbit.core.query.MsExcelTextFilter\norg.apache.jackrabbit.core.query.MsPowerPointTextFilter\norg.apache.jackrabbit.core.query.MsWordTextFilter\norg.apache.jackrabbit.core.query.PdfTextFilter\norg.apache.jackrabbit.core.query.HTMLTextFilter\norg.apache.jackrabbit.core.query.XMLTextFilter\norg.apache.jackrabbit.core.query.RTFTextFilter\norg.apache.jackrabbit.core.query.OpenOfficeTextFilter\n\nSo i can test to re-index the repository without some filters  ... Please give me a hint wich one i should use ???",
            "date": "2006-09-04T06:05:38.000+0000",
            "id": 4
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "hi marcel\nthe vm argument  -Xrunhprof:heap=sites,doe=n \ndoes not work in my case. the re-index process stops after about 1-2 minutes with a outofmemory-error\nis there another way to get a dump file ?\nclaus",
            "date": "2006-09-06T07:42:58.000+0000",
            "id": 5
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "hi @ all \nin my case the most file types in my repository are word documents.\nif i remove the org.apache.jackrabbit.core.query.MsWordTextFilter  class the re-index process works fine.\nbut if i enable the filter the process ends with a outofmemory error.\ni think we must look for a memory leak ...\nclaus",
            "date": "2006-09-07T06:57:14.000+0000",
            "id": 6
        },
        {
            "author": "Jukka Zitting",
            "body": "Does this issue still occur now that RuntimeExceptions are being catched per the JCR-574 fix?",
            "date": "2006-11-03T06:49:39.000+0000",
            "id": 7
        },
        {
            "author": "Marcel Reutegger",
            "body": "Claus wrote:\n> is there another way to get a dump file ?\n\nAcutally there is. jdk 1.4.2-12 supports the option -XX:+HeapDumpOnOutOfMemoryError\n\nWith this option the JVM will create a dump it goes out of memory.",
            "date": "2006-11-03T07:46:32.000+0000",
            "id": 8
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "Hi Jukka ..\n\nThe issue JCR-574 is very different to this issue. The Problem was that the LazyReader  has only catched Exceptions not Runtime Exceptions.\nThe Problem here is that i get a OutOfMemoryException while re-indexing a huge Repository.\nThis is for me a very big problem because i can not work in a Production environment with Jackrabbit because we \nhave about 4-5 million documents (doc,xls,pdf). If i have to re-index the repsoitory i can not to this.\nI will try the vm-argument what marcel wrote.\n\nclaus",
            "date": "2006-11-03T08:21:56.000+0000",
            "id": 9
        },
        {
            "author": "Jukka Zitting",
            "body": "I would assume that the OutOfMemoryException is triggered by the parsing of some large Word document, especially since you reported that the problem does not occur if you disable the Word document filter.\n\nThus, if we catch the OutOfMemoryException caused by a single document, it will should not interrupt the whole indexing process. Any memory garbage should then get collected automatically unless the document parser stores information statically.",
            "date": "2006-11-03T08:30:57.000+0000",
            "id": 10
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "ok i didn't think about this .. i will try the reindexing process with the fixed LazyReader and we will see if it works...\n\nbut at the moment i start the repository with this arguments\n-Xms1550m\n-Xmx3000m\n\ni do not think that only one document causes the outofmemoryexception. i think there are objects they will not be garbaged\n\nclaus",
            "date": "2006-11-03T08:55:01.000+0000",
            "id": 11
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "I must give Jukka right.\nI have testetd to reindex the repsoitory and it works fine now.\nFor me this issue can be closed ..\nThanks lot\nclaus",
            "date": "2006-11-08T06:31:50.000+0000",
            "id": 12
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks for testing this out! Resolved as Fixed.",
            "date": "2006-11-08T09:10:02.000+0000",
            "id": 13
        }
    ],
    "component": "indexing",
    "description": "[ERROR] 20060825 17:06:40\n(org.apache.jackrabbit.core.observation.ObservationManagerFactory) -\nSynchronous EventConsumer threw exception. java.lang.OutOfMemoryError\n\nwhen we try to re-index a repository, the repository is quite big (more then 4 Gb of disk usage) and sometimes it stores 40Mb size documents.\n\nAs attach I put all the last logs we registered, with the full stack traces.\n\nRelated to this whe have also errors with Lucene:\n\n[DEBUG] 20060803 08:24:01 (org.apache.jackrabbit.core.query.LazyReader)\n- Dump: \njava.io.IOException: Invalid header signature; read 8656037701166316554,\nexpected -2226271756974174256\n        at org.apache.jackrabbit.core.query.MsWordTextFilter\n\nand then this ones:\n\n[DEBUG] 20060803 08:37:17 (org.apache.jackrabbit.core.ItemManager) -\nremoving item 8637bf5f-4689-4e75-888f-b7b89bef40c8 from cache\n[ WARN] 20060803 08:40:13 (org.apache.jackrabbit.core.RepositoryImpl) -\nExisting lock file at C:\\Wave\\Repository\\.lock deteteced. Repository was\nnot shut down properly.\n[ERROR] 20060803 09:33:14\n(org.apache.jackrabbit.core.observation.ObservationManagerFactory) -\nSynchronous EventConsumer threw exception.\njava.lang.NullPointerException: null values not allowed\n\nthis is our repository.xml configuration for indexing\n\n<SearchIndex\nclass=\"org.apache.jackrabbit.core.query.lucene.SearchIndex\">\n        <param name=\"path\" value=\"${wsp.home}/index\"/>\n        <param name=\"textFilterClasses\"\nvalue=\"org.apache.jackrabbit.core.query.lucene.TextPlainTextFilter,\norg.apache.jackrabbit.core.query.MsExcelTextFilter,\norg.apache.jackrabbit.core.query.MsPowerPointTextFilter, \norg.apache.jackrabbit.core.query.MsWordTextFilter,\norg.apache.jackrabbit.core.query.PdfTextFilter,\norg.apache.jackrabbit.core.query.HTMLTextFilter,\norg.apache.jackrabbit.core.query.XMLTextFilter,\norg.apache.jackrabbit.core.query.RTFTextFilter,\n                        org.apache.jackrabbit.core.query.OpenOfficeTextFilter\"/>\n        <param name=\"useCompoundFile\" value=\"true\"/>\n        <param name=\"minMergeDocs\" value=\"100\"/>\n        <param name=\"volatileIdleTime\" value=\"3\"/>\n        <param name=\"maxMergeDocs\" value=\"100000\"/>\n        <param name=\"mergeFactor\" value=\"10\"/>\n        <param name=\"bufferSize\" value=\"10\"/>\n        <param name=\"cacheSize\" value=\"1000\"/>\n        <param name=\"forceConsistencyCheck\" value=\"false\"/>\n        <param name=\"autoRepair\" value=\"true\"/>\n                <param name=\"respectDocumentOrder\" value=\"false\"/>\n        <param name=\"analyzer\"\nvalue=\"org.apache.lucene.analysis.standard.StandardAnalyzer\"/>\n</SearchIndex>",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-550",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "OutOfMemoryError when re-indexing the repository",
    "systemSpecification": true,
    "version": "1.0.1, 1.1"
}