{
    "comments": [
        {
            "author": "Tobias Bocanegra",
            "body": "fixed in r398968",
            "date": "2006-05-02T22:45:08.000+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "the opv=copy issue is resolved, but another appeared:\n\nnewly added opv=version child nodes are not removed when restoring an older version of the node, not containing that nodes.",
            "date": "2006-05-09T03:07:33.000+0000",
            "id": 1
        },
        {
            "author": "Tobias Bocanegra",
            "body": "fixed (again).\n\nCommitted revision 405417.",
            "date": "2006-05-09T19:54:19.000+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged for 1.0.1 in revision 409609.",
            "date": "2006-05-26T16:31:09.000+0000",
            "id": 3
        }
    ],
    "component": "versioning",
    "description": "I have a node whose definition has properties and child nodes.  The\ndefinitions of the nodetypes for the node and the child include\nmix:versionable.  The properties definitions have onParentVersion=COPY and\nthe child nodes have onParentVersion=VERSION.  When I create a node with\nchild nodes and checkin and then restore the node, I get a\n\"....VersionException: Restore of root node not allowed\"  This is\noccurring on the restore of the child node.\n\nAccording to the spec:\n\nChild Node\nOn checkin of N, the node VN will get a subnode of type nt:versionedChild\nwith the same name as C. The single property of this node,\njcr:childVersionHistory is a REFERENCE to the version history of C (not to\nC or any actual version of C). This also requires that C itself be\nversionable (otherwise it would not have a version history).\n.\n.\n.\nOn restore of VN, if the workspace currently has an already existing node\ncorresponding to C?s version history and the removeExisting flag of the\nrestore is set to true, then that instance of C becomes the child of the\nrestored N. If the workspace currently has an already existing node\ncorresponding to C?s version history and the removeExisting flag of the\nrestore is set to false then an ItemExistsException is thrown.\n\n\nI'm restoring the node using\n\n   node.restore(version, true);\n\nIs this expected behavior?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-423",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Node.restore() fails for existing non-versioned OPV=Version child nodes",
    "systemSpecification": true,
    "version": "0.9, 1.0"
}