{
    "comments": [
        {
            "author": "Dominique Pfister",
            "body": "Internally, a node type definition is serialized (deserialized) via CompactNodeTypeDefWriter (CompactNodeTypeDefReader). The writer serializes QName \"as is\", i.e. without escaping any character inside it. The reader, on the other hand, treats spaces as token delimeters and will therefore fail if some QName contains spaces.\n\nFixed by encoding (decoding) QNames with ISO9075 before writing (after reading) in revision 534843. Thanks to Martijn Hendriks for reporting this bug.",
            "date": "2007-05-03T13:20:16.454+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.3 branch in revision 544223.",
            "date": "2007-06-04T19:55:38.389+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core",
    "description": "Registering a node type name that contains at least one space in a clustered environment will cause a JournalException in cluster nodes trying to read that change back from the journal. The stack trace observed is:\n\nJournalException: Parse error while reading node type definition.\n       at AbstractRecord.readNodeTypeDef(AbstractRecord.java:245)\n       ...\nCaused by: ParseException: Missing '[' delimiter for beginning of node type name ((internal), line 47)\n       at Lexer.fail(Lexer.java:148)\n       ...\n\n(package names and intermediate frames omitted for brevity).",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-895",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Registering node type names with spaces fails in clustered environment",
    "systemSpecification": true,
    "version": "1.3"
}