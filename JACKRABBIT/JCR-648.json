{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "very strange indeed...\n\naccording to the stack trace the NPE is thrown on the following line\nin SessionItemStateManager:\n\n    public void nodeModified(NodeState state) {\n==>        if (state.getContainer() == this || !transientStore.contains(state.getId())) {\n            dispatcher.notifyNodeModified(state);\n        }\n    }\n\n\nthe 'state' variable must be null in this case ('transientStore' can't be null).\n\nlooking at the preceeding stack frames, 'state' can't be possibly null,\nor i am missing something here...\n\nLocalItemStateManager:\n [...]\n       } else if (modified.isNode()) {\n            // if the state is not ours (and is not cached) it could have\n            // vanished from the weak-ref cache due to a gc. but there could\n            // still be some listeners (e.g. CachingHierarchyManager) that want\n            // to get notified.\n            dispatcher.notifyNodeModified((NodeState) modified);\n        }\n [...]\n\nif 'modified' would be null, the NPE would be thrown earlier (=> modified.isNode() )\n\ni have no idea what can possibly lead to the above stack trace...\n \n",
            "date": "2006-11-29T16:16:19.000+0000",
            "id": 0
        },
        {
            "author": "Christoph Kiehl",
            "body": "I had a look as well and came to the same conclusion, but I thought post it here. You guys have a better understanding of Jackrabbits internals.\nI would suggest resolving this issue. I'll reopen it if the problem occurs again. Maybe I can provide more information next time.",
            "date": "2006-11-29T16:22:48.000+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "resolving as 'not reproducible' , following chistoph's suggestion",
            "date": "2006-11-29T16:33:35.000+0000",
            "id": 2
        },
        {
            "author": "Stefan Guggisberg",
            "body": "thomas mueller found an issue in the constructor of  SessionItemStateManager that probably caused the NPE.\n\ni fixed the issue in svn r480877\n\nresolving as 'Fixed'",
            "date": "2006-11-30T13:41:32.000+0000",
            "id": 3
        }
    ],
    "component": "jackrabbit-core",
    "description": "I got the following exception which is not reproducible and occured during a large batch of write operations. Unfortunately I got no idea how this happened. May be someone has an idea?\n\n[2006-11-27 21:43:53,065, WARN ] {} support.RemoteInvocationTraceInterceptor:80: Processing of RmiServiceExporter remote call resulted in fatal exception: com.subshell.sophora.content.server.IContentManager.importDocument\norg.springframework.transaction.TransactionSystemException: Could not commit JCR transaction; nested exception is java.lang.NullPointerException Caused by: \njava.lang.NullPointerException\n        at org.apache.jackrabbit.core.state.SessionItemStateManager.nodeModified(SessionItemStateManager.java:878)\n        at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyNodeModified(StateChangeDispatcher.java:143)\n        at org.apache.jackrabbit.core.state.LocalItemStateManager.stateModified(LocalItemStateManager.java:426)\n        at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateModified(StateChangeDispatcher.java:85)\n        at org.apache.jackrabbit.core.state.SharedItemStateManager.stateModified(SharedItemStateManager.java:388)\n        at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateModified(StateChangeDispatcher.java:85)\n        at org.apache.jackrabbit.core.state.SharedItemStateManager.stateModified(SharedItemStateManager.java:388)\n        at org.apache.jackrabbit.core.state.ItemState.notifyStateUpdated(ItemState.java:241)\n        at org.apache.jackrabbit.core.state.ChangeLog.persisted(ChangeLog.java:271)\n        at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:691)\n        at org.apache.jackrabbit.core.state.XAItemStateManager.commit(XAItemStateManager.java:169)\n        at org.apache.jackrabbit.core.version.XAVersionManager.commit(XAVersionManager.java:478)\n        at org.apache.jackrabbit.core.TransactionContext.commit(TransactionContext.java:172)\n        at org.apache.jackrabbit.core.XASessionImpl.commit(XASessionImpl.java:315)\n        at org.springmodules.jcr.jackrabbit.support.JackRabbitUserTransaction.commit(JackRabbitUserTransaction.java:104)\n        at org.springmodules.jcr.jackrabbit.LocalTransactionManager.doCommit(LocalTransactionManager.java:192)\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:540)\n        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:510)\n        at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:310)\n        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:117)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\n        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:89)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\n        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:209)\n        at $Proxy14.importDocument(Unknown Source)\n        at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:203)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:162)\n        at org.springframework.remoting.support.RemoteInvocationTraceInterceptor.invoke(RemoteInvocationTraceInterceptor.java:70)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\n        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:209)\n        at $Proxy15.importDocument(Unknown Source)\n        at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.springframework.remoting.support.RemoteInvocation.invoke(RemoteInvocation.java:181)\n        at org.springframework.remoting.support.DefaultRemoteInvocationExecutor.invoke(DefaultRemoteInvocationExecutor.java:38)\n        at org.springframework.remoting.support.RemoteInvocationBasedExporter.invoke(RemoteInvocationBasedExporter.java:76)\n        at org.springframework.remoting.rmi.RmiBasedExporter.invoke(RmiBasedExporter.java:72)\n        at org.springframework.remoting.rmi.RmiInvocationWrapper.invoke(RmiInvocationWrapper.java:62)\n        at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:294)\n        at sun.rmi.transport.Transport$1.run(Transport.java:153)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at sun.rmi.transport.Transport.serviceCall(Transport.java:149)\n        at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:460)\n        at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:701)\n        at java.lang.Thread.run(Thread.java:595)\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-648",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "NullpointerException in SessionItemStateManager",
    "systemSpecification": true,
    "version": "1.1, 1.1.1"
}