{
    "comments": [
        {
            "author": "Tobias Bocanegra",
            "body": "fixed.\nDate: Thu May 25 03:04:54 2006\nNew Revision: 409351",
            "date": "2006-05-25T17:08:27.000+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged for 1.0.1 in revision 409626.",
            "date": "2006-05-26T17:27:19.000+0000",
            "id": 1
        }
    ],
    "component": "",
    "description": "there is a rear occation when one thread commits a transaction and another thread reads versioing related information, so that a deadlock can occurr. \n\nexample:\n\nThread1:\n                        ut.begin();\n                        session.getWorkspace().clone(\"default\", \"/content\", \"/content\", true);\n                        ut.commit();\n\nThread2:\n                        VersionHistory vh = folder.getVersionHistory();\n                        VersionIterator iter = vh.getAllVersions();\n                        while (iter.hasNext()) {\n                            Version v = iter.nextVersion();\n                        }\n\n\nto fix this issue we must ensure, that methods below the shareditemstatemgr do not call higher instances (like itemmgr) again.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-443",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Deadlock when concurrently committing and reading versioning states",
    "systemSpecification": true,
    "version": "0.9, 1.0"
}