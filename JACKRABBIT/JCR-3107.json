{
    "comments": [
        {
            "author": "Martin B\u00f6ttcher",
            "body": "proposed patch",
            "date": "2011-10-11T09:46:33.658+0000",
            "id": 0
        },
        {
            "author": "Martin B\u00f6ttcher",
            "body": "revoked due to results of discussion with Marcel",
            "date": "2011-10-11T12:47:51.412+0000",
            "id": 1
        },
        {
            "author": "Martin B\u00f6ttcher",
            "body": "new proposed patch",
            "date": "2011-10-11T13:02:40.886+0000",
            "id": 2
        },
        {
            "author": "Martin B\u00f6ttcher",
            "body": "Writing the array every time the \"doClose\"-method is invoked may lead to some runtime issues because the array can have a size of many megabytes. If the file is touched every time (even if it's contents isn't changed) a backup mechanism will need to handle this persistence file again and again.\n\nTherefore it seems to be a better idea to write the file only once as soon as the initializer finished.",
            "date": "2011-10-11T13:07:42.272+0000",
            "id": 3
        },
        {
            "author": "Alex Deparvu",
            "body": "good work, thanks!\napplied the patch with some modifications\n\nfixed in revision 1182761\n\n(edit: changed to the revision number)",
            "date": "2011-10-13T10:25:19.849+0000",
            "id": 4
        },
        {
            "author": "Alex Deparvu",
            "body": "added some logs in revision 1182824",
            "date": "2011-10-13T13:01:08.183+0000",
            "id": 5
        }
    ],
    "component": "jackrabbit-core, query",
    "description": "Initializing a workspace can take quite a long time if there is a big number of nodes and some search indexes involved. The reason is that the setup of the CachingIndexReader is processed using chunks of a certain size (actually 400K) in order to reduce the memory footprint. As soon as the number of documents exceeds this limit some operations (actually traversing complete indexes) are performed again and again.\n\nIt seems that the current algorithm \"initializeParents\" in the CachingIndexReader class can't be optimized without increasing the memory consumption. Therefore it should be a promising approach to persist the \"state\" of this class (actually it's main member array and map) and reload it on startup.\n\nThe \"load\" of the state can be done implicitly in the initializing phase of the cache. This is obvious. The correct point of time to call the \"save\" operation isn't obvious at all. I tried the \"doClose\" method of the class and it seems sufficient.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-3107",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Speed up hierarchy cache initialization",
    "systemSpecification": true,
    "version": ""
}