{
    "comments": [
        {
            "author": "Thomas Mueller",
            "body": "Hi,\n\nThe patch looks good, but maybe it can still be improved. Your implementation calls quite heavyweight methods that can throw RepositoryException. Maybe they throw unchecked exceptions as well (I recently had a problem with NullPointerException  in a toString() method). Catching Exception instead of just RepositoryException would be safer I guess. What about appending super.toString() in all cases (even if no exception occurs)? That way, you could detect it's the same object before and after the session is closed.\n\nRegards,\nThomas",
            "date": "2008-04-15T06:56:40.604+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "i agree with thomas that only methods should be used that do not throw an exception and do not alter the state (item.getName() does).\n\n",
            "date": "2008-04-15T07:00:18.618+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "I would also stay away from resolving namespaces, but return the namespace URI and the local name of a Name. Well, that actually means calling toString() on a Name ;), which is probably a good pattern.",
            "date": "2008-04-15T07:22:47.706+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "I made some related but less complex improvements in revisions 691296 and 691305. All items now return their type (\"node\" or \"property\") and (safe) path as the toString() output.",
            "date": "2008-09-02T16:28:41.351+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "Completed in revision 698402. All ItemImpl descendants now have toString() methods that return a string like \"<type> <path>\" using safeGetJCRPath for the path part.\n\nAlso, I replaced all calls to safeGetJCRPath() with the toString() method in diagnostics output. The result is more readable, for example:\n\n    \"failed to add property \" + name + \" to \" + safeGetJCRPath()\n\nvs.\n\n    \"failed to add property \" + name + \" to \" + this\n\n",
            "date": "2008-09-23T23:41:44.423+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "> \"failed to add property \" + name + \" to \" + this\n\nWouldn't it be nice if Java supported stuff like \"failed to add property ${name} to ${this}\". Perhaps we should switch to Groovy. ;-)",
            "date": "2008-09-24T07:55:14.742+0000",
            "id": 5
        }
    ],
    "component": "jackrabbit-core",
    "description": "add toString for NodeImpl and PropertyImpl with new format. see how it is liked, before adding more.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1538",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Trivial",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "[patch] add toString for NodeImpl and PropertyImpl",
    "systemSpecification": true,
    "version": "core 1.4.2"
}