{
    "comments": [
        {
            "author": "angela",
            "body": "proposed patch that adds an optional dependency to jackrabbit-api.\n\ni had a quick discussion with jukka about this, since we\ncurrently have not possibility to expose utilities related to jackrabbit extensions to the jcr-api (except for adding them to jackrabbit-core directly, which is cumbersome). \nthe proposed way to deal with is, was to make the dependency optional for all those that want to make use of jcr-commons but only want to have a jcr-dependency.",
            "date": "2011-08-18T09:04:40.723+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "michi, what do you think?",
            "date": "2011-08-18T09:05:06.803+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Wouldn't it actually be easier, instead of having such a query mapper utility, to simply support this JSON query format directly in the API?",
            "date": "2011-08-18T09:30:46.463+0000",
            "id": 2
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "It might be easier but I think the current way is cleaner. The API exposes an object model of the query (introduced with JCR-2800). This patch adds a specific language bindings. ",
            "date": "2011-08-18T09:56:21.059+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "Do we expect the JSON query format to be widely used (i.e. by more clients than the object model) with the UserManager API? In that case I'd simply support it directly in the API by exposing a findAuthorizables(String query) method.\n\nOtherwise, if we don't expect the JSON format to be widely used, is the jcr-commons component then the right place for this code?\n",
            "date": "2011-08-18T10:09:05.307+0000",
            "id": 4
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "So the question is whether to add findAuthorizables(String query) to the API and put the code into jackrabbit-core or to put the code somewhere else (i.e jcr-commons). I'd go for the second since it seems more modular to me. If it turns out (which I doubt) that there is really a need for a findAuthorizables(String query) method in the API we can still add that later on. ",
            "date": "2011-08-18T10:17:56.996+0000",
            "id": 5
        },
        {
            "author": "Jukka Zitting",
            "body": "Fair point. I'm just trying to establish how important and/or widely used this feature (JSON query format) is and how many clients really are using it. This sounds rather like a specific integration scenario (i.e. a single backend servlet for Ajax clients) than a generic use case, especially since we already do have the query builder API for Java clients. I'm therefore a bit reluctant to have this in jcr-commons.",
            "date": "2011-08-18T10:40:00.666+0000",
            "id": 6
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "What other options are there? It seems a bit alien for jackrabbit-core. Putting it directly into jackrabbit-api doesn't seem right to me.",
            "date": "2011-08-18T10:47:44.854+0000",
            "id": 7
        },
        {
            "author": "Jukka Zitting",
            "body": "Why do we need it in Jackrabbit? Assuming the purpose of this code is to support Ajax clients, the code should simply reside with the servlet that processes requests sent by those clients.",
            "date": "2011-08-18T10:52:03.857+0000",
            "id": 8
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Well that was the case up to now. Maybe Angela can jump in here. ",
            "date": "2011-08-18T10:55:38.032+0000",
            "id": 9
        },
        {
            "author": "angela",
            "body": "i think it nicely fits into jcr-commons which already provides quite some utilities for json-formatting jcr-specific content.\nnotably the spi2davex and it's server-side implementation make heavy use of json-serialization of jcr items and it IMO\nlooks perfectly logic to add similar functionality for users, access control and other jackrabbit specific extensions\nof the JCR API... \n\n... in addition having that optional dependency to jackrabbit-api would finally allow us to provide utilities for \njackrabbit-api which up to now was put into jackrabbit-core or into project specific utilities.",
            "date": "2011-08-18T11:16:05.857+0000",
            "id": 10
        },
        {
            "author": "Jukka Zitting",
            "body": "OK, +1 from me then.\n\nIt would be great however if all the code in jcr-commons that depends on API extensions in jackrabbit-api was put under a separate package like org.apache.jackrabbit.commons.jackrabbit (for example, use o.a.j.commons.jackrabbit.user instead of o.a.j.commons.security.user), so that a simple grep over a client codebase is enough to tell whether the optional jackrabbit-api dependency is really required.",
            "date": "2011-08-18T13:47:57.848+0000",
            "id": 11
        },
        {
            "author": "angela",
            "body": "> It would be great however if all the code in jcr-commons that depends on API extensions in jackrabbit-api was put under a separate package\n\nfine with me. i will change the package name accordingly.",
            "date": "2011-08-18T13:50:57.870+0000",
            "id": 12
        },
        {
            "author": "Jukka Zitting",
            "body": "Updated OSGi metadata accordingly in revision 1160280.",
            "date": "2011-08-22T14:45:53.722+0000",
            "id": 13
        }
    ],
    "component": "jackrabbit-jcr-commons",
    "description": "it would be convenient if jackrabbit-jcr-commons would provide a utility to generate authorizable\nqueries from a string.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-3056",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "jcr-commons: Add utility to translate a string to a AuthorizableQuery and execute it on the user manager ",
    "systemSpecification": true,
    "version": "2.3"
}