{
    "comments": [
        {
            "author": "angela",
            "body": "with jsr 283 a couple of changes are made to the jcr name:\n\n1) introduce distinction between \"Expanded Form\" and \"Qualified Form\"\n2) change the set of invalid characters\n\n",
            "date": "2008-08-07T08:38:43.160+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "initial draft for the NameParser, that deals with both expanded and qualified form.\n\n- validation of uri in the expanded form is omitted (as far as i know, we don't\n  do this with the namespace registry currently)\n- not totally sure about cases like \"{}\" and \"{uri}\" where uri would be a known\n  namespace uri.\n\nplease comment.",
            "date": "2008-08-07T09:28:36.379+0000",
            "id": 1
        },
        {
            "author": "Julian Reschke",
            "body": "(summarizing phone conversation with Angela...)\n\n1) The name parser should decide on jcr name vs extended name *solely* based on the name to parse. It may be tempting to query the namespace registry, but this is IMHO an extremely bad idea.\n\n2) Edge case: as far as I can tell, the only potential edge cases occur when the first \"{\"...\"}\" pair does not contain a colon character. However, namespace names should be absolute URIs, and any absolute URI (by definition) contains a colon. Thus, just rely on that. People who mint namespace names that aren't URIs will get what they deserve (in this case, the inability to take advantage of the new syntax).\n",
            "date": "2008-08-21T14:33:51.670+0000",
            "id": 2
        },
        {
            "author": "angela",
            "body": "> 1) The name parser should decide on jcr name vs extended name *solely* based on the name to parse. \n> It may be tempting to query the namespace registry, but this is IMHO an extremely bad idea.\n\nisn't it inconsistent, if an extended jcr-name containing an unknown URI passes the parsing, while parsing a name with unknown prefix fails (the namespace resolver throws NamespaceException)?\n\n> 2) Edge case: as far as I can tell, the only potential edge cases occur when the first \"{\"...\"}\" pair does not \n>      contain a colon character. However, namespace names should be absolute URIs, and any absolute \n>     URI (by definition) contains a colon. Thus, just rely on that. People who mint namespace names that \n>     aren't URIs [...] \n\ninitially i had the parser behaving like that. but i got rid of that limitation due to the fact, that Jackrabbit currently allows any string to be a namespace URI except for the reserved ones.\n\n> [...] will get what they deserve (in this case, the inability to take advantage of the new syntax).\n\ni don't agree here.\n\nafter all and thinking about it, i am not totally convinced that the improvements suggested by julian should got into the patch.\n\nangela",
            "date": "2008-08-22T08:07:09.615+0000",
            "id": 3
        },
        {
            "author": "Julian Reschke",
            "body": "> isn't it inconsistent, if an extended jcr-name containing an unknown URI passes the parsing, while parsing a name with unknown prefix fails (the namespace resolver throws NamespaceException)? \n\nNot really, as the extended name is fully defined without additional session- or repository-related information.\n\nSpeaking of which, we need to clarify whether the URI in the extended name *needs* to be registered at all.\n\nFor instance, if I just need it as identifier, for instance for permissions, why would I need to repository-register the namespace?\n\n> initially i had the parser behaving like that. but i got rid of that limitation due to the fact, that Jackrabbit currently allows any string to be a namespace URI except for the reserved ones. \n\nI disagree it's a limitation. What's a limitation is that distinguishing an extended name from a JCR name requires knowledge of the namespace registry. I think *that's* a very undesirable limitation.\n\nPeople who mint invalid namespace URIs are only affected when they try to use the new notation. I think that's totally acceptable.\n",
            "date": "2008-08-22T08:36:41.639+0000",
            "id": 4
        },
        {
            "author": "angela",
            "body": "alternative patch addressing julians concerns. draft quality, only commenting the code changed from v1.\n\nnote: currently it is required that all names appearing JR-internally have a correspondence within the NamespaceResolver. If this check is omitted during the name-parsing we may have to add it in the various implementations of the NameResolver interface...\n\njulian started a discussion thread in the expert group. so, this issue will remain open until decisions have been taken and we find consensus here.\n\nkind regards\nangela",
            "date": "2008-08-27T15:30:35.140+0000",
            "id": 5
        },
        {
            "author": "angela",
            "body": "please reopen if something is missing regarding treatment of expanded names, namespace handling etc...",
            "date": "2009-08-06T10:46:05.577+0000",
            "id": 6
        }
    ],
    "component": "JCR 2.0",
    "description": null,
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1712",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JSR 283: JCR Names",
    "systemSpecification": true,
    "version": ""
}