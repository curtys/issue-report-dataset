{
    "comments": [
        {
            "author": "fabrizio giustina",
            "body": "simple patch which adds an additional cleanup on exceptions.",
            "date": "2007-02-23T20:47:59.091+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Patch applied to svn trunk in revision 511509 with some additional comments.\n\nThe new PdfTextExtractor class already covered this case, but would have failed in case an IOException had been thrown by the cleanup process. In revision 511510 I added a catch for such cleanup exceptions.\n\nThanks for the background work on this! To me it seems like this is really a PDFBox bug in that it fails to do proper cleanup in case an exception gets thrown. I'll see if I can formulate a good bug report and a patch for PDFBox to avoid such workarounds in Jackrabbit.",
            "date": "2007-02-25T13:44:55.313+0000",
            "id": 1
        }
    ],
    "component": "indexing",
    "description": "In case of errors in a parsed PDF document jackrabbit may fail to properly close the parsed document. PDFBox will write a stack trace to system out at finalize to warn agains this.\n\nthis is the resulting log:\n\nWARN org.apache.jackrabbit.core.query.LazyReader LazyReader.java(read:82) 20.02.2007 15:42:50 exception initializing reader org.apache.jackrabbit.core.query.PdfTextFilter$1: java.io.IOException: Error: Expected hex number, actual=' 2'\njava.lang.Throwable: Warning: You did not close the PDF Document\n   at org.pdfbox.cos.COSDocument.finalize(COSDocument.java:384)\n   at java.lang.ref.Finalizer.invokeFinalizeMethod(Native Method)\n   at java.lang.ref.Finalizer.runFinalizer(Finalizer.java:83)\n   at java.lang.ref.Finalizer.access$100(Finalizer.java:14)\n   at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:160)\n\n\nthis may happens because the parse() method at\n\nparser = new PDFParser(new BufferedInputStream(in));\nparser.parse();\n\nimmediately creates a document, but it can throw an exception while processing the file.\nPdfTextFilter should check if parser still holds a document and close it appropriately.\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-764",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "PdfTextFilter may leave parsed document open in case of errors",
    "systemSpecification": true,
    "version": "1.0, 1.0.1, 1.1, 1.1.1, 1.2.1, 1.2.2"
}