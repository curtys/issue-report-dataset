{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Fixed as suggested in revision 691324. Thanks!",
            "date": "2008-09-02T17:23:40.643+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core",
    "description": "This is just a trivial thing I noticed this while inspecting the code. getApplicableChildNodeDef() says:\n\n        // try named node definitions first\n        ItemDef[] defs = getNamedItemDefs(name);\n        if (defs != null) {\n\nbut getNamedItemDefs() is currently defined to not return null:\n\n    public ItemDef[] getNamedItemDefs(Name name) {\n        List defs = (List) namedItemDefs.get(name);\n        if (defs == null || defs.size() == 0) {\n            return ItemDef.EMPTY_ARRAY;\n        }\n        return (ItemDef[]) defs.toArray(new ItemDef[defs.size()]);\n    }\n\nI didn't check to see if there were any other unnecessary null checks.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1308",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Trivial",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Unnecessary null check in EffectiveNodeType.getApplicableChildNodeDef()",
    "systemSpecification": true,
    "version": "1.4"
}