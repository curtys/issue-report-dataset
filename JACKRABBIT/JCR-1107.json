{
    "comments": [
        {
            "author": "Felix Meschberger",
            "body": "Proposed change to ObjectIterator.\n\nThe consequence of the look-ahead and non-1:1 mapping of mapped objects in the iterator and underlying node iterator is, that the remove method may not be properly implemented. Therefore, this method just throws an UnsupportedOperationException.\n\nI understand, that there may be situations, where it may be desirable to have a 1:1 mapping of the underlying node iterator to the ObjectIterator. But I assume, that in the context of an application operating on mapped data, this is rather the exception than the rule.",
            "date": "2007-09-03T13:50:06.400+0000",
            "id": 0
        },
        {
            "author": "Felix Meschberger",
            "body": "Fixed in Rev. 572347 with adaptions of users pending.",
            "date": "2007-09-03T14:23:41.253+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "The ObjectIterator class implements an Iterator of objects mapped from an underlying NodeIterator. This ObjectIterator may return null from next() if no mapping for a node in the iterator exists. Rather than returning null, the iterator should probably just ignore the unmappable node and return an object from the next node in the underlying iterator which is mappable.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1107",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "ObjectIterator may return null, which is not readily expected from an Iterator",
    "systemSpecification": true,
    "version": "1.4"
}