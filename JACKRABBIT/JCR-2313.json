{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "As discussed, marking this as a blocker for Jackrabbit 2.0.",
            "date": "2009-09-18T13:19:09.878+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "Changes to the API\n---------------------------------------------------------------------\n\n- Referees -> removed. this includes\n  Authorizable#getPrincipals()\n  Authorizable#addReferee(Principal)\n  Authorizable#removeReferee(Principal)\n\n  comment:\n  Nobody i asked had strong arguments for the referees\n  and i found myself struggling with the concept that has been part\n  of the very initial patch.\n\n- Ability to have User API changes transient. Therefore added\n\n  UserManager#isAutoSave()\n  UserManager#autoSave(boolean enable)\n\n  comment:\n  JCR generally defines all changes made on a Session level to\n  be transient that require an extra save. User management however\n  take some intermediate position as it isn't operating on 'path'\n  or 'items' and there is no requirement that changes made are\n  effective on the original Session.\n  in order to have the ability make user API changes transient\n  i decided to add the 2 methods above.\n\n\nChanges to the Implementation\n---------------------------------------------------------------------\n\n- AuthorizableImpl#setProperty\n  does not fail if single valued property gets replaced\n  by multivalued property and vice versa.\n- AuthorizableImpl overriding Object#hashCode, #equals and #toString\n\n- UserManagerImpl: make userPath and groupPath configurable.\n  see also UserManagerImpl#PARAM_USERS_PATH and #PARAM_GROUPS_PATH.\n  comment:\n  If the config option is missing the originally hardcoded values\n  are used as default (-> UserConstants)\n\n- UserManagerImpl: only returns authorizables from nodes that have\n  the expected node type AND reside under the corresponding root\n  node (see configurable root paths above).\n\n- UserManagementImpl#isAutoSave and #autoSave(boolean)\n  is disabled in the default implementation as this one may\n  be used with users stored i a dedicated system workspace.\n  in this case the editing session is not the one the user manager\n  was obtained from (-> session.save not working).\n\n- UserManagerImpl: No creation of nested user/groups.\n  In contrast to 1.5 nested groups/users are not supported any more.\n  See also changes to the node type definitions.\n\n- UserID/GroupID used for jcr:uuid\n  The jcr:uuid of user/group nodes is calculated from the lowercased ID instead\n  of having it generated randomly\n  > simplify getAuthorizable(String id) to a Session.getNodeByNodeId\n  > structure of user/group nodes must no longer be predefined\n  > no need to ignore intermediatePath parameter\n  > this also remove some limitations of the built-in, config driven\n     node structure\n  > rep:userId is not needed any more as the humand readable form\n    can as well be retrieved from the node name.\n  > login is case insensitive\n  > creating multiple users/groups whose id only differ in terms of case \n     will not be possible any more\n\n- Group membership moved back to GroupImpl \n  based on discussion along with the new user-per-workspace\n  model (see below) we were once again debating the ac\n  constraints vs. performance (frequency of access) and\n  decided to move the group membership infomation back to\n  the GroupImpl as it was in JR 1.5.\n\n- Allow subclasses of GroupImpl for custom implementations\n  for consistency with the extensions made by dominique for\n  UserImpl (rev.792467)\n\n- Configuration of UserManager as part of the SecurityManager config. \n  improved, added UserManagerConfig\n\n- Added isSystemUserManager to the UserManager implementation.\n  UserManager instances having this flag turned on assert the existance of\n  the admin user. Conflicting nodes having the same jcr:uuid as calculated for \n  the admin user node, will be removed.\n\n- JackrabbitSecurityManager#getAuthContext was changed to\n  take an additional param workspaceName\n  -> see user-per-workspace below\n\n- JackrabbitSecurityManager#getUserID was changed to take\n  an additional workspaceName parameter.\n  -> see user-per-workspace below\n\n- Additional tests in various areas. among other:\n  > intermediate path containing parent elements\n  > recreation of users (reuse of id)\n  > property type of membership\n  > collision of user/group node with some intermediate folder\n  > test transient vs. autosaving user changes\n\n\nChanges to the NodeType Definitions\n---------------------------------------------------------------------\n\n- rep:AuthorizableFolder\n  > no longer has protected child node definitions.\n  > extends from nt:hierarchyNode\n  > no longer extends from mix:referenceable\n- rep:Authorizable\n  > no longer defines protected child node definitions.\n  > may have residual child nodes meant to be used for\n    application specific content.\n  > no longer defines rep:referees property\n  > no longer defines rep:groups property\n  > extends from nt:hierarchyNode\n- rep:Group\n  > defines rep:members property (again)\n- rep:User\n  > no longer defines mandatory rep:userID\n\n\nNew Functionality\n---------------------------------------------------------------------\n\nWe decided to try an alternative approach for storing user and\ngroup information. Instead of having a separate, dedicated\nworkspace that stores user/groups for the whole repository,\nthere should be the ability to keep users/groups in each workspace.\n\nBoth approaches can be used based on the SecurityManager configuration:\nThe DefaultSecurityManager stores users/groups in a separate workspace as it used to be. The new approach is obtained when using the new security manager implementation.\n\n\nBackwards Compatibility Issues\n---------------------------------------------------------------------\n\nI didn't yet try to run the new user management on an older version.\nThe user manager configuration provides a compatibility config\noption that currently addresses < 2.0 lookup of user/groups by ID\nbut none of the recent changes that potentially cause troubles\n(group membership and the nt:hierarchyNode are candidates from my\npoint of view).\n",
            "date": "2009-09-24T13:14:00.733+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-api, jackrabbit-core",
    "description": "follow up issue as JCR-2199 is already closed.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2313",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Blocker",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Improvements to user management (2)",
    "systemSpecification": true,
    "version": "2.0-alpha7, 2.0-alpha8, 2.0-alpha9"
}