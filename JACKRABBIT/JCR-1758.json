{
    "comments": [
        {
            "author": "Boni Gopalan",
            "body": "Patch for the Issue reported.\nModified getValue() method to use instanceof at the place of Class.equals()\nRan and passed all the tests in jackrabbit-ocm.\n",
            "date": "2008-09-23T15:45:22.292+0000",
            "id": 0
        },
        {
            "author": "Christophe Lombart",
            "body": "the patch has been applied. Unit tests are working here. Thanks for the improvement. \nLet me know if something is wrong. \n",
            "date": "2008-09-23T20:16:05.106+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "Improvement to org.apache.jackrabbit.ocm.manager.atomictypeconverter.impl.UndefinedTypeConverterImpl's implementation of \npublic Value getValue(ValueFactory valueFactory, Object propValue) , used equality check of class names to decide whether Object propValue is worthy of any attempt to map to an apropriate property.  Since the purpose of the class is to provide a 'best effort' attempt to map an Object of type java.lang.Object it will be better to use 'instanceof'.  This approach will convert the specific class as well as any inherited objects.  For example using instanceof will let us map a BufferedInputStream, and any other sub classes of InputStream to a Binary Property.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1758",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Improvement to UndefinedTypeConverterImpl to map super types effectively",
    "systemSpecification": true,
    "version": ""
}