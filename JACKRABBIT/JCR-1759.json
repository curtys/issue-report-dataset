{
    "comments": [
        {
            "author": "Christophe Lombart",
            "body": "Now, it is simpler to define the mapping for abstract classes, inheritance tree and persistent classes that implement interfaces. \n\nSee an example in the unit test: \n\nhttp://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/testmodel/SimpleAnnotedAbstractClass.java\n\nhttp://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/testmodel/SimpleAnnotedClass.java\n\nhttp://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-ocm/src/test/java/org/apache/jackrabbit/ocm/testmodel/SimpleInterface.java",
            "date": "2008-09-27T12:47:41.648+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "If we are using more reflections during the OCM init phase (class descriptor loading), some OCM annotation settings are not necessary : \n\n@Node(isAbtract=true) : used to specify an abstract classes\n@Node(extend=....) : used to specify the ancestor class\n@Node(isInterface= ...) : used to specify the entity as an interface\n@implement  : used to specify the associated interfaces\n\nIf this refactoring is done, we can set them as deprecated.\n\nThe performances will not suffer because this is done only once during the application startup (when the ObjectContentManager is initialized). ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1759",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Simplify the usage of OCM annotations",
    "systemSpecification": true,
    "version": "1.5"
}