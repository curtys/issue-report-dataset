{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "I believe this is an example of a more widespread problem within Jackrabbit. IMHO we should generally treat exceptions from close() just as we would exceptions from read() or write().",
            "date": "2007-10-16T15:32:56.659+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Fixed the issue in revision 585176. Instead of extra logging I made an exception thrown by close() result in a RepositoryException being thrown as there's no way to know how serious the problem is.",
            "date": "2007-10-16T15:37:41.087+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core, nodetype",
    "description": "When the closing of out in the finally block of persistCustomNodeTypeDefs throws an IOException this is ignored. At least some logging should take place, because an IOException here might still mean that the custom nodetype definitions were not stored correctly. This is the case, for instance, when a DatabaseFileSystem is used: the call to out.close triggers the SQL statement execution which causes an IOException if it fails. ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1162",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Improve logging in NodeTypeRegistry.persistCustomNodeTypeDefs",
    "systemSpecification": true,
    "version": ""
}