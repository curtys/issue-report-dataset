{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Proposed patch.\n\nThe test case shows that the custom field is 25 times faster.",
            "date": "2010-06-30T20:53:07.198+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Committed patch in revision: 959978",
            "date": "2010-07-02T13:31:40.670+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "The most important part of this issue is not fixed yet. The changed to the CachingIndexReader were not included in the patch.",
            "date": "2010-09-29T13:34:37.399+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "Fixed in revision: 1002619",
            "date": "2010-09-29T13:36:22.040+0000",
            "id": 3
        }
    ],
    "component": "jackrabbit-core",
    "description": "CachingIndexReader.document(int n, FieldSelector fieldSelector) creates a new\nField from the cached UUID. The lucene Field implementation always does a\nString.intern() on the field name, which is quite slow. We should probably have\nour own implementation for that specific use case where we know that the name\nis already interned. e.g. UUIDField implements Fieldable.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2669",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Improve reading of cached UUID for given document number",
    "systemSpecification": true,
    "version": ""
}