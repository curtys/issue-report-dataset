{
    "comments": [
        {
            "author": "angela",
            "body": "with just having quickly looked at the code, i would assume that this shouldn't do too much harm (though it's not what i would call perfect). in the worst case (prop wasn't modified) this would generate a superfluous internal notification...\n\nif, however, we would also address issue #JCR-1012 there was (most probably) another way to determine if a property has changed (thinking of some sort of modcnt or rev. number)... this could be an more elegant approach...\n\nanyway: michael, can you take care of this one? thanks",
            "date": "2009-02-05T11:12:29.478+0000",
            "id": 0
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Further investigation shows that\n\na) property diffing is sometimes done even if the result is not used by the caller.\n\nb) property diffing occurs very frequently when the same session is accessed concurrently from within different threads.\n\nI will fix a) in jcr2spi. Case b) is invalid since it's the client's responsibility to synchronize access to sessions. ",
            "date": "2009-02-25T12:55:57.185+0000",
            "id": 1
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Fixed at revision: 747839  \n\nThis is a fix for case a) from above. Property are now only diffed if necessary. \n",
            "date": "2009-02-25T15:57:15.278+0000",
            "id": 2
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Reopening for 1.5.0",
            "date": "2009-04-20T17:19:41.662+0000",
            "id": 3
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Fixed at revision: 766760  \n",
            "date": "2009-04-20T17:21:13.259+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-jcr2spi",
    "description": "o.a.j.jcr2spi.state.PropertyState.diffPropertyData, PropertyData) should alway consider two binary values to be different. The current implementation compares two binary values with equals(). An implementation will in general have to do a byte by byte comparison of both values. This is most likely always more expensive than considering the values different right from the start. \n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1963",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Determination of property state difference should skip binary values",
    "systemSpecification": true,
    "version": "1.5"
}