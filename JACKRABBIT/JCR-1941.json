{
    "comments": [
        {
            "author": "angela",
            "body": "without having looked at it in detail i assume that the problem is caused by an inconsistency: adding a new child node retrieves the new child node using an different ItemManager method. the same should be used for adding a new property.\n\ni will verify this and fix the code accordingly.",
            "date": "2009-01-20T09:11:17.325+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "changed NodeImpl to avoid retrieving a property that is not yet connected to it's parent.\n\nthanks a lot for reporting.",
            "date": "2009-01-20T15:17:44.486+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.5 branch in revision 743334.",
            "date": "2009-02-11T13:24:43.697+0000",
            "id": 2
        }
    ],
    "component": "jackrabbit-core",
    "description": "\nWhen implementing a custom AccessManager for Jackrabbit v1.5+ there a bug when creating a new object.\n\nI perform an addNode() and my own accessmanager the isGranted() method is override'd and performs the following code;\n\n            ......\n            String perm = null;\n            NodeId     nodeId = mHierMgr.resolveNodePath( pPath );\n            PropertyId propId = null;\n            if (nodeId==null) {\n              propId = mHierMgr.resolvePropertyPath( pPath );\n     System.out.println(\"path = \" + pPath.toString() );\n              // **** TODO is this ok?... it happens when a new object is created and the accessmanager ask for read access on a property.\n//              if (propId==null) return true;\n              nodeId = propId.getParentId();\n            }\n\nthis is the System.out.println result\n\npath = {}        {}JeCARS        {}default        {}Groups        {}testGroup        {http://www.jcp.org/jcr/1.0}created\n\n\nand the stacktrace\n\n\n\tat org.jecars.CARS_AccessManager.isGranted(CARS_AccessManager.java:844)\n\tat org.jecars.CARS_AccessManager.isGranted(CARS_AccessManager.java:806)\n\tat org.apache.jackrabbit.core.ItemManager.canRead(ItemManager.java:339)\n\tat org.apache.jackrabbit.core.ItemManager.canRead(ItemManager.java:326)\n\tat org.apache.jackrabbit.core.ItemManager.createItemData(ItemManager.java:696)\n\tat org.apache.jackrabbit.core.ItemManager.getItemData(ItemManager.java:291)\n\tat org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:228)\n\tat org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:493)\n\tat org.apache.jackrabbit.core.NodeImpl.createChildProperty(NodeImpl.java:479)\n\tat org.apache.jackrabbit.core.NodeImpl.createChildNode(NodeImpl.java:535)\n\tat org.apache.jackrabbit.core.NodeImpl.internalAddChildNode(NodeImpl.java:795)\n\tat org.apache.jackrabbit.core.NodeImpl.internalAddNode(NodeImpl.java:729)\n\tat org.apache.jackrabbit.core.NodeImpl.internalAddNode(NodeImpl.java:677)\n\tat org.apache.jackrabbit.core.NodeImpl.addNode(NodeImpl.java:2110)\n\n\nIt seems that READ permission for the jcr:created property is requested before the object is actually created\n\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1941",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "AccessManager asks for property (jcr:created) permissions before the actual creation of the object",
    "systemSpecification": true,
    "version": "1.5"
}