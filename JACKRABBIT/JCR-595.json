{
    "comments": [
        {
            "author": "Tobias Bocanegra",
            "body": "providing patch for refactoring.",
            "date": "2006-10-19T07:54:44.000+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Looks good. Anything that helps simplify the o.a.j.core.state dependencies gets a +1 from me. :-)\n\nNote that there are a few Day license headers within the patch. Please fix those before committing.",
            "date": "2006-10-19T12:35:37.000+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "+1 (except for the wrong license headers which jukka already mentioned)\n\n",
            "date": "2006-10-25T10:07:29.000+0000",
            "id": 2
        },
        {
            "author": "Tobias Bocanegra",
            "body": "Committed revision 467925.",
            "date": "2006-10-26T09:10:49.000+0000",
            "id": 3
        },
        {
            "author": "Przemo Pakulski",
            "body": "DatabasePersistenceManagers kept for compatibility  (in old org.apache.jackrabbit.core.state.db package) doesn't work longer. \nFollowing exception is thrown during initailization of repository (file with schema cannot be found) :\n\nTestcase: testFillInSearchData(org.apache.jackrabbit.init.QueryTestData):\tCaused an ERROR\nFailed to get Repository instance.: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema 'derby': Configuration error: unknown schema 'derby'\njavax.jcr.RepositoryException: Failed to get Repository instance.: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema 'derby': Configuration error: unknown schema 'derby': javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema 'derby': Configuration error: unknown schema 'derby'\n\tat org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:70)\n\tat org.apache.jackrabbit.test.RepositoryHelper.getProperty(RepositoryHelper.java:150)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.getProperty(AbstractJCRTest.java:429)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.setUp(AbstractJCRTest.java:254)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)\nCaused by: org.apache.jackrabbit.test.RepositoryStubException: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema 'derby': Configuration error: unknown schema 'derby'\n\tat org.apache.jackrabbit.core.JackrabbitRepositoryStub.getRepository(JackrabbitRepositoryStub.java:112)\n\tat org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:68)\n\t... 15 more\norg.apache.jackrabbit.test.RepositoryStubException: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema 'derby': Configuration error: unknown schema 'derby'\n\tat org.apache.jackrabbit.core.JackrabbitRepositoryStub.getRepository(JackrabbitRepositoryStub.java:112)\n\tat org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:68)\n\tat org.apache.jackrabbit.test.RepositoryHelper.getProperty(RepositoryHelper.java:150)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.getProperty(AbstractJCRTest.java:429)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.setUp(AbstractJCRTest.java:254)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)",
            "date": "2006-10-31T11:45:41.000+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "> Configuration error: unknown schema 'derby' \n\nThis was caused by the use of getClass().getResourceAsStream() to load the DDL files. The resources are local to the o.a.j.core.persistence.db package, so the call failed when invoked from a compatibility subclass in o.a.j.core.state.db.\n\nI just committed (revision 469481) a simple fix that replaces getClass() with DatabasePersistenceManager.class.",
            "date": "2006-10-31T13:52:44.000+0000",
            "id": 5
        },
        {
            "author": "Jukka Zitting",
            "body": "Wendy Lee on the mailing list:\n> I just update the version to 469481 ,The problem still exist....\n\nYou're right. In fact there already was a failsafe built into the compatibility classes at o.a.j.core.state.db that made my change redundant. I'll check what else could have caused the problem.",
            "date": "2006-10-31T14:26:00.000+0000",
            "id": 6
        },
        {
            "author": "Jukka Zitting",
            "body": "The \"unknown schema\" problem should now really be fixed as of revision 469571.\n\nThe compatibility classes in o.a.j.core.state.db used to override the getClass().getResourceAsStream() call with super.getClass().getResourceAsStream(), so my fix with DatabasePersistenceManager.class.getResourceAsStream() didn't have any effect on the compatibility classes.\n\nWhile the super.getClass() approach is intuitive, it's actually incorrect since super.getClass() is exactly the same as this.getClass() as long as the getClass() method is not overridden. So even if the subclasses attempted to avoid this problem, they actually ended up masking the real solution. The change in revision 469571 removes these workarounds, so that my original fix actually works.",
            "date": "2006-10-31T17:30:36.000+0000",
            "id": 7
        }
    ],
    "component": "jackrabbit-core",
    "description": "currently the persistence managers reside in:\n org.apache.jackrabbit.core.state\n org.apache.jackrabbit.core.state.db\n org.apache.jackrabbit.core.state.mem\n org.apache.jackrabbit.core.state.obj\n org.apache.jackrabbit.core.state.xml\n (org.apache.jackrabbit.core.state.util)\n\nthere are also a lot of other classes that deal with states (eg:\nSharedItemStateManager) in the state package that do not relate to\npms.\n\ni would like to move all persistencemanagers and pm related stuff to:\n\n org.apache.jackrabbit.core.persistence\n\nI'd keep the current classes as deprecated subclasses within\njackrabbit-core.jar until Jackrabbit 2.0. There may (?) be people who\nare extending the existing classes, so I'd avoid breaking binary\ncompatibility there even though we've never promised to actually honor\ncompatiblity within o.a.j.core.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-595",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Refactoring of the Persistence Managers",
    "systemSpecification": true,
    "version": ""
}