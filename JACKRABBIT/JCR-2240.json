{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "does it depend on a specific ValueFactory implementation?\n\nwhere is the tmp file created? in the system tmp dir?",
            "date": "2009-08-05T15:51:55.982+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "> does it depend on a specific ValueFactory implementation? \n\ndon't know. I don't think it's possible to configure a different implementation, right?\n\n> where is the tmp file created? in the system tmp dir?\n\nyes, it's the system temp dir.\n\nI guess 'never deleted' is not correct. The files are actually deleted, but only at the discretion of the garbage collection and the finalizer.",
            "date": "2009-08-06T09:51:59.144+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "> I guess 'never deleted' is not correct. The files are actually deleted, but only at the discretion of the garbage collection and the finalizer.\n\nin which case i wouldn't qualify this issue as 'major bug' but rather as an improvement. \n\ni assume the tmp files are created by o.a.j.util.TransientFileFactory.  \ntmp files will be deleted when their associated marker objects are \nreclaimed by the garbage collector.",
            "date": "2009-08-06T12:22:22.792+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "> in which case i wouldn't qualify this issue as 'major bug' but rather as an improvement. \n\nagreed on the priority, but I still think this is a bug, because dispose is explicitly and I would expect that it frees resources that the Binary instance holds.\n\nAnyway, the required changes to fix this bug are already present in the patch for JCR-2238. I suggest we keep this issue open until JCR-2238 is fixed and then set it to fixed as well.",
            "date": "2009-08-06T12:54:32.585+0000",
            "id": 3
        },
        {
            "author": "Marcel Reutegger",
            "body": "This issue has been fixed as part of JCR-2238.",
            "date": "2009-08-10T07:36:45.546+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-core",
    "description": "The following call leaves a temp file behind that is never deleted:\n\nInputStream in = ...\nValueFactory vf = ....\nvf.createBinary(in).dispose();\n\nOnly happens when the datastore is disabled.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2240",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Binary value may leave temp file behind",
    "systemSpecification": true,
    "version": ""
}