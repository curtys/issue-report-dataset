{
    "comments": [
        {
            "author": "Christophe Lombart",
            "body": "Dan, \n\nI'm sorry but I forget some details on this issue. If I understand, you want a generic implementation for the interface ManageableCollection (based on the java collection).\n\n",
            "date": "2006-09-21T21:07:09.000+0000",
            "id": 0
        },
        {
            "author": "Dan Connelly",
            "body": "Two things are needed to implement this fix:\n\n     1)  A new class ManageableCollectionImpl  (or ManageableCollectionWrapper if you prefer.    \n             Wraps any Collection under ManageableCollection interface.\n     2) A final test in ManageableCollectionUtil.getManageableCollection(Object object)  that returns the wrapped Collection\n             when object's own class is not directly a ManageableCollection.\n\n\nI implemented this code in a local copy for myself at the same time that I generated the JIRA.    This has been working wiht no problems for lots of EMF object model testing for 2 weeks.    (But I do not have a simple JUnit for you.    Suggest you use a LinkedList in some object model.)\n\nIt should eliminate the exception in most case for arbitrary object models where code is either not available or not easily changed.\n\nNote:   I did NOT mean that the \"unsupported\" exception should be removed   Just that it gets thrown when it really doesn't need to be.   Keep throwing the exception where object is not a Collection. ",
            "date": "2006-09-21T21:39:59.000+0000",
            "id": 1
        },
        {
            "author": "Dan Connelly",
            "body": "Of course, the user will need to implement a custom CollectionConvert when his object model as a Collection that is not a standard ManageableCollection.   He has to build his Collection by iterating on the ManageableCollection that is supplied.",
            "date": "2006-09-21T21:46:13.000+0000",
            "id": 2
        },
        {
            "author": "Sebastian Gomez",
            "body": "Hi.\n\nYou face the same problem as I did. After using my patch it seems to work. It's attatched to my issue, in case you want to use it:\n\nhttps://issues.apache.org/jira/browse/JCR-1325",
            "date": "2008-01-28T18:53:03.030+0000",
            "id": 3
        },
        {
            "author": "Christophe Lombart",
            "body": "solved by the resolution of JCR-1325",
            "date": "2008-09-22T21:13:52.464+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "Many times, the object model'd code cannot be altered for ocm.\n\nTo avoid the \"unsupported\" exception in almost all such cases, use a delegating wrapper class to encapsulate a Collection.    The wrapper class implements MaangeableCollection.\n\nSince delegation is a performance hit, make the test below the last resort for *object*  conversion in the method:\npublic static ManageableCollection getManageableCollection(Object object) \n\nProposed \"catchall\" test and program action:\n\n            if (object instanceof Collection) {\n                return new ManageableCollectionImpl((Collection)object);\n            }\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-876",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "ManageableCollectionUtil should not throw \"unsupported\" JcrMapping exception",
    "systemSpecification": false,
    "version": ""
}