{
    "comments": [
        {
            "author": "angela",
            "body": "i think i would rather name it create(QPropertyDefinition) or createFromDefinition(QPropertyDefinition).\n\nand i think i would return a QValue[].... since the prop def could be multi valued, couldn't it?\n\nbut i'm definitely in favor of this improvement.\nangela\n\n\n",
            "date": "2007-10-31T14:48:47.605+0000",
            "id": 0
        },
        {
            "author": "Julian Reschke",
            "body": "> i think i would rather name it create(QPropertyDefinition) or createFromDefinition(QPropertyDefinition).\n\nIn which case I'd prefer the latter in order to avoid confusion with the other create methods.\n\n> and i think i would return a QValue[].... since the prop def could be multi valued, couldn't it? \n\nCorrect.\n\n",
            "date": "2007-10-31T15:35:26.951+0000",
            "id": 1
        },
        {
            "author": "angela",
            "body": "> In which case I'd prefer the latter in order to avoid confusion with the other create methods.\n\nok. the 'from' is may be not totally accurate either. i liked your 'compute' but i wasn't too happy with\nthe default-value... because the default value is something different and it's already \npresent in the property definition, isn't it ? there is no need to compute that one... \n\nis it meant to be used for both retrieved default-values AND autocreated values?\nthen it would probably be\n\n computeValues.\n\ni guess we should also define the behaviour of the method if the QPropertyDefinition\ndoes neither define defaultvalues nor is autocreated... throwing?",
            "date": "2007-10-31T16:01:01.508+0000",
            "id": 2
        },
        {
            "author": "Julian Reschke",
            "body": ">ok. the 'from' is may be not totally accurate either. i liked your 'compute' but i wasn't too happy with\n> the default-value... because the default value is something different and it's already\n> present in the property definition, isn't it ? there is no need to compute that one...\n\nRight.\n\nSo how about \n\n  QValue[] computeAuto[Created]Value(...)\n\n(personally preferring the shorter variant)\n\n> is it meant to be used for both retrieved default-values AND autocreated values?\n> then it would probably be\n> \n>  computeValues.\n\nAs we already have an API to get defaults I'd prefer to do this just for autocreated values.\n\n> i guess we should also define the behaviour of the method if the QPropertyDefinition\n> does neither define defaultvalues nor is autocreated... throwing?\n\nYes. The contract would be that the method should only be called for autocreated properties, and the implementation then could throw a RepositoryException otherwise.\n\n",
            "date": "2007-10-31T16:10:31.040+0000",
            "id": 3
        },
        {
            "author": "Julian Reschke",
            "body": "Proposed patch (SPI/JCR2SPI).\n",
            "date": "2007-10-31T16:24:26.797+0000",
            "id": 4
        },
        {
            "author": "angela",
            "body": "fine by me.",
            "date": "2007-10-31T16:38:19.266+0000",
            "id": 5
        },
        {
            "author": "Julian Reschke",
            "body": "Implemented with revision 590762.\n",
            "date": "2007-10-31T17:33:21.390+0000",
            "id": 6
        }
    ],
    "component": "jackrabbit-spi",
    "description": "Currently, when creating nodes in transient space, JCR2SPI uses hard-wired logic trying to populate system generated properties such as jcr:created, jcr;uuid and so on.\n\nThis is problematic as\n\n- it doesn't scale -- it fails for autocreated properties not known to JCR2SPI, and\n\n- the syntax for the defaults may be dependant on the back end, such as legal syntax for (UU)IDs.\n\nProposal:\n\n- extend QValueFactory with something like\n\n  QValue computeDefaultValue(QPropertyDefinition)\n\n- use that in JCR2SPI, getting rid of the currently hard-wired logic.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1200",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "allow SPI implementation to compute default values for autocreated properties",
    "systemSpecification": true,
    "version": ""
}