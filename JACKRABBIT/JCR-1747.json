{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "The attached patch introduces a DirectoryManager interface. There are two implementations currently:\n\n- FSDirectoryManager, this is the default, which matches the current behaviour\n- RAMDirectoryManager, this one allows you to have an index that is completely held in memory\n",
            "date": "2008-11-14T13:29:27.485+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Updated patch with a fix.\n\nThere was a bug that would delete directories that are not index segments.",
            "date": "2008-11-14T15:54:17.318+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "Applied patch and added test case for DirectoryManager implementations.\n\nsvn revision: 718218",
            "date": "2008-11-17T11:03:55.744+0000",
            "id": 2
        }
    ],
    "component": "indexing, jackrabbit-core",
    "description": "If I'm not wrong, there is actually no way to configure SearchIndex in order to use a memory only lucene index.\n\nSince you can configure a repository using a org.apache.jackrabbit.core.state.mem.InMemPersistenceManager, it makes sense that also search index offers a similar configuration.\nMultiIndex and PersistentIndex now always use a org.apache.lucene.store.FSDirectory, they should be refactored in order to allow a switching to a org.apache.lucene.store.RAMDirectory for this.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1747",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "org.apache.jackrabbit.core.query.lucene.SearchIndex with in-memory lucene index",
    "systemSpecification": true,
    "version": "1.4"
}