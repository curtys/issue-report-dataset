{
    "comments": [
        {
            "author": "Dominique Pfister",
            "body": "Made the read-write lock in o.a.j.core.journal.AbstractJournal re-entrant, allowing the same, commiting thread to reacquire the write-lock. All transaction-related tests in XATest now pass successfully.\n\nFixed in revision 517141.",
            "date": "2007-03-12T09:21:43.818+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core",
    "description": "Running a transaction that updates multiple workspaces (e.g. a versioning operation) will be locked, as they all try to acquire a non-reentrant lock in the cluster's journal. Short-term fix is to make the lock re-entrant. In the long run, a transaction context sensitive lock may be more appropriate.\n\nHow to reproduce: enable clustering in the test environment and let the test o.a.j.core.XATest.testSetVersionLabel() run. This will result in a deadlock when committing the operation.\n\nThis was initially reported by Rafa\u0142 Kwiecie\u0144 as a problem when using springmodules and clustering but turned out to be general problem with transactions and clustering. Thanks for reporting it!",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-785",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Updates to multiple workspaces (e.g. in a transaction) locked in cluster journal",
    "systemSpecification": true,
    "version": "1.2.1, 1.2.2, 1.2.3"
}