{
    "comments": [
        {
            "author": "David Kennedy",
            "body": "\"Jukka Zitting\" <jukka.zitting@gmail.com> wrote on 04/20/2006 12:29:23 PM:\n\n> Hi,\n> \n> On 4/20/06, David Kennedy <davek@us.ibm.com> wrote:\n> > Attached is a patch (I'm not sure how you typically like to receive patches) for\n> > the automatic registration of namespaces on import of xml or cnd nodetype\n> > files (JCR-349).\n> \n> Excellent, thanks!\n> \n> > I didn't want the readers to have knowledge of workspaces or registries so\n> > I basically added additional methods to the NodeTypeManagerImpl that would\n> > take a registry in which the namespaces should be registered.\n> \n> How about adding the namespace registry as a private member variable\n> of the NodeTypeManagerImpl class and have SessionImpl pass the\n> namespace registry to the node type manager as a constructor argument?\n> This way the registry handling would be completely transparent to the\n> user and they could just continue using the existing methods.\n\nYeah, I started out this way, but wasn't sure you'd want the registration to be the default behavior\n\n> \n> > The code will ignore a namespace if it has already been registered (I can change\n> > it to throw an exception if the registered uri is different than what's in the file).\n> \n> This is a good approach. BTW, instead of checking for the prefix you\n> should be checking for the availability of the namespace URI. The\n> process should be something like this:\n> \n>     if URI is not already registered, then\n>         while PREFIX is already registered, do\n>             generate another PREFIX\n>         end while\n>         register the PREFIX -> URI mapping\n>     end if\n> \n\nI don't follow the \"generate another PREFIX\".  I changed the code to check for the uri, but if the uri isn't found, I just try to register the prefix to uri.....if the prefix is already registered to a different uri, we'll get an exception which is what we want.  If the prefix isn't registered, we're good to go.  Let me know if I'm missing something.\n\n> It's a bit cumbersome, especially since the getPrefix() and getURI()\n> methods throw exceptions to indicate unregistered mappings, *and* it\n> isn't thread-safe, but this is the best we have at the moment. Perhaps\n> we could encapsulate this functionality into a custom\n> NamespaceRegistryImpl method...\n> \n> > I've also included a test for each type of file.  The tests will fail if run a second\n> > time against the same repository, but not because of the namespace registration,\n> > but because the nodetypes already exist.\n> \n> Yeah, that's a problem with the fact that we currently can't modify or\n> even remove existing node types without manual intervention. I think\n> it's ok at the moment to just disable the test cases with a logged\n> warning if the conflicting node types already exist.\n> \n> > This brings up another suggestion.  What do you think about an enhancement in\n> > which we add another registerNodeTypes method which takes a flag to determine\n> > whether it should bypass existing registeredNodeTypes?  This would permit the\n> > user/developers to run their code that imports the same nodetypes without having\n> > to clean out the registries.\n> \n> This functionality would probably be a good fit for a\n> reregisterNodeTypes method. See JCR-322 for background.\n> \n> > Let me know what you think and if you'd like patches in a different format.\n> \n> Looks good. Can you fix the issues I mentioned (ns registry as member\n> variable, and the namespace registration process)?\n> \n> I can use the zip format, but a more convenient alternative would be\n> the output of \"svn diff\". Quick steps to do this:\n> \n>  1) Checkout the latest sources from SVN as instructed on the\n> Jackrabbit web site\n>  2) Make your modifications\n>  3) Use \"svn add ...\" to mark any new files and directories you've added\n>  4) use \"svn diff\" from the main jackrabbit directory to get a listing\n> of all the changes\n>  5) Save the output in a file and attach it to the Jira issue (JCR-349)\n>  6) Remember to select the license grant option on the attachment form\n> \n> BR,\n> \n> Jukka Zitting\n> \n> --\n> Yukatan - http://yukatan.fi/ - info@yukatan.fi\n> Software craftsmanship, JCR consulting, and Java development\n",
            "date": "2006-04-21T02:33:10.000+0000",
            "id": 0
        },
        {
            "author": "David Kennedy",
            "body": "Replaced original patch with this one to include the changes to the project.xml to copy the .cnd file to test-classes.",
            "date": "2006-04-21T04:13:13.000+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Great work David, thanks a lot!\n\nI applied your patch in revision 396173 with minor cleanups and modifications listed below:\n\n   * Changed code formatting to match the Jackrabbit conventions (see the Checkstyle configuration)\n   * Made some minor reorganizations to make the code flow more apparent.\n   * Added automatic namespace prefix generation as discussed below.\n   * Made the unit tests check for existing namespaces to avoid errors when rerunning the test suite.\n   * Used the TestRepository factory instead of the TransientRepository class to better integrate the unit tests with the main test suite.\n\n> I don't follow the \"generate another PREFIX\". I changed the code to check for the uri, but if the uri isn't found, I just try to\n> register the prefix to uri.....if the prefix is already registered to a different uri, we'll get an exception which is what we want.\n> If the prefix isn't registered, we're good to go. Let me know if I'm missing something. \n\nThe namespace prefix is not really essential internally, so we can avoid the exception caused by a possible prefix conflict, by automatically generating a unique prefix in such a case.\n",
            "date": "2006-04-23T05:49:30.000+0000",
            "id": 2
        }
    ],
    "component": "config",
    "description": "A user currently needs to explicitly register any new namespaces used in new node types before registering the node types. See for example the problem on the mailing list:\n\n    http://mail-archives.apache.org/mod_mbox/incubator-jackrabbit-dev/200603.mbox/%3c1142091097.13136.0.camel@localhost.localdomain%3e\n\nThe node type registration should be changed so that new namespaces are automatically registered.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-349",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "New node type namespaces should be automatically registered",
    "systemSpecification": true,
    "version": "0.9, 1.0"
}