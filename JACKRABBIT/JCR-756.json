{
    "comments": [
        {
            "author": "Dominique Pfister",
            "body": "Create.java: Sample application that creates nodes and properties below the root node.",
            "date": "2007-02-20T16:13:49.155+0000",
            "id": 0
        },
        {
            "author": "Dominique Pfister",
            "body": "Remove.java: Sample application that deletes nodes below the root node",
            "date": "2007-02-20T16:14:54.155+0000",
            "id": 1
        },
        {
            "author": "Dominique Pfister",
            "body": "Sample repository.xml configuration that might be used for both create and remove sample application.",
            "date": "2007-02-20T16:16:26.389+0000",
            "id": 2
        },
        {
            "author": "Dominique Pfister",
            "body": "Problem identified to be the following during an update:\n\n1) When a journal update is started, the clustered instance syncs with journal contents. This \n    might  change the SharedItemStateManager's states\n2) Later on, eventual, non-conflicting changes are merged to the local states. \n3) Finally, the journal update is prepared. This might again trigger an external update from\n    the journal and change the shared states . However, these changes are not merged to the \n    local states.\n4) The local states are pushed \"blindly\" to the shared states, potentially overwriting a previous\n    change.\n\nFixed by locking the journal in 1) instead of 3). This still allows non-conflicting merge, but only once. An even\nbetter, less blocking approach would iteratively merge the changes seen in external updates to the local states.\n\nThanks a lot to Rafa\u0142 Kwiecie\u0144 for reporting this bug and providing the test classes.\n\nFixed in revision 509624.",
            "date": "2007-02-20T16:27:53.826+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "Dominique, can you isolate the fix for just this issue from the 509624 commit? Otherwise I can't include\nthis in the Jackrabbit 1.2.3 release, as the 509624 change is IMHO too large for a patch release.\n",
            "date": "2007-02-26T16:41:59.076+0000",
            "id": 4
        },
        {
            "author": "Dominique Pfister",
            "body": "Jukka, sorry for not having answered to your question, was quite busy the last few days! I quickly took a look at the changes I had to make in order to have the Create/Remove test scenario pass in my already refactored classes, and those changes looked to complicated to be merged back to the 1.2 branch.",
            "date": "2007-03-03T18:10:55.494+0000",
            "id": 5
        },
        {
            "author": "Jukka Zitting",
            "body": "No problem, we'll just release the fix with 1.3. :-)",
            "date": "2007-03-03T22:59:08.297+0000",
            "id": 6
        }
    ],
    "component": "jackrabbit-core",
    "description": "Concurrent add/remove child node operations in a cluster may store an inconsistent list of child node entries, i.e. an entry in the list may appear that has no associated node. This eventually results in an ItemNotFoundException, the next time one of these bogus entries is accessed.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-756",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Concurrent add/remove child node operations in a cluster may corrupt repository.",
    "systemSpecification": true,
    "version": "1.2.1, 1.2.2"
}