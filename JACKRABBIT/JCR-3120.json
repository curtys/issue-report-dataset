{
    "comments": [
        {
            "author": "angela",
            "body": "i rearranged the code in UserManager impl in order to have the log output be more\nspecific. in addition i increased the log level to warn and error respectively.\n\nregarding throwing an exception: i decided not to do so for consistency with the\noverall behavior of the user manager that is defined to return 'null' if no valid \nuser/group can be retrieved and only throws an exception if an unexpected error\noccurs (retrieving path from node or node type name fails).",
            "date": "2011-10-21T10:26:42.429+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core, security",
    "description": "This is current implementation:\n\nAuthorizable getAuthorizable(NodeImpl n) throws RepositoryException {\n        Authorizable authorz = null;\n        if (n != null) {\n            String path = n.getPath();\n            if (n.isNodeType(NT_REP_USER) && Text.isDescendant(usersPath, path)) {\n                authorz = createUser(n);\n            } else if (n.isNodeType(NT_REP_GROUP) && Text.isDescendant(groupsPath, path)) {\n                authorz = createGroup(n);\n            } else {\n                /* else some other node type or outside of the valid user/group\n                   hierarchy  -> return null. */\n                log.debug(\"Unexpected user nodetype \" + n.getPrimaryNodeType().getName());\n            }\n        } /* else no matching node -> return null */\n        return authorz;\n    }\n\n\nIt seems that 'else' branch can be improved, at least by increasing log level. But I think, that best way is to throw exception.\nCurrent message can also be misleading, in case when user type is correct but check Text.isDescendant fails.\n\nAbove method is called from within UserImporter#handlePropInfo\n\n...\nAuthorizable a = userManager.getAuthorizable(parent);\nif (a == null) {\n     log.debug(\"Cannot handle protected PropInfo \" + protectedPropInfo + \". Node \" + parent + \" doesn't represent a valid Authorizable.\");\n     return false;\n} \n....\n\nHere again log level is debug. Because at this point we have return statement, property 'principalName' is not set, and if we try to save session following exception will be thrown:\n\njavax.jcr.nodetype.ConstraintViolationException: /home/public/users/b/bb2: mandatory property {internal}password does not exist\n     at org.apache.jackrabbit.core.ItemSaveOperation.validateTransientItems(ItemSaveOperation.java:537)\n     at org.apache.jackrabbit.core.ItemSaveOperation.perform(ItemSaveOperation.java:216)\n     at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)\n     at org.apache.jackrabbit.core.ItemImpl.perform(ItemImpl.java:91)\n     at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:329)\n    ...\n \n\nSo if the log level is not set to 'debug' it is not obvious why mentioned property is missing. Use case and root cause is that 'path' (/home/public/users/b/bb2)  is not descendant of 'usersPath' (/home/users).\n\nRegards,\nMiroslav",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-3120",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Change log level in UserManagerImpl#getAuthorizable(NodeImpl) and UserImporter#handlePropInfo",
    "systemSpecification": true,
    "version": "2.0, 2.1, 2.2, 2.3, 2.3.1"
}