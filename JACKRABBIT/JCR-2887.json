{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Updated target version to 2.4 as the next stable release. Set to the next 2.3.x release if this gets resolved before 2.4 is branched.",
            "date": "2011-10-03T13:44:15.506+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "resolving this issue fixed. the former PrivilegeRegistry has been split into\na per-session PrivilegeManager and a repository unique PrivilegeRegistry.\nThose methods of PrivilegeRegistry that relied on Session-level namespace\nmappings got deprecated. The corresponding methods on PrivilegeManager\nshould be used instead.\n\nThe new privilege manager is exposed as interface in \norg.apache.jackrabbit.api.security.authorization.PrivilegeManager.\nIt provides methods to retrieve existing privileges and register new custom \nprivileges and aggregates of custom and built-in privileges. Registration of new\nprivileges works similar to namespace or node type registration as it requires \nno Session.save() call and the new privileges are immediately effective on \nthe repository level.\nNote however, that Jackrabbit internal permission evaluation does not take \ncustom privileges into account. Applications that want to make use of the access \ncontrol evaluation associated with custom privileges are in charge of the\ncorresponding validation. Up to now un-registration of custom privileges is\nnot supported.\n\nThe PrivilegeManager may be obtained by calling\nJackrabbitWorkspace.getPrivilegeManager() which similar to Workspace#getNodeTypeManager() reflects the fact changes don't require a Session.save in order to be persisted.\n\nIn order to register custom privileges a given editing Session must be allowed\nto manage privileges. This permission may be granted by editing the repository\nlevel access control using a 'null' path (see also JCR-2774 for details). \n",
            "date": "2011-11-30T13:03:53.650+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core, security",
    "description": "in order to resolve the privilegeregistry related TODOs within jackrabbit-core, i would like to split off those \nmethods from PrivilegeRegistry  that are used on a per-session level (including jcr-names) and add them\nto a manager class that was present with each session context. consequently the responsibility of the\nregistry was then limited to read/build the privilege definitions and would be present on the repositorycontext\ndeprecating those methods that would be covered by the manager).\nin addition the naming was then consistent with what we use to have for nodetypes and namespaces.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2887",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Split PrivilegeRegistry in a per-session manager instance and a repository level registry",
    "systemSpecification": true,
    "version": ""
}