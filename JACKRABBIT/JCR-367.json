{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "This is related to JCR-217 that was resolved as Won't Fix. Not marking this as a duplicate since the reasoning is different.",
            "date": "2006-03-22T15:48:50.000+0000",
            "id": 0
        },
        {
            "author": "Felix Meschberger",
            "body": "I ran into the same issue when working on trying to integrate with the Apache Felix (OSGi R4) as a bundle.\n\nI tried to create a workaround, which I can solve like this:\n\n   * Use JAXP Transformer (yes it is part of the Java Runtime siince 1.4) for export\n   * Copy XMLChar to o.a.j.util. Yes, this is not the best of all solutions, but it removes the dependency and XMLChar is Apache, too.\n   * Remains the o.a.j.c.nodetype.converter package which contains a XML Schema to node type converter. This is probably not a tool, which is run on a casual server implementation. Therefore, leaving the dependency there and documenting is probably ok. Better would probably be to take this out fo the core repository package, not sure, though.",
            "date": "2006-06-27T21:38:51.000+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "> Use JAXP Transformer (yes it is part of the Java Runtime siince 1.4) for export\n\nWe should be careful with especially namespaces being correctly transmitted through the Transformer interface. There are a few bug reports about the same issue earlier on.\n\n> Copy XMLChar to o.a.j.util. Yes, this is not the best of all solutions, but it removes the dependency and XMLChar is Apache, too.\n\nAgreed. Not nice, but not too bad either.\n\n> Remains the o.a.j.c.nodetype.converter package which contains a XML Schema to node type converter.\n> This is probably not a tool, which is run on a casual server implementation. Therefore, leaving the dependency\n> there and documenting is probably ok. Better would probably be to take this out fo the core repository package,\n> not sure, though.\n\nThe XML Schema converter was included in core when I merged the CND support from contrib. It really should be outside the core unless we want to support direct XML Schema imports through registerNodeTypes().\n\nI've also been thinking about replacing the converter with an XSL transformation. Any takers?\n",
            "date": "2006-06-27T22:15:47.000+0000",
            "id": 2
        },
        {
            "author": "Felix Meschberger",
            "body": ">  We should be careful with especially namespaces being correctly transmitted\n> through the Transformer interface. There are a few bug reports about the same\n> issue earlier on. \n\nIt turned out that the issues mentioned were around parsing XML, which used the Transfomer interface. Here we are talking about serializing.\n\nI quickly tested a patch which I attach whether it works - and it seems it works.\n\nAny objections to me checking it in ?",
            "date": "2006-06-28T21:38:33.000+0000",
            "id": 3
        },
        {
            "author": "Felix Meschberger",
            "body": "A patch which adds the XMLChar class to the util package and replaces the serializer with using JAXP Transform.",
            "date": "2006-06-28T21:40:16.000+0000",
            "id": 4
        },
        {
            "author": "Stefan Guggisberg",
            "body": " Comment by Felix Meschberger [28/Jun/06 02:38 PM]\n> I quickly tested a patch which I attach whether it works - and it seems it works.\n>\n> Any objections to me checking it in ?\n\ndid you test with jre 1.4. and jre 1.5?\n\nthe proposed change directly impacts 2 major api methods (javax.jcr.Session#export*View).\ni'd be careful with such a change as the existing code does work is extensively tested over time.\n\ni am not against the change but IMO more than just superficial testing is required\n(e.g. performance, memory consumption, different jre's)\n\n",
            "date": "2006-06-28T22:12:55.000+0000",
            "id": 5
        },
        {
            "author": "Felix Meschberger",
            "body": "> did you test with jre 1.4. and jre 1.5?\n\nHmm, no, but as the new code relies on JAXP, which is part of the J2SE API since 1.4. I assume, this code is correct in both 1.4 and 1.5 I have to assume, right ? Correct me if I am wrong.\n\n> (e.g. performance, memory consumption, different jre's) \n\nPerformance ? Don't know whether Xerces Serializer is faster or slower than JAXP. Do I have to care in this special case of import and export, whether it takes 1 or 2 ms longer or not ?\n\nMemory Consumption ? I assume removing and not using a library which has a file size of almost 1MB is a big plus in this regard, right ? But you are right, I did not crosscheck whether the serialization takes more or less memory. Is this kind of test a requirement for fixes ?\n\nDifferent JREs ? As I said JAXP is part of the J2SE API and runtime hence I assume this to be working. I have to, as I have confidence in Sun - else I could not even use the java.lang.String class :-)",
            "date": "2006-06-28T22:23:44.000+0000",
            "id": 6
        },
        {
            "author": "Stefan Guggisberg",
            "body": "Comment by Felix Meschberger [28/Jun/06 03:23 PM]  \n> Hmm, no, but as the new code relies on JAXP, which is part of the J2SE API since 1.4. I assume, this code is correct in both 1.4 and 1.5 I have to assume, right ? Correct me if I am wrong.\n\nwell, just a example: the public class org.apache.xml.utils.XMLChar is part of the 1.4 jre but it doesn't exist in jre 1.5.\n\n> ... Is this kind of test a requirement for fixes ? \n\nit's IMO common sense to thoroughly test changes with significant potential impact on public api mehtods\nand unknown side effects, especially if they replace time-tested code.\n\n> ... as I have confidence in Sun - else I could not even use the java.lang.String class :-)\n\nwell then consider the XMLChar case above...",
            "date": "2006-06-28T22:42:00.000+0000",
            "id": 7
        },
        {
            "author": "Felix Meschberger",
            "body": "> well then consider the XMLChar case above...\n\nHmm, XMLChar is not part of the J2SE API AFAIK .. But: JAXP is in the javax.xml package, which is publicly defined, is part of the API and and and .... So we should not compare apples to pears here...\n\nI agree that Sun has done a terrible job of first adding the org.apache stuff as is just to find out, that this poses more problems than are solved. In 1.5 those org.apache classes are \"hidden\" below the com.sun package to make clear they are used internally by the runtime.",
            "date": "2006-06-28T22:49:27.000+0000",
            "id": 8
        },
        {
            "author": "Jukka Zitting",
            "body": "Looks good to me.\n\nThe best way to get it tested in a wide number of different environments is to include the change in trunk. We can always revert it if it causes problems to someone.\n",
            "date": "2006-06-29T18:03:31.000+0000",
            "id": 9
        },
        {
            "author": "Felix Meschberger",
            "body": "Ok, I assign this issue to me. But I will commit the patch only after my vacations towards the end of July to not compromise in Jackrabbit case of having to fallback.",
            "date": "2006-06-29T20:46:01.000+0000",
            "id": 10
        },
        {
            "author": "Jukka Zitting",
            "body": "I'd actually prefer to have this patch applied already now. The reason for waiting is the threat of possible JAXP incompatibilities, which can only reasonably be detected by wide enough testing. I'd like to have this change included in Jackrabbit 1.1; the longer it's in trunk before that, the more testing it receives.\n\nIn short I share Stefan's concerns, but end up with the opposite conclusion on how to best handle them. :-)",
            "date": "2006-06-30T17:40:20.000+0000",
            "id": 11
        },
        {
            "author": "Marcel Reutegger",
            "body": "I agree with Jukka, the sooner we have this patch applied the better. Even though we might find out there are issues we cannot resolve and have to revert the patch, but this can be done by any commiter and is not tied to anyones vacation.",
            "date": "2006-06-30T18:12:53.000+0000",
            "id": 12
        },
        {
            "author": "Stefan Guggisberg",
            "body": "Comment by Jukka Zitting [30/Jun/06 10:40 AM]  \n> In short I share Stefan's concerns, but end up with the opposite conclusion on how to best handle them. :-)\n\nthanks, jukka. that's fine with me. \n",
            "date": "2006-06-30T18:59:45.000+0000",
            "id": 13
        },
        {
            "author": "Felix Meschberger",
            "body": "Added XMLChar class from JDK 1.4 to o.a.j.util and adapted references.\n\nFixed in Rev. 418356",
            "date": "2006-07-01T01:30:37.000+0000",
            "id": 14
        },
        {
            "author": "Felix Meschberger",
            "body": "Replaced use of Xerces Serializer with JAXP Transform.\n\nFixed in Rev. 418357\n\nNote: After applying this test, two JUnits fail:\n   * org.apache.jackrabbit.core.XATest.testRemoveVersion() - this is unrelated to this issue, I assume\n   * org.apache.jackrabbit.core.xml.DocumentViewTest.testMultiValue() - fails as is expected by looking at the\n         DocViewSAXEventGenerator.leavingProperties method: multivalue properties are not exported at all.\n\nTherefore, I assume these fixes seem to work. Time should tell.",
            "date": "2006-07-01T02:12:15.000+0000",
            "id": 15
        },
        {
            "author": "Felix Meschberger",
            "body": "Considering this issue fixed for the moment.",
            "date": "2006-07-01T02:13:22.000+0000",
            "id": 16
        },
        {
            "author": "Jukka Zitting",
            "body": "Felix:\n> Added XMLChar class from JDK 1.4 to o.a.j.util and adapted references.\n\nHow about using the version from Xerces trunk (see http://svn.apache.org/viewvc/xerces/java/trunk/src/org/apache/xerces/util/XMLChar.java?view=markup) instead? It's a bit more polished and is licensed using ASLv2. It should be functionally identical.\n\nUnless anyone objects, I'll update the class.\n",
            "date": "2006-07-01T04:05:05.000+0000",
            "id": 17
        },
        {
            "author": "Roy T. Fielding",
            "body": "It is not safe to use code from a JDK, even when that code comes from Apache originally.  Please replace it with the code from Xerces trunk.\n",
            "date": "2006-07-01T05:37:14.000+0000",
            "id": 18
        },
        {
            "author": "Jukka Zitting",
            "body": "> It is not safe to use code from a JDK, even when that code comes from Apache originally. Please replace it with the code from Xerces trunk. \n\nReplaced in revision 418445.",
            "date": "2006-07-01T14:13:15.000+0000",
            "id": 19
        },
        {
            "author": "Stefan Guggisberg",
            "body": "reopening issue because of failing junit testcases:\n\nTestsuite: org.apache.jackrabbit.test.api.TestAll\nTests run: 584, Failures: 8, Errors: 24, Time elapsed: 31.155 sec\n\nenvironment: w2k, sun jdk 1.4.2_03\n\nassigning to jukka since felix is on vacation.",
            "date": "2006-07-03T17:07:16.000+0000",
            "id": 20
        },
        {
            "author": "Stefan Guggisberg",
            "body": "attaching test-report of failing test case",
            "date": "2006-07-03T17:10:02.000+0000",
            "id": 21
        },
        {
            "author": "Stefan Guggisberg",
            "body": "tested with svn rev 418710",
            "date": "2006-07-03T17:11:39.000+0000",
            "id": 22
        },
        {
            "author": "Jukka Zitting",
            "body": "Stefan:\n> reopening issue because of failing junit testcases: \n\nOK, looks pretty much like the missing namespace problem I encountered earlier. I'll investigate.",
            "date": "2006-07-03T18:06:56.000+0000",
            "id": 23
        },
        {
            "author": "Jukka Zitting",
            "body": "Unit test failures fixed in revision 418750.\n\nSAX events for the xmlns:prefix=\"namespace\" attributes are now sent explicitly, as if the \"http://xml.org/sax/features/namespace-prefixes\" property had been set on a SAX parser.",
            "date": "2006-07-03T18:58:46.000+0000",
            "id": 24
        },
        {
            "author": "Przemo Pakulski",
            "body": "Jackrabbit-core is still dependent on Xerces directly during runtime, SessionImpl.importWorkspace, Workspacempl.importWorkspace methods contains folliwng lines :\n\n            XMLReader parser =\n                    XMLReaderFactory.createXMLReader(\"org.apache.xerces.parsers.SAXParser\");\n\nIt works in maven1 probably because maven1 itself needs xerces to run test goal.\n\nI suggest reopening the issue.",
            "date": "2006-10-20T10:13:29.000+0000",
            "id": 25
        },
        {
            "author": "Jukka Zitting",
            "body": "> I suggest reopening the issue.\n\nYou're correct. Since this issue is already closed, I opened a new issue, JCR-602, to track this.",
            "date": "2006-10-24T21:31:12.000+0000",
            "id": 26
        }
    ],
    "component": "xml",
    "description": "Classloaders in certain J2EE servers do not play well with the Xerces requirement",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-367",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Remove dependency on Xerces",
    "systemSpecification": true,
    "version": "0.9, 1.0, 1.0.1"
}