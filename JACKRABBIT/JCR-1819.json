{
    "comments": [],
    "component": "jackrabbit-jcr2spi",
    "description": "with jcr2spi an item is 'deep' loaded whenever the hierarchy is not complete. while for Session#itemExists or Session#getItem it is ok to try loading a Node first and if not found a Property, this is inconvenient (and generates unnecessary round trips to the SPI) for those cases, where the original JCR call indicates whether a Node or Property is expected.\n\nThis is the case for Node.getNode(String relPath) and Node.getProperty(String relPath) ((and maybe others))\n\nTherefore i suggest to add specific methods\n\nHierarchyManager#getNodeEntry\nHierarchyManager#getPropertyEntry\nNodeEntry#getDeepNodeEntry\nNodeEntry#getDeepPropertyEntry\n\n(or something similar)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1819",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR2SPI: Add specific deep loading of Nodes and Properties",
    "systemSpecification": true,
    "version": ""
}