{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Attached NameException.patch (against trunk) that implements the proposed change and adjusts the code in jackrabbit-core accordingly.",
            "date": "2006-12-28T02:11:13.000+0000",
            "id": 0
        },
        {
            "author": "Julian Reschke",
            "body": "I completely agree with this. Everytime I catch a NameException I wrap it into a RepositoryException.\n\nBut this change may break some code, no?\n",
            "date": "2006-12-28T09:56:48.000+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "> But this change may break some code, no?\n\nYes, it's a change to the public API of jackrabbit-jcr-commons, and thus can lead to some things breaking. This is the reason why I didn't just commit the change.\n\nI don't think there are many (any?) cases where BaseException is caught instead of NameException or one of the more specific subclasses, thus this change shouldn't affect too many things. But please comment if there are cases where this would be troublesome.\n",
            "date": "2006-12-28T10:24:31.000+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Dropping this from the 1.3 release to avoid unexpected issues.",
            "date": "2007-04-12T07:16:12.452+0000",
            "id": 3
        },
        {
            "author": "angela",
            "body": "this issues has been addressed by JCR-1169: The NameException placed in the spi-commons\nwhich replaces the former o.a.j.name.NameException in jcr-commons extends from RepositoryException. I guess we can mark i fixed for 1.4.",
            "date": "2007-10-23T13:41:24.012+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-core",
    "description": "Since the NameExceptions (IllegalNameException, UnknownPrefixException, etc.) are typically thrown when parsing or formatting JCR names at the JCR API level, it would make sense for the NameException class to extend RepositoryException instead of the internal BaseException. This idea is supported by the fact that the majority of cases where NameExceptions are encountered simply rethrow the exceptions wrapped inside RepositoryException instances. Making NameException extend RepositoryException would reduce the amount of try-catch blocks and wrapped exceptions.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-691",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Let NameException extend RepositoryException",
    "systemSpecification": true,
    "version": ""
}