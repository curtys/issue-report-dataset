{
    "comments": [
        {
            "author": "angela",
            "body": "fixed rev. 344124 \n",
            "date": "2005-11-14T23:19:26.000+0000",
            "id": 0
        }
    ],
    "component": "locks",
    "description": "The spec says:\n\nLock.refresh():\nIf this lock's time-to-live is governed by a timer, this method resets that timer so that the lock does not timeout and expire. If this lock's time-to-live is not governed by a timer, then this method has no effect.A LockException is thrown if this Session does not hold the correct lock token for this lock.A RepositoryException is thrown if another error occurs.\n\n\nThe jackrabbit impl does:\n\n/**\n     * {@inheritDoc}\n     */\n    public void refresh() throws LockException, RepositoryException {\n        if (isLive()) {\n            throw new LockException(\"Lock still alive.\");\n        }\n        [...]\n    }\n\n\nIsn't this a leftover from a very old version of the spec?\nThere was ones a misunderstanding about the refresh (bringing locks back to live) that has been discussed (mail by david to g. clemm, tobi, peeter and myself, 25.4.2005). as far is i know everybody agreed that this does not make sense and the spec has been adjusted accordingly.\n\nThe usage of the refresh is to prevent the lock from being timeouted. That was the original meaning of the refresh, when i suggested it for the JCR locking. If the lock is still alive and there is no timeout to reset, then the method should simply not do anything.\n\nam i missing something? \n\nregards\nangela\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-226",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Lock.refresh(): throws if lock is alive",
    "systemSpecification": false,
    "version": ""
}