{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Fixed as suggested in revision: 427960\n\nThank you for reporting this issue.",
            "date": "2006-08-02T12:14:00.000+0000",
            "id": 0
        }
    ],
    "component": "test",
    "description": "JSR-170 allows Session.impersonate to throw LoginException if the session lacks permission to impersonate another user.  Some repositories may not allow any session to impersonate another user, in which case this test would fail.\n\nProposal: catch and consume LoginException.\n\n--- ImpersonateTest.java        (revision 422074)\n+++ ImpersonateTest.java        (working copy)\n@@ -17,11 +17,13 @@\n package org.apache.jackrabbit.test.api;\n  \n import org.apache.jackrabbit.test.AbstractJCRTest;\n+import org.apache.jackrabbit.test.NotExecutableException;\n  \n import javax.jcr.Session;\n import javax.jcr.Credentials;\n import javax.jcr.NodeIterator;\n import javax.jcr.Node;\n+import javax.jcr.LoginException;\n import java.security.AccessControlException;\n  \n /**\n@@ -40,7 +42,14 @@\n      */\n     public void testImpersonate() throws Exception {\n         // impersonate to read-only user\n-        Session session = superuser.impersonate(helper.getReadOnlyCredentials());\n+        Session session = null;\n+\n+        try {\n+            session = superuser.impersonate(helper.getReadOnlyCredentials());\n+        }\n+        catch (LoginException e) {\n+          throw new NotExecutableException(\"impersonate threw LoginException\");\n+        }\n  \n         // get a path to test the permissions on\n         String thePath = \"\";\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-498",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "TCK: ImpersonateTest#testImpersonate should allow LoginException",
    "systemSpecification": true,
    "version": ""
}