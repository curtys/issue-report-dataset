{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Fixed as proposed.\n\nsvn revision: 428405\n\nThank you for reporting this issue.",
            "date": "2006-08-03T13:55:42.000+0000",
            "id": 0
        }
    ],
    "component": "test",
    "description": "Test assumes the implementation uses a terminal attribute step as the column specifier.  This is allowed, but not required, by JCR.\n\nProposal: remove column specifier and process results using getNodes instead of getRows.\n\n--- XPathQueryLevel2Test.java   (revision 422074)\n+++ XPathQueryLevel2Test.java   (working copy)\n@@ -85,7 +85,7 @@\n         checkResult(result, 1);\n  \n         // evaluate result\n-        checkValue(result.getRows(), propertyName1, \"b\");\n+        checkValue(result.getNodes(), propertyName1, \"b\");\n     }\n  \n     /**\n@@ -101,7 +101,7 @@\n         checkResult(result, 1);\n  \n         // evaluate result\n-        checkValue(result.getRows(), propertyName1, \"existence\");\n+        checkValue(result.getNodes(), propertyName1, \"existence\");\n     }\n  \n     /**\n@@ -147,7 +147,6 @@\n         tmp.append(jcrRoot).append(testRoot);\n         tmp.append(\"/*[@\").append(propertyName2).append(\" = 'two'\");\n         tmp.append(\" and @\").append(propertyName1).append(\" = 'existence']\");\n-        tmp.append(\"/@\").append(propertyName1);\n         return new Statement(tmp.toString(), Query.XPATH);\n     }\n  \n@@ -161,7 +160,7 @@\n         tmp.append(propertyName1);\n         tmp.append(\" <= 'b' and @\");\n         tmp.append(propertyName1);\n-        tmp.append(\" > 'a']/@\").append(propertyName1);\n+        tmp.append(\" > 'a']\");\n         return new Statement(tmp.toString(), Query.XPATH);\n     }\n }\n\n--- AbstractQueryLevel2Test.java        (revision 422074)\n+++ AbstractQueryLevel2Test.java        (working copy)\n@@ -19,6 +19,7 @@\n import org.apache.jackrabbit.test.NotExecutableException;\n  \n import javax.jcr.nodetype.NodeType;\n+import javax.jcr.NodeIterator;\n import javax.jcr.query.RowIterator;\n import javax.jcr.query.Row;\n import javax.jcr.Value;\n@@ -115,4 +116,16 @@\n                     expectedValue, value.getString());\n         }\n     }\n+\n+    protected void checkValue(NodeIterator itr,\n+                              String propertyName,\n+                              String expectedValue) throws RepositoryException {\n+        while (itr.hasNext()) {\n+            Node node = itr.nextNode();\n+            // check fullText\n+            Value value = node.getProperty(propertyName).getValue();\n+            assertEquals(\"Value in query result row does not match expected value\",\n+                    expectedValue, value.getString());\n+        }\n+    }\n }\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-526",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "TCK: XPathQueryLevel2Test uses optional column specifier syntax",
    "systemSpecification": true,
    "version": ""
}