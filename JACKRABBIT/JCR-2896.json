{
    "comments": [
        {
            "author": "angela",
            "body": "same applied to XmlRequestEntity...",
            "date": "2011-02-17T11:03:59.146+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-webdav",
    "description": "JackrabbitResponeImpl.sendXmlResponse creates an instance of TransformerFactory on each invocation. We see, that this TransformerFactory initialization consumes significant amount of time, because of complex logic inside:\n\n{code}\n    at java.lang.String.intern(Native Method)\n    at java.util.jar.Attributes$Name.<init>(Attributes.java:449)\n    at java.util.jar.Attributes.putValue(Attributes.java:151)\n    at java.util.jar.Attributes.read(Attributes.java:404)\n    at java.util.jar.Manifest.read(Manifest.java:234)\n    at sun.security.util.SignatureFileVerifier.processImpl(SignatureFileVerifier.java:188)\n    at sun.security.util.SignatureFileVerifier.process(SignatureFileVerifier.java:176)\n    at java.util.jar.JarVerifier.processEntry(JarVerifier.java:277)\n    at java.util.jar.JarVerifier.update(JarVerifier.java:188)\n    at java.util.jar.JarFile.initializeVerifier(JarFile.java:321)\n    at java.util.jar.JarFile.getInputStream(JarFile.java:386)\n    at sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:144)\n    at java.net.URL.openStream(URL.java:1009)\n    at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1170)\n    at javax.xml.transform.SecuritySupport$4.run(SecuritySupport.java:94)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at javax.xml.transform.SecuritySupport.getResourceAsStream(SecuritySupport.java:87)\n    at javax.xml.transform.FactoryFinder.findJarServiceProvider(FactoryFinder.java:250)\n    at javax.xml.transform.FactoryFinder.find(FactoryFinder.java:223)\n    at javax.xml.transform.TransformerFactory.newInstance(TransformerFactory.java:102)\n    at org.apache.jackrabbit.webdav.WebdavResponseImpl.sendXmlResponse(WebdavResponseImpl.java:163)\n{code}\n\nTransformerFactory can be cached in static field:\n\nprivate static final TransofmerFactory transformerFactory = TransformerFactory.newInstance().",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2896",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "WebdavResponseImpl should cache TransformerFactory",
    "systemSpecification": true,
    "version": "2.2.2"
}