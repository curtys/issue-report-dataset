{
    "comments": [
        {
            "author": "Alexander Klimetschek",
            "body": "This is not a blocker - maybe for your requirements, but not for Jackrabbit. A blocker would be that jackrabbit does not start, no nodes/properties could be read etc.\n\nSince getSize() can return -1 by definition (and the order by trick to force getSize() have the hit count returned is just a \"trick\"), this is actually an improvement. Manually counting through the iterator is the way to go without the trick.",
            "date": "2010-10-21T18:51:58.807+0000",
            "id": 0
        },
        {
            "author": "Clemens Wyss",
            "body": "I agree that this is not a \"Blocker\", but manually counting through an iterator, just to get the count, is not really an option",
            "date": "2010-10-22T05:41:14.970+0000",
            "id": 1
        },
        {
            "author": "Clemens Wyss",
            "body": "\"fixed by\" https://issues.apache.org/jira/browse/JCR-2715",
            "date": "2010-11-30T15:04:22.431+0000",
            "id": 2
        }
    ],
    "component": "sql",
    "description": "whenever you provide a where-clause to a sql2 select, jcr/jackrabbit does not provide the hit count.\n\nE.g.:\n   select * from [nt:unstructured]\n   order by [jcr:score]\nreturns the hit count (query.execute().getRows().getSize()), \nwhereas\n  select * from [nt:unstructured]\n  where entity = \"customer\"\n  order by [jcr:score]\ndoesn't.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2765",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR-SQL2 : no count when WHERE clause is provided",
    "systemSpecification": true,
    "version": ""
}