{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "This is probably a regression caused by JCR-2170.",
            "date": "2009-10-01T09:40:35.947+0000",
            "id": 0
        },
        {
            "author": "Stefan Guggisberg",
            "body": "yes, it is a regression of JCR-2170. \n\nother type conversions are probably affected as well.",
            "date": "2009-10-01T09:45:45.949+0000",
            "id": 1
        },
        {
            "author": "Thomas Mueller",
            "body": "There should be a test case in the TCK, but I'm not sure where. Relevant section in the spec is at page 31:\n\n\"3.6.4 Property Type Conversion\nWhen the value of a property is read or written using a type different from that \ndeclared for the property, the repository attempts a type conversion according to \nthe following rules.\"\n\nIs there a lookup table that links the spec to the TCK tests and back?",
            "date": "2009-10-01T09:50:43.210+0000",
            "id": 2
        },
        {
            "author": "Alexander Klimetschek",
            "body": "I experienced the same issue. Proper workaround (because setProperty(String, InputStream) is deprecated in JCR 2.0) is:\n\n    node.setProperty(JcrConstants.JCR_DATA,\n            node.getSession().getValueFactory().createBinary(new ByteArrayInputStream(new byte[] {}))\n    );\n\nGrrr.",
            "date": "2009-10-01T13:28:19.929+0000",
            "id": 3
        },
        {
            "author": "Marcel Reutegger",
            "body": "> [...] workround [...]\n\nthat will work, but you should also call Binary.dispose() once you are done with the created Binary instance. Otherwise you depend on the GC and a well behaving implementation that will hopefully clean up resource held by the Binary (e.g. temp file).",
            "date": "2009-10-02T06:33:59.496+0000",
            "id": 4
        },
        {
            "author": "Marcel Reutegger",
            "body": "- fixed automatic type conversion\n- cleaned up setProperty() methods and removed duplicate code\n- added tests in core.NodeImplTest\n\nsvn revision: 820908",
            "date": "2009-10-02T06:55:58.639+0000",
            "id": 5
        },
        {
            "author": "Alexander Klimetschek",
            "body": "> but you should also call Binary.dispose() once you are done with the created Binary instance\n\nArgh.... who came up with that beast ;-)",
            "date": "2009-10-02T10:04:18.115+0000",
            "id": 6
        }
    ],
    "component": "jackrabbit-core",
    "description": "String values are no longer converted to binary when required. Example:\n\nNode n = testRootNode.addNode(\"testConvert\", \"nt:file\");\nNode content = n.addNode(\"jcr:content\", \"nt:resource\");\ncontent.setProperty(\"jcr:lastModified\", Calendar.getInstance());\ncontent.setProperty(\"jcr:mimeType\", \"text/html\");\ncontent.setProperty(\"jcr:data\", \"Hello\");\nn.getSession().save();\n\nThis used to work in a previous 2.0 build, but now throws:\n\njavax.jcr.nodetype.ConstraintViolationException: no matching property definition found for {http://www.jcp.org/jcr/1.0}data\nat org.apache.jackrabbit.core.nodetype.EffectiveNodeType.getApplicablePropertyDef(EffectiveNodeType.java:782)\nat org.apache.jackrabbit.core.NodeImpl.getApplicablePropertyDefinition(NodeImpl.java:747)\nat org.apache.jackrabbit.core.ItemManager.getDefinition(ItemManager.java:241)\nat org.apache.jackrabbit.core.ItemData.getDefinition(ItemData.java:101)\nat org.apache.jackrabbit.core.ItemManager.canRead(ItemManager.java:409)\nat org.apache.jackrabbit.core.ItemManager.getItemData(ItemManager.java:383)\nat org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:316)\nat org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:595)\nat org.apache.jackrabbit.core.NodeImpl.removeChildProperty(NodeImpl.java:554)\nat org.apache.jackrabbit.core.NodeImpl.removeChildProperty(NodeImpl.java:534)\nat org.apache.jackrabbit.core.NodeImpl.setProperty(NodeImpl.java:2303)\nat org.apache.jackrabbit.core.nodetype.ConvertDataTypeTest.testStringToBinary(ConvertDataTypeTest.java:36)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2336",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Automatic type conversion no longer works",
    "systemSpecification": true,
    "version": "2.0-alpha11"
}