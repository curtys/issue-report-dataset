{
    "comments": [
        {
            "author": "angela",
            "body": "commited changes with rev. 431546 :\n\nserver/io package:\n- new interfaces PropertyManager, PropertyHandler, PropertyImportContext, PropertyExportContext.\n-  the IOHandler implementations present in the io package now also implement PropertyHandler.\n- DefaultHandler: content nodetype was changed from 'nt:resource' to 'nt:unstructured' .  While nt:resource only allows a predefined set of properties, nt:unstructured contains a residual property definition.\n\nwebdav/simple package:\n- extend ResourceConfig in order to allow  specification of a PropertyManager and a set of\n  PropertyHandlers to be used.\n- adjust DavResourceImpl: export and import of properties in response to PROPFIND and \n  PROPPATCH are delegated to the PropertyManager. This allows to let the PropertyHandler \n   decide which properties are exported/imported and how those are stored.\n\nwebapp:\n- adjust config.xml accordingly\n\n\n",
            "date": "2006-08-15T07:51:37.000+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "attached litmus results",
            "date": "2006-08-15T08:20:54.000+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-webdav",
    "description": "complete description:\nhttp://article.gmane.org/gmane.comp.apache.jackrabbit.devel/6582\n\nProposed solution\n------------------------------------------------------------------------------------------------------------------------------------\n\nThe situation described before leads me to the following conclusion:\n\n- IOHandler should not only read/write resource data and properties during GET, PUT, PROPFIND but should\n   also take care of setting/removing properties upon PROPPATCH.\n\n- Since the previous suggestion would still limit the properties to (jcr:encoding, jcr:mimeType and\n   jcr:lastModified), we may think about changing the default nodetype for the jcr:content node to\n   nt:unstructured.\n\nI guess this would meet the requirements for those expecting a webDAV server that is (as a first step)\nnot limited regarding PROPPATCH. Second it would allow to have a handling of property modifications\nwhich is specific for individual resource types instead of trying to set all properties to the uppermost node.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-416",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Webdav Simple: Delegate PROPPATCH to (extended) IOHandlers",
    "systemSpecification": true,
    "version": "1.0"
}