{
    "comments": [
        {
            "author": "Felix Meschberger",
            "body": "Patch extending the AbstractLoginModule with support for pre-authentication.\n\nThis patch adds the following:\n\n  * Support for a configuration parameter declaring a SimpleCredentials attribute for pre-authentication\n  * Add an isPreAuthenticated(Credentials) method used by the login() method\n\nThe isPreAuthenticated method is protected and can be overwritten by AbstractLoginModule implementations to either switch pre authentication off completely or to apply different and more elaborate checks on the credentials.",
            "date": "2009-10-14T07:20:16.176+0000",
            "id": 0
        },
        {
            "author": "Felix Meschberger",
            "body": "After having received the ok from Angela, I commit this patch in Rev. 825125.",
            "date": "2009-10-14T13:29:35.599+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "+0 This approach seems a bit hacky to me (a separate SingleSignOnCredentials class would feel cleaner, or perhaps an out-of-band approach often used by JAAS implementations), but it's probably the most straightforward and easy to implement solution to the described use case.",
            "date": "2009-10-14T13:38:54.007+0000",
            "id": 2
        },
        {
            "author": "Alexander Klimetschek",
            "body": "Ahem, this can be a security breach! This attribute \"trust_credentials_attribute\" on SimpleCredentials basically works as a (very simple) master password. Hence this patch implicitly trusts the calling code, but if the repository is available eg. via RMI, anyone could connect to it and log in as any user, because that attribute can be set over RMI (afaik).\n\nA big -1. It should rather be easy to write a special login module that can be set by configuration and handles SSO things and co.\n\n",
            "date": "2009-10-15T11:12:24.813+0000",
            "id": 3
        },
        {
            "author": "Felix Meschberger",
            "body": "I agree that the security might be hampered with when this is used unknowningly.\n\nStill, it must explicitly be enabled on a repository configuration level and the default is, that it is not enabled.\n\nI am perfectly ok to raise the requirements for the attribute above the basic presence. For example, we could say, the attribute must be set to a session which has certain access rights. This would limit the use of this functionality to code, which already has access to the repository at a certain level.\n\nOn another you raised your veto. Do you stand by this veto ? In this case, since you are a member of the PMC, I would have to remove the code again.",
            "date": "2009-10-15T11:23:51.444+0000",
            "id": 4
        },
        {
            "author": "Alexander Klimetschek",
            "body": "Ok, I thought it would be enabled by default. Hence I revert my -1 vote.\n\nI would note that one should see this attribute like a password, that then must be set on both the client code and the repository configuration.\n\n> It should rather be easy to write a special login module that can be set by configuration and handles SSO things and co.\n\nAs Felix pointed out to me, certain login mechanisms like openID, which involve multiple http requests, cannot be easily done by a jackrabbit loginmodule.",
            "date": "2009-10-15T12:25:41.665+0000",
            "id": 5
        },
        {
            "author": "Felix Meschberger",
            "body": "Thanks for reverting your veto. So We keep this change committed.",
            "date": "2009-10-15T12:29:58.050+0000",
            "id": 6
        }
    ],
    "component": "jackrabbit-core",
    "description": "Some applications authenticate users themselves and just need to access the repository on behalf of these pre-authenticated users.\n\nExamples of such pre-authentications include SSO solutions or web applications using a web-based authentication protocol not easily implementable in a JAAS LoginModule, for example OpenID or similar.\n\nIn such situations a password may not be provided in SimpleCredentials and thus regular login with user name and password is not possible.\n\nTherefore I propose the enhancement of the AbstractLoginModule to allow for setting a specific attribute in the SimpleCredentials attribute map. If this attribute is set, authentication and login succeeds and a session for the user named in the SimpleCredentials is created.\n\nAs a starter we might just check for the presence of the attribute.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2355",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Support easy pre-authenticated login",
    "systemSpecification": true,
    "version": "2.0-alpha11"
}