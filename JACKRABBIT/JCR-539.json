{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Changed WorkspaceInfo.initialize() to first check the status of the WorkspaceInfo within a read lock. This avoids the situation where WorkspaceInfo.isInitialized() returns false while another thread is calling WorkspaceInfo.initialize().\n\nsvn revision: 430373",
            "date": "2006-08-10T13:07:49.000+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core",
    "description": "See test case: org.apache.jackrabbit.test.core.ConcurrentLoginTest\n\njava.lang.IllegalStateException: workspace 'default' not initialized\n\tat org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getItemStateProvider(RepositoryImpl.java:1448)\n\tat org.apache.jackrabbit.core.RepositoryImpl.getWorkspaceStateManager(RepositoryImpl.java:712)\n\tat org.apache.jackrabbit.core.SessionImpl.<init>(SessionImpl.java:247)\n\tat org.apache.jackrabbit.core.SessionImpl.<init>(SessionImpl.java:214)\n\tat org.apache.jackrabbit.core.XASessionImpl.<init>(XASessionImpl.java:98)\n\tat org.apache.jackrabbit.core.RepositoryImpl.createSessionInstance(RepositoryImpl.java:1233)\n\tat org.apache.jackrabbit.core.RepositoryImpl.createSession(RepositoryImpl.java:800)\n\tat org.apache.jackrabbit.core.RepositoryImpl.login(RepositoryImpl.java:1119)\n\tat org.apache.jackrabbit.core.RepositoryImpl.login(RepositoryImpl.java:1146)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.login(BindableRepository.java:181)\n\tat org.apache.jackrabbit.core.ConcurrentLoginTest$1.run(ConcurrentLoginTest.java:56)\n\tat java.lang.Thread.run(Thread.java:534)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-539",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Concurrent Repository.login() throws IllegalStateException",
    "systemSpecification": true,
    "version": "1.0.1"
}