{
    "comments": [
        {
            "author": "Alexander Klimetschek",
            "body": "> To get around the problem, we are forced synchronize thread access to the JCR repository\n\nJCR does not mandate that sessions are thread-safe (and Jackrabbit does not implement that in general), so the concurrent use of sessions across multiple threads might be the reason for your issues.",
            "date": "2008-11-03T12:35:37.216+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "At least the first stuck thread in the dump is caused by the DynamicPooledExecutor, which uses a WaitWhenBlocked policy. It turns out that this policy does not guarantee liveness of tasks to be executed:\n\nhttp://article.gmane.org/gmane.comp.java.jsr.166-concurrency/994/\n\nI suggest we switch to the default policy, which is RunWhenBlocked. Instead of waiting for a pooled thread to become available, this policy will simply run the task with the current thread. I think this is acceptable and does no harm.",
            "date": "2009-01-13T20:10:15.864+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "Proposed fix.",
            "date": "2009-01-13T20:16:41.580+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "+1 Seems reasonable to me.",
            "date": "2009-01-14T09:27:01.138+0000",
            "id": 3
        },
        {
            "author": "Marcel Reutegger",
            "body": "Committed patch to trunk in revision: 734366",
            "date": "2009-01-14T12:27:26.502+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.4 branch in revision 734377 and to the 1.5 branch in revision 734382.",
            "date": "2009-01-14T13:20:02.655+0000",
            "id": 5
        },
        {
            "author": "Andrey Adamovich",
            "body": "We seem to experience the same issue with version 1.5.5 of JackRabbit.",
            "date": "2009-12-14T13:04:19.982+0000",
            "id": 6
        },
        {
            "author": "Andrey Adamovich",
            "body": "This dump shows that many threads are trying to get lock from AbstractJournal and that none is holding that lock. ",
            "date": "2009-12-14T13:11:12.084+0000",
            "id": 7
        },
        {
            "author": "Andrey Adamovich",
            "body": "Is it possible to reopen this issue or should I create a new one?",
            "date": "2009-12-14T16:12:43.352+0000",
            "id": 8
        },
        {
            "author": "Jukka Zitting",
            "body": "Please create a new issue. The fix for this issue has already been included in past releases, so the problem you're seeing is either a new issue or a an unfixed variation of this issue.",
            "date": "2009-12-14T16:27:48.133+0000",
            "id": 9
        },
        {
            "author": "Andrey Adamovich",
            "body": "A new issue is created: JCR-2438",
            "date": "2009-12-15T09:52:16.571+0000",
            "id": 10
        }
    ],
    "component": "jackrabbit-core",
    "description": "Hello,\n\nWe are running jackrabbit 1.4.5 using a persistent file data store within a weblogic container and encountering a variety of thread locking issues. To get around the problem, we are forced synchronize thread access to the JCR repository or reduce thread worker count to 1 which has a heavy performance impact on our application. I'm not exactly sure what the problem is and was wondering someone is looking into this issue and if there is a workaround/fix planned?\n\n<Oct 30, 2008 10:45:32 AM PDT> <Error> <WebLogicServer> <BEA-000337> <[STUCK] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"1,863\" seconds working on the request \"weblogic.work.j2ee.J2EEWorkManager$WorkWithListener@2117cc9\", which is more than the configured time (StuckThreadMaxTime) of \"1,800\" seconds. Stack trace:\nThread-94 \"[STUCK] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, in native, suspended, waiting, priority=1, DAEMON> {\n    -- Waiting for notification on: EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock@152c384[fat lock]\n    java.lang.Object.wait(Object.java:???)\n    java.lang.Object.wait(Object.java:474)\n    EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock.acquire(Unknown Source)\n    org.apache.jackrabbit.core.journal.AbstractJournal.lockAndSync(AbstractJournal.java:235)\n    org.apache.jackrabbit.core.journal.DefaultRecordProducer.append(DefaultRecordProducer.java:49)\n\n}\n\n>\n<Oct 30, 2008 10:45:32 AM PDT> <Error> <WebLogicServer> <BEA-000337> <[STUCK] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"1,916\" seconds working on the request \"weblogic.work.j2ee.J2EEWorkManager$WorkWithListener@227b6d4\", which is more than the configured time (StuckThreadMaxTime) of \"1,800\" seconds. Stack trace:\nThread-25 \"[STUCK] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, in native, suspended, waiting, priority=1, DAEMON> {\n    -- Waiting for notification on: EDU.oswego.cs.dl.util.concurrent.LinkedNode@42d58e0[fat lock]\n    java.lang.Object.wait(Object.java:???)\n    java.lang.Object.wait(Object.java:474)\n    EDU.oswego.cs.dl.util.concurrent.SynchronousChannel.put(Unknown Source)\n    EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)\n    EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)\n...\n    org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:334)\n    org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:307)\n    org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:317)\n    org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1072)\n    ^-- Holding lock: org.apache.jackrabbit.core.query.lucene.VolatileIndex@3eb0f41[thin lock]\n    org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:895)\n    org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:178)\n    com.qpass.inventory.ingestion.IngestionServiceImpl$1.doInJCR(IngestionServiceImpl.java:124)\n    com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)\n    com.qpass.inventory.ingestion.IngestionServiceImpl.ingestProduct(IngestionServiceImpl.java:93)\n    com.qpass.inventory.ingestion.bulk.AbstractBulkIngester.ingestProduct(AbstractBulkIngester.java:42)\n    com.qpass.inventory.ingestion.bulk.ZipFileBulkIngester.processFile(ZipFileBulkIngester.java:35)\n    com.qpass.inventory.ingestion.bulk.IngestionWorker.processFile(IngestionWorker.java:26)\n    com.qpass.inventory.ingestion.bulk.IngestionWorker$1.run(IngestionWorker.java:64)\n    org.springframework.scheduling.commonj.DelegatingWork.run(DelegatingWork.java:61)\n    weblogic.work.j2ee.J2EEWorkManager$WorkWithListener.run(J2EEWorkManager.java:245)\n    weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)\n    weblogic.work.ExecuteThread.run(ExecuteThread.java:173)\n}\n\n>\n<Oct 30, 2008 10:45:32 AM PDT> <Error> <WebLogicServer> <BEA-000337> <[STUCK] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"1,891\" seconds working on the request \"weblogic.work.j2ee.J2EEWorkManager$WorkWithListener@2117c83\", which is more than the configured time (StuckThreadMaxTime) of \"1,800\" seconds. Stack trace:\nThread-24 \"[STUCK] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, in native, suspended, waiting, priority=1, DAEMON> {\n    -- Waiting for notification on: EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock@152c384[fat lock]\n    java.lang.Object.wait(Object.java:???)\n    java.lang.Object.wait(Object.java:474)\n    EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock.acquire(Unknown Source)\n    org.apache.jackrabbit.core.journal.AbstractJournal.lockAndSync(AbstractJournal.java:235)\n    org.apache.jackrabbit.core.journal.DefaultRecordProducer.append(DefaultRecordProducer.java:49)\n    org.apache.jackrabbit.core.cluster.ClusterNode$WorkspaceUpdateChannel.updateCreated(ClusterNode.java:556)\n...\n\n\n<Oct 30, 2008 11:21:30 AM PDT> <Warning> <netuix> <BEA-423420> <Redirect is executed in begin or refresh action. Redirect url is /console/console.portal?_nfpb=true&_pageLabel=HomePage1.>\n<Oct 30, 2008 11:44:32 AM PDT> <Error> <WebLogicServer> <BEA-000337> <[STUCK] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"1,803\" seconds working on the request \"Http Request: /inventory/rpc/searchService\", which is more than the configured time (StuckThreadMaxTime) of \"1,800\" seconds. Stack trace:\nThread-51 \"[STUCK] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, in native, suspended, waiting, priority=1, DAEMON> {\n    -- Waiting for notification on: java.lang.Object@1569e04[fat lock]\n    java.lang.Object.wait(Object.java:???)\n    java.lang.Object.wait(Object.java:474)\n    org.apache.jackrabbit.core.query.lucene.MultiIndex.getIndexReader(MultiIndex.java:694)\n    org.apache.jackrabbit.core.query.lucene.SearchIndex.getIndexReader(SearchIndex.java:825)\n    org.apache.jackrabbit.core.query.lucene.SearchIndex.executeQuery(SearchIndex.java:682)\n    org.apache.jackrabbit.core.query.lucene.QueryResultImpl.executeQuery(QueryResultImpl.java:242)\n    org.apache.jackrabbit.core.query.lucene.QueryResultImpl.getResults(QueryResultImpl.java:271)\n    org.apache.jackrabbit.core.query.lucene.QueryResultImpl.<init>(QueryResultImpl.java:177)\n    org.apache.jackrabbit.core.query.lucene.QueryImpl.execute(QueryImpl.java:105)\n    org.apache.jackrabbit.core.query.QueryImpl.execute(QueryImpl.java:174)\n    com.qpass.inventory.service.QueryProfiler.execute(QueryProfiler.java:20)\n    com.qpass.inventory.service.SearchServiceImpl$1.doInJCR(SearchServiceImpl.java:59)\n    com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)\n    com.qpass.inventory.service.SearchServiceImpl.doSearch(SearchServiceImpl.java:54)\n    com.qpass.inventory.ui.impl.SearchUIServiceImpl.search(SearchUIServiceImpl.java:48)\n    sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:???)\n    sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:27)\n    sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    java.lang.reflect.Method.invoke(Method.java:570)\n    org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)\n    org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)\n    org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:148)\n    org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:62)\n    org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:148)\n    org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:151)\n    $Proxy74.search(Unknown Source)\n    sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:???)\n    sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:27)\n    sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    java.lang.reflect.Method.invoke(Method.java:570)\n    org.gwtwidgets.server.spring.GWTRPCServiceExporter.invokeMethodOnService(GWTRPCServiceExporter.java:157)\n    org.gwtwidgets.server.spring.GWTRPCServiceExporter.processCall(GWTRPCServiceExporter.java:295)\n    com.google.gwt.user.server.rpc.RemoteServiceServlet.doPost(RemoteServiceServlet.java:173)\n    org.gwtwidgets.server.spring.GWTRPCServiceExporter.handleRequest(GWTRPCServiceExporter.java:361)\n    com.qpass.base.ui.security.GWTServiceExporter.handleRequest(GWTServiceExporter.java:45)\n    org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:49)\n    org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:831)\n    org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:781)\n    org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:567)\n    org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)\n    javax.servlet.http.HttpServlet.service(HttpServlet.java:736)\n    javax.servlet.http.HttpServlet.service(HttpServlet.java:851)\n    weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:224)\n    weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:108)\n    weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:198)\n    weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)\n    weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)\n    org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)\n    org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:93)\n    org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:71)\n    org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)\n    com.qpass.usersecurity.auth.UpdatePermissionsOnContextChangeFilter.doFilter(UpdatePermissionsOnContextChangeFilter.java:44)\n    org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)\n    org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:191)\n    org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)\n    org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)\n    org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)\n    org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:122)\n    org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)\n    org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:154)\n    weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)\n    com.qpass.base.applicationcontext.RequestContextFilter.doFilter(RequestContextFilter.java:103)\n    org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)\n    org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:154)\n    weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)\n    org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:90)\n    org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)\n    weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)\n    weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:24)\n    weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)\n    weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3214)\n    weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:308)\n    weblogic.security.service.SecurityManager.runAs(SecurityManager.java:117)\n    weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1946)\n    weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1868)\n    weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1331)\n    weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)\n    weblogic.work.ExecuteThread.run(ExecuteThread.java:173)\n}\n\n\n\n\n<Oct 2, 2008 2:09:36 PM PDT> <Error> <WebLogicServer> <BEA-000337> <[STUCK] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)' has been busy for \"696\" seconds working on the request \"weblogic.work.j2ee.J2EEWorkManager$WorkWithListener@863e564\", which is more than the configured time (StuckThreadMaxTime) of \"600\" seconds. Stack trace:\nThread-21 \"[STUCK] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'\" <alive, in native, suspended, priority=1, DAEMON> {\n    java.io.FileOutputStream.writeBytes(FileOutputStream.java:???)\n    java.io.FileOutputStream.write(FileOutputStream.java:260)\n    java.io.BufferedOutputStream.write(BufferedOutputStream.java:100)\n    ^-- Holding lock: java.io.BufferedOutputStream@39d70a5[thin lock]\n    org.apache.jackrabbit.core.persistence.util.FileSystemBLOBStore.put(FileSystemBLOBStore.java:88)\n    org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.writeState(BundleBinding.java:561)\n    org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.writeBundle(BundleBinding.java:245)\n    org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager.storeBundle(Oracle9PersistenceManager.java:114)\n    ^-- Holding lock: org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9[thin lock]\n    org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.putBundle(AbstractBundlePersistenceManager.java:703)\n    org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.store(AbstractBundlePersistenceManager.java:526)\n    ^-- Holding lock: org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9[thin lock]\n    org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager.store(BundleDbPersistenceManager.java:517)\n    ^-- Holding lock: org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9[thin lock]\n    org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:699)\n    org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:873)\n    org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:334)\n    org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:334)\n    org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:307)\n    org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:317)\n    org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1072)\n    ^-- Holding lock: org.apache.jackrabbit.core.XASessionImpl@1f2653b[thin lock]\n    org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:895)\n    org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:178)\n    com.qpass.inventory.ingestion.IngestionServiceImpl$1.doInJCR(IngestionServiceImpl.java:140)\n    com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)\n    com.qpass.inventory.ingestion.IngestionServiceImpl.ingestProduct(IngestionServiceImpl.java:112)\n    ^-- Holding lock: java.lang.Object@849ca9e[fat lock]\n    com.qpass.inventory.ingestion.bulk.AbstractBulkIngester.ingestProduct(AbstractBulkIngester.java:42)\n    com.qpass.inventory.ingestion.bulk.ZipFileBulkIngester.processFile(ZipFileBulkIngester.java:35)\n    com.qpass.inventory.ingestion.bulk.IngestionWorker.processFile(IngestionWorker.java:26)\n    com.qpass.inventory.ingestion.bulk.IngestionWorker$1.run(IngestionWorker.java:64)\n    org.springframework.scheduling.commonj.DelegatingWork.run(DelegatingWork.java:61)\n    weblogic.work.j2ee.J2EEWorkManager$WorkWithListener.run(J2EEWorkManager.java:245)\n    weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)\n    weblogic.work.ExecuteThread.run(ExecuteThread.java:173)\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1846",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Jackrabbit thread contention issue due to fat lock",
    "systemSpecification": true,
    "version": "core 1.4.5, core 1.4.6, 1.5, 1.5.2"
}