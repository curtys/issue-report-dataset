{
    "comments": [
        {
            "author": "angela",
            "body": "patch modifying ItemManager#getDefinitiion(NodeState) and #getDefinition(PropertyState) replacing getItem(NodeId parentId) by calls that omit the permission check.\nand 2 tests cases:\na) node and it's definition is accessible even if the parent cannot be read\nb) child nodes can be added to node B even B's parent A cannot be read",
            "date": "2009-12-02T10:03:30.842+0000",
            "id": 0
        },
        {
            "author": "Stefan Guggisberg",
            "body": "+1 for the patch\n\nthanks\nstefan",
            "date": "2009-12-02T11:08:07.069+0000",
            "id": 1
        },
        {
            "author": "angela",
            "body": "applied patch with minor modification (referring to this issue in the comments added to ItemManager)",
            "date": "2009-12-02T11:46:22.365+0000",
            "id": 2
        }
    ],
    "component": "jackrabbit-core",
    "description": "If a session is granted all permissions on a given item B but lacks permission to read it's parent node A an attempt to\naccess the definition of B by means of Node.getDefinition or Property.getDefinition will fail with AccessDeniedException.\n\nSimilarly, the same session will not be able to modify that item B - e.g. add a child node in case it was a node - since implementation e.g. checks of that\nitem B isn't protected, which is determined by looking at the definition.\n\nMy feeling is, that the item definition should be accessible even if the parent node cannot be read.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2418",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Read permission on parent node required to access an item's definition",
    "systemSpecification": true,
    "version": ""
}