{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Limited the scope of this issue to cover only namespace handling in AbstractSession. Let's cover the larger topic of sessions vs. threads in another issue.",
            "date": "2008-10-13T10:07:43.960+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Resolved in revisions 704002 and 704005. Merged to the 1.5 branch.",
            "date": "2008-10-15T13:11:34.584+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-jcr-commons",
    "description": "The AbstractSession base class in o.a.j.commons implicitly assume that the session is never accessed concurrently from more than one thread and thus doesn't synchronize access to the namespace map. This causes problems when the session *is* accessed concurrently. Instead of relying on client code we should enforce thread-safety by explicitly synchronizing potentially unsafe operations on the session instance.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1793",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Namespace handling in AbstractSession should be synchronized",
    "systemSpecification": true,
    "version": ""
}