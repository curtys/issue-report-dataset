{
    "comments": [
        {
            "author": "angela",
            "body": "isn't 1) already covered by JCR-1352?\n\nregarding 2) \n\n> The server currently computes lock tokens for session-scoped locks based on the node id; these are not valid JCR lock tokens though \n\nthis change was introduce since as of jcr 2.0 session scoped locks don't expose the token any more.\nif you have a proposal for another type of token that's fine.\n\n> and cause exceptions when they are re-added when they appear in a Lock-Token header or an If header. \n\nas far as i know this just causes a ugly warning in the log file (written by jackrabbit-core), since adding the token to \nsession fails, which in this case was useless any way as they are session scoped. but if i remember correctly it otherwise \nused to work (see also JCR-2990... which i resolved wontfix due to lack of priority)\n\n> This will likely cause requests to fail that use both types of locks (yes, maybe academic but should be fixed anyway) \n\ncan't follow you here.\n\nbut anyway: it was definitely favorable if we can distinguish the two types of locks based on the token and\ncould therefore omit adding it to the session/lockmanager. ",
            "date": "2012-01-17T13:59:01.899+0000",
            "id": 0
        },
        {
            "author": "Julian Reschke",
            "body": "Angela, sorry for missing the two older JIRA issues :-) Will clean this up.\n\nRegarding:\n\n\"> This will likely cause requests to fail that use both types of locks (yes, maybe academic but should be fixed anyway)\n\ncan't follow you here. \"\n\nMy reading of the code is that a RuntimeException is thrown and thus the request will not continue to run as it should (but I'll check that).",
            "date": "2012-01-17T14:15:57.427+0000",
            "id": 1
        },
        {
            "author": "Julian Reschke",
            "body": "Angela: indeed, the IllegalArgumentException is transformed into a LockException and then catched, logged, and ignored by o.a.j.c.SessionImpl,addLockToken(). Sorry for the confusion.",
            "date": "2012-01-17T14:27:11.236+0000",
            "id": 2
        },
        {
            "author": "angela",
            "body": "no problem... i just happened to take a look at that the session-scoped locks some time ago\nand found myself struggling with the log-output, that turned out to be irrelevant for the\nproblem i was trying to solve.",
            "date": "2012-01-17T14:32:46.489+0000",
            "id": 3
        },
        {
            "author": "Julian Reschke",
            "body": "Proposed patch; implements mapping of JCR lock tokens to valid DAV lock token URIs, isolates mapping in a single place.",
            "date": "2012-01-18T13:39:22.222+0000",
            "id": 4
        },
        {
            "author": "Julian Reschke",
            "body": "Observation: it appears that we never need the actual JCR lock token of a *session* scoped lock. That makes sense as we are keeping the JCR session around, right? ",
            "date": "2012-01-18T13:40:12.668+0000",
            "id": 5
        },
        {
            "author": "Jukka Zitting",
            "body": "Do we want to include this already in 2.4? Seems like a relatively low-risk change so we could still backport this before the 2.4.0 release gets cut.",
            "date": "2012-01-25T13:40:44.630+0000",
            "id": 6
        },
        {
            "author": "Julian Reschke",
            "body": "it's both low-risk and low-prio, so it might be something that can wait...",
            "date": "2012-01-25T13:55:52.753+0000",
            "id": 7
        },
        {
            "author": "Julian Reschke",
            "body": "(found to be needed in 2.4 as well so we can fix JCR-3633",
            "date": "2013-07-30T15:22:33.304+0000",
            "id": 8
        }
    ],
    "component": "jackrabbit-jcr-server, jackrabbit-spi2dav, locks",
    "description": "There are several minor issues in the mapping between JCR lock tokens and WebDAV lock tokens:\n\n1) WebDAV lock tokens are supposed to use URI syntax (such as opaquelocktoken: or urn:uuid:)\n\n2) The server currently computes lock tokens for session-scoped locks based on the node id; these are not valid JCR lock tokens though and cause exceptions when they are re-added when they appear in a Lock-Token header or an If header. This will likely cause requests to fail that use both types of locks (yes, maybe academic but should be fixed anyway)\n\nProposal:\n\na) Map lock tokens to oqaquelocktoken URIs, using a constant UUID plus a postfix encoding the original lock token\nb) Use a syntax that allows to distinguish between tokens for open-scoped locks or session-scoped locks, so that we do not try to add the latter type to the Session (alternatively, handle exceptions doing so gracefully)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-3209",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "lock token validity",
    "systemSpecification": true,
    "version": "2.4.4"
}