{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Attached a patch that performs this refactoring. I'll apply it unless anyone objects within a few days.",
            "date": "2006-09-11T07:35:39.000+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Suggested changes applied in revision 446866.",
            "date": "2006-09-16T12:31:21.000+0000",
            "id": 1
        }
    ],
    "component": "observation",
    "description": "The current o.a.j.core.observation.ObservationManagerFactory class has two main responsibilities:\n\n    1) Create new ObservationManagerImpl instances as an observation manager factory\n    2) Manage event consumers and dispatch events within a workspace\n\nThese two responsibilities are quite unrelated and the factory responsibility essentially boils down to the following method that is only ever invoked within WorkspaceImpl.getObservationManager():\n\n    public ObservationManagerImpl createObservationManager(SessionImpl session, ItemManager itemMgr) {\n        return new ObservationManagerImpl(this, session, itemMgr);\n    }\n\nTo simplify the design I'd inline this method and rename ObservationManagerFactory to ObservationDispatcher to better reflect the one remaining responsibility.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-565",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Refactor ObservationManagerFactory",
    "systemSpecification": true,
    "version": ""
}