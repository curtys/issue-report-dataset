{
    "comments": [
        {
            "author": "Christophe Lombart",
            "body": "Fixed. From now,  the attribute annotation \"elementClassName\" is not required for typed collections. \n\nNow it is possible to define a collection based on an interface like the following example :\n\n@Node\npublic class EntityA {\n       \n       @Collection List<MyInterface> entityB;\n\n       ...\n}\n\n\n@Node\npublic interface MyInterface {\n   ...\n}",
            "date": "2009-01-18T09:07:54.796+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.5 branch in revision 743331.",
            "date": "2009-02-11T13:21:18.383+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "If a typed collection field is defined with an Interface as the type, the following exception is thrown when the main object is inserted : \n\norg.apache.jackrabbit.ocm.exception.JcrMappingException: Cannot load class interface [name of the interface];\n\nHere is a example : \n\n@Node\npublic class EntityA {\n       @Field(path=true) String path;\n       @Collection List<MyInterface> entityB;\n       ....\n}\n\nWhen inserting a new instance of EntityA with a not null entityB, the exception is thrown. \nA workaround is to add the elementClassName on the annotation @Collection. ex. : \n\n@Collection (elementClassName=MyInterface.class) List<MyInterface> entityB;\n\nelementClassName is used only for untyped collections but if you specify it for a typed collection, the ObjectContentManager will not use reflexion to check the collection class name. \n \nThis should be nice to avoid the usage of elementClassName for typed collections. \n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1889",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Incorrect support for java interfaces in typed collection fields",
    "systemSpecification": true,
    "version": "1.4, 1.5"
}