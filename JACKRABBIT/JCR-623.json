{
    "comments": [
        {
            "author": "Dominique Pfister",
            "body": "Initial commit: 471766\n\nFeatures still missing:\n\n- Automatic archival of journal log entries to save space\n- Using a database as backend for the journal",
            "date": "2006-11-06T16:09:56.000+0000",
            "id": 0
        },
        {
            "author": "Ian Boston",
            "body": "Question.\n\nDoes this feature include the situation where there are 3 or more nodes all writing to Jackrabbit.... or is it the use case where there is one master jackrabbit and a number of slave (read-only) jackrabbits ?\n\nMy understnading of JCR-169 was that it was asking for the former (is all writable).... but not a problem if this wont address that aspect.\n\nThanks",
            "date": "2006-11-07T13:29:56.000+0000",
            "id": 1
        },
        {
            "author": "Pankaj Gupta",
            "body": "Thanks for geting started on this issue. Its a high priority one for us and perhaps many other Jackrabbit users.\n\nCouple of questions:\n1) Is the search index in other clusters also synced up if each cluster has the index in its local disk? Or is it required to have the search index  in a common file system?\n2) Are the other clusters updated immediately? For example, if one cluster adds a new node, is it immediately visible to other sessions in other clusters, as is mandated by the JCR spec?\n\nThanks\n",
            "date": "2006-11-09T16:47:18.000+0000",
            "id": 2
        },
        {
            "author": "Dominique Pfister",
            "body": "I quickly gained the impression, that creating a file for every journal record could lead to serious problems because file systems are usually not very good in handling a lot of entries. I therefore changed the default file-based journal implementation to append records to one file until its size has passed some limit. Verified that this works\n\nFixed in revision 473383.",
            "date": "2006-11-10T16:33:04.000+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "Is this issue ready for resolution? The basic clustering stuff is in, so I suggest to resolve this issue as Fixed (Fix version 1.2) and file new issues for any specific problems that still may remain or come up.",
            "date": "2006-11-30T15:00:52.000+0000",
            "id": 4
        },
        {
            "author": "Dominique Pfister",
            "body": "Initial implementation available. New issues will be filed separately.",
            "date": "2006-11-30T15:51:56.000+0000",
            "id": 5
        },
        {
            "author": "Michael Singer",
            "body": "We did some tests with 3 clusternodes. We had problems with the following use case:\n\nJBoss-4.0.5-GA with latest JCA and latest Jackrabbit. Only Jackrabbit is configured for clustering, JBoss is running standalone on each clusternode.\nAll 3 clusternodes already have several jcr-nodes and an existing index-folder.\n2 nodes are running, the third node is stopped. Added a jcr-node on clusternode A, the new jcr-node is immediately visible on clusternode B (after a browser refresh of course).\n\nThen I start clusternode C which boots up normaly. I then load my testapp. Consoleoutput shows, that all jcr-nodes are loaded except the one added on clusternode A. It just stopps working there, I don't get an exception and no response in the browser window. If I delete the index-folder in the local workspace folder everything works fine.\n\nSo I suppose that item changes are not properly merged into existing index if a clusternode was down.\n\nI haven't had the time yet to dig into this.\n\nMaybe someone can confirm this behavior with another configuration?\n\nI will file a new jira issue if I know more about this...",
            "date": "2006-11-30T16:15:36.000+0000",
            "id": 6
        }
    ],
    "component": "jackrabbit-core",
    "description": "Implement basic clustering, i.e. make two or more repositories available at the same time,  allowing them to stay in sync with changes applied to only one of them.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-623",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Clustering",
    "systemSpecification": true,
    "version": ""
}