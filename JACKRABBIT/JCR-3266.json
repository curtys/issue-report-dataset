{
    "comments": [
        {
            "author": "Alex Deparvu",
            "body": "good catch, thanks for reporting Nick!\n\nI've also improved an existing test to check this info as well.\nFixed in revision 1303438.",
            "date": "2012-03-21T15:24:28.732+0000",
            "id": 0
        }
    ],
    "component": "",
    "description": "When running a query like below on an in-process repository (via TransientRepository) or via RMI access, a call to Row.getValues() only returns the last column selected:\n\n       SELECT property1, property2 FROM [nodetype]\n\nQueryResult.getColumnNames() returns the right set of columns.\n\nStepping through the code shows that org.apache.jackrabbit.core.query.lucene.join.AbstractRow has the implementation of getValues() - this creates a new Values array, then overwrites it multiple times in a for loop that iterates once per column. That doesn't sound like the desired behaviour.\n\nGetting values via individual calls to Row.getValue(\"property1\") gives the correct results.\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-3266",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR-SQL2 query with multiple columns in result only returns last column when using Row.getValues()",
    "systemSpecification": true,
    "version": "2.2.4, 2.4"
}