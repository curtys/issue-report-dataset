{
    "comments": [
        {
            "author": "David Rauschenbach",
            "body": "By the way, this same problem also occurs when the test is changed to perform a same-name reorder.\n\n\t\tfinal String NAME = \"nodeName\", PROPERTY = \"testSeq\";\n\t\t\n\t\t// Create folder 1 on server in root\n\t\tSession serverSession = login(repository, creds);\n\t\tNode serverRootNode = serverSession.getRootNode();\n\t\tNode serverFolder1 = serverRootNode.addNode(NAME, \"nt:unstructured\");\n\t\tserverFolder1.setProperty(PROPERTY, \"A\");\n\t\t\n\t\t// Create folder 2 on server in root\n\t\tNode serverFolder2 = serverRootNode.addNode(NAME, \"nt:unstructured\");\n\t\tserverFolder2.setProperty(PROPERTY, \"B\");\n\t\tserverSession.save();\n\t\t\n\t\t// Validate order\n\t\tassertEquals(1, serverFolder1.getIndex());\n\t\tassertEquals(2, serverFolder2.getIndex());\n\t\t\n\t\t// Perform reorder via client\n\t\tSession clientSession = login(clientRepository, creds);\n\t\tNode clientRootNode = clientSession.getRootNode();\n\t\tclientRootNode.orderBefore(NAME + \"[2]\", NAME + \"[1]\");\n\t\tclientSession.save(); <== Throws NPE\n\t\t\n\t\t// Verify move on server\n\t\tserverSession.refresh(false);\n\t\tNode firstServerNode = serverRootNode.getNode(NAME + \"[1]\");\n\t\tassertEquals(\"B\", firstServerNode.getProperty(PROPERTY).getString());\n",
            "date": "2007-09-14T07:29:43.696+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Fixed in revision: 576296\n\nThanks for reporting this issue.",
            "date": "2007-09-17T08:22:49.211+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-spi",
    "description": "Two folder nodes are created below root. From the root node, the 2nd folder is ordered before the first node. The request is batched up correctly, but upon save, NodeEntryImpl throws a NullPointerException in the first line of the completeTransientChanges method, because revertInfo.oldParent is null.\n\nTest code:\n\n\t\tfinal String FOLDER1 = \"folder1\", FOLDER2 = \"folder2\";\n\t\t\n\t\t// Create folder 1 on server in root\n\t\tSession serverSession = login(repository, creds);\n\t\tNode serverRootNode = serverSession.getRootNode();\n\t\tNode serverFolder1 = serverRootNode.addNode(FOLDER1, \"nt:folder\");\n\t\t\n\t\t// Create folder 2 on server in root\n\t\tNode serverFolder2 = serverRootNode.addNode(FOLDER2, \"nt:folder\");\n\t\tserverSession.save();\n\t\t\n\t\t// Validate order (TODO)\n\t\t\n\t\t// Perform reorder via client\n\t\tSession clientSession = login(clientRepository, creds);\n\t\tNode clientRootNode = clientSession.getRootNode();\n\t\tclientRootNode.orderBefore(FOLDER2, FOLDER1);\n\t\tclientSession.save(); <== Throws NPE\n\nCall Stack:\n\n    [junit] java.lang.NullPointerException\n    [junit]     at org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntryImpl.completeTransientChanges(NodeEntryImpl.java:1354)\n    [junit]     at org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntryImpl.access$1100(NodeEntryImpl.java:60)\n    [junit]     at org.apache.jackrabbit.jcr2spi.hierarchy.NodeEntryImpl$RevertInfo.statusChanged(NodeEntryImpl.java:1465)\n    [junit]     at org.apache.jackrabbit.jcr2spi.state.ItemState.setStatus(ItemState.java:257)\n    [junit]     at org.apache.jackrabbit.jcr2spi.state.NodeState.adjustNodeState(NodeState.java:554)\n    [junit]     at org.apache.jackrabbit.jcr2spi.state.NodeState.persisted(NodeState.java:276)\n    [junit]     at org.apache.jackrabbit.jcr2spi.state.ChangeLog.persisted(ChangeLog.java:135)\n    [junit]     at org.apache.jackrabbit.jcr2spi.WorkspaceManager.execute(WorkspaceManager.java:479)\n    [junit]     at org.apache.jackrabbit.jcr2spi.state.SessionItemStateManager.save(SessionItemStateManager.java:149)\n    [junit]     at org.apache.jackrabbit.jcr2spi.ItemImpl.save(ItemImpl.java:239)\n    [junit]     at org.apache.jackrabbit.jcr2spi.SessionImpl.save(SessionImpl.java:317)\n    [junit]     at TestWsNodeReorder.testReorderNodes(TestWsNodeReorder.java:72)\n\n\nI'm using an SPI I implemented, in conjunction with the jcr2spi and spi2jcr bridges, coupled with a back-end Jackrabbit in-memory filesystem. So there's always the possibility that node or property SPI calls inject errors and cause this downstream problem.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1131",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR2SPI NodeEntryImpl throws NPE during reorderNodes",
    "systemSpecification": true,
    "version": ""
}