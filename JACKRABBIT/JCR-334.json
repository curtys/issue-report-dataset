{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Committed a workaround fix in revision 383794.\n\nThe problem was, as pointed out by Peeter, that Maven 1.0.2 placed an older version (2.4.0) of the Xerces library in the class path before the version (2.6..2) used by Jackrabbit. The Xerces 2.4.0 version of the XMLSchemaLoader class does not have the loadURI() method available in the newer version.\n\nThe committed fix works around this problem by using the DOM3 implementation registry mechanism to get a reference to a correct XMLSchemaLoader instance. A nice feature of this fix is that it also removes the direct dependency to the org.apache.xerces.impl package.",
            "date": "2006-03-07T14:09:08.000+0000",
            "id": 0
        }
    ],
    "component": "maven",
    "description": "As reported on the mailing list by Ashley Martens:\n\n----\nC:\\apache\\jackrabbit-contrib\\nt-ns-util>maven\n __  __\n|  \\/  |__ _Apache__ ___\n| |\\/| / _` \\ V / -_) ' \\  ~ intelligent projects ~\n|_|  |_\\__,_|\\_/\\___|_||_|  v. 1.0.2\n\nAttempting to download jackrabbit-1.0-SNAPSHOT.jar.\nArtifact /org.apache.jackrabbit/jars/jackrabbit-1.0-SNAPSHOT.jar doesn't exists in remote repository, but it exists locally\nAttempting to download jackrabbit-commons-1.0-SNAPSHOT.jar.\nArtifact /org.apache.jackrabbit/jars/jackrabbit-commons-1.0-SNAPSHOT.jar doesn't exists in remote repository, but it exists locally\nbuild:start:\n\njava:prepare-filesystem:\n\njava:compile:\n   [echo] Compiling to C:\\apache\\jackrabbit-contrib\\nt-ns-util/target/classes\n   [javac] Compiling 1 source file to C:\\apache\\jackrabbit-contrib\\nt-ns-util\\target\\classes\nC:\\apache\\jackrabbit-contrib\\nt-ns-util\\src\\main\\java\\org\\apache\\jackrabbit\\util\\nodetype\\SchemaConverter.java:71: cannot resolve symbol\nsymbol  : method loadURI (java.lang.String)\nlocation: class org.apache.xerces.impl.xs.XMLSchemaLoader\n       XSModel xsModel = loader.loadURI(uri);\n                               ^\n1 error\n\nBUILD FAILED\nFile...... C:\\Documents and Settings\\ashleym\\.maven\\cache\\maven-java-plugin-1.5\\plugin.jelly\nElement... ant:javac\nLine...... 63\nColumn.... 48\nCompile failed; see the compiler error output for details.\nTotal time: 8 seconds\nFinished at: Mon Jan 02 10:40:47 EST 2006\n----\n\nPeeter Piegaze found out the problem:\n\n----\nI was able to build it without a problem using maven-1.1-beta-2 and JDK 1.4.2.\n\nHowever, it sounds to me like in your case maven has set up its\non-build classpath so that it sees the older xerces-2.4.0.jar before\nthe new xerxesImpl.-2.6.2.jar. Maven seems to download the old\nxerces-2.4.0 into its repository for internal use, while my code uses\nthe newer xerxesImpl-2.6.2.jar. The old jar overlaps class-wise with\nthe new one, but the new one implements the additional loadURI method\n(among others).\n\nI am not sure exactly why your maven build process is looking in the\nwrong jar. But that is what is doing, almost certainly.\n----\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-334",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "loadURI compile error with Maven 1.0.2",
    "systemSpecification": true,
    "version": ""
}