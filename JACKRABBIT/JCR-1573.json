{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Can you please post the complete configuration and the workspace.xml of the workspace your are using?\n\nWhat Lucene version are you using?",
            "date": "2008-05-07T12:27:50.109+0000",
            "id": 0
        },
        {
            "author": "David McKitterick",
            "body": "Hi Marcel,\n\nI've attached my Jackrabbit configuration file. My Lucene version is 2.2.0 and Jackrabbit core 1.4.2. Please let me know if you need any more information.\n\nThanks,\nDavid.\n",
            "date": "2008-05-07T13:10:47.681+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "The only thing I noticed while quickly looking through the repository.xml is the hardcoded url for the workspace persistence manager. The url should usually include the ${wsp.home} or ${wsp.name} parameter.\n\nCan you please check if the issue also occurs with a default configuration? Thanks.",
            "date": "2008-05-09T09:02:36.460+0000",
            "id": 2
        },
        {
            "author": "David McKitterick",
            "body": "The hardcoded url for the persistence manager points to a specific jdbc database location, where all the content is stored, i.e.\n<param name=\"url\" value=\"jdbc:postgresql://localhost/crs_xml_repo\"/>\n\nI will try the default configuration again, but as I only increased some of the default values to improve the performance and scalability then I doubt that this is the problem.\n\nThanks,\nDavid.",
            "date": "2008-05-09T09:31:47.565+0000",
            "id": 3
        },
        {
            "author": "David McKitterick",
            "body": "Hi Marcel,\n\nI have used the default configuration but I am still getting this error. Here is a snippet of my jackrabbit debug logs when the error occurs. Does anything here seem strange to you?\n\nDEBUG http-8080-1 org.springmodules.jcr.SessionFactoryUtils - Opening JCR Session\nDEBUG http-8080-1 org.apache.jackrabbit.core.state.MLRUItemStateCache - org.apache.jackrabbit.core.state.MLRUItemStateCache@1cdfd19 size=1, 1864/4194304\nDEBUG http-8080-1 org.apache.jackrabbit.core.state.MLRUItemStateCache - org.apache.jackrabbit.core.state.MLRUItemStateCache@1cdfd19 size=1, 1864/4194304\nDEBUG http-8080-1 org.apache.jackrabbit.core.state.MLRUItemStateCache - org.apache.jackrabbit.core.state.MLRUItemStateCache@18f7701 size=1, 1264/4194304\nDEBUG http-8080-1 org.apache.jackrabbit.core.state.MLRUItemStateCache - org.apache.jackrabbit.core.state.MLRUItemStateCache@18f7701 size=1, 1264/4194304\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - created item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - created item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - caching item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - caching item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.QueryImpl - Executing query: \n+ Root node\n+ Select properties: *\n  + PathQueryNode\n    + LocationStepQueryNode:  NodeTest={http://release2.iclassproject.com/}task Descendants=true Index=NONE\n\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.QueryImpl - Executing query: \n+ Root node\n+ Select properties: *\n  + PathQueryNode\n    + LocationStepQueryNode:  NodeTest={http://release2.iclassproject.com/}task Descendants=true Index=NONE\n\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.QueryResultImpl - getResults(2147483647)\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.QueryResultImpl - getResults(2147483647)\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.AbstractIndex - closing IndexWriter.\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.AbstractIndex - closing IndexWriter.\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.AbstractIndex - closing IndexWriter.\nDEBUG http-8080-1 org.apache.jackrabbit.core.query.lucene.AbstractIndex - closing IndexWriter.\nDEBUG http-8080-1 org.springmodules.jcr.SessionFactoryUtils - Closing JCR Session\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - invalidated item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - invalidated item cafebabe-cafe-babe-cafe-babecafebabe\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - removing item cafebabe-cafe-babe-cafe-babecafebabe from cache\nDEBUG http-8080-1 org.apache.jackrabbit.core.ItemManager - removing item cafebabe-cafe-babe-cafe-babecafebabe from cache\n\n...\n\nDEBUG http-8080-1 org.apache.axis2.transport.http.AxisServlet - org.apache.axis2.AxisFault: attempt to access a deleted document\n\n\n\nAlso, I think it might have something to do with my approach for updated entries. Here is my code from my update method:\n\nNode root = session.getRootNode();\n\t                \nNode node = root.getNode(parentNode+\"/\"+uuid+\"/\"+ownerId);\n\nString ownerType = node.getProperty(CRSConstants.ownerTypeProperty).getString();\n\nnode.checkout();\n\t            \t\nNodeIterator iter = node.getNodes();\n\n// remove existing child nodes before adding new node... is there a better to do this?\t            \t\nwhile(iter.hasNext()) {\n\t ((Node)iter.next()).remove();\n}\n\ntry {\n\tsession.importXML(\"/\"+parentNode+\"/\"+uuid+\"/\"+ownerId, ip,   ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW);\n} catch (IOException e) {\n\tlogger.error(\"Error thrown while importing xml\", e);\n}\n\t                \nnode.setProperty(CRSConstants.ownerTypeProperty, ownerType);\n\t                \nsession.save();\nnode.checkin();\n\n\nAny thoughts on this?\n\nThanks,\nDavid.",
            "date": "2008-05-09T17:32:17.407+0000",
            "id": 4
        },
        {
            "author": "David Moss",
            "body": "Hi,\n\nI'm experiencing the same issue with Jackrabbit 1.4.\n\nI call:\n\n     QueryManager qm = session.getWorkspace().getQueryManager();\n     Query query = qm.createQuery(searchTerm, Query.XPATH);\n     QueryResult result = query.execute();\n\nAnd get the exception:\n\n     java.lang.IllegalArgumentException: attempt to access a deleted document\n     at org.apache.lucene.index.SegmentReader.document(SegmentReader.java:331)\n     at org.apache.lucene.index.FilterIndexReader.document(FilterIndexReader.java:130)\n     at org.apache.lucene.index.IndexReader.document(IndexReader.java:437)\n     at org.apache.jackrabbit.core.query.lucene.CachingIndexReader.getParent(CachingIndexReader.java:107)\n     at org.apache.jackrabbit.core.query.lucene.SharedIndexReader.getParent(SharedIndexReader.java:78)\n     at org.apache.jackrabbit.core.query.lucene.ReadOnlyIndexReader.getParent(ReadOnlyIndexReader.java:141)\n     at org.apache.jackrabbit.core.query.lucene.CachingMultiIndexReader.getParentDocId(CachingMultiIndexReader.java:112)\n     at org.apache.jackrabbit.core.query.lucene.SearchIndex$CombinedIndexReader.getParent(SearchIndex.java:1202)\n     at org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.isValid(DescendantSelfAxisQuery.java:347)\n     at org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.next(DescendantSelfAxisQuery.java:261)\n     at org.apache.lucene.search.Scorer.score(Scorer.java:48)\n     at org.apache.jackrabbit.core.query.lucene.ChildAxisQuery$ChildAxisScorer.calculateChildren(ChildAxisQuery.java:317)\n     at org.apache.jackrabbit.core.query.lucene.ChildAxisQuery$ChildAxisScorer.next(ChildAxisQuery.java:268)\n     at org.apache.lucene.search.Scorer.score(Scorer.java:48)\n     at org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.collectContextHits(DescendantSelfAxisQuery.java:305)\n     at org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.next(DescendantSelfAxisQuery.java:254)\n     at org.apache.lucene.search.Scorer.score(Scorer.java:48)\n     at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:146)\n     at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:113)\n     at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:74)\n     at org.apache.lucene.search.Hits.<init>(Hits.java:53)\n     at org.apache.lucene.search.Searcher.search(Searcher.java:46)\n     at org.apache.lucene.search.Searcher.search(Searcher.java:38)\n     at org.apache.jackrabbit.core.query.lucene.SearchIndex.executeQuery(SearchIndex.java:660)\n     at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.executeQuery(QueryResultImpl.java:242)\n     at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.getResults(QueryResultImpl.java:290)\n     at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.<init>(QueryResultImpl.java:192)\n     at org.apache.jackrabbit.core.query.lucene.QueryImpl.execute(QueryImpl.java:138)\n     at org.apache.jackrabbit.core.query.QueryImpl.execute(QueryImpl.java:176)\n     at org.apache.jackrabbit.rmi.server.ServerQuery.execute(ServerQuery.java:58)\n     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n     at java.lang.reflect.Method.invoke(Method.java:585)\n     at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:294)\n     at sun.rmi.transport.Transport$1.run(Transport.java:153)\n     at java.security.AccessController.doPrivileged(Native Method)\n     at sun.rmi.transport.Transport.serviceCall(Transport.java:149)\n     at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:466)\n     at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:707)\n     at java.lang.Thread.run(Thread.java:595)\n     at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:247)\n     at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:223)\n     at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:126)\n     at org.apache.jackrabbit.rmi.server.ServerQuery_Stub.execute(Unknown Source)\n     at org.apache.jackrabbit.rmi.client.ClientQuery.execute(ClientQuery.java:63)\n\nThis is a strange one because my system deletes documents that have 'expired' on a regular basis and until recently this has not been a problem.  I have recently updated to 1.4 from 1.3.? but actually it's been working fine with 1.4 for some time now as well - this is the first time I've experienced this problem.\n\nAs far as I'm aware I'm using a completely standard workspace.xml (i.e. no changes to persistence manager etc).",
            "date": "2008-05-14T10:30:57.919+0000",
            "id": 5
        },
        {
            "author": "Marcel Reutegger",
            "body": "David, can you please check that you are using lucene 2.2.0? Jackrabbit currently does not work with lucene versions >= 2.3.x",
            "date": "2008-07-04T14:06:46.813+0000",
            "id": 6
        },
        {
            "author": "David McKitterick",
            "body": "Hi Marcel,\n\nYes, I converted back to Lucene 2.2.0 and used the default Jackrabbit configurations. The problem still remained so I did some more testing. I discovered that the problem was occurring during my update process... here I would remove a particular node and then replace it with the updated version by importing the XML. It seems the lucene index did not pick up this remove/import action and then when a query was performed it would try to retrieve the removed node... therefore throwing the exception. I resolved this by adding my this extra line after my update process:\n\nnode.update(session.getWorkspace().getName());\n\nThis seemed to update the index and the exception has not re-occurred.\n\nI'm guessing there probably is a better way to perform updates but it was not obvious to me from the documentation available.\n\nAnyway, thanks for your help.\n\nBest regards,\nDavid.\n",
            "date": "2008-07-04T14:48:34.033+0000",
            "id": 7
        },
        {
            "author": "Marcel Reutegger",
            "body": "> node.update(session.getWorkspace().getName());\n\nif that node is in the workspace which is returned by session.getWorkspace().getName() then this is actually a no-op.\n\nThere must be something else you changed, which made the indexing work again correctly. Are you sure that reverting\nback to Lucene 2.2 did not resolve the issue? You probably also have to re-index your workspaces because Lucene is not able to read index files from a newer version.",
            "date": "2008-07-07T08:51:11.726+0000",
            "id": 8
        },
        {
            "author": "David McKitterick",
            "body": "My initial thought was that it did not have a positive affect but perhaps you are right that this issue was resolved with the Lucene version change to 2.2.0. I'll let you know if I have any other similar problems.\n\nMany thanks,\nDavid.",
            "date": "2008-07-07T09:01:09.770+0000",
            "id": 9
        },
        {
            "author": "Kurz Wolfgang",
            "body": "Hello everyone,\n\ni am having the same problem.\n\nThe problem started showing up when I started to delete subnodes in a\nnode that I wanted to update with new subnodes.\n\nHas anyone found a solution to this?\n\nDo I have to update the lucene search index manually or something?\n\n\nWolfgang\n\n\n\n",
            "date": "2008-07-30T12:10:33.092+0000",
            "id": 10
        },
        {
            "author": "Marcel Reutegger",
            "body": "David, while going though this issue again, I noticed that the query configuration you posted might be incorrect. Can you please confirm that the XML fragment you posted is only for the repository wide index (the one at the very end in repository.xml) and not from a workspace.xml? In a workspace.xml file a search index configuration should rather look like this:\n\n        <SearchIndex class=\"org.apache.jackrabbit.core.query.lucene.SearchIndex\">\n            <param name=\"path\" value=\"${wsp.home}/index\"/>\n        </SearchIndex>\n\nyours had '${rep.home}/repository/index' for the path parameter.\n\nWolfgang, please check your repository.xml and workspace.xml files as well and make sure you are using Lucene 2.2?\n\nThanks for your feedback.",
            "date": "2008-07-30T13:31:06.512+0000",
            "id": 11
        },
        {
            "author": "Michele Meomartino",
            "body": "Hi everyone,\nI'm having the same problem while searching for nodes with xPath in my Junit4 test case.\nIn this test I add some node to the repository-tree and then search with this xPath query:\n\n         //catalog/books//*\n\nthen, after each test in @After methods, I provide to clean the repository tree and then saving session.\n\n        @After\n\tpublic void tearDownTest() {\n\t\ttry {\n\t\t\tsession.getRootNode().getNode(\"catalog\").remove();\n\t\t\tsession.save();\n\t\t}\n\t\tcatch (RepositoryException e) {\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\nThe first time, during creation of repository, everything gones ok. But at  the next run i get this exception\n\njava.lang.IllegalArgumentException: attempt to access a deleted document\n\tat org.apache.lucene.index.SegmentReader.document(SegmentReader.java:331)\n\tat org.apache.lucene.index.FilterIndexReader.document(FilterIndexReader.java:130)\n\tat org.apache.jackrabbit.core.query.lucene.CachingIndexReader.getParent(CachingIndexReader.java:107)\n\tat org.apache.jackrabbit.core.query.lucene.SharedIndexReader.getParent(SharedIndexReader.java:78)\n\tat org.apache.jackrabbit.core.query.lucene.ReadOnlyIndexReader.getParent(ReadOnlyIndexReader.java:141)\n\tat org.apache.jackrabbit.core.query.lucene.CachingMultiIndexReader.getParentDocId(CachingMultiIndexReader.java:112)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex$CombinedIndexReader.getParent(SearchIndex.java:1234)\n\tat org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.isValid(DescendantSelfAxisQuery.java:347)\n\tat org.apache.jackrabbit.core.query.lucene.DescendantSelfAxisQuery$DescendantSelfAxisScorer.next(DescendantSelfAxisQuery.java:261)\n\tat org.apache.lucene.search.Scorer.score(Scorer.java:48)\n\tat org.apache.jackrabbit.core.query.lucene.ChildAxisQuery$ChildAxisScorer.calculateChildren(ChildAxisQuery.java:317)\n\tat org.apache.jackrabbit.core.query.lucene.ChildAxisQuery$ChildAxisScorer.next(ChildAxisQuery.java:268)\n\tat org.apache.lucene.search.Scorer.score(Scorer.java:48)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:146)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:113)\n\tat org.apache.lucene.search.Hits.getMoreDocs(Hits.java:74)\n\tat org.apache.lucene.search.Hits.<init>(Hits.java:53)\n\tat org.apache.lucene.search.Searcher.search(Searcher.java:46)\n\tat org.apache.lucene.search.Searcher.search(Searcher.java:38)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex.executeQuery(SearchIndex.java:692)\n\tat org.apache.jackrabbit.core.query.lucene.QueryResultImpl.executeQuery(QueryResultImpl.java:242)\n\tat org.apache.jackrabbit.core.query.lucene.QueryResultImpl.getResults(QueryResultImpl.java:290)\n\tat org.apache.jackrabbit.core.query.lucene.QueryResultImpl.<init>(QueryResultImpl.java:192)\n\tat org.apache.jackrabbit.core.query.lucene.QueryImpl.execute(QueryImpl.java:138)\n\tat org.apache.jackrabbit.core.query.QueryImpl.execute(QueryImpl.java:176)\n\nthe strange thing is that if i change the xPath query from\n\n        //catalog/books//*\n\ninto\n \n        //catalog/books//element(*, somePrimaryNodeType)\n\nI don't get this exception anymore. \nCan anyone shed any light on this issue\n",
            "date": "2008-10-21T14:02:32.841+0000",
            "id": 12
        },
        {
            "author": "Marcel Reutegger",
            "body": "Can you please provide the complete test case or a description of how to reproduce the exception? Thank you.",
            "date": "2008-10-21T14:36:43.221+0000",
            "id": 13
        },
        {
            "author": "Michele Meomartino",
            "body": "The classes are:\n\n// TestClass\n\n       ContentRepository cr;\n\n       @BeforeClass\n       Initialize(){\n                //initialization of contentRepository class\n               cr= new ContentRepository()\n               ....\n       }\n\n        @Test\n       public void testGetNodes() throws Exception {\n            \n                String catalogBookPath = session.getRootNode().getNode(\"catalog\").getNode(\"book\").getPath();\n\n                BookNode bookNode = new BookNode();\n                bookNode.setName(\"mybook\");\n\t\t\n                cr.addNode(catalogBookPath, bookNode);\n\n                List<BookNode> createdNode = cr.getNodes(\"//catalog/books//*\");                  ..... exception\n        }\n\n\n        @After\n        public void tearDownTest() {\n                try {\n                        session.getRootNode().getNode(\"catalog\").remove();\n                        session.save();\n                }\n                catch (RepositoryException e) {\n                        e.printStackTrace();\n                }\n        } \n\n\n// class ContentRepository\n\n......\n        public void addNode(string bookPath, BookNode bookNode){\n                try {\n                         Node parentNode = session.getRootNode().getNode(bookPath);     \n                         parentNode.addNode(bookNode.getName(), bookNode.getNodeType());\n                }\n                catch (RepositoryException e) {\n                        e.printStackTrace();\n                }\n        }\n\n         public List<BookNode> getNodes(String queryXPath){\n                        QueryManager queryManager = session.getWorkspace().getQueryManager();\n                        Query query = queryManager.createQuery(xPath, Query.XPATH);\n                        QueryResult result = query.execute();       // exception\n                        .......\n         }\n.......\n\nHope is enough.\nThank you",
            "date": "2008-10-21T15:04:26.689+0000",
            "id": 14
        },
        {
            "author": "Marcel Reutegger",
            "body": "Fixed in revision: 709207\n\nThe CombinedIndexReader in SearchIndex did not add the offset of the sub reader when resolving a ForeignSegmentDocId.\n\nJukka, can you please merge this fix into the 1.5 branch? Thanks.",
            "date": "2008-10-30T16:59:42.894+0000",
            "id": 15
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.5 branch in revision 713996.",
            "date": "2008-11-14T13:15:25.080+0000",
            "id": 16
        },
        {
            "author": "Marcel Reutegger",
            "body": "Merged changes into 1.4 branch in revision: 748161",
            "date": "2009-02-26T14:30:29.828+0000",
            "id": 17
        }
    ],
    "component": "jackrabbit-core, query",
    "description": "Hi,\n\nI am getting an exception when trying to execute a query through the (Spring) JcrTemplate class....using the following code:\nQueryManager qMgr = session.getWorkspace().getQueryManager();\nQueryResult result = qMgr.createQuery(xpathQuery, Query.XPATH ).execute();\n\nThe exception is thrown at the second line and is as follows:\n\n[DEBUG] << \"[0x9]at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:113)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:74)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.lucene.search.Hits.&lt;init>(Hits.java:53)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.lucene.search.Searcher.search(Searcher.java:46)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.lucene.search.Searcher.search(Searcher.java:38)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.lucene.SearchIndex.executeQuery(SearchIndex.java:660)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.executeQuery(QueryResultImpl.java:242)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.getResults(QueryResultImpl.java:290)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.lucene.QueryResultImpl.&lt;init>(QueryResultImpl.java:192)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.lucene.QueryImpl.execute(QueryImpl.java:138)[\\n]\"\n[DEBUG] << \"[0x9]at org.apache.jackrabbit.core.query.QueryImpl.execute(QueryImpl.java:176)[\\n]\"\n[DEBUG] << \"[0x9]at com.intel.cds.cr.jcr.JcrManager$5.doInJcr(JcrManager.java:363)[\\n]\"\n[DEBUG] << \"[0x9]at org.springmodules.jcr.JcrTemplate.execute(JcrTemplate.java:76)[\\n]\"\n[DEBUG] << \"[0x9]at org.springmodules.jcr.JcrTemplate.execute(JcrTemplate.java:108)[\\n]\"\n[DEBUG] << \"[0x9]... 19 more[\\n]\"\n[DEBUG] << \"</Exception></detail></soapenv:Fault></soapenv:Body></soapenv:Envelope>\"\norg.apache.axis2.AxisFault: attempt to access a deleted document\n\tat org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(Utils.java:486)\n\tat org.apache.axis2.description.OutInAxisOperationClient.handleResponse(OutInAxisOperation.java:343)\n\tat org.apache.axis2.description.OutInAxisOperationClient.send(OutInAxisOperation.java:389)\n\tat org.apache.axis2.description.OutInAxisOperationClient.executeImpl(OutInAxisOperation.java:211)\n\tat org.apache.axis2.client.OperationClient.execute(OperationClient.java:163)\n\n\nMy Jackrabbit/Lucene configuration is as follows:\n\n<SearchIndex class=\"org.apache.jackrabbit.core.query.lucene.SearchIndex\">\n        <param name=\"path\" value=\"${rep.home}/repository/index\"/>\n        \n        <param name=\"useCompoundFile\" value=\"false\"/>\n        <param name=\"mergeFactor\" value=\"5\"/>\n        <param name=\"cacheSize\" value=\"10000\"/>\n        <param name=\"respectDocumentOrder\" value=\"false\"/>  \n  </SearchIndex>\n\nIs this a configuration issue or a bug?\n\nThanks,\nDavid.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1573",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Lucene Query Exception: 'attempt to access a deleted document'",
    "systemSpecification": true,
    "version": "core 1.4.2"
}