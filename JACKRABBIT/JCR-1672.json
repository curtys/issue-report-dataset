{
    "comments": [
        {
            "author": "Tobias Bocanegra",
            "body": "i would rather add the isExternal() method to the interface. 'local' is already occupied by the listener registration and means that only local-events (i.e. this session) should be observed.",
            "date": "2008-07-07T21:37:48.635+0000",
            "id": 0
        },
        {
            "author": "Carsten Ziegeler",
            "body": "Yes, makes sense.",
            "date": "2008-07-08T05:51:32.986+0000",
            "id": 1
        },
        {
            "author": "Carsten Ziegeler",
            "body": "This adds the local event listener interface to jackrabbit",
            "date": "2008-07-15T09:23:17.326+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "Applied patch in revision: 677261",
            "date": "2008-07-16T12:38:48.000+0000",
            "id": 3
        },
        {
            "author": "Marcel Reutegger",
            "body": "Also affects jackrabbit-core.",
            "date": "2008-07-16T12:39:11.623+0000",
            "id": 4
        },
        {
            "author": "Carsten Ziegeler",
            "body": "As discussed in the mailing list, it's better to have the isExternal() method on an extension of the event interface.",
            "date": "2008-07-23T12:47:52.421+0000",
            "id": 5
        },
        {
            "author": "Carsten Ziegeler",
            "body": "New patch adding the ExtendedEvent interface and the isExternal() method.",
            "date": "2008-07-23T12:59:51.967+0000",
            "id": 6
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks! Patch applied in revision 679735.\n\nIn revision 679741 I renamed the interface to JackrabbitEvent for consistency with the previous JackrabbitSomething naming pattern for Jackrabbit-specific extensions.\n\nAbout the naming of the method, IMHO isExternal() is still semantically a bit too close (the logical opposite) to the \"local\" flag in listener registration. How about isClusterLocal()?",
            "date": "2008-07-25T12:26:35.749+0000",
            "id": 7
        },
        {
            "author": "Jukka Zitting",
            "body": "Also, I reverted the original patch (revision 677261, the LocalEventListener interface) in revision 679750.\n\nWe can reintroduce the interface once we can leverage the extra information it gives to the observation manager, but until that it's better to avoid having two different mechanisms for the same functionality.",
            "date": "2008-07-25T12:36:40.613+0000",
            "id": 8
        },
        {
            "author": "Carsten Ziegeler",
            "body": "I'm not sure what the best wording might be, but I think isExternal is \"ok\" - for me the opposite of isLocal would be isRemote :)",
            "date": "2008-07-28T07:04:52.768+0000",
            "id": 9
        },
        {
            "author": "Tobias Bocanegra",
            "body": "IMO isExternal() is a good choice, since it not entirely tied to a cluster setup. It just specifies that the\nunderlying data was changed but the modification did not go through 'this' repository. theoretically one could modify the values in the DB directly and then send such an event (which is of course discouraged :-).",
            "date": "2008-07-28T09:02:28.986+0000",
            "id": 10
        },
        {
            "author": "Carsten Ziegeler",
            "body": "So I think we can close this bug.",
            "date": "2008-07-29T07:24:10.363+0000",
            "id": 11
        },
        {
            "author": "Jukka Zitting",
            "body": "Agreed. Resolving as Fixed.",
            "date": "2008-07-29T08:23:58.429+0000",
            "id": 12
        }
    ],
    "component": "jackrabbit-api, jackrabbit-core",
    "description": "when a repository cluster is used, it seems that a common problem many people have is to detect if an observation event is send because of changes on the local instance or a remote instance of the cluster.\n\nThis is especially important if you want to do post processing of data\nbased on observation (the post processing should only be done by one instance in the cluster).\n\nA current solution is to cast the jcr event object to the EventImpl of jackrabbit core which is obviously not a nice solution :)\n\nSo what about adding an event interface to jackrabbit api which extends the jcr event interface and adds the isLocal() method? ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1672",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Adding Event interface and isLocal()",
    "systemSpecification": true,
    "version": "1.4"
}