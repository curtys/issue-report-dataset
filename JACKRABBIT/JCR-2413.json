{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Proposed fix.",
            "date": "2009-11-30T10:33:12.414+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Applied patch in revision: 885411",
            "date": "2009-11-30T13:06:55.230+0000",
            "id": 1
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "Tagged for 1.6.3 for backporting. Will take the patch without java5 syntax",
            "date": "2010-06-08T09:14:19.974+0000",
            "id": 2
        },
        {
            "author": "Claus K\u00f6ll",
            "body": "Commited in rev 952582 to 1.6 branch.",
            "date": "2010-06-08T09:24:10.707+0000",
            "id": 3
        }
    ],
    "component": "jackrabbit-core",
    "description": "Happens when the indexing queue is checked while creating an initial index. This is probably a regression caused by JCR-2035.\n\nCaused by: org.apache.lucene.store.AlreadyClosedException: this Directory is closed\n        at org.apache.lucene.store.Directory.ensureOpen(Directory.java:220)\n        at org.apache.lucene.store.FSDirectory.getFile(FSDirectory.java:533)\n        at org.apache.jackrabbit.core.query.lucene.directory.FSDirectoryManager$FSDir.list(FSDirectoryManager.java:149)\n        at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:533)\n        at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:115)\n        at org.apache.lucene.index.IndexReader.open(IndexReader.java:316)\n        at org.apache.lucene.index.IndexReader.open(IndexReader.java:263)\n        at org.apache.jackrabbit.core.query.lucene.AbstractIndex.getIndexReader(AbstractIndex.java:245)\n        at org.apache.jackrabbit.core.query.lucene.AbstractIndex.removeDocument(AbstractIndex.java:225)\n        at org.apache.jackrabbit.core.query.lucene.PersistentIndex.removeDocument(PersistentIndex.java:90)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex$DeleteNode.execute(MultiIndex.java:1952)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.executeAndLog(MultiIndex.java:1085)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.checkIndexingQueue(MultiIndex.java:1308)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.createIndex(MultiIndex.java:1177)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.createIndex(MultiIndex.java:1191)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.createIndex(MultiIndex.java:1191)\n        at org.apache.jackrabbit.core.query.lucene.MultiIndex.createIndex(MultiIndex.java:1191)\n[...]\n\nI assume there is an index merge happening at the same time that closes index segments.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2413",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "AlreadyClosedException on initial index creation",
    "systemSpecification": true,
    "version": "2.0-beta3"
}