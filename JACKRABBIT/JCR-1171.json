{
    "comments": [
        {
            "author": "christian",
            "body": "security related extensions to api",
            "date": "2007-10-10T17:32:09.558+0000",
            "id": 0
        },
        {
            "author": "christian",
            "body": "changes to core necessary for adding security management",
            "date": "2007-10-10T17:33:10.280+0000",
            "id": 1
        },
        {
            "author": "christian",
            "body": "suggested implementation of User- and Permission-Management",
            "date": "2007-10-10T17:34:07.681+0000",
            "id": 2
        },
        {
            "author": "angela",
            "body": "hi christian\n\nthanks a lot for that patches. from what i have seen so far (just taking a first glance at it), your work will fit quite nicely into the access control management as it is planned for jcr283, which i recently started to implemented for jackrabbit. \n\nthe only that i just happen to see and that is not totally compatible with the jsr 283 access control are the\n'actions'. In fact jsr283 uses the term actions for the general permission check on the Session interface\nbut for the access control discovery and management is defines 'Privilege' (s). \nAnd the actions are somewhat different from the predefined privileges. From what i've seen your are - in jsr 283 terms -dealing with privileges and i hope your are fine, if that's going to change a bit once jackrabbit\nis the jsr 283 reference implementation.\n\nmore feedback to come as soon as i take a closer look at it.\nthanks & gruss",
            "date": "2007-10-11T08:45:55.948+0000",
            "id": 3
        },
        {
            "author": "Felix Meschberger",
            "body": "In this case, I would strongly suggest to modifiy the patch to comply with JSR-283. I don't think it would be a good idea to integrate it as is and later have to change a lot.\n\nNot sure, but would we have to vote on this contribution given its size ?",
            "date": "2007-10-11T18:04:05.852+0000",
            "id": 4
        },
        {
            "author": "angela",
            "body": "hi felix,\n\n> In this case, I would strongly suggest to modifiy the patch to comply with JSR-283. \n> I don't think it would be a good idea to integrate it as is and later have to change a lot.\n\nfrom what i have seen at a first glance, i don't think that there is need for lots of changes.\nin any case i will update this issue as soon as i'm through and list all things, that would from my\npoint of view conflict with the jsr 283 access control section.\n\nbe asserted that i don't want to do the integration work twice :)\n\nangela",
            "date": "2007-10-11T18:36:08.405+0000",
            "id": 5
        },
        {
            "author": "angela",
            "body": "unordered and incomplete list of notes and comments based on my recent work on JSR 283 security features.",
            "date": "2008-03-07T17:31:50.558+0000",
            "id": 6
        },
        {
            "author": "angela",
            "body": "committed initial (incomplete) version",
            "date": "2008-03-19T15:46:08.991+0000",
            "id": 7
        },
        {
            "author": "angela",
            "body": "scheduled for 1.5",
            "date": "2008-03-19T15:46:37.036+0000",
            "id": 8
        }
    ],
    "component": "security",
    "description": "Working with a Jackrabbit based appliction I had to extend its security handling.\nThe aim of this extension has been to allow for a eitable resource based authorization.\nThe solution ended up in beeing plugable and extendable.\nAs there have been some questions in the Jackrabbit Developper-list about custom implementation of security or the management of privileges in Jackrabbit, I like to suggest my implementation as contribution with attached patches. \n\nBelow you can find some high-level explanation of the contained files and concepts\n\nI hope the prove to be usable and enhance this great repository.\nI welcome your feed-back and like to thank for your kind inspection\n\nRegards\nChristian Keller\n\nThe patch contains the following:\n=========================\n\n1) API [jackrabbit-core-changes.20071010.patch]\n-------------------------------------------------------------------\nAPI which allows to implement and configure a mechanisms for Authentication and Authorization. \nThe API is ACL- and Principal-based.\nACL and Principals Management is independent of the JCR api, to allow implementations to use different back-end systems like a Directory Server.\n\n2) Changes to current core [jackrabbit-core-changes.20071010.patch]\n-----------------------------------------------------------------------------------------------\nSome small changes have been necessary to core to enable configuration and access of Management, like session access to UserManager.\n\n3) Implementation [jackrabbit-core-implementation.20071010.patch]\n-----------------------------------------------------------------------------------------------\nAdditionally an implemenation is contained. It is not dependent on any back-end system, and may therefore be used as a default.\n\n\nDescription:\n==========\nThe extensions hook into Jackrabbit bei implementations of the Intefaces: AccessManager and LoginModule. \nAdditionally there are changes for configuration, set-up and access of the used Object.\n\nThe patch extends the API, in order to allow client inspections of Users and Permission. These are contained in the api.patch\n\nSee a short Introduction below:\n=========================\n\nThe Security extensions of this Patch contain both, Authentication and Authorization extensions for which the follwoing two modells are introduced:\n\nI) The Authorizable\n----------------------------\nThese are User's and Groups of Users. Users can authenticate. \nAuthentication in Jackrabbit is done by LoginModules which issue Principals as result of an Authentication.\nThe Users are the objects which can be represented by such an Principal\nThey are therfore are the base for the Authorization.\n\nII) The ACL\n----------------\nThe ACL is the Policy for Authorziation. \nThe ACL grants or denies a Principal Privileges which are called Actions.\n\nAdditional ther is a Management for Principals:\n\nThe Principal is the link between User and permission.\nA User may related to multiple Principals. As this dependes on the LoginModules verfiying the Idendity of the login-attemp.\nThe LoginModules may expose their Principals to the Repository via a Provider interface, to allow for usage in ACEs.\n\nAll Modells and their Managing Classes API's are abstracted from the fact, that they are used in a JC-Repository. Aka there is no reference to javax.jcr.Items, Sessions etc.\nThis should allow to implement both for external sources for both without imposing any JCR specific methods. Taken an LDAP as UserBase for example.\n\nThe managing classes are UserManger, PrincpalManager and ACLManager. \nThey are set-up and maintained by a repsoitory singular SecurityManger. \nSession specific versions of this Managers are exposed via Session.\n\nPrincipalManger and ACLManger are feed by one to multiple Providers. \nPrincipalProviders may exist per LoginModule, ACLProvider per Workspace.\n\nAuthentication:\n--------------------\nThe User will be used by the LoginModule. It will be resolved based on the given Credentials. If the Credentials can be validated, the User will be used to resolve Principals according its Group-Membership. As a result the Session's Subject will be extended by this principals.\n\nAuthorization:\n-------------------\nThe ACL will be use be an Implementation of the AccessManager-Interface\nAn ACLManger relates Items to ACLs and the ACL evaluates the Permission for the current Subject's Principals.\n\nDefault Implementation\n===================\nThe Default Implementation uses the Repository itself to store its security data.\nThe Users are stored within a dedicated workspace. \nThe ACL are attached to the Nodes they relate to.\nThe ACLs are inherited along the Item-Hierarchy.\nThe Principals are taken from the Authorables.\n\nConfiguration\n===========\nThe LoginModules may declare their PrincipalProvider class via a property key with the name \"principal_provider.class\"\n\nThe Workspace specific ACL Providers may be added via a configuration element in Worskspace.xml, called WorkspaceSecurity.\nA Factory class can be configured there.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1171",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Contribute Pluggable Permission and User Management to Jackrabbit",
    "systemSpecification": true,
    "version": "1.4"
}