{
    "comments": [
        {
            "author": "Nicolas Toper",
            "body": "It is my first patch ever ;) Please be indulgent. Tell me if I did it right.",
            "date": "2006-06-26T19:17:39.000+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "some thoughts:\n- why needs BackupConfig.init() the repositoryimpl ? i would do a Config.getBackup(repo) instead.\n- you don't need to call super() in the Backup class, since it extends from Object.\n- if config creates backup, why do you need to pass config to save() ? (and why not passing one to restore?)\n- if config.getBackup() returns a Backup, why does RepositoryImpl.getBackupRepository() return a BackupRepository ?\n\n",
            "date": "2006-06-27T00:11:21.000+0000",
            "id": 1
        },
        {
            "author": "Tobias Bocanegra",
            "body": "btw: patch is perfect :-) (except, that it could be relative to the jackrabbit directory)",
            "date": "2006-06-27T00:12:40.000+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Looks good. Once you're done fixing the issues mentioned here and on the ML, I'll be happy to merge the changes to the svn trunk.",
            "date": "2006-06-27T16:09:32.000+0000",
            "id": 3
        },
        {
            "author": "Nicolas Toper",
            "body": "I have updated the code as seen through the mailing list. I am more available now that most of my exams are over (only one remaining on Friday - crossing fingers).\n\nIf everybody's OK with this work. I will continue working on the methods body (see methods started but commented).\n\nI am waiting for your feedback :)",
            "date": "2006-07-02T05:24:37.000+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks for the update, looks good. There's some small issues, but I think it's better to let the source evolve instead of fixing the details at this point.\n\nOne relatively major thing though before I merge this... Could you rename also ConfigBackup to BackupConfig? The current name indicates \"configuration backup\" rather than the intended \"backup configuration\".",
            "date": "2006-07-03T04:06:57.000+0000",
            "id": 5
        },
        {
            "author": "Nicolas Toper",
            "body": "ConfigBackup is now called BackupConfig.\n\nIt is my first accepted patch on  Apache Jackrabbit :)",
            "date": "2006-07-03T04:19:35.000+0000",
            "id": 6
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks, merged in revision 418655.\n\nYou'll probably get a ton of conflicts when you update, as I made some checkstyle adjustments to your code (replaced tabs with spaces, etc.). In future, use spaces for tabs and the HEADER.txt without even whitespace changes (using an exact copy allows  easy automated checking) as the license header.",
            "date": "2006-07-03T05:09:58.000+0000",
            "id": 7
        },
        {
            "author": "Nicolas Toper",
            "body": "Deleting the backup package and restoring RepositoryImpl to its previous configuration.",
            "date": "2006-07-05T23:06:54.000+0000",
            "id": 8
        },
        {
            "author": "Nicolas Toper",
            "body": "LaunchBackup tested and completed. (issue with Eclipse and SVN so please tell me if you have a problem importing the patch)",
            "date": "2006-07-12T04:19:44.000+0000",
            "id": 9
        },
        {
            "author": "Nicolas Toper",
            "body": "Jackrabbit patch with 2 classes for ConfigurationParser. I couldn't test the class since Jackrabbit does not currently compile through Maven. \n\nIn theory no problem, since I just moved some methods from one class to the other (and add super where needed).",
            "date": "2006-07-14T15:46:04.000+0000",
            "id": 10
        },
        {
            "author": "Jukka Zitting",
            "body": "Applied the patches that removed the backup classes from core (patch.txt [12336377]) and added them to the contrib/backup subproject (patch.txt  [12336687]) .\n\nThe latter patch required some tweaking as it didn't compile out of the box (see BackupConfig.create(InputSource, String)). Please check that the project compiles before sending a patch, normally a patch that doesn't compile would be rejected without further consideration.  And (as already discussed in private) please also use spaces for indentation instead of tabs.",
            "date": "2006-07-15T22:47:55.000+0000",
            "id": 11
        },
        {
            "author": "Jukka Zitting",
            "body": "> Jackrabbit patch with 2 classes for ConfigurationParser.\n\nThis patch (jackrabbit-1.patch.txt) is not valid. It seems to remove the entire ConfigurationParser class but then reference it from a partially modified RepositoryConfigurationParser class (that doesn't even exist yet in svn). Please review your setup and try recreating the patch.\n",
            "date": "2006-07-15T22:53:56.000+0000",
            "id": 12
        },
        {
            "author": "Nicolas Toper",
            "body": "- XML configuration file is correctly parsed and interpreted by the Backup tool. \n- code compiles and is tested\n- Indentations is composed of spaces and not anymore tabs.\n\n\n",
            "date": "2006-07-15T23:30:04.000+0000",
            "id": 13
        },
        {
            "author": "Nicolas Toper",
            "body": "- The new correct patch (I don't try to delete and recreate the same file within the same patch)\n- No tabs :p\n",
            "date": "2006-07-16T00:06:28.000+0000",
            "id": 14
        },
        {
            "author": "Jukka Zitting",
            "body": "> The new correct patch (I don't try to delete and recreate the same file within the same patch) \n\nI see what you're trying to do, but the patch still tries to modify the non-existent RepositoryConfigurationParser class instead of correctly adding it. Did you start it as a copy of ConfigurationParser? I tried doing the same and was able to apply the patch without problems.\n\nStill, I didn't yet commit the change, as there are two issues I'd like resolved:\n\na) Make RepositoryConfigurationParser a subclass of ConfigurationParser and use inheritance to access the protected methods from ConfigurationParser.\nb) Remove the createSubParser() method from the ConfigurationParser base class, it's only needed by RepositoryConfigurationParser.\n",
            "date": "2006-07-18T12:11:15.000+0000",
            "id": 15
        },
        {
            "author": "Nicolas Toper",
            "body": "a) Make RepositoryConfigurationParser a subclass of ConfigurationParser and use inheritance to access the protected methods from ConfigurationParser.\nb) Remove the createSubParser() method from the ConfigurationParser base class, it's only needed by RepositoryConfigurationParser.\nc) Same issue as always for those patches: I delete and recreate the class. I don't know if it's solved but we won't have anymore this problem anyway for the next patches.",
            "date": "2006-07-18T19:31:11.000+0000",
            "id": 16
        },
        {
            "author": "Jukka Zitting",
            "body": "> Same issue as always for those patches: I delete and recreate the class. I don't know if it's solved but we won't have anymore this problem anyway for the next patches.\n\nNow it's even worse. This patch (patch-jackrabbit-060718.txt)  would totally remove the ConfigurationParser, and it still doesn't handle the RepositoryConfigurationParser class properly. I think I got your idea though, I'll recreate the changes manually to get us forward. It's perhaps better to avoid using the Eclipse file copy and move operations while working via patches.",
            "date": "2006-07-18T21:56:38.000+0000",
            "id": 17
        },
        {
            "author": "Jukka Zitting",
            "body": "Committed the ConfigurationParser changes in revision 423267.",
            "date": "2006-07-18T22:15:09.000+0000",
            "id": 18
        },
        {
            "author": "Nicolas Toper",
            "body": "Patch for the backup tool:\n\n1/ Parsing of the configuration file is over\n2/ Instanciation of the backup manager\n3/ First draft of the ZipBackupIOHandler.\n\nThe code is still a work in progress. All your comments are greatly appreciated.",
            "date": "2006-07-19T18:01:29.000+0000",
            "id": 19
        },
        {
            "author": "Jukka Zitting",
            "body": "Committed patch-backup-060719.txt in revision 423575.\n\nSome issues to consider:\n\n* The SizeException and RepositoryConfigBackup classes do not have the correct license headers. Please add them.\n* What is the SizeException used for?\n* You still have tabs in the code. Check your Java / Code Style / Formatter settings. I'm using the \"Java\" settings that has the Tab Policy of \"Spaces only\".\n* Consider renaming ManagerBackup (that backs up the manager) to BackupManager (that manages the backup). See the naming discussions we had earlier.\n* Could you come up with a simple test case that sets up a dummy repository and launches the backup tool on it? For now it doesn't need to actually do anything useful, just to check that the code runs in addition to it compiling.\n\nOther than that, keep up the good work! It's nice to see things forming up.",
            "date": "2006-07-19T19:33:36.000+0000",
            "id": 20
        },
        {
            "author": "Nicolas Toper",
            "body": "Update to JR core in order to achieve Backup. Here are the modifications:\n- RepositoryImpl: getNodeTypeRegistry is now public +  Properties loadRepProps() + public String[] getWorkspaceNames() public getSystemSession()\n- added in RepositoryImpl WorkspaceConfig getWorkspaceConfig(String workspaceName)\n- NodeTypeRegistry: added method public NodeTypeDef[] getRegisteredNodesTypesDefs()\n- Any tabs issues? (I found some in some files I didn't update so I didn't dare to replaceAll \"regexpically\")\n- class SystemSession is now public\n\nMaybe I have put too many classes in public. Please tell me...",
            "date": "2006-07-25T21:30:45.000+0000",
            "id": 21
        },
        {
            "author": "Nicolas Toper",
            "body": "\"first sizable patch\". Not everything is working yet...\n\n- solved tab issue \n- renamed ManagerBackup as BackupManager\n- no more SizeException\n- added missing ASF license headers\n- test case added in src/test: some path are hardcoded: how should I generify the test case? Which other ones would you want?\n- Backup nearly over. (I am starting to work on the restore as soon as we all agree on the backup.) A lot of todo are still there :p\n- I have seen a lot of sanityCheck in the current code. Should I put also a lot of them in mine :p?\n \nA list of question is coming by email :)\n\nThanks for your help\nNico",
            "date": "2006-07-25T21:33:01.000+0000",
            "id": 22
        },
        {
            "author": "Nicolas Toper",
            "body": "A few remarks I forgot to write: I was outside of Internet connection for a few days, this is why this patch is so \"big\". You will find the current backup structure. \n\nNot everything is working and is final yet.\n\nSome code still needs refactoring and to be commented.\n\nCan you please tell me which test case should I write? Do you have any idea already?\n\nCan you please check the way I am doing the backup is fine. \n\nSoon, we will be able to backup things up :)",
            "date": "2006-07-25T21:37:16.000+0000",
            "id": 23
        },
        {
            "author": "Jukka Zitting",
            "body": "Some comments:\n\na) You can get the NamespaceRegistry and NodeTypeManager (and through it, the NodeTypeRegistry) instances and the list of available workspaces through Session.getWorkspace(). See the JSR-170 javadocs.\n\nb) It might be better to add the getWorkspaceConfig() method to WorkspaceImpl and access it through the system session for that workspace.\n\nc) I'm a bit worried about publishing the SystemSession, but this is likely required for the backup and also some other external efforts like the AccessManagers. We need to check that publishing the system sessions won't cause any trouble.\n\nd) I think the parsePersistenceManagerConfig() method belongs in RepositoryConfigurationParser instead of the ConfigurationParser base class.\n\ne) Do you really need to add the getRegisteredNodesTypesDefs() method? I think it would be nicer if you could collect the registered node types using the existing methods, for example in NodeTypeManager.\n\nf) The patch shows an extra newline in NodeTypeWriter. Try to avoid introducing such changes when you make no other changes to the class. It just adds cruft to the patch and if I were to commit the changes as-is, it would make a new svn version of the file even though nothing really changed.\n\nCould you please fix issues a,b,d,e,f before I can commit these changes.\n\n> solved tab issue\n\nStill seeing some tabs, for example in your getWorkspaceConfig() and getRegisteredNodesTypesDefs() methods (patch-jackrabbit-060725.txt).\n\n> renamed ManagerBackup as BackupManager\n> no more SizeException\n> added missing ASF license headers\n\nOK, thanks.\n\n> test case added in src/test: some path are hardcoded: how should I generify the test case?\n> Which other ones would you want?\n\nThis is a good start. You might want to turn the hardcoded paths to command line options and provide reasonable relative paths as defaults. Some notes:\n\n* TestBackup is missing the license header\n* Rename the class to BackupTest to comply with the naming in Jackrabbit. I suppose yuor naming issue has roots in the way the French language works, AFAIK you combine words in the opposite order than in English. :-)\n\n> I have seen a lot of sanityCheck in the current code. Should I put also a lot of them in mine :p?\n\nIf there's a possibility that your code gets into an invalid state. The sanityChecks in Jackrabbit mostly check whether a repository or a session has already been closed. I don't think a similar case appears with the backup system.\n",
            "date": "2006-07-26T07:32:11.000+0000",
            "id": 24
        },
        {
            "author": "Nicolas Toper",
            "body": "Patch including (nearly) all corrections asked by Jukka. See comments please.",
            "date": "2006-07-26T15:33:23.000+0000",
            "id": 25
        },
        {
            "author": "Nicolas Toper",
            "body": "New patch. Implements corrections asked by Jukka. I changed a lot less methods",
            "date": "2006-07-26T15:34:12.000+0000",
            "id": 26
        },
        {
            "author": "Nicolas Toper",
            "body": "Hi Jukka,\n\nHere are my answers :p\n\na/ Done. Maybe I should put in the constructor of Backup the session since it's shared by a few classes. What do you think? I had to look for the default workspace to get a System Session. Can we assume it's always there?\n\nb/ It's actually already the case. I just needed to cast Workspace to WorkspaceImpl. I corrected the code on my side.\n\nc/ Maybe we should add an external tool session instead of sharing a session with JR \"internals\". What do you think?\n\nd/ This is what I did first, but I use it in BackupConfigurationParser and it is already used in RepositoryConfigurationParser. It is why it's there. (for now I don't use the PM but this might change). I suggest to leave a TODO on this point and see if it's still needed there at the end of the project. Do you agree?\n\ne/ At first I put it in my backup class and then I thought it could be useful to others. It's why it's there. As you can see, I can put it in my backup class if needed but this functionnality can be needed also by other application. What do you think?\n\nf/ Done.\n\ng/ The test case is renamed with the right header.\n\nh/ I have checked the tabs issue *also* in my Jackrabbit patch :p",
            "date": "2006-07-26T15:34:42.000+0000",
            "id": 27
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks for the update!\n\n> c/ Maybe we should add an external tool session instead of sharing a session with JR \"internals\". What do you think?\n\nI'd go for that unless there is something special in the SystemSession class that's needed for the backup.\n\n> d/ This is what I did first, but I use it in BackupConfigurationParser and it is already used in RepositoryConfigurationParser.\n> It is why it's there. (for now I don't use the PM but this might change). I suggest to leave a TODO on this point and see if it's\n> still needed there at the end of the project. Do you agree?\n\nNot really. Code reuse should be the result of the design, not the other way around. I think it's better for now if you just duplicate the parsePersistenceManagerConfig() method in BackupConfigurationParser instead of pushing it higher, especially since the method is so small.\n\n> e/ At first I put it in my backup class and then I thought it could be useful to others. It's why it's there. As you can see,\n> I can put it in my backup class if needed but this functionnality can be needed also by other application. What do you think?\n\nOK. I think it's better to keep the functionality in the backup contrib for now and move it to core when we find another use case. It's another case of code reuse driving the design, which I'm a bit worried about. I don't think it's worth it to expand the public interface of the class with a utility method just for a single client that can achieve the same result using the other methods.\n\nCould you still fix these issues (or counter my arguments :-) before I commit your changes?",
            "date": "2006-07-27T06:32:09.000+0000",
            "id": 28
        },
        {
            "author": "Nicolas Toper",
            "body": "Hi,\n\nThe first part of the project is completed!!!\n\nBackup is working just fine :)\n\nI am posting all patches ASAP. I am waiting for your great comments. \n\nNext steps: the restore operation + extensive testing + some clean up (see TODO tagged items in the code)",
            "date": "2006-07-27T22:08:46.000+0000",
            "id": 29
        },
        {
            "author": "Nicolas Toper",
            "body": "Working backup operation + relevant test case.\n\nNo new classes added.\n\nA lot of issues remain: mostly documentation and code cleaning. They are tagged as TODO in the source code.",
            "date": "2006-07-27T22:12:41.000+0000",
            "id": 30
        },
        {
            "author": "Nicolas Toper",
            "body": "Jackrabbit patch to support backup operations.\n\n- loadRepProps() in RepositoryImpl is now public\n- A new method exportSystemView has been added. The new method has one more parameter: noJcrSystem. It filters out of the export the /jcr:system subtree. Some other classes have been slightly altered to support it. I hope this won't break anything, but please double check.\n\nIt is really a pleasure working with you on this project.",
            "date": "2006-07-27T22:17:36.000+0000",
            "id": 31
        },
        {
            "author": "Jukka Zitting",
            "body": "Committed patch-backup-060728.txt in revision 426435 with some modifications:\n\n* Made the paths in BackupTest relative\n\n* Use Repository.getDescriptorKeys() and Repository.getDescriptor(String) to access repository properties instead of using the internal loadRepProps method. Thus, no need to modify RepositoryImpl.\n\n* Use a SysViewSAXEventGenerator subclass that skips /jcr:system in WorkspaceBackup. Thus, no need to modify SessionImpl and the SAXEventGenerators.\n\n* Depend on RepositoryConfigurationParser for the PERSISTENCE_MANAGER_ELEMENT constant in BackupConfigurationParser. It's a bit ugly, but avoids the need to have the constant in ConfigurationParser. Thus, no need to modify the ConfigurationParsers.\n\nThese modifications remove all needs to modify jackrabbit-core, so I won't be applying patch-jackrabbit-060728.txt. :-)\n\nI ran the backup test and received a nice backup ZIP file. Looking good so far!",
            "date": "2006-07-28T08:44:40.000+0000",
            "id": 32
        },
        {
            "author": "Nicolas Toper",
            "body": "Jackrabbit patch to core to allow restore. 2 updates:\n\n- Added to NamespaceRegistryImpl this method public boolean isRegistered(String prefix). I need to avoid launching of an exception.\n\n- Added to RepositoryImpl,  public void setRepProps(Properties props) and    public void setRootNodeId(NodeId ni) to restore correctly the repository.",
            "date": "2006-08-03T20:54:22.000+0000",
            "id": 33
        },
        {
            "author": "Nicolas Toper",
            "body": "Patch to the Backup tool.\n\nRestore operation is starting to work: you can restore all workspaces and repository with NodeType and Namespace. \n\nNext step: restore Node Version Histories. If you have any idea please, tell me :)\n\nA lot of clean up to do and a few issues are still pending (see TODO tags).\n\nNico",
            "date": "2006-08-03T20:56:15.000+0000",
            "id": 34
        },
        {
            "author": "Jukka Zitting",
            "body": "Thanks again, great progress! Some issues until I commit your changes:\n\n1) I think it's better for now to stick with the standard NamespaceRegistry methods for checking the existence of a namespace, even at the inconvenience of having to catch an exception. It seems like your backup tool ends up being quite general, so it might also be useful for other JCR implementations! Thus, the fewer jackrabbit-specific methods you use, the better.\n\n2) It's better to use the namespace URI than the prefix when checking for namespace existence. The prefix is just a shorthand for the namespace URI, so it shouldn't be a problem if the namespace already exists with a different prefix.\n\n3) I think the setRepProps() method should be named setDescriptors() to avoid introducing internal concepts at the public method layer. We might in future decide to manage the repository descriptors as something else as a properties hash, so the setDescriptors() name should better stand the test of time.\n\n4) The setDescriptors() method should ideally have some kind of an access check that only permits the administrator to make those changes. I'm not sure if the access control framework can do that yet, so you can just leave a TODO on it for now.\n\n5) The root node ID issue is a bit tricky. Normally it's the same (cafebabe-cafe-babe-cafe-babecafebabe) in all repository instances, so there shouldn't be any need to backup/restore it, but then Jackrabbit uses a file to store the root ID so it's still kind of configurable. However, I think that changing the root node ID of a repository may cause some unexpected issues, so it's probably better not to backup/restore it.\n",
            "date": "2006-08-04T07:36:09.000+0000",
            "id": 35
        },
        {
            "author": "Jukka Zitting",
            "body": "... one more thing:\n\n6) You should set the RepositoryImpl.repProps properties in setRepProps/setDescriptors in addition to storing the given properties. This way the restored descriptors will become active immediately and will not be overridden when the repository is shut down.",
            "date": "2006-08-04T07:39:33.000+0000",
            "id": 36
        },
        {
            "author": "Marcel Reutegger",
            "body": "Regarding repository descriptors, I'm not sure if it makes sense to actually try to restore them. Most of those descriptors are tightly coupled with the internals of an implementation and it's capabilities and are therefore read-only. e.g. whether versioning is supported, etc.",
            "date": "2006-08-04T07:59:08.000+0000",
            "id": 37
        },
        {
            "author": "Jukka Zitting",
            "body": "Marcel:\n> Regarding repository descriptors, I'm not sure if it makes sense to actually try to restore them.\n> Most of those descriptors are tightly coupled with the internals of an implementation and it's\n> capabilities and are therefore read-only. e.g. whether versioning is supported, etc.\n\nThat's true, but the descriptors can also be used to convey custom information, for example the name and contact details of the repository administrator. Jackrabbit doesn't directly support this at the moment, but I think it would be a nice feature to add at some point. Then backing up and restoring that data would make a lot of sense. In fact the setDescriptors() method even effectively implements this feature, now we just need to come up with some semi-standard descriptor keys.\n\nOf course \"restored\" descriptor should never override the standard descriptors, but Nicolas' implementation already takes care of this by calling setDefaultRepositoryProperties().\n",
            "date": "2006-08-04T14:28:13.000+0000",
            "id": 38
        },
        {
            "author": "Stefan Guggisberg",
            "body": "i share marcel's concerns regarding restoring descriptors,\ntherefore -1 for a setDescriptors() method on Repository",
            "date": "2006-08-04T14:55:01.000+0000",
            "id": 39
        },
        {
            "author": "Nicolas Toper",
            "body": "- A few classes has been cleaned up and are ready for production (Until BackupManager not included)\n\n- There is still the NodeVersionHistories.restore() unfinished. Eventually, I will unprotect the NodeDef and protect them before going out of the methods (the easier for me I feel).\n\n- I have a bug in WorkspaceBackup.restore() but I can't seem to find it: no content is restored, no error is given. Can you help me on this?",
            "date": "2006-08-07T22:29:29.000+0000",
            "id": 40
        },
        {
            "author": "Jukka Zitting",
            "body": "Committed patch-060808-backup.txt in revision 429606. Note that I changed the Java 5 String.contains() call to String.indexOf() to make it work with 1.4.\n\n> I have a bug in WorkspaceBackup.restore() but I can't seem to find it: no content is restored, no error is given. Can you help me on this?\n\nSeems correct based on a quick review. Perhaps some debug logging could help?",
            "date": "2006-08-08T07:23:27.000+0000",
            "id": 41
        },
        {
            "author": "Nicolas Toper",
            "body": "Hopefully, this is one of the last patches for this project :)\n\nEverything is working but the importXML method in the VersionManager hasn't been finished yet (so not committed to core) so the node version history restore is not working (and actually raises an exception since it looks for it). If you need the tool already, please deactivate the node version history restore for now.\n\nThe code still needs clean up and documentation but the meat of this contrib project is here.\n\nETA: Monday.\n\nNext steps: finish the importXML method (currently), clean up (trailing spaces mostly), document (readme, wiki page),  test + bug patches and requirements for a version 2.\n\nSome ideas have already been put for a V2 on the wiki page. I plan to start working on it after Google SoC and when we would have gathered enough users feedback. Please feel free to already put your ideas for a v2 and of course, soon, please test the backup/restore.",
            "date": "2006-08-08T22:24:11.000+0000",
            "id": 42
        },
        {
            "author": "Nicolas Toper",
            "body": "This code contains for now the backup tool with working restore and backup. To currently, it needs a patch on Jackrabbit's core.\n\nWe are currently discussing on the ML those issues to know if I should refactor some parts.\n\nPlease have a look at the wiki if you would like to know more about this tool.\n\nhttp://wiki.apache.org/jackrabbit/BackupTool",
            "date": "2006-08-16T17:35:31.000+0000",
            "id": 43
        },
        {
            "author": "Nicolas Toper",
            "body": "This is the proposed path to the core for the backup tool.\n\nSorry for the 4 patches but some Gremlins have invaded my computer and created a lot of problem with SVN.\n\nHere are the modifications I propose:\n\n- Update to PropInfo. \nPlease see relevant thread on ML. \n\n- Update to VersionManagerImpl and to RepositoryImpl. \nIn order to restore the NodeVersionHistories, I need to gain access to the VersionManagerImpl persistence (through a getter) manager. For this, I need to put the getVersionManager() of RepositoryImpl in public  (I couldn't use the one from SessionImpl since there can be a XAVersionManager and the cast to VersionManagerImpl doesn't work in this case)\n\n- Add a NodeVersionHistoriesUpdatableStateManager\nIt is a specific UpdatableStateManager designed specifically to update the NodeVersionHistories. It is heavily based on the LocalItemStateManager.\n\nI have to be able to connect the imported NodeState so I had to put this class in the o.a.j.core.state package and couldn't put it in the backup one. (connect is protected to state and it is *really* a bad idea to put in public).\n\nThe idea was to be able to work with a BatchedItemOperation class so to keep as much as possible its original semantic.\n\nI am sure there is a better way to handle those needs instead of updating the core but I didn't find any yet. \n\nAs soon, as we all agree, I will update the relevant part of my code (in backup and in this patch) and document them properly.\n\nCheers,\nNico\nPS I am cleaning up my SVN so next time, I can post one patch for all.",
            "date": "2006-08-16T17:54:48.000+0000",
            "id": 44
        },
        {
            "author": "Nicolas Toper",
            "body": "The good archive.",
            "date": "2006-08-18T14:57:56.000+0000",
            "id": 45
        },
        {
            "author": "Nicolas Toper",
            "body": "Since we cannot update this issue, maybe we should close it?",
            "date": "2006-09-01T16:07:29.000+0000",
            "id": 46
        },
        {
            "author": "Nicolas Toper",
            "body": "\n   [[ Old comment, sent by email on Fri, 4 Aug 2006 17:48:34 +0200 ]]\n\nIt seems two people out of one, want to not backup the descriptors. Is it\nthe same for the root node?\n\nIf so, I'll update the code not to backup those data.\n\nNico\n\n\n\n-- \na+\nNico\nmy blog! http://www.deviant-abstraction.net !!\n",
            "date": "2006-10-14T02:45:54.000+0000",
            "id": 47
        },
        {
            "author": "Jukka Zitting",
            "body": "I'm taking over this issue to implement the repository backup and migration tool we need to have in Jackrabbit 1.6 so we can better handle upgrades to the upcoming Jackrabbit 2.0 release.",
            "date": "2009-05-19T10:32:59.216+0000",
            "id": 48
        },
        {
            "author": "Jukka Zitting",
            "body": "The RepositoryCopier tool in jackrabbit-core and the backup options in jackrabbit-standalone now provide a simple mechanism for backing up or migrating repositories. Resolving as fixed for 1.6.0!",
            "date": "2009-08-04T17:03:39.525+0000",
            "id": 49
        }
    ],
    "component": "jackrabbit-core, jackrabbit-standalone",
    "description": "Issue for tracking the progress of the Google Summer of Code project assigned to Nicolas Toper.  The original project requirements are:\n\n\"Implement a tool for backing up and restoring content in an Apache Jackrabbit content repository. In addition to the basic content hierarchies, the tool should be able to efficiently manage binary content, node version histories, custom node types, and namespace mappings. Incremental or selective backups would be a nice addition, but not strictly necessary.\"",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-442",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Implement a backup tool",
    "systemSpecification": true,
    "version": ""
}