{
    "comments": [
        {
            "author": "Felix Meschberger",
            "body": "+1\n\nThis would probably also benefit Sling, as I have my own implementation of the Mapper interface there because I read the descriptors using kxml, which is more light weight and has far less dependencies than Commons Digester. So I \"stole\" much of the code of the DigesterMapperImpl regarding descriptor verification ...\n\nAlso, removing the node type stuff from the DigesterMapper would remove the dependency on the Jackrabbit-Core package, which may or may not be available in certain use cases. Another reason, why I do not use the DigesterMapperImpl in Sling.",
            "date": "2007-09-05T07:47:47.336+0000",
            "id": 0
        },
        {
            "author": "Christophe Lombart",
            "body": "The mapper class have been refactored. there is a common ancester. Digestion &  annotation are in the jcr-mapping subproject",
            "date": "2007-10-12T20:00:33.066+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "I would like to refactor the mappers and the descriptor readers  in order to : \n* Create an abstract mapper impl because both Mapper classes have a lot of code in common (AnnotedObjectMapper & DigesterMapperImpl). Only the readers are different. The Mappers can make exactly the same process. \n* The Mapper classes should not have the responsibility to create the jcr node types. This can be done outside the mapper and it should be an optional operation. There are certainly some use cases where node type creation is not necessary. Right now, the annotated object mapper creates jcr node types. ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1113",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Refactor the Mapper & DescriptotReader classes",
    "systemSpecification": true,
    "version": ""
}