{
    "comments": [
        {
            "author": "Alexander Klimetschek",
            "body": "Hmm, IMHO it shouldn't be Jackrabbit's concern to handle such \"details\", especially as text extraction from binary files is not a mandatory aspect of the JCR API.\n\nWhat about using Apache Tika? It aims to collect all the various extraction libraries and self-built classes of the Apache project and to build a proper re-usable framework. It recently pushed out its first release. Jukka, you probably know more about it - is it already useful for Jackrabbit? You mentioned in JCR-1290 that this could be a task for Jackrabbit 1.5.\n\nhttp://incubator.apache.org/tika/",
            "date": "2008-04-10T12:17:21.679+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "There are at least two minor issues with using Tika in Jackrabbit.\n\n- Tika is still in incubation. I'd prefer to only introduce a dependency to it when it is out of incubation.\n- Tika requires Java 1.5, whereas Jackrabbit currently is fine with 1.4.\n\nWe might want to provide an adapter, which implements the Jackrabbit TextExtractor interface and uses Tika to extract the text. Users then can decide if they want to use it and therefore need to use Java 1.5.",
            "date": "2008-04-11T09:19:42.188+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "Applied patch in revision: 647114\n\nThank you for providing the patch.",
            "date": "2008-04-11T11:16:08.173+0000",
            "id": 2
        }
    ],
    "component": "jackrabbit-text-extractors",
    "description": "The MsPowerPointTextExtractor class has a problem when reading PPTs when an \u20ac sign is contained. All text following that sign is ignored. Perhaps the POI PowerPointExtractor should be used instead of parsing the data by hand. As a side effect, this would simply the code. Extracting could be done as follows:\n\n\tpublic Reader extractText(InputStream stream, String type, String encoding) throws IOException {\n\t\ttry {\n\t\t\tPowerPointExtractor extractor = new PowerPointExtractor(stream);\n\t\t\treturn new StringReader(extractor.getText(true,true));\n\t\t} catch (RuntimeException e) {\n\t\t\tlogger.warn(\"Failed to extract PowerPoint text content\", e);\n\t\t\treturn new StringReader(\"\");\n\t\t} finally {\n\t\t\ttry { stream.close(); } catch (IOException ignored) {}\n\t\t}\n\t}\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1530",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "MsPowerPointTextExtractor does not extract from PPTs with \u20ac sign",
    "systemSpecification": true,
    "version": "1.4"
}