{
    "comments": [
        {
            "author": "angela",
            "body": "steps to fix this:\n\njcr2spi-level\n------------------------------------------------------------------------------------------------------------------------\n\n- Repository.getDescriptorValue and Repository.getDescriptorValues isn't implemented\n- Maybe it's best to have a new method on the RepoService that returns the descriptors\n  in almost-jcr-value format and then having using the ValueFactoryQImpl created with\n  a dummy-namespace-resolver to build the required value objects from the SPI\n  value representation.\n- the old getDescriptor() method should just be a shortcut to the new methods and\n  return 'null' in case of multi-valued or Value.getString in case of single valued.\n\nspi-level\n------------------------------------------------------------------------------------------------------------------------\n\n- the method Map<String, String> getRepositoryDescriptors() throws RepositoryException\n  isn't sufficient to cover the new descriptor functionality defined by jsr 283\n\n- I'd suggest to either change the return value of the existing method to Map<String, QValue[]>\n  or deprecate the existing method an replace with a appropriate one, that properly\n  covers the multivalued, non string descriptors (maybe better).\n\n- jcr2spi should then only use the method returning QValue(s) see above.\n\nspi2jcr\n------------------------------------------------------------------------------------------------------------------------\n\n- should be straight forward, once the SPI is adjusted.\n\nspi2dav(ex)\n------------------------------------------------------------------------------------------------------------------------\n\n- jcr-server must be fixed in order to cover the new Repository methods.\n  -> RepositoryDescriptorReport must use Repository.getDescriptorValues(String key)\n  -> RepositoryDescriptorReport must deal with multi valued descriptors\n\nonce this is fixed:\n- spi2dav RepositoryServiceImpl must properly handle multi and single values as well\n  as non-string values and create QValue objects.\n\n\n\n",
            "date": "2009-08-13T10:34:00.324+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "since the Map<String, String> signature of RepositoryService.getRepositoryDescriptors has recently been added by Marcel and is \nscheduled for JR 2.0 i decided to change the return value to Map<String, QValue[]> instead of introducing yet another method.\n\n-> adjusted spi/RepositoryService.java\n-> fixed all implementations present in the jackrabbit-trunk\n-> as well as the RepositoryDescriptorReport present in the jcr-server.\n-> modified jcr2spi accordingly \n-> remove the known issues related to descriptor tests present in the pom.xml spi2jcr\n\nAnd finally tested the RepositoryDescriptor test on spi2jcr as well as on spi2dav and quickly checked the xml generated by\nthe descriptor REPORT request to jcr-server. that seemed to work.\n\nangela",
            "date": "2009-08-14T17:03:26.259+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-jcr-server, jackrabbit-jcr2spi, jackrabbit-spi, jackrabbit-spi2dav, jackrabbit-spi2jcr, JCR 2.0",
    "description": "- new methods returning Value objects (jcr2spi)\n- check descriptor-report in jcr-server and corresponding handling on the client side\n- etc.etc.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2256",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JSR 283 Repository Descriptors",
    "systemSpecification": true,
    "version": ""
}