{
    "comments": [
        {
            "author": "Thomas Mueller",
            "body": "Hi,\n\nDid you configure a data store? How does the repository.xml look like? Do you have any elements in the data store?\n\nRegards,\nThomas",
            "date": "2009-02-18T13:50:37.467+0000",
            "id": 0
        },
        {
            "author": "Jacco van Weert",
            "body": "\nHello Thomas,\n\nI looked to the repository.xml. You are right, the repository.xml wasn't configured to use the datastore.\n\nIs there a \"programmatic\" way to detect if the GarbageCollector could run?\n\nGreetings,\n\n   Jacco\n\n",
            "date": "2009-02-18T14:16:56.198+0000",
            "id": 1
        },
        {
            "author": "Thomas Mueller",
            "body": "> \"programmatic\" way to detect\n\nYes. If this is null then there is no data store:\n((RepositoryImpl) s.getRepository()).getDataStore()\n\nAnyway the exception you get is not very clear.\nWhat about this throws a RepositoryException:\n((SessionImpl)mSession).createDataStoreGarbageCollector(); \n\"No data store configured.\"",
            "date": "2009-02-18T14:43:31.380+0000",
            "id": 2
        },
        {
            "author": "Jacco van Weert",
            "body": "\n> Anyway the exception you get is not very clear. \n> What about this throws a RepositoryException: \n> ((SessionImpl)mSession).createDataStoreGarbageCollector(); \n> \"No data store configured.\"\n>\n\nPersonally I would like that createDataStoreGarbageCollector() returns a <null> when no collector could be created, but then this is more a matter of style I guess.\n\n\n\n",
            "date": "2009-02-18T15:04:05.643+0000",
            "id": 3
        },
        {
            "author": "Thomas Mueller",
            "body": "Committed in 745534 (trunk)\n\nGarbageCollector.scan() now throws a RepositoryException with the message \"No DataStore configured.\" instead of a NullPointerException.",
            "date": "2009-02-18T15:10:41.088+0000",
            "id": 4
        },
        {
            "author": "Thomas Mueller",
            "body": "I saw that one of the tests first calls session.createDataStoreGarbageCollector(), and then gc.getDataStore() to check if the data store is configured. Existing applications could do that as well, so it's probably better not to throw an exception or return null in createDataStoreGarbageCollector().",
            "date": "2009-02-18T15:34:40.759+0000",
            "id": 5
        }
    ],
    "component": "jackrabbit-core",
    "description": "\nI am running the garbage collector in a separate thread every 5 minutes.\n\n            GarbageCollector gc = ((SessionImpl)mSession).createDataStoreGarbageCollector();\n            gc.scan();\n            gc.stopScan();\n            int du = gc.deleteUnused();\n\nWhen using Jackrabbit v1.5.2 I get sometimes a null pointer exception;\n\njava.lang.NullPointerException\n        at org.apache.jackrabbit.core.data.GarbageCollector.scan(GarbageCollector.java:153)\n\n\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1985",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "NullPointerException in GarbageCollector.scan() if no DataStore configured",
    "systemSpecification": true,
    "version": "1.5.2"
}