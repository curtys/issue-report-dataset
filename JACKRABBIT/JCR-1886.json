{
    "comments": [
        {
            "author": "Michael D\u00fcrig",
            "body": "Reopening for 1.5.0",
            "date": "2009-04-20T17:04:22.844+0000",
            "id": 0
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Fixed at revision 766756  \n",
            "date": "2009-04-20T17:05:54.812+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-jcr2spi",
    "description": "stefan reported the following problem:\n\n- batchread config reads with depths infinity\n- invalidate tree by calling Node.refresh(false)\n- force loading of the tree (e.g. Node.getPath())\n\nafterwards, there may still be invalidated item states indicating that not all ItemInfos were processed.\nconsequently, there are additional calls to getItemInfos that should have been covered by the loading of the tree.\nthe problem occuring is not related to limitation of the item-cache size.\n\nproblem analysis:\n\nthere is a bug in WorkspaceItemStateFactory#createItemStates.\nthere is a wrapper built around the ItemInfo-Iterator but later on the ItemInfo-Iterator is used instead of the wrapper, which pre-fetches items from the underlying iterator and process them upon hasNext()/next().",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1886",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "jcr2spi: Unprocessed ItemInfos call to RepositoryService#getItemInfos",
    "systemSpecification": true,
    "version": "1.5"
}