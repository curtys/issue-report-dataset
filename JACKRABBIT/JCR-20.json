{
    "comments": [
        {
            "author": "Felix Meschberger",
            "body": "Raising the Java VM max heap helps in this case. But given that jackrabbit uses around 60MB (or more) when logging in, this kind of worries me...",
            "date": "2004-11-18T16:27:53.000+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "this is in fact not a desirable behaviour. will rearrange caching.",
            "date": "2004-11-18T20:28:13.000+0000",
            "id": 1
        },
        {
            "author": "Tobias Bocanegra",
            "body": "currently, the virtual item state provider of the version store acts like a persistent state provider and does not create items for every session. \n\nit is true, that all versions are loaded (twice) in memory. once in the internal representation, and once in the virtual state. both can be done more dynamically.",
            "date": "2004-11-19T09:24:48.000+0000",
            "id": 2
        },
        {
            "author": "Tobias Bocanegra",
            "body": "fixed by revision 11518\n\nfixed issues 22 and 23. login should be faster now.",
            "date": "2004-12-10T16:27:33.000+0000",
            "id": 3
        },
        {
            "author": "Stefan Guggisberg",
            "body": "closing resolved issue",
            "date": "2005-11-11T01:40:52.000+0000",
            "id": 4
        }
    ],
    "component": "",
    "description": "Wenn a SessionImpl instance is created, the VersionManager.getVirtualItemStateProvider method is called. This method - amongst other things - loads the complete (!) version history into memory and walks through it to do some mapping.\n\nBesides taking a long time (near 1 minute just to get the version history through PersistentVersionManager.getVersionHistories()) mapping the version histories ultimately results in an \"OutOfMemoryError\".\n\nCurrently there are 768 version histories and this is only a very small fraction of the expected final number of version histories in my application",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-20",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Critical",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Logging into a repository with a big version history takes a long time",
    "systemSpecification": true,
    "version": ""
}