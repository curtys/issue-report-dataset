{
    "comments": [
        {
            "author": "Michael D\u00fcrig",
            "body": "Suggested patch",
            "date": "2009-04-14T11:55:47.418+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "The problem with using addNode(\"jcr:content\") without explicitly specifying a node type, is that by default the node would then end up with \"nt:base\" as it's node type if the parent is a standard \"nt:file\" node.",
            "date": "2009-04-23T10:23:32.541+0000",
            "id": 1
        },
        {
            "author": "Alexander Klimetschek",
            "body": "Just out of curiosity: your patch actually adds the addNode(\"jcr:content\") call w/o an explicit node type to the jcr server code. This does not really fit with the description of this issue... What is the default value for getContentNodeType() and/or is it configurable? Puzzled ;-)",
            "date": "2009-04-23T11:08:21.720+0000",
            "id": 2
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "getContentNodeType() is hardcoded to nt:unstructured in DefaultHandler. So the current code always tries to create jcr:content with type nt:unstructured. This fails if the parent's child node definition does not allow nt:unstructured for jcr:content (i.e. requires nt:resource).\n\nAs Jukka noted, the patch is flawed. \n\n",
            "date": "2009-04-23T11:23:51.842+0000",
            "id": 3
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Corrected patch:\n\nCheck whether jcr:content can be created with the note type returned by getContentNodeType(). If so create it. Otherwise try to create jcr:content without explicitly specifying a node type.\n\n",
            "date": "2009-04-23T11:59:40.304+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "Not sure if asking the primary node type is enough, we should probably check all the mixin types too.",
            "date": "2009-04-23T13:19:21.117+0000",
            "id": 5
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Yes you're right. I see two options: \n\n1) Check whether any of getPrimaryNodeType() or getMixinNodeTypes() allows for adding the jcr:content node of the given type. If so create it. Otherwise try to create jcr:content without explicitly specifying a node type. \n\n2) Try to create jcr:content with the given type. On RepositoryException retry without explicitly specifying a node type. \n\nFor 1) the supertypes should theoretically also be considered. However for a compliant repository implementation they can be ignored I think. 2) is more general since it just retries regardless of why adding failed on the first try. \n\nWDYT?",
            "date": "2009-04-23T14:18:46.465+0000",
            "id": 6
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Just talked to Jukka. We decided that  JCR-2070-1.patch should be fine. It doesn't break backwards compatibility while it enhances interoperability. ",
            "date": "2009-04-30T14:21:10.535+0000",
            "id": 7
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Fixed at revision 770255  \n",
            "date": "2009-04-30T14:48:17.707+0000",
            "id": 8
        }
    ],
    "component": "jackrabbit-jcr-server",
    "description": "When creating a new file, jcr:content defaults to nt:unstructured. This causes file creation to fail when the underlying persistent store (i.e. SPI implementation) does not support nt:unstructured for jcr:content. \n\nI suggest to check whether the underlying implementation provides its own node type for jcr:content and use that one. If not, default to nt:unstructured.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2070",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "jcr-server should respect child node definition of jcr:content",
    "systemSpecification": true,
    "version": ""
}