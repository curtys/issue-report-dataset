{
    "comments": [
        {
            "author": "Dan Connelly",
            "body": "Copy of DocumentViewImportTest.java except that method createSimpleDocument is overriden.",
            "date": "2006-11-03T20:24:54.000+0000",
            "id": 0
        },
        {
            "author": "Dan Connelly",
            "body": "Attachment 1 is functionally the same as Attachment 2.    Removed copied code.",
            "date": "2006-11-03T21:32:00.000+0000",
            "id": 1
        },
        {
            "author": "Dan Connelly",
            "body": "Oops.   My mistake.   The failing tests are invalid.    Please close this JIRA. ",
            "date": "2006-11-03T23:14:22.000+0000",
            "id": 2
        },
        {
            "author": "Dan Connelly",
            "body": "On second thought, don't close this JIRA.\n\nThe latest attached JUnit shows the problem without having to introduce new document contents.\n\nThe method importWithHandler in DocumentViewImportTest is overridden in such a way that the JVM default parser is used to extract events directly from the DOM.\n\nProblem is that Sun'd Apache Xalan parser delivers different events to the handler than does org.apache.xerces.parsers.SAXParser.",
            "date": "2006-11-05T01:21:59.000+0000",
            "id": 3
        },
        {
            "author": "Dan Connelly",
            "body": "I change the class name (and file name) for the new JUnit test.    The problem is due the DOMSource, not to XMI style XMLs.",
            "date": "2006-11-05T01:48:33.000+0000",
            "id": 4
        },
        {
            "author": "Stefan Guggisberg",
            "body": "when importing a document view xml file using Workspace.getImportHandler()\nany namespace declarations reported as element attributes (e.g. xmlns:foo=\"http://acme.org/foo\")\nwill be misinterpreted as jcr properties. any attempt to access sucha property using the\njcr api will lead to an UndeclaredPrefixException since the xmlns namespace cannot be used in jcr.\n\nbtw: whether namespace declarations are reported as element attributes is governed by the \nfollowing sax feature: http://xml.org/sax/features/namespace-prefixes\nsee http://xerces.apache.org/xerces2-j/features.html#namespace-prefixes\n\ni don't know how this can be controlled when doing dom->sax transformations using  javax.xml.transform.Transformer.\n",
            "date": "2006-11-08T15:21:32.000+0000",
            "id": 5
        },
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in svn rev. 472523",
            "date": "2006-11-08T15:43:37.000+0000",
            "id": 6
        }
    ],
    "component": "xml",
    "description": "XMIDocumentViewImportTest is copy of DocumentViewImportTest EXCEPT that createSimpleDocument is overridden.\n\nNew simple document is typical of XMI serializations from Eclipse Modeling Framework (EMF).\n\nFour out of eight tests fail due to bad uri    Trace below:\n\njavax.jcr.NamespaceException: www.apache.org/jackrabbit/test/namespaceImportTest7: is not a registered namespace uri.\n\tat org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegistryImpl.java:378)\n\tat org.apache.jackrabbit.core.LocalNamespaceMappings.getPrefix(LocalNamespaceMappings.java:193)\n\tat org.apache.jackrabbit.core.SessionImpl.getNamespacePrefix(SessionImpl.java:1307)\n\tat org.apache.jackrabbit.test.api.XMIDocumentViewImportTest.checkImportSimpleXMLTree(XMIDocumentViewImportTest.java:176)\n\tat org.apache.jackrabbit.test.api.XMIDocumentViewImportTest.performTests(XMIDocumentViewImportTest.java:154)\n\tat org.apache.jackrabbit.test.api.XMIDocumentViewImportTest.doTestImportXML(XMIDocumentViewImportTest.java:119)\n\tat org.apache.jackrabbit.test.api.XMIDocumentViewImportTest.testWorkspaceImportXml(XMIDocumentViewImportTest.java:70)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-620",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Workspace.getImportHandler() doesn't handle namespace declarations in document view when they are reported as attributes",
    "systemSpecification": true,
    "version": "1.1"
}