{
    "comments": [
        {
            "author": "Thomas Mueller",
            "body": "This patch uses a default max queue size of 100'000. A warning is logged at most every 5 seconds, together with the stack trace (to find problems with recursive event listeners).",
            "date": "2009-11-23T16:06:40.814+0000",
            "id": 0
        },
        {
            "author": "Thomas Mueller",
            "body": "jcr-2402-2.patch will calculate the number of event states, not the number of DispatchAction objects. The limit is set to 200'000, which is about 200 MB (according to my test). The thread waits after adding the DispatchAction, otherwise actions with many events would wait forever.",
            "date": "2009-11-24T16:35:41.554+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core, observation",
    "description": "Jackrabbit uses an unbounded observation queue for event listeners (for asynchronous listeners, which are the default). If an observation listener is very slow, the observation queue gets larger and larger, and the JVM will eventually run out of memory.\n\nI suggest to use a maximum queue size of 100'000 by default. Adding new events to the queue will block until the observation listeners removed an item. I'm not sure if we need a way to configure this option; probably a system property is enough as a start (we can still add a better way to configure this setting if it turns out somebody actually needs a different value).\n\nA special case is observation listeners that themselves write to the repository and therefore cause new events. In this case, it doesn't make sense to block adding an event, because that would block the whole system. However a warning should be written to the log file.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2402",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Observation: avoid running out of memory",
    "systemSpecification": true,
    "version": ""
}