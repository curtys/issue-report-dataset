{
    "comments": [
        {
            "author": "Marcel  May",
            "body": "Using JK in an app server environment with managed connections, I'm not sure about how the app server will respond to getConnection(user,pwd).\nThe connection from the pool is already authenticated. Guess the app server might not like it at all.\n\nHas anyone tested JK+JNDI Bundle conf in any application server?\n\nCan we get this fix into 1.4?\n\nWe've been really looking forward to JNDI support :-)",
            "date": "2008-01-10T16:42:52.772+0000",
            "id": 0
        },
        {
            "author": "Marcel  May",
            "body": "It seems that for app server environment (eg JBoss) it works with a user/pwd in both app server datasource configuration and redundantly in the JK PM configuration.\n\nThe only problem that remains is that for a corporate production environment and as an application provider,\nI often do not get the production db settings - only a configured datasource.\n\nSo, this issue remains critical for me as I'd have to go for patching JK myself.\nI can provide this trivial patch as Thomas suggested.",
            "date": "2008-01-11T14:15:43.512+0000",
            "id": 1
        },
        {
            "author": "Thomas Mueller",
            "body": "Fixed in revision 613799 (trunk).\nShould I commit this change to 1.4 branch as well? I think yes.",
            "date": "2008-01-21T08:51:43.131+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Yes, that would be nice. I recategorized this as a bug (incorrect use of DataSource) and tagged for 1.4.1.",
            "date": "2008-01-21T08:58:25.559+0000",
            "id": 3
        },
        {
            "author": "Thomas Mueller",
            "body": "Fixed in revision 613898 (branch 1.4). ",
            "date": "2008-01-21T14:23:42.575+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.3 branch in revision 632349.",
            "date": "2008-02-29T15:20:45.863+0000",
            "id": 5
        },
        {
            "author": "Guido J\u00e4kel",
            "body": "Dear Thomas,\n\nplease *reopen* this issue, it seems to be (still?) defect in 1.4.5!\n\nTrying to switch to the MySqlPersitanceManager and a Workspace Configuration like\n\n    [...]\n    <PersistenceManager class=\"org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager\">\n      <param name=\"driver\" value=\"javax.naming.InitialContext\"/>\n      <param name=\"url\" value=\"java:comp/env/jdbc/foo\"/>\n      <param name=\"schemaObjectPrefix\" value=\"${wsp.name}_\"/>\n      <param name=\"schema\" value=\"mysql\"/>\n    </PersistenceManager>\n    [...]\n\nTo access to a database connection defined in a Tomcat environment i got:\n\n20080904-135101.532 ERROR [main] [] [RepositoryImpl] Unable to start repository, forcing shutdown...\n20080904-135101.533 INFO  [main] [] [RepositoryImpl] Shutting down repository...\n20080904-135101.618 INFO  [main] [] [RepositoryImpl] Repository has been shutdown\n20080904-135101.619 ERROR [main] [] [RepositoryImpl] failed to start Repository: Cannot instantiate persistence manager org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager: null\njavax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager: null: null\n        at org.apache.jackrabbit.core.RepositoryImpl.createPersistenceManager(RepositoryImpl.java:1163)\n        at org.apache.jackrabbit.core.RepositoryImpl.access$700(RepositoryImpl.java:104)\n        at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.doInitialize(RepositoryImpl.java:1727)\n        at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.initialize(RepositoryImpl.java:1710)\n        at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:569)\n        at org.apache.jackrabbit.core.RepositoryImpl.initStartupWorkspaces(RepositoryImpl.java:408)\n        at org.apache.jackrabbit.core.RepositoryImpl.<init>(RepositoryImpl.java:304)\n        at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:550)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.createRepository(RepositoryStartupServlet.java:439)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.initRepository(RepositoryStartupServlet.java:407)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.startup(RepositoryStartupServlet.java:238)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.init(RepositoryStartupServlet.java:211)\n        at javax.servlet.GenericServlet.init(GenericServlet.java:212)\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1139)\n        at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:966)\n        at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3956)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4230)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:760)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:740)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:544)\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:825)\n        at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:714)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:490)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1138)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:120)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1022)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:736)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:448)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:700)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:552)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:295)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:433)\nCaused by: java.lang.UnsupportedOperationException\n        at org.apache.tomcat.dbcp.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:116)\n        at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection(BasicDataSource.java:554)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionFactory.getConnection(ConnectionFactory.java:60)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.setupConnection(ConnectionRecoveryManager.java:328)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.<init>(ConnectionRecoveryManager.java:137)\n        at org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager.init(BundleDbPersistenceManager.java:558)\n        at org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager.init(MySqlPersistenceManager.java:54)\n        at org.apache.jackrabbit.core.RepositoryImpl.createPersistenceManager(RepositoryImpl.java:1159)\n        ... 38 more\njava.lang.UnsupportedOperationException\n        at org.apache.tomcat.dbcp.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:116)\n        at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection(BasicDataSource.java:554)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionFactory.getConnection(ConnectionFactory.java:60)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.setupConnection(ConnectionRecoveryManager.java:328)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.<init>(ConnectionRecoveryManager.java:137)\n        at org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager.init(BundleDbPersistenceManager.java:558)\n        at org.apache.jackrabbit.core.persistence.bundle.MySqlPersistenceManager.init(MySqlPersistenceManager.java:54)\n        at org.apache.jackrabbit.core.RepositoryImpl.createPersistenceManager(RepositoryImpl.java:1159)\n        at org.apache.jackrabbit.core.RepositoryImpl.access$700(RepositoryImpl.java:104)\n        at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.doInitialize(RepositoryImpl.java:1727)\n        at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.initialize(RepositoryImpl.java:1710)\n        at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:569)\n        at org.apache.jackrabbit.core.RepositoryImpl.initStartupWorkspaces(RepositoryImpl.java:408)\n        at org.apache.jackrabbit.core.RepositoryImpl.<init>(RepositoryImpl.java:304)\n        at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:550)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.createRepository(RepositoryStartupServlet.java:439)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.initRepository(RepositoryStartupServlet.java:407)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.startup(RepositoryStartupServlet.java:238)\n        at org.apache.jackrabbit.j2ee.RepositoryStartupServlet.init(RepositoryStartupServlet.java:211)\n        at javax.servlet.GenericServlet.init(GenericServlet.java:212)\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1139)\n        at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:966)\n        at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3956)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4230)\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:760)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:740)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:544)\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:825)\n        at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:714)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:490)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1138)\n        at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)\n        at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:120)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1022)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:736)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1014)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:448)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:700)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:552)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:295)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:433)\n\n\nI think, \\org\\apache\\jackrabbit\\core\\persistence\\bundle\\util\\ConnectionFactory.java is still wrong at line 60ff. The thrown exception points out, that getConnection of the Pooled Datasource is called with user and passwort, which is illegal. \n\n                    if (user == null && password == null) {\n                        return ds.getConnection();\n                    } else {\n                        return ds.getConnection(user, password);\n                    }\n\nMay some other code accidentally set user and password to empty strings?\n\nNote: We're already using the feature of JNDI database connections, e.g.\n\n    <FileSystem class=\"org.apache.jackrabbit.core.fs.db.JNDIDatabaseFileSystem\">\n      <param name=\"dataSourceLocation\" value=\"java:comp/env/jdbc/foo\"/>\n      <param name=\"schemaObjectPrefix\" value=\"${wsp.name}_\"/>\n      <param name=\"schema\" value=\"mysql\"/>\n    </FileSystem>\n\nis in use without this problem.",
            "date": "2008-09-04T12:56:54.646+0000",
            "id": 6
        },
        {
            "author": "Thomas Mueller",
            "body": "Hi,\n\nFrom the stack trace looks like you are not using Jackrabbit 1.4.5:\n\njava.lang.UnsupportedOperationException\n        at org.apache.tomcat.dbcp.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:116)\n        at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection(BasicDataSource.java:554)\n        at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionFactory.getConnection(ConnectionFactory.java:60)\n        ...\n\nLine 60 of ConnectionFactory.java in Jackrabbit 1.4.5 does not call getConnection:\n                    if (user == null && password == null) {\nThat means you are using an old version of Jackrabbit core. \nCould you check that there is no old jackrabbit-core in your classpath?\n\nRegards,\nThomas\n\n",
            "date": "2008-09-08T15:36:02.786+0000",
            "id": 7
        },
        {
            "author": "Guido J\u00e4kel",
            "body": "> Could you check that there is no old jackrabbit-core in your classpath?\n\nGotcha, thanks for analysis. But the mistake is up to the jackrabit team:\n\nYes indeed, there is a wrong version in the path. But i forget to mention, that i'm using the jackrabbit-webapp.war because we're currently use RMI communication.\n\nI just take a closer look onto the contents of this war archive. Regardless what version of the other jackrabbit archives i will offer, this will have no effect -- because this is a \"stand alone\" war and have included it's own copy of the libraries inside /WEB-INF/lib/.\n\nAnd (from my users point of view) *you* forgot to update it and should provide a updated jackrabbit-webapp-1.4.5.war including the latest version of  (all of) the used libs:\n\n---------------------------------\n\n# unzip -l jackrabbit-webapp-1.4.war  \"*/jackrabbit*.jar\"                \nArchive:  jackrabbit-webapp-1.4.war\n  Length     Date   Time    Name\n --------    ----   ----    ----\n  1749859  01-11-08 14:41   WEB-INF/lib/jackrabbit-core-1.4.jar\n     9734  01-11-08 14:39   WEB-INF/lib/jackrabbit-api-1.4.jar\n   164719  01-11-08 14:39   WEB-INF/lib/jackrabbit-jcr-commons-1.4.jar\n   112033  01-11-08 14:39   WEB-INF/lib/jackrabbit-spi-commons-1.4.jar\n    23095  01-11-08 14:39   WEB-INF/lib/jackrabbit-spi-1.4.jar\n    33494  01-11-08 14:40   WEB-INF/lib/jackrabbit-text-extractors-1.4.jar\n   259610  01-11-08 14:43   WEB-INF/lib/jackrabbit-jcr-server-1.4.jar\n   290856  01-11-08 14:43   WEB-INF/lib/jackrabbit-webdav-1.4.jar\n    31311  01-11-08 14:43   WEB-INF/lib/jackrabbit-jcr-servlet-1.4.jar\n   217829  01-11-08 14:43   WEB-INF/lib/jackrabbit-jcr-rmi-1.4.jar\n --------                   -------\n  2892540                   10 files\n\n-------------------------------\n\nI've created an updated war by myself and it seems to work: At least, now it's starting up with the JNDI configuration...\n\n\nThank you for quick help!\n\nGuido",
            "date": "2008-09-09T07:56:22.549+0000",
            "id": 8
        }
    ],
    "component": "jackrabbit-core",
    "description": "When using the org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory, the BundleDbPersistenceManager can not open a database connection via JNDI because the method DataSource.getConnection(user, password) is not supported. Instead, DataSource.getConnection() must be used for this to work.\n\nConnectionFactory.getConnection should be changed to call this method if user name and password are empty.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1305",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JNDI data sources with BundleDbPersistenceManager: UnsupportedOperationException",
    "systemSpecification": true,
    "version": "1.4"
}