{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Fixing issue JCR-164 should also improve stability of the search index, because it depends on a atomic commit of data in SharedItemStateManager.store().\n\nAlso improved NodeIterator implementation for QueryResults. The next Node instance is now fetched ahead together with the hasNext() call. Thus it should not happen again, that after hasNext() returned true, a call to nextNode() will throw a NoSuchElementException. The Node that is returned may still be invalid (because it has been deleted by another session) and throw an InvalidItemStateException when reading its state. But that may happen to any Node instance obtained.\n\nCommitted at svn revision: 209739",
            "date": "2005-07-08T20:52:26.000+0000",
            "id": 0
        },
        {
            "author": "fabrizio giustina",
            "body": "I got this error once more with revision < 209739:\nthe search index became corrupted after an OutOfMemoryError (note that no write operations were in place when the out of memory occurred, only read). I can't see any particular stacktrace involving the lucene indexer in the out of memory log.\n\nAnyway, after restarting the application a write lock on the search index was set and an uncommitted redo log was present:\n\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14:13:02 -- Removing write lock on search index.\nWARN   org.apache.jackrabbit.core.query.lucene.MultiIndex 11.07.2005 14:13:02 -- Found uncommitted redo log. Applying changes now...\nWARN   org.apache.jackrabbit.core.query.lucene.MultiIndex 11.07.2005 14:23:23 -- Redo changes applied.\n\nafter this, the search index is definitively out of sync and it need to be deleted...\n",
            "date": "2005-07-11T22:26:58.000+0000",
            "id": 1
        },
        {
            "author": "fabrizio giustina",
            "body": "Updated stacktrace with latest svn revision (after the changes in rev. 209739).\nNow the exception is thrown directly in the hasNext() method. Note that the exception occours also while trying to fetch valid nodes, since it's always thrown while trying to sort nodes in document order.\n\nERROR  org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl DocOrderNodeIteratorImpl.java(compare:186) 11.07.2005 22:06:44  Exception while sorting nodes in document order: javax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\njavax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\n\tat org.apache.jackrabbit.core.ItemManager.createItemInstance(ItemManager.java:523)\n\tat org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:374)\n\tat org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl$1.compare(DocOrderNodeIteratorImpl.java:142)\n\tat java.util.Arrays.mergeSort(Arrays.java:1284)\n\tat java.util.Arrays.mergeSort(Arrays.java:1296)\n\tat java.util.Arrays.mergeSort(Arrays.java:1296)\n\tat java.util.Arrays.mergeSort(Arrays.java:1295)\n\tat java.util.Arrays.mergeSort(Arrays.java:1296)\n\tat java.util.Arrays.mergeSort(Arrays.java:1296)\n\tat java.util.Arrays.sort(Arrays.java:1223)\n\tat org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl.initOrderedIterator(DocOrderNodeIteratorImpl.java:136)\n\tat org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl.hasNext(DocOrderNodeIteratorImpl.java:95)",
            "date": "2005-07-12T18:51:25.000+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "Thanks for the update on the stacktrace, but it does not seem to match the current svn revision.\n\nAre you sure you were using the latest compiled version of the DocOrderNodeIteratorImpl class?\n\nAny chance that you can provide the node type of that node by looking up the lucene document in the index?\n\nThanks a lot for your help.",
            "date": "2005-07-12T21:01:17.000+0000",
            "id": 3
        },
        {
            "author": "fabrizio giustina",
            "body": "Updated jackrabbit to rev. 215946.\nWith the same currupted index I don't get any error anymore, only a warning log for the missing nodes:\n\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:45:11 -- Node e6c5b588-50a5-4148-afbd-f7ff95104d36 does not exist anymore: javax.jcr.ItemNotFoundException: e6c5b588-50a5-4148-afbd-f7ff95104d36\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:45:12 -- Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore: javax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:45:12 -- Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore: javax.jcr.ItemNotFoundException: 7bb7855c-8317-40fd-b3b8-2cc27bb555db\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:45:54 -- Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore: javax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:46:06 -- Node e6c5b588-50a5-4148-afbd-f7ff95104d36 does not exist anymore: javax.jcr.ItemNotFoundException: e6c5b588-50a5-4148-afbd-f7ff95104d36\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:46:06 -- Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore: javax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:46:06 -- Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore: javax.jcr.ItemNotFoundException: 7bb7855c-8317-40fd-b3b8-2cc27bb555db\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:46:58 -- Node f3b725ae-bab7-438b-9576-abb1cf65ffeb does not exist anymore: javax.jcr.ItemNotFoundException: f3b725ae-bab7-438b-9576-abb1cf65ffeb\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:46:58 -- Node 5852da20-2adb-4a20-8856-bd2d29023e9d does not exist anymore: javax.jcr.ItemNotFoundException: 5852da20-2adb-4a20-8856-bd2d29023e9d\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node c0853856-766d-46ed-b40d-4a781a2c798a does not exist anymore: javax.jcr.ItemNotFoundException: c0853856-766d-46ed-b40d-4a781a2c798a\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore: javax.jcr.ItemNotFoundException: 7bb7855c-8317-40fd-b3b8-2cc27bb555db\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 96e901e6-68e3-4807-8eb5-14cadb732ec9 does not exist anymore: javax.jcr.ItemNotFoundException: 96e901e6-68e3-4807-8eb5-14cadb732ec9\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 26f9fdd6-1aba-43c9-99d7-8ceef89cfcbf does not exist anymore: javax.jcr.ItemNotFoundException: 26f9fdd6-1aba-43c9-99d7-8ceef89cfcbf\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 0bbbd9de-cd5e-48b1-95b3-8e1f51ddb199 does not exist anymore: javax.jcr.ItemNotFoundException: 0bbbd9de-cd5e-48b1-95b3-8e1f51ddb199\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 436c5b31-bfcb-4e91-8d92-b8763ced742c does not exist anymore: javax.jcr.ItemNotFoundException: 436c5b31-bfcb-4e91-8d92-b8763ced742c\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 8572edac-0783-4a1d-a1b7-41431ffcf999 does not exist anymore: javax.jcr.ItemNotFoundException: 8572edac-0783-4a1d-a1b7-41431ffcf999\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node cca4774f-18a7-4f3b-ba9f-2207af630a45 does not exist anymore: javax.jcr.ItemNotFoundException: cca4774f-18a7-4f3b-ba9f-2207af630a45\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node 90f036dc-83fc-448e-a467-3c608b23976f does not exist anymore: javax.jcr.ItemNotFoundException: 90f036dc-83fc-448e-a467-3c608b23976f\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore: javax.jcr.ItemNotFoundException: b14139fb-01ab-492d-a465-e183cb43b484\nWARN   org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17:47:02 -- Node c244633b-ff6c-43ef-843d-cd343b29ff61 does not exist anymore: javax.jcr.ItemNotFoundException: c244633b-ff6c-43ef-843d-cd343b29ff61\n\n\nA lot better now, the latest enhancement could be removing any invalid node found during the search... since the index can be easily corrupted by a forced shutdown or an OutOfMemoryError I think there is no way to be totally sure that this will never happen: a \"self-reparing\" index could probably be the better solution.\n\nThanks, good work!\n\n\n",
            "date": "2005-07-13T00:55:51.000+0000",
            "id": 4
        },
        {
            "author": "Marcel Reutegger",
            "body": "I'm currently working on integrity check which is executed on startup if the index detects a prior forced shutdown. Removing nodes from the index on the fly would be harmful to the design of the query handler. The query result shouldn't have to know about the actual index.",
            "date": "2005-07-13T16:37:51.000+0000",
            "id": 5
        },
        {
            "author": "Marcel Reutegger",
            "body": "Improved query handler:\n\n- A possible commit.lock is now also removed on startup. Previously only a write.lock was removed.\n- An integrity check is run if the search index detects a commit or write lock on startup. This check removes nodes from the index that are not available anymore through the ItemStateManager.\n- Applying the redo log on startup is now more failsafe.\n\nsvn revision: 216142",
            "date": "2005-07-13T20:41:52.000+0000",
            "id": 6
        },
        {
            "author": "Marcel Reutegger",
            "body": "Extended consistency check to also include:\n- Missing ancestor\n- Unknown parent\n- Nodes indexed more than once\n\nPer default a consistency check is performced when the search index detects a prior forced shutdown. The search index can also be configured to perform a consistency check on each startup. Inconsistencies are repaired per default. The search index can also be configured to just report those errors to the log.\n\nsvn revision: 219477",
            "date": "2005-07-18T21:22:29.000+0000",
            "id": 7
        },
        {
            "author": "fabrizio giustina",
            "body": "An interesting stacktrace coming from the consistency checker: this is coming from a development environment where the tomcat instance has been killed.\nThe repository can't be started anymore due to an error caught in the ConsistencyCheck$MissingAncestor.repair\n\n\n\n\nWARN   org.apache.jackrabbit.core.query.lucene.MultiIndex MultiIndex.java(<init>:178) 22.07.2005 10:22:21  Found uncommitted redo log. Applying changes now...\nWARN   org.apache.jackrabbit.core.query.lucene.MultiIndex MultiIndex.java(<init>:195) 22.07.2005 10:22:23  Redo changes applied.\nWARN   org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java(cacheInit:212) 22.07.2005 10:22:23  Duplicate index entry for node: 93625c1b-1cc7-4be7-9ee4-8cf932af57eb\nWARN   org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java(cacheInit:212) 22.07.2005 10:22:23  Duplicate index entry for node: 548eda92-f29f-4031-b277-a077c01a0d00\nWARN   org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java(cacheInit:212) 22.07.2005 10:22:23  Duplicate index entry for node: 2c49ecbd-9263-42a4-9f71-20c7a128d38e\nWARN   org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java(cacheInit:212) 22.07.2005 10:22:23  Duplicate index entry for node: f95273a5-c7e5-46f8-b3c4-3e2cb8c06979\nWARN   org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java(cacheInit:212) 22.07.2005 10:22:23  Duplicate index entry for node: afa51196-d9af-4160-8dfe-ea3f5e6b893b\nERROR  org.apache.jackrabbit.core.RepositoryImpl RepositoryImpl.java(<init>:208) 22.07.2005 10:22:23  Unable to start repository. forcing shutdown.\nERROR  RepositoryNotInitializedException: uuid can not be null: uuid can not be null: uuid can not be null: uuid can not be null: uuid can not be null\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3669)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4104)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:450)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:683)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\nCaused by: javax.jcr.RepositoryException: uuid can not be null: uuid can not be null: uuid can not be null\n\tat org.apache.jackrabbit.core.SearchManager.<init>(SearchManager.java:125)\n\tat org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getSearchManager(RepositoryImpl.java:1141)\n\tat org.apache.jackrabbit.core.RepositoryImpl.getSearchManager(RepositoryImpl.java:550)\n\tat org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:412)\n\tat org.apache.jackrabbit.core.RepositoryImpl.<init>(RepositoryImpl.java:204)\n\tat org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:358)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.init(BindableRepository.java:116)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.create(BindableRepository.java:104)\n\tat org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository(RegistryHelper.java:57)\n\t... 21 more\nCaused by: java.lang.IllegalArgumentException: uuid can not be null\n\tat org.apache.jackrabbit.core.NodeId.<init>(NodeId.java:37)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck$MissingAncestor.repair(ConsistencyCheck.java:259)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair(ConsistencyCheck.java:117)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit(SearchIndex.java:140)\n\tat org.apache.jackrabbit.core.query.AbstractQueryHandler.init(AbstractQueryHandler.java:39)\n\tat org.apache.jackrabbit.core.SearchManager.<init>(SearchManager.java:123)\n\t... 30 more\njavax.jcr.RepositoryException: uuid can not be null: uuid can not be null: uuid can not be null\n\tat org.apache.jackrabbit.core.SearchManager.<init>(SearchManager.java:125)\n\tat org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getSearchManager(RepositoryImpl.java:1141)\n\tat org.apache.jackrabbit.core.RepositoryImpl.getSearchManager(RepositoryImpl.java:550)\n\tat org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:412)\n\tat org.apache.jackrabbit.core.RepositoryImpl.<init>(RepositoryImpl.java:204)\n\tat org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:358)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.init(BindableRepository.java:116)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.create(BindableRepository.java:104)\n\tat org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository(RegistryHelper.java:57)\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3669)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4104)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:450)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:683)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\nCaused by: java.lang.IllegalArgumentException: uuid can not be null\n\tat org.apache.jackrabbit.core.NodeId.<init>(NodeId.java:37)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck$MissingAncestor.repair(ConsistencyCheck.java:259)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair(ConsistencyCheck.java:117)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit(SearchIndex.java:140)\n\tat org.apache.jackrabbit.core.query.AbstractQueryHandler.init(AbstractQueryHandler.java:39)\n\tat org.apache.jackrabbit.core.SearchManager.<init>(SearchManager.java:123)\n\t... 30 more\njava.lang.IllegalArgumentException: uuid can not be null\n\tat org.apache.jackrabbit.core.NodeId.<init>(NodeId.java:37)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck$MissingAncestor.repair(ConsistencyCheck.java:259)\n\tat org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair(ConsistencyCheck.java:117)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit(SearchIndex.java:140)\n\tat org.apache.jackrabbit.core.query.AbstractQueryHandler.init(AbstractQueryHandler.java:39)\n\tat org.apache.jackrabbit.core.SearchManager.<init>(SearchManager.java:123)\n\tat org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getSearchManager(RepositoryImpl.java:1141)\n\tat org.apache.jackrabbit.core.RepositoryImpl.getSearchManager(RepositoryImpl.java:550)\n\tat org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:412)\n\tat org.apache.jackrabbit.core.RepositoryImpl.<init>(RepositoryImpl.java:204)\n\tat org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:358)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.init(BindableRepository.java:116)\n\tat org.apache.jackrabbit.core.jndi.BindableRepository.create(BindableRepository.java:104)\n\tat org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository(RegistryHelper.java:57)\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3669)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4104)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:450)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:683)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:537)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)",
            "date": "2005-07-22T17:36:00.000+0000",
            "id": 8
        },
        {
            "author": "Marcel Reutegger",
            "body": "Thanks for reporting this issue. The problem was, that the repair did not stop when it encountered the root node :-/\n\nFixed in svn revision: 220279",
            "date": "2005-07-22T18:27:36.000+0000",
            "id": 9
        },
        {
            "author": "Marcel Reutegger",
            "body": "After depending issues JCR-168 and JCR-170 have been fixed, I'm now quite confident that this issue can be resolved.\n\nIf there should arise new inconsistent situations with the search index, a new issue should be created.",
            "date": "2005-08-09T17:08:03.000+0000",
            "id": 10
        }
    ],
    "component": "query",
    "description": "After some time the search index is not in sync anymore with the data in the workspace and returns uuids which have no corresponding Node in the workspace. This results in a NodeIterator which throws an ItemNotFoundException on nextNode().\n\nInstructions how to reproduce this error are not yet available.\n\nPossible areas for further investigation are:\n- NodeType registry which maps the node types into the workspace with the use of virtual item states\n- versioning?\n- atomicity of indexing?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-160",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Query index not in sync with workspace",
    "systemSpecification": false,
    "version": ""
}