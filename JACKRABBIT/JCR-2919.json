{
    "comments": [
        {
            "author": "angela",
            "body": "> Worse yet, JCR-2857 introduces sequential node ids. Guessing is a piece of cake in such a setup. \n\nthe token nodes never use sequention node ids.",
            "date": "2011-03-16T17:43:19.740+0000",
            "id": 0
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "> the token nodes never use sequention node ids. \n\nSince JCR-2857 this is a configuration option. So yes this setup is possible. ",
            "date": "2011-03-16T18:10:44.789+0000",
            "id": 1
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Apparently sequential node ids are not used anymore for token nodes since rev. 1076597. See http://svn.apache.org/viewvc?view=revision&revision=1076597\n\nMy general concern remains however. ",
            "date": "2011-03-18T10:11:35.050+0000",
            "id": 2
        },
        {
            "author": "Thomas Mueller",
            "body": "revision 1076597 uses:\nif (System.getProperty(NodeIdFactory.SEQUENTIAL_NODE_ID) == null) {\n  ...\n}\n\nI think security shouldn't check this setting, and shouldn't rely on (the 'security of') node ids in general. Not sure if that's related, but it's possible to import nodes with fixed node ids. The fact that node ids are randomly generated is just an implementation detail of the current Jackrabbit.\n\nWouldn't it be simpler to store the token as a property _value_? Or instead of storing the token itself, store the (secure) hash code of the token as a value?\n",
            "date": "2011-03-18T10:29:26.894+0000",
            "id": 3
        },
        {
            "author": "Felix Meschberger",
            "body": "> System.getProperty(NodeIdFactory.SEQUENTIAL_NODE_ID)\n\nAre you kidding ? Are we really configuring this through system properties ?",
            "date": "2011-09-23T12:58:19.816+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-core, security",
    "description": "Token based authentication as implemented with JCR-2851 seems to exhibit a security issue: the token returned by the server consists of the identifier of a (newly created) node in the repository. An attacker who is able to guess (or acquire by other means i.e. via log files) that identifier will be granted access to the repository. Worse yet, JCR-2857 introduces sequential node ids. Guessing is a piece of cake in such a setup.\n\nI think we should decouple authentication secrets from node ids. A simple solution would be to store the secret in a token attribute and delegate generation of the secret to a dedicated handler. Such a handler can then use a secure random generator, private/public key encryption or whatever other method that is deemed appropriate to generate the authentication secret. \n\nInitial discussion see: http://markmail.org/thread/aspetgvmj2qud25a",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2919",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Security of token base authentication",
    "systemSpecification": true,
    "version": "2.3"
}