{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Proposed changes.",
            "date": "2009-02-19T11:12:26.460+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Committed patch in revision: 746932",
            "date": "2009-02-23T09:00:54.485+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "Merged into 1.4 branch in revision: 813274",
            "date": "2009-09-10T07:22:09.933+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "Merged into 1.5 branch in revision: 813319",
            "date": "2009-09-10T09:00:31.541+0000",
            "id": 3
        }
    ],
    "component": "jackrabbit-core",
    "description": "AbstractRecord keeps a list of already used UUIDs and references\nthem by index when used again in a record. Using a List does not\nscale well, when the record grows larger. e.g. a transaction of\n10k nodes takes more than a minute on my machine when the journal\nis enabled. Most of the time is spent doing List.indexOf() in\nAbstractRecord.getOrCreateIndex().",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1988",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "AbstractRecord does inefficient List.indexOf()",
    "systemSpecification": true,
    "version": ""
}