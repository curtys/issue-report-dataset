{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Since it's a new feature, it doesn't really have an affected version...",
            "date": "2007-05-08T16:30:16.366+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "Added an interface that allows to plug in a custom SynonymProvider.\n\nCommitted in revision: 536247",
            "date": "2007-05-08T16:44:14.628+0000",
            "id": 1
        },
        {
            "author": "Marcel Reutegger",
            "body": "Added a SynonymProvider implementation that uses WordNet to get synonyms for a search term.\n\nSee: contrib/wordnet-synonyms\n\nPlease note that this contrib requires some manual steps to build the jar file! More information can be found in the README.txt file.\n\nCommitted in revision: 536250",
            "date": "2007-05-08T16:53:09.925+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Instead of bundling the synonym database in the jar file I think it would make more sense to add a configuration entry for a user to indicate which file in the deployment environment contains the synonym database. I guess the current configuration mechanism doesn't allow making such entries easily pluggable for alternative synonym mechanisms...",
            "date": "2007-05-08T19:05:37.606+0000",
            "id": 3
        },
        {
            "author": "Marcel Reutegger",
            "body": "In general I agree. The problem I had was that I didn't know how to supply a parameter to a parameter ;) and my intention was to make the wordnet synonym provider deployment as easy as possible.\n\nHow about this:\n\n- add a new parameter: synonymProviderOptions\n- Extend the SynonymProvider interface with an init method that passes in the options string",
            "date": "2007-05-09T07:58:59.485+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-core, query",
    "description": "Jackrabbit should support synonym searches in the jcr:contains function like Google does.\n\nExample:\n\n//element(*, nt:resource)[jcr:contains(., '~food')]\n\n-> finds all nt:resource nodes that contain the word food or synonyms for food.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-901",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Support synonym searches",
    "systemSpecification": true,
    "version": ""
}