{
    "comments": [
        {
            "author": "Nicholas Stuart",
            "body": "path to swap StringRefAddr to match glassfish Reference object.",
            "date": "2008-06-27T16:07:10.951+0000",
            "id": 0
        },
        {
            "author": "Nicholas Stuart",
            "body": "I also just tested this behaviour out in 1.4.5 and it is the same there. I haven't looked at the code difference between 1.4.5 and 1.5 so they very well could be the same thing, so it may not be all that surprising.",
            "date": "2008-06-30T16:22:10.062+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "the contract of javax.naming.Reference is pretty clear, i.e. it maintains an ordered list of RefAddr objects.\njackrabbit always adds the RefAddr objects in the same order.\n\nit seems like this is a glassfish issue not handling Reference's correctly. i'm therefore tempted to resolve this issue as 'Invalid'.\n\n> Also, another problem is that getReference is binding the class name to BindableRepository class implementation and not javax.jcr.Repository. This again causes them not to match if you follow the example on the wiki on setting up the JNDI reference and use javax.jcr.Repository as the type.\n\nBindableRepository does implement javax.jcr.Repository. what WIKI page are you refering to?",
            "date": "2008-07-16T15:56:30.527+0000",
            "id": 2
        },
        {
            "author": "Nicholas Stuart",
            "body": "Yes I understand Reference contains an ordered pair, and if I reverse the current order it works fine in GF as shown with the above patch. I have no idea how one would specifiy the order when creating a JNDI reference in the server though so I don't know who's fault it is. It seems that this order is preserved no matter how you add the values in GF\n\nAlso, I am refering to http://wiki.apache.org/jackrabbit/JackRabbitOnSunWebServer\n\nAnd its not that BindableRepository implementing javax.jcr.Repository is a problem, its the fact that the full impl class is being returned for the lookup, and I'm guess Reference is doing an equals() compare, and not an \"instanceof\" test so it fails.",
            "date": "2008-07-16T20:08:45.064+0000",
            "id": 3
        },
        {
            "author": "Stefan Guggisberg",
            "body": "> Also, I am refering to http://wiki.apache.org/jackrabbit/JackRabbitOnSunWebServer \n\ndid you try the following?\n\n[...]\n6. Create a new \"Custom Resource\" with the following paramter:\n\nEnabled: true Resource Type: org.apache.jackrabbit.core.jndi.BindableRepository Factory class: org.apache.jackrabbit.core.jndi.BindableRepositoryFactory\n\nAdd to paramteters: 1st configFile and then repHomeDir\n[...]\n\nif that works for you please let me know and update the said WIKI page.\n\nthanks!",
            "date": "2008-07-18T13:21:49.644+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "How about the attached patch (JCR-1664.patch)? Instead of explicitly storing the configuration options, this patch makes BindableRepository contain the full Reference instance. This should avoid all ordering issues.\n\nI also streamlined these JNDI classes a bit by using the AbstractRepository base class and the JackrabbitRepository interface, and by inlining many of the static methods that weren't being used outside the jndi package.",
            "date": "2008-07-25T13:50:39.799+0000",
            "id": 5
        },
        {
            "author": "Jukka Zitting",
            "body": "Updated version of the patch. Need to keep explicitly synchronizing the static BindableRepositoryFactory.cache map.",
            "date": "2008-07-25T13:54:18.710+0000",
            "id": 6
        },
        {
            "author": "Stefan Guggisberg",
            "body": "> Updated version of the patch. Need to keep explicitly synchronizing the static BindableRepositoryFactory.cache map.\n\n+1 for the patch\n\nthanks, jukka!",
            "date": "2008-07-25T15:29:09.239+0000",
            "id": 7
        },
        {
            "author": "Jukka Zitting",
            "body": "Patch applied in revision 681031. Resolving as Fixed.",
            "date": "2008-07-30T13:53:07.983+0000",
            "id": 8
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.4 branch in revision 695960.\n",
            "date": "2008-09-16T16:14:55.648+0000",
            "id": 9
        },
        {
            "author": "Jukka Zitting",
            "body": "I just noticed that revision 683268 that contained changes relevant to this issue was incorrectly labelled with JCR-1644 instead of JCR-1664, and that I therefore missed merging it to the 1.4 branch for the 1.4.6 release.\n\n1.4.6 still works with the previous 681031 changes merged, but it's a bit more difficult to subclass BindableRepository. We can include the missing 683268 changes in a jackrabbit-core 1.4.7 release if there's enough demand.",
            "date": "2009-01-12T16:22:10.867+0000",
            "id": 10
        },
        {
            "author": "Jukka Zitting",
            "body": "See JCR-1935 for the followup issue.",
            "date": "2009-01-14T10:42:41.771+0000",
            "id": 11
        }
    ],
    "component": "jackrabbit-core",
    "description": "I'm questioning the use of Referencable in the BindableResource and BindableResourceFactory classes for the JNDI lookup process. Reason for this is because Referencable needs the Addrs to be in the EXACT order in order for it to be considered the same. (see http://java.sun.com/j2se/1.4.2/docs/api/javax/naming/Reference.html#equals(java.lang.Object) )\n\nIn order for me to get the JNDI reference to be found correctly I had to change the BindableResource.getReference method to swap the order the StringReferences were added to match up what was being passed in by glassfish. This seems EXTREMELY fragile to me as I don't know what order, say JBoss, would pass the StringRefences in in the Reference object for the Factory method.\n\nAlso, another problem is that getReference is binding the class name to BindableRepository class implementation and not javax.jcr.Repository. This again causes them not to match if you follow the example on the wiki on setting up the JNDI reference and use javax.jcr.Repository as the type. This can either be fixed by changing the JNDI reference to use the BindableRepository class or the change the BindableRepository class to set that to the Repository interface. Not sure which would be considered 'better'\n\nI have a patch that fixes the first issue (at least for glassfish), but not the second. Again, this seems like a really 'breakable' setup right now and not sure what would be better to make sure this is avoided.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1664",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JNDI Referencable Issues",
    "systemSpecification": true,
    "version": "core 1.4.5"
}