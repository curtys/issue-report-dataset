{
    "comments": [
        {
            "author": "Raffaele Sena",
            "body": "I commented out the test for nt:base in writeSupertypes and now starting a new machine in the cluster from the journal works fine.\n\nSince CompactNodeTypeDefWriter is only used in the journal this shouldn't generate any regression.",
            "date": "2007-08-29T20:45:52.791+0000",
            "id": 0
        },
        {
            "author": "Dominique Pfister",
            "body": "Fixed as suggested, thanks for reporting and the good analysis!\n\nJust one small change: instead of checking for the special name '*' and its encoded value _x002a_ when reading back the node type definition, I left '*' unencoded when writing.\n\nFixed in revision 571394.",
            "date": "2007-08-31T07:52:52.968+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.3 branch in revision 577868.",
            "date": "2007-09-20T18:48:22.138+0000",
            "id": 2
        }
    ],
    "component": "clustering",
    "description": "I have an application that uses custom node types and I am having problems in a clustered configuration.\n\nIssue 1: the following definition in a nodetype is incorrectly read from the journal:\n  + * (nt:hierarchyNode) version\n\nThe * is stored in the journal as _x002a_ since it should be a QName and it gets escaped.\nWhen read, the code ...core.nodetype.compact.CompactNodeTypeDefReader.doChildNodeDefinition does the following test:\n\n        if (currentTokenEquals('*')) {\n            ndi.setName(ItemDef.ANY_NAME); \n        } else {\n            ndi.setName(toQName(currentToken));\n        }\n\nSince currentToken is _x002a_ and not * toQName(currentToken) is called but it fails.\nI changed the test to:\n        if (currentTokenEquals('*') || currentTokenEquals(\"_x002a_\"))\n            ....\nand that fixes the problem.\n\nIssue 2: when storing a nodeType in the journal the superclass nt:base is not store, but when reading I get an error saying the node should be a subclass of nt:base.\n\nThe code in...core.nodetype.compact.CompactNodeTypeDefWriter.writeSupertypes skips nt:base when writing the node.\n\nWhen reading the nodetype definition from the journal the following exception is thrown:\n\nUnable to deliver node type operation: [{http://namespace/app/repository/1.0}resource] all primary node types except nt:base itself must be (directly or indirectly) derived from nt:base\n\nprobably because nt:base is not re-added to the nodetype definition\n\n ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1096",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Problems with custom nodes in journal",
    "systemSpecification": true,
    "version": "1.2.1, 1.2.2, 1.2.3, 1.3, 1.3.1"
}