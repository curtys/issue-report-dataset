{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "most likely a regression of JCR-2138",
            "date": "2010-06-30T15:55:18.808+0000",
            "id": 0
        },
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in svn revision 961388",
            "date": "2010-07-07T14:31:03.026+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core",
    "description": "I've written the following snippet to illustrate the issue :\n\n        Node root = session.getRootNode();\n        \n        Node a = root.addNode(\"a\");\n        Node b = root.addNode(\"b\");\n        b.addMixin(\"mix:referenceable\");\n        \n        a.setProperty(\"p\", b);\n        \n        root.save();\n        \n        System.out.println(b.getReferences().getSize());     // --> correctly returns 1\n        \n        a.setProperty(\"p\", (Node) null);\n        a.setProperty(\"p\", b);\n        \n        root.save();\n        \n        System.out.println(b.getReferences().getSize());    // --> returns 0 !\n\nWhen the ChangeLog is processed, added references are processed before deleted ones, so the persisted NodeReferences is finally wrong.\n\nI've set the priority of this issue to critical, because the persisted references count is corrupted.\n\nA simple workaround is to first remove the property, then save, then add the property again, but it not satisfying.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2667",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Critical",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "NodeReferences are lost when deleting and setting the same reference in the same save() cycle",
    "systemSpecification": true,
    "version": "1.6.1"
}