{
    "comments": [
        {
            "author": "Martijn Hendriks",
            "body": "The attached patch solves the issue by calling fail on the JUnit thread. It furthermore tries to simplify the test mechanics which are used for checking blocking and non-blocking behavior.",
            "date": "2009-01-22T10:00:10.964+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core, test",
    "description": "The tests in the AbstractISMLockingTest class call junit.framework.Assert.fail() on threads that are not managed by the JUnit framework. Therefore, such calls to fail are not interpreted as test failures, but are merely logged to the console and the build succeeds. This is easy to see with a stub implementation of the ISMLocking type which returns non-null references from the two acquire methods and the downgrade method: many of the following stacktraces appear, but the build succeeds.\n\nException in thread \"Thread-1\" junit.framework.AssertionFailedError: acquireWriteLock must block\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat org.apache.jackrabbit.core.state.AbstractISMLockingTest.checkBlocking(AbstractISMLockingTest.java:214)\n\tat org.apache.jackrabbit.core.state.AbstractISMLockingTest$1.run(AbstractISMLockingTest.java:88)\n\tat java.lang.Thread.run(Thread.java:613)\n\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-1948",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Let the AbstractISMLockingTest tests fail properly",
    "systemSpecification": true,
    "version": ""
}