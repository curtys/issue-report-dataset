{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in r643919 as suggested.\n\nthanks for reporting this issue!",
            "date": "2008-04-02T14:30:41.751+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.4 branch in revision 650343.",
            "date": "2008-04-22T01:18:37.958+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core",
    "description": "When fixing JCR-1128 bug was introduced due to incorrect check for UUID behavior. Current code is:\n201 : \t if (!(existing.getId().equals(id)\n202 : \t&& (uuidBehavior == ImportUUIDBehavior.IMPORT_UUID_COLLISION_REMOVE_EXISTING\n203 :\t|| uuidBehavior == ImportUUIDBehavior.IMPORT_UUID_COLLISION_REMOVE_EXISTING))) {\n204 :\tthrow new ItemExistsException(existing.safeGetJCRPath());\n205 :\t}\n\nWhile it should check for ImportUUIDBehavior.IMPORT_UUID_COLLISION_REPLACE_EXISTING in one of the cases (line 202 or 203).\nAlso it is possible that id of imported item is not known and therefore value of \"id\" variable is null and check will always fail. Would be nice if this case can be handled as well.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1512",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Incorrect check for replace when importing item with colliding id",
    "systemSpecification": true,
    "version": "core 1.4.2"
}