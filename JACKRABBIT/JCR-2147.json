{
    "comments": [
        {
            "author": "angela",
            "body": "rev. 785112\n\n- org.apache.jackrabbit.core.security package\n- adjusted references to deprecated security classes in the jca repository.xml\n\nrev, 785517\n\n- org.apache.jackrabbit.core.state.*\n  removing the deprecated persistence manager api\n\nrev. 785519\n\n- org.apache.jackrabbit.core.value.ValueFactoryImpl\n\nrev. 785529\n\n- org.apache.jackrabbit.core.XASession",
            "date": "2009-06-16T08:45:51.778+0000",
            "id": 0
        },
        {
            "author": "Marcel Reutegger",
            "body": "This breaks configuration compatibility. Existing repositories upgraded to 2.0 using one of the removed classes in their configuration will not start anymore. Is this really intended. The affected classes (PersistenceManagers moved from core/state to core/persistence and simple security implementations moved from security to security/simple) have simply been moved to another package and it seems to me the consequences are quite significant for such a minor code rearrangement.\n\nI'd rather keep deprecated classes that are used in configuration or build some backward compatibility code into the configuration classes (rewriting the class attribute value).\n\nopinions?",
            "date": "2009-08-18T14:32:49.943+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "I looked at this recently and was thinking of adding a simple XSL transformation or custom mappings code in the configuration parser to catch and deal with such configuration changes.",
            "date": "2009-08-18T14:39:18.943+0000",
            "id": 2
        },
        {
            "author": "Marcel Reutegger",
            "body": "Proposed change.",
            "date": "2009-08-18T15:34:09.648+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "+1 Looks good.\n\nPersonally I'd set up the mapping simply using normal put() calls with static strings in BeanConfig (why parse things at runtime when javac can do it at compile time :-), but using a property file is just as fine.",
            "date": "2009-08-18T15:55:03.936+0000",
            "id": 4
        },
        {
            "author": "Marcel Reutegger",
            "body": "Thanks for the review.\n\nApplied patch in revision: 805686",
            "date": "2009-08-19T07:07:57.352+0000",
            "id": 5
        }
    ],
    "component": "jackrabbit-core",
    "description": "similar to JCR-2109 i think i would be favorable to get rid of stuff that has been marked deprecated for 1.x releases.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2147",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Remove deprecated classes in jackrabbit-core",
    "systemSpecification": true,
    "version": ""
}