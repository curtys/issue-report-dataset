{
    "comments": [
        {
            "author": "Julian Reschke",
            "body": "Proposed patch (interface, use in JCR2SPI, dummy impl in spi-commons)",
            "date": "2008-04-17T15:10:51.853+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "sounds reasonable to me.\n\ncomments to the patch:\n\nQNodeTypeDefinitionImpl:\n- i think having an additional constructor for QNodeTypeDefinitionImpl including the\n  supported mixin types would be reasonable.\n- the current available constructor would then pass 'null' and just forward the params.\ni would prefer that over always returning null.\n\nEffectiveNodeType:\n- maybe i would prefer the new method to be name canAddMixin instead of supportsMixin... but\n  that's just the first idea. no strong feelings.\n\n\n\n",
            "date": "2008-04-18T08:58:17.347+0000",
            "id": 1
        },
        {
            "author": "Julian Reschke",
            "body": "QNodeTypeDefinitionImpl: done\n\nNaming of method: I wanted to avoid canAddMixin, as the method has different semantics compared to canAddMixin (it just checks one of many things).\n\n",
            "date": "2008-04-18T11:14:38.717+0000",
            "id": 2
        },
        {
            "author": "Julian Reschke",
            "body": "New proposed patch.\n",
            "date": "2008-04-18T11:14:58.828+0000",
            "id": 3
        },
        {
            "author": "Julian Reschke",
            "body": "New proposed patch (information wasn't duplicated in ENT.clone()).",
            "date": "2008-04-18T13:29:12.459+0000",
            "id": 4
        },
        {
            "author": "angela",
            "body": "> Naming of method: I wanted to avoid canAddMixin, as the method has different \n> semantics compared to canAddMixin (it just checks one of many things). \n\nok. i see... fine by me.",
            "date": "2008-04-18T13:37:46.320+0000",
            "id": 5
        },
        {
            "author": "Julian Reschke",
            "body": "Implemented with revision 649548.\n",
            "date": "2008-04-18T14:13:52.786+0000",
            "id": 6
        },
        {
            "author": "angela",
            "body": "adjusted in sandbox/spi: rev. 651630  \n",
            "date": "2008-04-25T15:17:05.981+0000",
            "id": 7
        }
    ],
    "component": "jackrabbit-spi",
    "description": "The current implementation of canAddMixin in JCR2SPI lacks flexibility. It only consults the (SPI) node type registry, checking for (1) whether the mixin exists, and (2) whether it is already present and (3) whether it's consistent with the node's type.\n\nThis is fine for stores where any legal mixin can be added anywhere. It doesn't work well for stores that are limited in what they can do; for instance when nt:file nodes can be made mix:versionable, but nt:folder nodes can't.\n\nProposal: enhance QNodeTypeDefinition with\n\n  public Name[] getSupportedMixins();\n\nwhere the return value is either null (no constraints or no constraints known), or a list of mixin types that are supported for this node type.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1543",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Improve reliability of canAddMixin",
    "systemSpecification": true,
    "version": "1.4"
}