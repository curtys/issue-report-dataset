{
    "comments": [
        {
            "author": "Tobias Bocanegra",
            "body": "Are you sure that version is not referenced by a versionable node ?",
            "date": "2010-04-21T20:17:31.237+0000",
            "id": 0
        },
        {
            "author": "Dirk Feufel",
            "body": "I am not certain. But the only action which is performed on the node is \n\nversionManager.checkout(path);\nVersion ver = versionManager.checkin(path);\nversionManager.addVersionLabel(ver.getName(), ..., true);\n\nAnd other versions than the first which are created the same way can be deleted. \n\nHow could I resolve/delete such references?\n",
            "date": "2010-04-22T05:53:24.604+0000",
            "id": 1
        },
        {
            "author": "Tobias Bocanegra",
            "body": "can you create a test case that covers your issue? see examples in\n\n jackrabbit/trunk/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/version/RemoveVersionTest.java",
            "date": "2010-04-22T09:18:16.880+0000",
            "id": 2
        },
        {
            "author": "Dirk Feufel",
            "body": "When I run your test case against 2.0.0 I get the ReferentialIntegrityException when I move the removal of the actual node after the removal of the versions. In the trunk version both versions work fine. ",
            "date": "2010-04-22T13:23:39.306+0000",
            "id": 3
        },
        {
            "author": "Tobias Bocanegra",
            "body": "works in trunk, thus closing as fixed.",
            "date": "2010-04-22T15:03:56.924+0000",
            "id": 4
        }
    ],
    "component": "versioning",
    "description": "A ReferentialIntegrityException occurs when I delete the first version succeeding the root version. Deleting other versions works fine. Here is the stack:\n\njavax.jcr.ReferentialIntegrityException: Unable to remove version. At least once referenced.\n        at org.apache.jackrabbit.core.version.InternalVersionHistoryImpl.removeVersion(InternalVersionHistoryImpl.java:379)\n        at org.apache.jackrabbit.core.version.InternalVersionManagerBase.internalRemoveVersion(InternalVersionManagerBase.java:684)\n        at org.apache.jackrabbit.core.version.InternalVersionManagerImpl$5.run(InternalVersionManagerImpl.java:495)\n        at org.apache.jackrabbit.core.version.InternalVersionManagerImpl$DynamicESCFactory.doSourced(InternalVersionManagerImpl.java:760)\n        at org.apache.jackrabbit.core.version.InternalVersionManagerImpl.removeVersion(InternalVersionManagerImpl.java:493)\n        at org.apache.jackrabbit.core.version.InternalXAVersionManager.removeVersion(InternalXAVersionManager.java:264)\n        at org.apache.jackrabbit.core.version.VersionHistoryImpl.removeVersion(VersionHistoryImpl.java:253)\n\nThe code is simple:\n\nVersionHistory vh = session.getWorkspace().getVersionManager().getVersionHistory(path);\nvh.removeVersion(version); // where version is the first version succeeding the root version\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2602",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Removal of first version throws javax.jcr.ReferentialIntegrityException",
    "systemSpecification": true,
    "version": "2.0"
}