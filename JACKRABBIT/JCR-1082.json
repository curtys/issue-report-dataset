{
    "comments": [
        {
            "author": "Pablo Rios",
            "body": "TransientStoreOutOfSyncWithCacheTest test does *not* fail with version 1.3 and also fails with trunk (revision 566351)\n\nAttach modified version of  TransientStoreOutOfSyncWithCacheTest that extends from AbstractJCRTest",
            "date": "2007-08-23T17:58:08.945+0000",
            "id": 0
        },
        {
            "author": "Dominique Pfister",
            "body": "Bug introduced while fixing JCR-993: in the setup, intermediate node /a/b was not added to the CachingHierarchyManager's path map with its internal UUID because its parent /a was transiently modified (by removing its property propa). Dumping the CHM's path map right before node /a/b/c was removed gave:\n\n/a  <uuid>\n  /b   <no uuid>\n     /c     <uuid>\n\nCHM received a notification about node /a/b changing because of the removal of /a/b/c but was unable to associate this information with its path map entry /a/b (see above), which left to an inconsistent state.\n\nFixed by undoing changes in JCR-993 and introducing a new behaviour when child node entries are reordered: every child entry in the cache now gets checked whether its name and index are still valid.\n\nFixed in revision 570736.",
            "date": "2007-08-29T10:19:45.114+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.3 branch in revision 577864.",
            "date": "2007-09-20T18:39:24.502+0000",
            "id": 2
        }
    ],
    "component": "jackrabbit-core",
    "description": "Done some further debugging and think the problem is in the synchronization between cache and transientstore. When I retrieve a childnode when I just made its parent node transient (by removing a prop or something), it will not be added to the cache. When I then remove this node, its nodeid is not removed from cache since its stateId wasn't saved in the cache.  After that I add the same node node again with the same name. When I now try to retrieve this node, I get a path not found exception. I see that by retrieving it, its nodeit is resolved from the cache using its path. Only since the removed node was not removed from cache it returns the nodeid of the already removed node. There is no node present with this id in the transientstore and therefor it throws a pathnotfoundexception.\n\nprovided a failing junit test and repository.xml",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1082",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "cache getting out of sync with transientstore causes pathnotfoundexception",
    "systemSpecification": true,
    "version": "1.3.1"
}