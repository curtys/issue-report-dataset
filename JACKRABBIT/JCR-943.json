{
    "comments": [
        {
            "author": "Hemanta Gupta",
            "body": "Attaching modified version of default.ddl which seems to work on SQL Server.",
            "date": "2007-05-25T09:54:57.187+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Committed the schema file in revision 541614. Thanks for the contribution!\n\nThe commit failure was caused by another issue (JCR-913) that was fixed in trunk just yesterday. The failure can also be worked around by manually creating the journal schema.",
            "date": "2007-05-25T11:00:06.794+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-core",
    "description": "I realize the clustering module doesn't specifically support SQL Server yet (there's no mssql.ddl), but I still tried to run the repository against SQL Server with clustering enabled in the hope that the default schema (default.ddl) would suffice. Apparently, it doesn't (unless I'm doing something very wrong), since I kept getting the following error whenever a write operation was attempted:\n\n2007-05-25 14:48:06,757 WARN  [org.apache.jackrabbit.core.journal.DatabaseJournal] Error while rolling back connection: You cannot rollback with autocommit set!\n2007-05-25 14:48:06,757 ERROR [org.apache.jackrabbit.core.cluster.ClusterNode] Unable to commit log entry.\norg.apache.jackrabbit.core.journal.JournalException: Unable to append revision 1090.\n\tat org.apache.jackrabbit.core.journal.DatabaseJournal.append\n\tat org.apache.jackrabbit.core.journal.AppendRecord.update(AppendRecord.java:242)\n\tat org.apache.jackrabbit.core.cluster.ClusterNode$WorkspaceUpdateChannel.updateCommitted(ClusterNode.java:530)\n\tat org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:725)\n\tat org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:855)\n\tat org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:326)\n\tat org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:313)\n\tat org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:302)\n\tat org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:306)\n\tat org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1214)\n\tat org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:849)\nCaused by: java.sql.DataTruncation: Data truncation\n\tat net.sourceforge.jtds.jdbc.SQLDiagnostic.addDiagnostic(SQLDiagnostic.java:379)\n\tat net.sourceforge.jtds.jdbc.TdsCore.tdsErrorToken(TdsCore.java:2781)\n\tat net.sourceforge.jtds.jdbc.TdsCore.nextToken(TdsCore.java:2224)\n\tat net.sourceforge.jtds.jdbc.TdsCore.getMoreResults(TdsCore.java:628)\n\tat net.sourceforge.jtds.jdbc.JtdsStatement.processResults(JtdsStatement.java:525)\n\tat net.sourceforge.jtds.jdbc.JtdsStatement.executeSQL(JtdsStatement.java:487)\n\tat net.sourceforge.jtds.jdbc.JtdsPreparedStatement.execute(JtdsPreparedStatement.java:475)\n\tat org.jboss.resource.adapter.jdbc.WrappedPreparedStatement.execute(WrappedPreparedStatement.java:183)\n\tat org.apache.jackrabbit.core.journal.DatabaseJournal.append\n\t... 58 more\n\nHowever, I think I got things working by using a modified version of default.ddl, with the only change being the type of the REVISION_DATA field (varbinary -> IMAGE).",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-943",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "SQL Server support in clustering module",
    "systemSpecification": true,
    "version": ""
}