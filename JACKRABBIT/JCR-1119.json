{
    "comments": [
        {
            "author": "Christophe Lombart",
            "body": ">Not sure, whether it makes absolute sense to define a property as mandatory in the descriptor but not in the node type definition. Are there any >opinions on that ?\n\nRight now, I don't see a use case where it should possible. Maybe we can start with your proposal and if needed, we can review the code later. \n\n",
            "date": "2007-09-12T06:43:19.467+0000",
            "id": 0
        },
        {
            "author": "Felix Meschberger",
            "body": "> Right now, I don't see a use case\n\nThinking about it, I am even at unease to do such a check on retrieve .... Thus, I did not implement it.\n\nWhat I did implement is the following algorithm:\n\n   If the property exists, get its value\n   else if the field descriptor has a default value, use that value\n   else if there exists a PropertyDescriptor and that PropertyDescriptor has a default value, use that value\n   else set the field to null\n\nAt the same time I modified the SimpleFieldsHelper as follows.\n\n(1) retrieveSimpleField\n\nIf the initializedBean is null, it would only be created if the field value is not null. In case of a null value, the bean is not created but it is tried to set the field value null on that null bean. The fix is to just return null immediately if the field value turns out to be null and the bean has not been initialized\n\n(2) getPropertyDescriptor\n\nI added two getPropertyDescriptor methods, which require the property definition to be single-valued and also take residual property definitions (where getName() returns null) into account. The main method used is the getProperyDescriptor(Node, String) while the other method getPropertyDescriptor(NodeType, String) is used internally by the former.\n\n(3) isProtectedProperty\n\nNow first checks, whether a property of the given name happens to exist. If so, the isProtected setting of that property is returned. Otherwise, the new getPropertyDescriptor(Node, String) method is called to find a PropertyDescriptor to ask about the isProperty setting.\n\n(4) checkProperty\n\nThis method only does work if the value is null (previously it always looked up a PropertyDescriptor (with potential NPE if stumbled upon a residual property descriptor) and checked its mandatory state together with the value's value). If the value is null, then the new getPropertyDescriptor(Node, String) method is called to find the property descriptor. Then an exception is raised if the property is mandatory and is not automatically created.\n\n\nFinally I also added a simple Test Case for this new default value handling.",
            "date": "2007-09-12T09:47:50.656+0000",
            "id": 1
        },
        {
            "author": "Felix Meschberger",
            "body": "Assuming that this fix is ok and all test cases pass, I close this issue",
            "date": "2007-09-12T09:48:57.828+0000",
            "id": 2
        }
    ],
    "component": "jackrabbit-ocm",
    "description": "The SimpleFieldsHelper.retrieveSimpleField method is used to load JCR properties into simple Java object fields according to the mapping descriptor. If the node does not have the named property, a WARN message is emited.\n\nIf the missing property is defined as optional in the node type definition, it is quite normal, that it may be missing. Therefore emitting a WARN message does not seem appropriate. It would be better, to do the following (in order):\n\n   If the missing property is declared to be required in the descriptor, throw an exception\n   else if the descriptor has a default value for the missing property, use that value\n   else if the property is defined with a default value in the node type definition, use that value\n   else emit a DEBUG message and leave the field undefined\n\nNot sure, whether it makes absolute sense to define a property as mandatory in the descriptor but not in the node type definition. Are there any opinions on that ?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1119",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "SimpleFieldsHelper emits a lot warnings",
    "systemSpecification": true,
    "version": ""
}