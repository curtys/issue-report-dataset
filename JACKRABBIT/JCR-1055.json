{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in svn r565399\n\nthanks for reporting this issue!",
            "date": "2007-08-13T16:27:14.713+0000",
            "id": 0
        },
        {
            "author": "Marcus Kaar",
            "body": "WOW!\n\nthats good to hear!\n\nThank you!\n\nMarcus.\n\n",
            "date": "2007-08-13T17:07:34.184+0000",
            "id": 1
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.3 branch in revision 577818.",
            "date": "2007-09-20T17:15:29.671+0000",
            "id": 2
        }
    ],
    "component": "",
    "description": "I have found a behavior that does not seem to be consistent with the\nspec:\n\nAfter replacing a node with importXML using IMPORT_UUID_COLLISION_REPLACE_EXISTING the new node is not at the position of the replaced node (talking about the position among the siblings).\n\nThe origininal node is removed, but the new node is created as the last child of the parent node, and not spec-compliant at the position of the replaced node.\n\nHere how I use it:\n\n// assume Session s, Node n, String text (holding XML data)\n\ns.importXML(\n\tn.getPath(), \n\tnew ByteArrayInputStream (text.getBytes(\"UTF-8\")),\n\tImportUUIDBehavior.IMPORT_UUID_COLLISION_REPLACE_EXISTING\n);\ns.save();\n \n\nAnd here a quote from the spec section 7.3.6\n\nImportUUIDBehavior.IMPORT_UUID_COLLISION_REPLACE_EXISTING: \nIf an incoming referenceable node has the same UUID as a node already existing in the workspace then the already existing node is replaced by the incoming node in the same position as the existing node.\n[note \"same position\"]\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1055",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Incorrect node position after import",
    "systemSpecification": true,
    "version": "1.2.1, 1.2.2, 1.2.3, 1.3, 1.3.1"
}