{
    "comments": [
        {
            "author": "Roman Puchkovskiy",
            "body": "Attaching example configuration which uses same DB (but different schema prefixes) for all FS/PM instances.",
            "date": "2008-04-28T13:30:50.605+0000",
            "id": 0
        },
        {
            "author": "Stefan Guggisberg",
            "body": "changed priority to 'Minor' since exceptions are just logged and control flow is not affected.",
            "date": "2008-05-19T15:16:44.641+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in r658583.\n\n",
            "date": "2008-05-21T08:46:59.709+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "Merged to the 1.4 branch in revision 661622.",
            "date": "2008-05-30T09:56:58.478+0000",
            "id": 3
        },
        {
            "author": "Roman Puchkovskiy",
            "body": "Sorry for late review.\nProblem with exceptions is solved, but Jackrabbit still tries to reconnect when shutting down if using attached configuration. This slows down repository shutdown.\n\nCorresponding messages in the log are:\n2008-06-05 13:37:53 <WARN > [main] DbFileSystem: execute failed, about to reconnect...",
            "date": "2008-06-05T09:41:11.210+0000",
            "id": 4
        },
        {
            "author": "Jukka Zitting",
            "body": "See JCR-1648 for the above followup issue.\n\nI'm re-resolving this issue as the original fix was already included in jackrabbit-core 1.4.5.",
            "date": "2008-06-12T19:30:41.735+0000",
            "id": 5
        },
        {
            "author": "Andrew Grande",
            "body": "The issue isn't really fixed in 1.4.5. It works for DB PMs, but didn't change a thing for *bundle* PMs, e.g. for org.apache.jackrabbit.core.persistence.bundle.DerbyPersistenceManager the stacktrace is the same:\n\n[08-06 13:38:58] WARN  DbFileSystem [Shutdown]: execute failed, about to reconnect...\n[08-06 13:39:08] ERROR RepositoryImpl [Shutdown]: Error while closing Version Manager.\njava.sql.SQLException: No current connection.\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedConnection.getMetaData(Unknown Source)\n\tat org.apache.jackrabbit.core.persistence.bundle.DerbyPersistenceManager.close(DerbyPersistenceManager.java:312)\n\tat org.apache.jackrabbit.core.version.VersionManagerImpl.close(VersionManagerImpl.java:196)\n\tat org.apache.jackrabbit.core.RepositoryImpl.doShutdown(RepositoryImpl.java:1000)\n\tat org.apache.jackrabbit.core.RepositoryImpl.shutdown(RepositoryImpl.java:948)\n\tat org.springmodules.jcr.jackrabbit.RepositoryFactoryBean.destroy(RepositoryFactoryBean.java:91)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:154)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:397)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:375)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:348)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:861)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:839)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:802)\n\tat org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:367)\n\tat org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:70)\n\tat org.mortbay.jetty.handler.ContextHandler.doStop(ContextHandler.java:573)\n\tat org.mortbay.jetty.webapp.WebAppContext.doStop(WebAppContext.java:484)\n\tat org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)\n\tat org.mortbay.jetty.handler.HandlerWrapper.doStop(HandlerWrapper.java:129)\n\tat org.mortbay.jetty.Server.doStop(Server.java:281)\n\tat org.mortbay.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:65)\n\tat org.mortbay.jetty.Server$ShutdownHookThread.run(Server.java:559)\n[08-06 13:39:08] WARN  DbFileSystem [Shutdown]: execute failed, about to reconnect...\n[08-06 13:39:18] INFO  log [Shutdown]: Shutdown hook complete\n\nProcess finished with exit code 1\n\n\nLooking at org.apache.jackrabbit.core.persistence.bundle.DerbyPersistenceManager, the close() implementation is quite different from its db counterpart, shouldn't it have the same fixes?",
            "date": "2008-08-06T17:41:42.661+0000",
            "id": 6
        },
        {
            "author": "Andrew Grande",
            "body": "Found that http://svn.apache.org/viewvc?view=rev&revision=658583 changed *hasn't* been applied to the bundle Derby PM, only db.",
            "date": "2008-08-06T17:52:33.092+0000",
            "id": 7
        },
        {
            "author": "Jukka Zitting",
            "body": "Andrew, is your issue related to JCR-1499? Please file a new issue if you're still seeing the problem with jackrabbit-core-1.4.5.",
            "date": "2008-08-07T08:56:26.320+0000",
            "id": 8
        },
        {
            "author": "Andrew Grande",
            "body": "Not really, JCR-1499 was resolved (does not post the error code anymore). The stacktrace posted above is all it has, and this is a result of a half-fixed PM.",
            "date": "2008-08-07T14:06:54.428+0000",
            "id": 9
        }
    ],
    "component": "jackrabbit-core",
    "description": "According to docs and forum discussions, it's legal to use same DB for different FileSystems/Persistence Managers. Such configurations seem to work fine, but when repository is stopped, exceptions are produced like following:\n\nSEVERE: Error while closing Version Manager.\njava.sql.SQLNonTransientConnectionException: No current connection.\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)\n\tat org.apache.derby.impl.jdbc.EmbedConnection.getMetaData(Unknown Source)\n\tat org.apache.jackrabbit.core.persistence.db.DerbyPersistenceManager.closeConnection(DerbyPersistenceManager.java:109)\n\tat org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.close(DatabasePersistenceManager.java:261)\n\tat org.apache.jackrabbit.core.version.VersionManagerImpl.close(VersionManagerImpl.java:201)\n\tat org.apache.jackrabbit.core.RepositoryImpl.doShutdown(RepositoryImpl.java:1000)\n\tat org.apache.jackrabbit.core.RepositoryImpl.shutdown(RepositoryImpl.java:948)\n\tat org.apache.jackrabbit.core.TransientRepository.stopRepository(TransientRepository.java:275)\n\tat org.apache.jackrabbit.core.TransientRepository.loggedOut(TransientRepository.java:427)\n\tat org.apache.jackrabbit.core.SessionImpl.notifyLoggedOut(SessionImpl.java:574)\n\tat org.apache.jackrabbit.core.SessionImpl.logout(SessionImpl.java:1247)\n\tat org.apache.jackrabbit.core.XASessionImpl.logout(XASessionImpl.java:403)\n\tat com.blandware.tooling.jcrplugin.ExportMojo.execute(ExportMojo.java:81)\n\tat org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:447)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:493)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:463)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)\n\tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:333)\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:282)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n\tat org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n\tat org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n\tat org.codehaus.classworlds.Launcher.main(Launcher.java:375)\nCaused by: java.sql.SQLException: No current connection.\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n\tat org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\n\t... 35 more\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1557",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Avoid exceptions during shutting repository down if several PMs/FSs use same DB",
    "systemSpecification": true,
    "version": "core 1.4.2"
}