{
    "comments": [
        {
            "author": "Michael D\u00fcrig",
            "body": "The slow down is caused by merging changes of item states from the server with the local ones on the client. The main contribution seems to come from diffing the property states. \n\n",
            "date": "2010-01-11T15:28:20.950+0000",
            "id": 0
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "This patch disables diffing of property states. Items contained in a batch from the server are set to Status#MODIFIED without establishing whether they differ form their cached values. \n\nI was able to successfully run all tests with the patch applied. However, I'm not sure whether this patch has further, more subtle consequences which I'm not aware of. ",
            "date": "2010-01-11T15:32:12.533+0000",
            "id": 1
        },
        {
            "author": "Stefan Guggisberg",
            "body": "fixed typo in summary",
            "date": "2010-01-22T13:47:21.805+0000",
            "id": 2
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "Forget the patch. It doesn't work -> test failures",
            "date": "2010-02-04T13:18:10.292+0000",
            "id": 3
        },
        {
            "author": "Michael D\u00fcrig",
            "body": "The fix to JCR-2498 should also fix this issue",
            "date": "2010-02-24T14:51:43.823+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-jcr2spi",
    "description": "When RepositoryService#getItemInfos() returns a sufficiently large batch for a path, then the second invocation of getItem() below is significantly slower than the first. \n\nString path = ...\nItem i = session.getItem(path);\ni.refresh(false); // same for refresh(true)\nsession.getItem(path);\n\nIn my test setup RepositoryService#getItemInfos() returns 3946 elements. The first invocation takes approx. 800ms, the second 3000ms.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2461",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Item retrieval inefficient after refresh",
    "systemSpecification": true,
    "version": "1.5.7"
}