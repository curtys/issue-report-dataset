{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in svn r497392\n\nolivier, thanks for reporting this issue and testing the fix!",
            "date": "2007-01-18T10:59:08.125+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-core",
    "description": "As reported on the dev mailing-list, this is what happens:\n\nThe reconnection/retry mechanism in DatabasePersistenceManager/DatabaseFileSystem seems to behave fine when the connection times out or is killed for some reason, and the DB server is in fact still running.\nHowever there is a problem if the connection cannot be re-established directly, for example if a transient network outage lasts longer than the few reconnection attempts.\nInside DatabasePersistenceManager.reestablishConnection(), initConnection() will fail, and the preparedStatements map will stay empty.\nThis in turn will trigger a nasty NullPointerException (never caught) next time executeStmt() is called, because the map is still empty, and there is no check for that.\n\n\nThe following proposed fix from Stefan Guggisberg has been tested to work when applied on 1.2-rc2:\n\n> the simplest fix would be to remove line 783 in\n> DatabasePersistenceManager.java and line 1010 in\n> DatabaseFileSystem.java,\n> i.e. the following stmt:\n> \n >      preparedStatements.clear();\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-710",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "NullPointerException in DatabasePersistenceManager and DatabaseFileSystem after a failed reconnection attempt",
    "systemSpecification": true,
    "version": "1.2.1"
}