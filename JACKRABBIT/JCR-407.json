{
    "comments": [
        {
            "author": "jeremi Joslin",
            "body": "here is my patch.\nSome informations about it:\n* I had a node IOHandlers in the config which contains a list of IOhandler.\n* the ResourceConfig load the iohandlers and add it to the IOManager.\n* if thenode IOHandlers does not exist in the config.xml, we use the default IOhandlers hard coded. If it exist, we use the IOhandlers from the config file.\n* I had to change protected DefaultIOManager(boolean doInit) to public, to be able to say if we initialize with the hard coded IOhandlers or not.",
            "date": "2006-04-20T11:02:21.000+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "thanks for the patch. i will take a look at it.\n\n",
            "date": "2006-04-20T13:22:15.000+0000",
            "id": 1
        },
        {
            "author": "angela",
            "body": "just a couple of comments regarding the patch.\nfirst of all i would rather want the config to rely on interfaces as much as possible instead of making the example implementations with the server/io package to a quasi standard. second i think it would be better to create a basic (and very simple) IOManager implementation that does not load any handlers.\n\nthis would lead to the following major changes of the patch:\n\nIOManager/IOHandler:\n\n- extend the IOHandler interface by a 'setIOManager(IOManager) method.\n- create a IOManager implementation that does not init any handler. instead the internal list is populated\n  by calling 'addIOHandler).\n- this would make the protected constructor of the DefaultIOManager redandant and the\n  DefaultIOManager could do one thing as its name insinuates: provide some default behaviour for\n  handling import/export.\n- the (optional) iomanager field with in the IOHandler can be set while adding the handler to \n  the managers list by calling IOHandler.setIOManager(this).\n- the existing iohandler implementations need a default constructor\n\nResourceConfig:\n\n- The 'iohandler' elements should rather be children of the iomanager. they don't have a meaning\n  but within the manager they belong to.\n- 'iohandler' elements are optional\n- 'iohandler' as well as 'iomanager' must define a class name pointing to an implementation of\n   the corresponding interfaces.\n- the configuration expects but a empty constructor for both iohandler and iomanager\n\nif nobody objects i would modify the config and iohandler/manager accordingly.\nregards\nangela",
            "date": "2006-04-20T19:11:39.000+0000",
            "id": 2
        },
        {
            "author": "angela",
            "body": "implemented as discussed\nrevision: 396565  \n",
            "date": "2006-04-24T21:29:13.000+0000",
            "id": 3
        },
        {
            "author": "Jukka Zitting",
            "body": "Rescheduled for 1.1.",
            "date": "2006-05-26T18:28:07.000+0000",
            "id": 4
        }
    ],
    "component": "jackrabbit-webdav",
    "description": "I would like to be able to change the order of the IOHandlers and add some.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-407",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "read IOHandlers from the config.xml",
    "systemSpecification": true,
    "version": "1.0"
}