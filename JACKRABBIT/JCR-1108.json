{
    "comments": [
        {
            "author": "Julian Reschke",
            "body": "Turns out that the TCK indeed uses the same session (otherwise it would fail :-).\n\nWhich leaves us with the question why LockManagerImpl doesn't realize that the nodes are already gone...\n\n",
            "date": "2007-09-03T15:56:09.657+0000",
            "id": 0
        },
        {
            "author": "angela",
            "body": "> [...] why LockManagerImpl doesn't realize that the nodes are already gone... \n\nbecause the lock-state objects currently only listen to jcr:lockIsDeep property being removed and only\nin case of cache-behaviour observation. \nprobably the lock-state objects should also be aware of a removal of the lock-holding-state (for all types of cache-behaviour)\n\n",
            "date": "2007-10-24T10:32:36.929+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-spi",
    "description": "LockManagerImpl.loggingOut() tries to unlock nodes that have a session lock. If, while doing so, a RepositoryException is thrown, this gets locked on error level.\n\nThe TCK tests tearDown code removes test nodes using a separate session; thus we see RepositoryExceptions for the simple reason that the nodes have already been removed by somebody else.\n\nProposal: handle ItemNotFoundExc and PathNotFoundExc separately, not logging them.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1108",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR2SPI: error level logging when cleaning up session locks ",
    "systemSpecification": true,
    "version": ""
}