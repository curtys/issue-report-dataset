{
    "comments": [
        {
            "author": "Stefan Guggisberg",
            "body": "fixed in svn r960030",
            "date": "2010-07-02T15:37:49.755+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-jcr-tests, JCR 2.0",
    "description": "When the TCK test method testLegalAndResidualType in the CanAddChildNodeCallWithNodeTypeTest class picks a node with a residual type, it does not filter out abstract nodes.  For example, in my local test, nt:hierarchyNode is selected for the local variable 'type'.\n\nSince abstract node types \"cannot be directly assigned to a node,\"[1] canAddChildNode(anyPropertyName, \"nt:hierarchyNode\") must return false.  However, since the test assumes that a non-abstract node type was chosen, it expects canAddChildNode(String, String) to return true.\n\nThis could be fixed if NodeTypeUtil.locateChildNodeDef(...) were extended to add an extra argument allowing or disallowing abstract types and that extra argument was used to filter the type used in testLegalAndResidualType (or if locateChildNodeDef(...) automatically excluded abstract types in the same manner that it automatically excludes protected types).\n\n[1] - Section 3.7.1.3 of the JCR2 specification",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2665",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "JCR Test for Adding Node Type Tests That Abstract Nodes Can Be Added as Children, contrary to JCR 2.0 specification",
    "systemSpecification": true,
    "version": "2.1"
}