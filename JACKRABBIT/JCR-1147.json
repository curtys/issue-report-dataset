{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Fixed in revision: 580406\n\nThank you for reporting this issue.",
            "date": "2007-09-28T16:31:57.712+0000",
            "id": 0
        }
    ],
    "component": "jackrabbit-spi",
    "description": "I think org.apache.jackrabbit.spi2jcr.RepositoryServiceImpl.getRootId() should not return getIdFactory().createNodeId((String) null, Path.ROOT). Rather should it do a round trip to the wrapped repository and return a UUID based NodeId if the root node of the wrapped repository is mix:referenceable.\n\nThe javadoc reads: \"If the root node can be identified with a unique ID the returned NodeId simply has a uniqueID part and the path part is null. If the root node cannot be identified with a unique ID the uniqueID part is null and the path part will be set to \"/\".\"",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-1147",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "spi2jcr: RepositoryServiceImpl.getRootId returns bad NodeId ",
    "systemSpecification": true,
    "version": ""
}