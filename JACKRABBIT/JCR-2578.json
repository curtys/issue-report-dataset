{
    "comments": [
        {
            "author": "Jukka Zitting",
            "body": "Proposed patch.",
            "date": "2010-03-19T13:40:00.218+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "Patch committed in revision 933554.",
            "date": "2010-04-13T11:17:46.926+0000",
            "id": 1
        }
    ],
    "component": "jackrabbit-api, jackrabbit-core, jackrabbit-jca, transactions",
    "description": "The XASession interface in jackrabbit-api extends Session with a single getXAResource() method. The idea is that a transactional client (or a transaction manager) will test whether a session implements XASession and can then get the XAResource instance that can be used to bind the session to a distributed transaction. The essential code is:\n\n    if (session instanceof XASession) {\n        return ((XASession) session).getXAResource();\n    }\n\nThis works fine except for the extra dependency to jackrabbit-api that it introduces in code that otherwise would only need the JCR API. Since the link between a transaction-enabled session and the related XAResource instance is always one-to-one, we could avoid this dependency by making the session directly implement XAResource, leading to code like this:\n\n    if (session instanceof XAResource) {\n        return (XAResource) session;\n    }\n\nThis is essentially what jackrabbit-jcr-rmi did in 2.0.0 to avoid the jackrabbit-api dependency while maintaining XA transaction support, and I'd like to extend this solution also to other parts of Jackrabbit.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "JCR-2578",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "Deprecate XASession",
    "systemSpecification": true,
    "version": ""
}