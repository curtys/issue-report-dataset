{
    "comments": [
        {
            "author": "angela",
            "body": "use empty string restriction value (see JCR 2700 and GlobPattern)",
            "date": "2011-04-14T07:04:23.319+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "from JCR-2700:\n\n> an empty string restriction forces the ACE to take effect on the node it has been applied. \n\nwhich means in this case, effect on '/'. but if i want to restrict the subnodes of '/' i can't express this. but i can for all other nodes than '/'.\n\neg: using '/*' works but not on '/' which is not intuitive.",
            "date": "2011-04-14T07:42:55.554+0000",
            "id": 1
        },
        {
            "author": "angela",
            "body": "i see... interpreted your initial comment \"i tried to define a ACL on '/' that would allow 'read' on '/' itself, but not for the nodes underneath\" that you want to allow READ on '/' and only '/'. but what you want is \"deny READ to subnodes of '/' but not '/'.",
            "date": "2011-04-14T08:33:15.372+0000",
            "id": 2
        },
        {
            "author": "Tobias Bocanegra",
            "body": "yes. the desired, effective result should be:\n- \"everyone\" allow read \"/\" (and it's properties ?)\n- \"everyone\" deny read \"/*\" (all subnodes of \"/\")",
            "date": "2011-04-14T16:22:02.858+0000",
            "id": 3
        },
        {
            "author": "angela",
            "body": "the properties get the permission inherited from the node unless there is a restriction matching specifically. \nthe jcr:read privilege currently is in our implementation not aggregated and thus does not allow to distinguish between different types of items.\n\nin other word: reading the node includes readability of it's property with the only exception that the jackrabbit extensions are used and the read access is narrowed by a pattern that only matches a subset of items (nodes or properties)",
            "date": "2011-04-14T16:28:42.991+0000",
            "id": 4
        },
        {
            "author": "Tobias Bocanegra",
            "body": "does this mean:  \"everyone\" deny jcr:all read \"/*\", denies read to properties of / ?\nif yes, wouldn't it be better to clearly distinct properties from subnodes in the patterns? eg: \n\nallow jcr:read glob = /jcr:*   (allow all sub nodes start with jcr:*)\ndeny jcr:read glob = /@jcr:*   (deny all properties start with jcr:*)\n\nin general, maybe a (simplified) xpath expression would be better suitable to define a set of items instead of globbing patterns.\n",
            "date": "2011-04-14T16:43:31.914+0000",
            "id": 5
        },
        {
            "author": "angela",
            "body": "> the same works for a non-root node. \n\nnot quite. the problem was the \"trailing\" slash that is present with the root node but\nnever with regular node paths.",
            "date": "2011-05-03T18:22:01.794+0000",
            "id": 6
        }
    ],
    "component": "security",
    "description": "i tried to define a ACL on '/' that would allow 'read' on '/' itself, but not for the nodes underneath. i tried \"*\", \"/*\", \"./*\" but none of them seem to do the desired effect.\n\neg:\neveryone,allow,jcr:read, '/'\neveryone,deny,jcr:read, '/', glob=\"/*\"\n\nthe same works for a non-root node.\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-2937",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "ACL with glob restrictions does not work on '/'",
    "systemSpecification": true,
    "version": "2.2.2"
}