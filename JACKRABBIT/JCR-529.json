{
    "comments": [
        {
            "author": "Paco Avila",
            "body": "This is a test case.",
            "date": "2006-08-02T09:55:39.000+0000",
            "id": 0
        },
        {
            "author": "Tobias Bocanegra",
            "body": "i vaguely remeber a similar bug....what version of jackrabbit are you using? the recent checkout?",
            "date": "2006-08-02T13:39:36.000+0000",
            "id": 1
        },
        {
            "author": "Paco Avila",
            "body": "Yes, I updated Jackarbbit source code yesterday. There is a test case attached if you wan't to test it.",
            "date": "2006-08-02T15:37:42.000+0000",
            "id": 2
        },
        {
            "author": "Paco Avila",
            "body": "I am the only affected by this issue? :(",
            "date": "2006-11-19T08:23:06.000+0000",
            "id": 3
        },
        {
            "author": "Paco Avila",
            "body": "This is my patch for this issue. With this modification, the versions are correctly named.",
            "date": "2006-11-19T20:58:55.000+0000",
            "id": 4
        },
        {
            "author": "Tobias Bocanegra",
            "body": "fixed as suggested.\n\nCommitted revision 486694.",
            "date": "2006-12-13T15:48:52.000+0000",
            "id": 5
        },
        {
            "author": "Przemo Pakulski",
            "body": "It seems that after applying patch test org.apache.jackrabbit.core.XATest.#testXAVersionsThoroughly fails.\n\njunit.framework.ComparisonFailure: checkin N1 uncommitted. Version Name expected:<1.1.1> but was:<1.0.1>\n\tat junit.framework.Assert.assertEquals(Assert.java:81)\n\tat org.apache.jackrabbit.core.XATest.check(XATest.java:1140)\n\tat org.apache.jackrabbit.core.XATest.testXAVersionsThoroughly(XATest.java:1080)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat org.apache.jackrabbit.core.XATest.runTest(XATest.java:96)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:474)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:342)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:194)\n",
            "date": "2006-12-14T10:23:23.000+0000",
            "id": 6
        },
        {
            "author": "Tobias Bocanegra",
            "body": "need to validate tests",
            "date": "2006-12-14T16:03:24.000+0000",
            "id": 7
        },
        {
            "author": "Paco Avila",
            "body": "From my point of view the test should check:\n\ncheck(v1_3, phase, \"1.0.1\", 0);\n\nAnd not:\n\ncheck(v1_3, phase, \"1.1.1\", 0);",
            "date": "2006-12-14T19:08:34.000+0000",
            "id": 8
        },
        {
            "author": "Tobias Bocanegra",
            "body": "imo, this should be the indented behaviour:\n\n1.0\n |\n1.1\n |\n1.2\n |       \\       \\\n1.3  1.2.0  1.2.0.0\n |       |\n1.4   1.2.1\n |       |       \\\n1.5   1.2.2  1.2.1.0\n |                |\n1.6           1.2.1.1\n\nso if you restored to 1.2 and 1.3 already exists, make a 1.2.0 on checkin since it's the \"root version\" of the new branch of the 1.2 version.\n\nopinions?\n",
            "date": "2006-12-15T20:22:35.000+0000",
            "id": 9
        },
        {
            "author": "Tobias Bocanegra",
            "body": "well, the above ascii art did not really work in jira :-( will attach a file.\n\n",
            "date": "2006-12-15T20:29:28.000+0000",
            "id": 10
        },
        {
            "author": "Tobias Bocanegra",
            "body": "Version Graph",
            "date": "2006-12-15T20:29:53.000+0000",
            "id": 11
        },
        {
            "author": "Paco Avila",
            "body": "Yes, I think you are rigth.",
            "date": "2006-12-15T20:52:20.000+0000",
            "id": 12
        },
        {
            "author": "Jukka Zitting",
            "body": "Marking this for 1.2. Either the unit test or the code needs to be fixed before the release.",
            "date": "2006-12-17T23:25:36.000+0000",
            "id": 13
        },
        {
            "author": "Tobias Bocanegra",
            "body": "Committed revision 488639.",
            "date": "2006-12-19T11:29:55.000+0000",
            "id": 14
        },
        {
            "author": "Tobias Bocanegra",
            "body": "fixed tests.",
            "date": "2006-12-19T14:32:36.000+0000",
            "id": 15
        }
    ],
    "component": "versioning",
    "description": "I add several versions to a node (1.0, 1.1, 1.2, 1.3, 1.4). Perform a restore to version 1.2 and add more versions. After that VersionHistory is like this:\n\n- 1.0\n- 1.1\n- 1.2\n- 1.3\n- 1.4\n- 1.3.1\n- 1.3.2\n- 1.3.3\n- 1.3.4\n- 1.3.5\n\nNew versions should be 1.2.x no 1.3.x, isn't it?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-529",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "New versions added after a restore have bad version name",
    "systemSpecification": true,
    "version": "0.9, 1.0, 1.0.1, 1.1, 1.1.1"
}