{
    "comments": [
        {
            "author": "Marcel Reutegger",
            "body": "Fixed in revision: 219472",
            "date": "2005-07-18T20:55:49.000+0000",
            "id": 0
        }
    ],
    "component": "query",
    "description": "Query q = this.superuser.getWorkspace().getQueryManager()\n                .createQuery(\"SELECT * FROM nt:base\", Query.XPATH);\n\nproduces:\norg.apache.jackrabbit.core.query.xpath.TokenMgrError: Lexical error at line 1, column 28.  Encountered: \"b\" (98), after : \":\"\n\tat org.apache.jackrabbit.core.query.xpath.XPathTokenManager.getNextToken(XPathTokenManager.java:14546)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.jj_ntk(XPath.java:9187)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.PredicateList(XPath.java:5195)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.AxisStep(XPath.java:4707)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.StepExpr(XPath.java:4597)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.RelativePathExpr(XPath.java:4511)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.PathExpr(XPath.java:4482)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.ValueExpr(XPath.java:4125)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.UnaryExpr(XPath.java:4032)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.CastExpr(XPath.java:3935)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.CastableExpr(XPath.java:3898)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.TreatExpr(XPath.java:3861)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.InstanceofExpr(XPath.java:3824)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.IntersectExceptExpr(XPath.java:3748)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.UnionExpr(XPath.java:3672)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.MultiplicativeExpr(XPath.java:3622)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.AdditiveExpr(XPath.java:3510)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.RangeExpr(XPath.java:3451)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.ComparisonExpr(XPath.java:3353)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.AndExpr(XPath.java:3290)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.OrExpr(XPath.java:3227)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.ExprSingle(XPath.java:2214)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.ForClause(XPath.java:2337)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.FLWORExpr(XPath.java:2233)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.ExprSingle(XPath.java:2133)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.Expr(XPath.java:2094)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.QueryBody(XPath.java:2066)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.MainModule(XPath.java:512)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.Module(XPath.java:387)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.QueryList(XPath.java:151)\n\tat org.apache.jackrabbit.core.query.xpath.XPath.XPath2(XPath.java:118)\n\tat org.apache.jackrabbit.core.query.xpath.XPathQueryBuilder.<init>(XPathQueryBuilder.java:224)\n\tat org.apache.jackrabbit.core.query.xpath.XPathQueryBuilder.createQuery(XPathQueryBuilder.java:255)\n\tat org.apache.jackrabbit.core.query.QueryParser.parse(QueryParser.java:57)\n\tat org.apache.jackrabbit.core.query.lucene.QueryImpl.<init>(QueryImpl.java:119)\n\tat org.apache.jackrabbit.core.query.lucene.SearchIndex.createExecutableQuery(SearchIndex.java:158)\n\tat org.apache.jackrabbit.core.query.QueryImpl.<init>(QueryImpl.java:90)\n\tat org.apache.jackrabbit.core.SearchManager.createQuery(SearchManager.java:192)\n\tat org.apache.jackrabbit.core.query.QueryManagerImpl.createQuery(QueryManagerImpl.java:87)\n\tat org.apache.jackrabbit.test.api.query.IllegalXPathTest.testIllegalStatement(IllegalXPathTest.java:45)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:324)\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:118)\n\tat org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:401)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:474)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:342)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:194)\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "JCR-171",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "JACKRABBIT",
    "project": "JACKRABBIT",
    "summary": "QueryManager.createQuery() exception handling",
    "systemSpecification": false,
    "version": ""
}