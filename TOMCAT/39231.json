{
    "comments": [
        {
            "author": null,
            "body": "1. Can you point specifically to the section in the JAAS specification to which\nyou're referring?\n\n2. If you could submit a code patch for Tomcat for this matter, that would be\ngreat.  Thanks!",
            "date": "20060413T17:52:19",
            "id": 0
        },
        {
            "author": null,
            "body": "1. \nhttp://java.sun.com/j2se/1.5.0/docs/api/javax/security/auth/login/LoginContext.h\ntml\n\n\"A typical caller instantiates a LoginContext with a name and a \nCallbackHandler...\"\n\n\"Once the caller has instantiated a LoginContext, it invokes the login method \nto authenticate a Subject...\"\n\n\"To logout the Subject, the caller calls the logout method. As with the login \nmethod, this logout method invokes the logout method for the configured \nmodules...\"\n\n\n2. Unfortunately, I am on a tight deadline for my company, so can not work on \nthe patch (for myself I've just create a workaround for my logout requirements \nby utilizing the HttpSessionBindingListener interface, though I haven't tested \nit yet). ",
            "date": "20060413T18:11:41",
            "id": 1
        },
        {
            "author": null,
            "body": "OK, thanks.  If/when you get a chance to work on a patch, I will be glad to\nreview and commit it as necessary.  I myself don't have the time to develop one\nright now either, but I wanted to make sure you were still interested.  Thanks.",
            "date": "20060413T18:21:12",
            "id": 2
        },
        {
            "author": null,
            "body": "Normal is P3, not P1.",
            "date": "20060413T21:34:01",
            "id": 3
        },
        {
            "author": null,
            "body": "I don't have a patch, but I do have a solution that I can outline here.  \n\nBasically, the LoginContext needs to be saved in the session so logout can be \ncalled on it when the session is invalidated or expires.  Currently, this is a \nproblem because the LoginContext is created in the JAASRealm and discarded \nafter login is called and the only place that the session is available is in \nthe Authenticator.\n\nHere is a proposed solution:\n\n1) Create a pojo that has getPrincipal() and getLoginContext().  Let's call \nthis pojo, RealmPrincipal.\n\n2) Change the Realm's authenticate methods to return a RealmPrincipal object \ninstead of a Principal.\n\n3) Change the Realm impl's to create and return the RealmPrincipal, including \nthe LoginContext where appropriate.\n\n4) Change the Authentcator's to check to see if the LoginContext is not null \nand add it to the session notes the same as currently is being done with the \nprincipal.\n\n5) Change the StandardSession expires() method to check for the LoginContext \nin the notes and call logout on it, if it is present.\n\n\nI hope this is clear and sufficient for a timely fix.  Thanks.",
            "date": "20060419T00:45:39",
            "id": 4
        },
        {
            "author": null,
            "body": "I have fixed trunk and proposed the patch for 6.0.x and 5.5.x",
            "date": "20090707T09:42:24",
            "id": 5
        },
        {
            "author": null,
            "body": "Note that if you have multiple Tomcat nodes in a cluster and use the JAASRealm then since the LoginContext is not Serializable there will be some scenarios where if a node fails the logout method will never be called.",
            "date": "20090803T02:17:34",
            "id": 6
        },
        {
            "author": null,
            "body": "This has been fixed in 6.0.x and will be included in 6.0.21 onwards.",
            "date": "20091103T16:09:06",
            "id": 7
        },
        {
            "author": null,
            "body": "This has been fixed in 5.5.x and will be included in 5.5.29 onwards.",
            "date": "20091220T09:49:05",
            "id": 8
        }
    ],
    "component": "Catalina",
    "description": "The issue is that the custom JAAS's LoginModule.logout() method is never \ncalled. I guess this has been never implemented correctly (at least since \nTomcat 5.5.9).\n\nThe thing is that according to the JAAS spec, the LoginContext.logout() is \nsupposed to invoke the logout method for each LoginModule configured for this \nLoginContext.\n\nSo, somebody should be sure to call LoginContext.logout() method. The caller \nfor this method could be either a server or a client. \n\nSo, either Tomcat should provide some means to access the LoginContext to the \nclients, or Tomcat should take the responsibility to call this method by itself.\n\nI guess the solution could be for Tomcat to associate the instance of \nLoginContext with the user's session, and then Tomcat could invoke \nLoginContext.logout() when the session is being invalidated (both when the \nsession times out or invalidated explicitely).\n\nI hope that I am correctly interpreting the JAAS spec.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "39231",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "The JAAS contract for LoginModule is broken",
    "systemSpecification": false,
    "version": "5.5.16"
}