{
    "comments": [
        {
            "author": null,
            "body": "Fixed in SVN. Will be included in 5.5.21 onwards.\n\nMany thanks for the patch.",
            "date": "20061017T19:28:34",
            "id": 0
        }
    ],
    "component": "Connector:Coyote",
    "description": "I was attempting to create a Filter or Valve that could be placed in front of an\nAxis web service that would handle security according to the WS-Security\nspecification. That turned out to be a rabbit trail, but I did find and fix a\nbug that I discovered along the way. \n\nI ran into problems reading POST data (the web service request) from the\norg.apache.catalina.connector.Request object exposed in the Filter/Valve\ninterfaces. This is a chunk of code in a prototype Valve that didn't work:\n\nprivate ByteChunk getPOSTBody(Request request)\n      throws IOException\n  {\n    ByteChunk retval = new ByteChunk(request.getContentLength());\n    ByteChunk body = new ByteChunk(request.getContentLength());\n\n    int bytesRead;\n    do\n    {\n      bytesRead = request.getCoyoteRequest().doRead(body);\n      retval.append(body);\n    }\n    while (bytesRead >= 0) ;\n\n    //puts the data back into the pipe.\n    request.getCoyoteRequest().action\n        (ActionCode.ACTION_REQ_SET_BODY_REPLAY, retval);\n\n    return retval;\n  }\n\nThis code works as designed, however the problem occurs later on when Axis\nattempted to parse the web service request. I don't remember the exact Axis\nerror, but I was able to track the problem down to a bug in the\norg.apache.coyote.http11.filters.SavedRequestInputFilter class. The doRead\nmethod was not properly implemented to return a -1 when appropriate.\n\nHere is my modified version of the doRead method:\n\npublic int doRead(ByteChunk chunk, org.apache.coyote.Request request)\n            throws IOException {\n        int writeLength = 0;\n        \n        if (chunk.getLimit() > 0 && chunk.getLimit() < input.getLength()) {\n            writeLength = chunk.getLimit();\n        } else {\n        \twriteLength = input.getLength();\n        }\n        if(input.getOffset()>= input.getEnd())\n            return -1;\n\n        input.substract(chunk.getBuffer(), 0, writeLength);\n        chunk.setOffset(0);\n        chunk.setEnd(writeLength);\n        \n        return writeLength;    \n    }\n\n\nThis bug won't show up unless someone tries to use a filter/valve to do\nsomething with web services. That's not too likely because that's what we have\nSOAPHandlers for.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "40771",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P4 minor",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Can't read POST data from within a filter or valve",
    "systemSpecification": true,
    "version": "5.5.17"
}