{
    "comments": [
        {
            "author": null,
            "body": "I see your point.  I've removed the static Log fields in favor of non-static\nones for Jasper in Tomcat 5.5 (should be in time for the 5.5.21 release).  I\nguess this still needs to be done in 5.0.",
            "date": "20061226T07:03:27",
            "id": 0
        },
        {
            "author": null,
            "body": "Done for Tomcat 5.0 as well.",
            "date": "20061226T07:25:43",
            "id": 1
        }
    ],
    "component": "Jasper",
    "description": "When the first JSP renderd (since startup) is from a webapp that contains\ncommons-logging and log4j, classes from the 'jasper.runtime' package create a\nmemory leak.\n\nHere's a description in more detail\n1) User deploys war with commons-logging + log4j jars (quite common)\n2) First page is rendered, causing loading and initialization of classes in the\n'jasper.runtime' package.\n3) Some of these classes (for instance PageContextImpl) contain static\ncommons-logging 'log' fields.\n4) In the scenario described, these fields get intialized to a Log4JLogger\ninstance that is loaded from the webapp classloader.\n\nThe effective result is that code and data in this webapp will never be unloaded.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "39975",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Classloader refence leaks in jasper-runtime when webapp has log4j and commons-logging",
    "systemSpecification": true,
    "version": "5.0.17"
}