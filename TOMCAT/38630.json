{
    "comments": [
        {
            "author": null,
            "body": "(In reply to comment #0)\n> Very often, let's say in 30%-50% of each invocations java:comp is not \navailable\n> inside a static initializer when my webapp is started or restarted.\n\nWhat part of the J2EE documentation makes you think it should be available in \nstatic initializers? IMHO Servlet.init() is the earliest place in the servlet \nlifecycle to securely access java:comp/env.\n\nB.t.w bug 38629 may be related to this one, since exceptions in static \ninitializers lead to java.lang.NoClassDefFoundError\n\n",
            "date": "20060214T09:36:14",
            "id": 0
        },
        {
            "author": null,
            "body": "(In reply to comment #1)\nServletContextListener.contextInitialized() might be the earliest point in the \nwebapp-lifecycle to provide access to java:comp/env",
            "date": "20060214T09:44:37",
            "id": 1
        },
        {
            "author": null,
            "body": "On a clean start-up this static initializer IS called the first time inside\ncontextInitialized() of my ContextListener. The problem here is the\nStandardManager that seems to be invoked too early (in some cases) by catalina.\nWhen there are saved sessions the StandardManager loads my UserCoreBean objects,\nwhich use all the same global Singleton which offers the environment bases\nconfig data. Normally sessions and therfore UserCoreBeans are not created before\ncontextInitialized() is done. Since StandardManager is enabled by default for\nall webapps one can expect that it does its job right and is not executed before\nthe webapp.xml deployment descriptor is fully parsed and executed.\n\nSee complete trace here:\n\nSCHWERWIEGEND: Exception loading sessions from persistent storage\njava.lang.ExceptionInInitializerError\n        at com.folgmann.UserCoreBean.<clinit>(UserCoreBean.java:111)\n        at java.io.ObjectStreamClass.hasStaticInitializer(Native Method)\n        at java.io.ObjectStreamClass.computeDefaultSUID(ObjectStreamClass.java:1641)\n        at java.io.ObjectStreamClass.access$100(ObjectStreamClass.java:47)\n        at java.io.ObjectStreamClass$1.run(ObjectStreamClass.java:175)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.io.ObjectStreamClass.getSerialVersionUID(ObjectStreamClass.java:172)\n        at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:515)\n        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1546)\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1460)\n        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1546)\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1460)\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1693)\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1299)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:339)\n        at\norg.apache.catalina.session.StandardSession.readObject(StandardSession.java:1342)\n        at\norg.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:885)\n        at\norg.apache.catalina.session.StandardManager.doLoad(StandardManager.java:416)\n        at\norg.apache.catalina.session.StandardManager.load(StandardManager.java:343)\n        at\norg.apache.catalina.session.StandardManager.start(StandardManager.java:657)\n        at org.apache.catalina.core.ContainerBase.setManager(ContainerBase.java:499)\n        at\norg.apache.catalina.startup.ContextConfig.managerConfig(ContextConfig.java:317)\n        at org.apache.catalina.startup.ContextConfig.start(ContextConfig.java:638)\n        at\norg.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:216)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4270)\n        at\norg.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:823)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:807)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:595)\n        at\norg.apache.catalina.core.StandardHostDeployer.addChild(StandardHostDeployer.java:903)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at\norg.apache.commons.beanutils.MethodUtils.invokeMethod(MethodUtils.java:216)\n        at org.apache.commons.digester.SetNextRule.end(SetNextRule.java:216)\n        at org.apache.commons.digester.Rule.end(Rule.java:230)\n        at org.apache.commons.digester.Digester.endElement(Digester.java:1130)\n        at\norg.apache.catalina.util.CatalinaDigester.endElement(CatalinaDigester.java:76)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(Unknown Source)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown\nSource)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)\n        at org.apache.commons.digester.Digester.parse(Digester.java:1666)\n        at\norg.apache.catalina.core.StandardHostDeployer.install(StandardHostDeployer.java:488)\n        at org.apache.catalina.core.StandardHost.install(StandardHost.java:863)\n        at org.apache.catalina.core.StandardHost.install(StandardHost.java:863)\n        at\norg.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:483)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:427)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:983)\n        at\norg.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:349)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1091)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:789)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1083)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:478)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:480)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:2313)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:556)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:287)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:425)\n[...]\nCaused by: javax.naming.NameNotFoundException: Name java:comp is not bound in\nthis Context\n[...]\n",
            "date": "20060215T17:01:59",
            "id": 2
        },
        {
            "author": null,
            "body": "I also disagree with you that environment entries should be only available when\nthe context listener is called. If the classes of the webapp are loaded before\nthat, all environment entries configured in server.xml and the webapp's\ndeployment descriptor .xml file should be available, because that's what they\nare for: customizing and configuring the running webapp. \n\nIn the J2EE spec and the Servlet spec you can read that the environment entries\nhave to be available to the application at _runtime_. Static initializers also\nbelong to the application's runtime.\n\nBTW: it worked in tomcat 4.1, but is broken in 5.5.9 (the one embedded in\nNetBeans 5.0), too.\n",
            "date": "20060217T18:02:57",
            "id": 3
        },
        {
            "author": null,
            "body": "You keep submitting bugs that are very hard to reproduce.  Your help in\nreproducing them, e.g. by submitting test applications or scripts, would be\nhighly appreciated.  The chances of them getting resolved as originally\nsubmitted are fairly slim.",
            "date": "20060413T19:16:01",
            "id": 4
        },
        {
            "author": null,
            "body": "Created attachment 19007\nTest case application",
            "date": "20061016T07:35:16",
            "id": 5
        },
        {
            "author": null,
            "body": "Created attachment 19008\nTest case application context descriptor",
            "date": "20061016T07:36:06",
            "id": 6
        },
        {
            "author": null,
            "body": "Hi!\n\nI had the same problem too, and I tracked this down to a possible problem\nrelated to the persistence mechanism. My guess is that this bug happens only\nwhen objects having static initializers that need application resources have\nbeen persisted. If the server is shut down and such , the next time the server\nstarts up, it tries to deserialize these objects before the resources of the\napplication are available, and to invoke the static initializers before these\nhave all the necessary resources available. I wrote a small testcase application.\n\nInstructions:\n- have your Tomcat (I tested this on 5.0.28) shut down.\n- copy the file Bug38630TestApp.war into your TOMCAT_HOME/webapps directory\n- copy the file Bug38630TestApp.xml into your\nTOMCAT_HOME/conf/Catalina/localhost directory (or whatever directory applicable)\n- start your Tomcat\n- access the application Bug38630TestApp; this should send you to a page called\nindex.jsp saying \"This is only a test welcome file\"; in the log, you will see\nthat the application resource has been accessed, and that an object has been\nstored in the session\n- shut your Tomcat down\n- check in your TOMCAT_HOME/work/Catalina/localhost/Bug38630TestApp directory,\nyou will now probably find the following file: SESSIONS.ser; I guess this is the\nserialized object\n- start your Tomcat up again\n\nThere you are:\n\n16.10.2006 16:27:43 org.apache.catalina.core.StandardHostDeployer install\nINFO: Processing Context configuration file URL file:C:\\Programme\\Jakarta-Tomcat\n5.0\\conf\\Catalina\\localhost\\Bug38630TestApp.xml\n2006-10-16 16:27:43,191 INFO  my.test.InitClass - Looking up\njava:comp/env/myResource\njavax.naming.NameNotFoundException: Name java:comp is not bound in this Context\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:768)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:151)\n        at javax.naming.InitialContext.lookup(InitialContext.java:351)\n        at my.test.InitClass.getParamForTestClass(Unknown Source)\n        at my.test.TestClass.<clinit>(Unknown Source)\n        at java.io.ObjectStreamClass.hasStaticInitializer(Native Method)\n        at java.io.ObjectStreamClass.computeDefaultSUID(ObjectStreamClass.java:1641)\n        at java.io.ObjectStreamClass.access$100(ObjectStreamClass.java:47)\n        at java.io.ObjectStreamClass$1.run(ObjectStreamClass.java:175)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.io.ObjectStreamClass.getSerialVersionUID(ObjectStreamClass.java:172)\n        at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:515)\n        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1546)\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1460)\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1693)\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1299)\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:339)\n        at\norg.apache.catalina.session.StandardSession.readObject(StandardSession.java:1342)\n        at\norg.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:885)\n        at\norg.apache.catalina.session.StandardManager.doLoad(StandardManager.java:416)\n        at\norg.apache.catalina.session.StandardManager.load(StandardManager.java:343)\n        at\norg.apache.catalina.session.StandardManager.start(StandardManager.java:657)\n        at org.apache.catalina.core.ContainerBase.setManager(ContainerBase.java:499)\n        at\norg.apache.catalina.startup.ContextConfig.managerConfig(ContextConfig.java:315)\n        at org.apache.catalina.startup.ContextConfig.start(ContextConfig.java:635)\n        at\norg.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:216)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4290)\n        at\norg.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:823)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:807)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:595)\n        at\norg.apache.catalina.core.StandardHostDeployer.addChild(StandardHostDeployer.java:903)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at\norg.apache.commons.beanutils.MethodUtils.invokeMethod(MethodUtils.java:216)\n        at org.apache.commons.digester.SetNextRule.end(SetNextRule.java:256)\n        at org.apache.commons.digester.Rule.end(Rule.java:276)\n        at org.apache.commons.digester.Digester.endElement(Digester.java:1058)\n        at\norg.apache.catalina.util.CatalinaDigester.endElement(CatalinaDigester.java:76)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(Unknown Source)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown\nSource)\n        at\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.commons.digester.Digester.parse(Digester.java:1567)\n        at\norg.apache.catalina.core.StandardHostDeployer.install(StandardHostDeployer.java:488)\n        at org.apache.catalina.core.StandardHost.install(StandardHost.java:863)\n        at\norg.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:483)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:427)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:983)\n        at\norg.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:349)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1091)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:789)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1083)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:478)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:480)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:2313)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:556)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:287)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:425)\n\n\nI hope this will help, I don't know if this is normal or faulty behaviour, just\nthought this could help identify the bug, if there is any, or at least the\nproblem reported.\n\nBest regards,\n\nNicolas.\n\n",
            "date": "20061016T07:37:10",
            "id": 7
        },
        {
            "author": null,
            "body": "Thanks for the test case.\n\nI vaguely recall various fixes to the context start/stop ordering (like bug 36072). It appears that in all of this re-ordering this bug has been fixed. Checked with trunk and 5.5.x",
            "date": "20090702T07:28:27",
            "id": 8
        }
    ],
    "component": "Catalina",
    "description": "Very often, let's say in 30%-50% of each invocations java:comp is not available\ninside a static initializer when my webapp is started or restarted.\n\nExample:\n\n12.02.2006 13:21:44 org.apache.catalina.session.StandardManager start\nSCHWERWIEGEND: Exception loading sessions from persistent storage\njava.lang.ExceptionInInitializerError\n[...]\nCaused by: javax.naming.NameNotFoundException: Name java:comp is not bound in\nthis Context\n[...]\n\nwhich is thrown by line two of this code snippet:\n\nContext initContext = new InitialContext();\nenvContext = (Context)initContext.lookup(\"java:comp/env/\");\n\nAs this error occurs only sometimes, it seems to be a race condition between the\nsetting up of the environmental context and the starting of the application.\nIt might be a problem with persistent sessions as the StandardManager error line\nsuggests.\n\nPlease fix it, as my application needs to read an <Environment\ntype=\"java.lang.String\" ... /> out of it's deployment descriptor to start-up\nsuccessfully. Everytime this error occurs one has to start the application\nmanually again in the tomcat manager webapp. This is bad for automated restarts.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "38630",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Environment (java:comp/env/) sometimes not available",
    "systemSpecification": true,
    "version": "5.0.30"
}