{
    "comments": [
        {
            "author": null,
            "body": "If you could attach the simplest possible JSP that demonstrated this issue that would be very helpful.\n\nAs a work-around, try using the following in your web.xml:\n\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n   xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n   version=\"2.5\">\n...\n</webapp>",
            "date": "20100126T03:41:10",
            "id": 0
        },
        {
            "author": null,
            "body": "Hi Mr,\nThanks for reply,\nMy web.xml is alredy 2.5 version...i've try your code with no results.\n\nI have an application with only struts (1.2.8).\n\nI have a welcome page.\n\n<%@ taglib uri=\"http://struts.apache.org/tags-bean\"  prefix=\"bean\" %>\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n\n//some code,\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n\n//other code, not necessary\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"3\"/>\n\n\nThis page will not be compiled (during build or runtime).\n\nI'll try to create and send a simple app later.\n\nThanks in advidce,\n\nAgharta",
            "date": "20100126T04:33:21",
            "id": 1
        },
        {
            "author": null,
            "body": "See this.\n\nhttp://struts.apache.org/1.2.8/userGuide/struts-bean.html#define",
            "date": "20100126T04:36:47",
            "id": 2
        },
        {
            "author": null,
            "body": "Created attachment 24890\nthe test case PART 1",
            "date": "20100126T07:09:21",
            "id": 3
        },
        {
            "author": null,
            "body": "Created attachment 24891\ntest case part 2",
            "date": "20100126T07:09:48",
            "id": 4
        },
        {
            "author": null,
            "body": "The file is a zip splitted in 2 parts",
            "date": "20100126T07:10:36",
            "id": 5
        },
        {
            "author": null,
            "body": "Created attachment 24892\nPART1",
            "date": "20100126T07:11:44",
            "id": 6
        },
        {
            "author": null,
            "body": "Created attachment 24893\nPART2",
            "date": "20100126T07:12:32",
            "id": 7
        },
        {
            "author": null,
            "body": "Please see the file pages/Welcome.jsp for error simulation.\n\n\nThanks,\n\nAghart",
            "date": "20100126T07:14:21",
            "id": 8
        },
        {
            "author": null,
            "body": "We are also seeing the issue with our code running on Windows XP SP 2, 32bit OS using struts version 1.3.10.",
            "date": "20100129T07:46:30",
            "id": 9
        },
        {
            "author": null,
            "body": "Thanks for the test case. I can now reproduce this error. Looking at it now...",
            "date": "20100131T03:09:50",
            "id": 10
        },
        {
            "author": null,
            "body": "The regression is caused by the fix for bug42390. I'll put together a test case that covers both and then see what can be done to find a fix that allows both to work correctly.",
            "date": "20100131T04:26:44",
            "id": 11
        },
        {
            "author": null,
            "body": "Thanks for the test case. It speed up the process of fixing this considerably.\n\nThe regression has been fixed in trunk and proposed for 6.0.x.",
            "date": "20100131T16:09:06",
            "id": 12
        },
        {
            "author": null,
            "body": "(In reply to comment #13)\n> Thanks for the test case. It speed up the process of fixing this considerably.\n> \n> The regression has been fixed in trunk and proposed for 6.0.x.\n\nFantastic!\nI'll wait next version with enthusiasm!\n\nMany thanks for your work!\n\nRegards,\n\nAgharta",
            "date": "20100131T23:09:08",
            "id": 13
        },
        {
            "author": null,
            "body": "Reviewing the fix to this issue,\nI cannot find any provision in the JSP specification to support the requested behaviour.\n\nThe question is, when we are requested to declare a Java variable whether we should try to reuse existing declaration, or we should always declare it anew.\n\nI cannot find anything in the spec that says about reusing existing declaration. The only place relevant is chapter JSP.9.4.4 \"Actions\", and it says that when we do a custom action, it is translated into Java code as\n\ndeclare AT_BEGIN variables\n{\n  declare NESTED variables\n  transformation of foo\n}\ndeclare AT_END variables\n\nIt just says \"declare\".\n\n\nLooking at the example provided in Comment 2:\n\nIn struts 1.2.8 the bean:define tag is a BodyTag, which in its *Tei class declares a variable with the scope of VariableInfo.AT_END\n\nSee\nhttp://svn.apache.org/viewvc/struts/struts1/tags/STRUTS_1_2_8/src/share/org/apache/struts/taglib/bean/DefineTag.java?view=markup\n\nhttp://svn.apache.org/viewvc/struts/struts1/tags/STRUTS_1_2_8/src/share/org/apache/struts/taglib/bean/DefineTei.java?view=markup\n\n\nThe OP's problem is that such a tag defines both a scoped variable and a Java variable (\"scripting variable\"). It is OK to put a value into pageContext under the same name, but duplicate Java variables are not allowed.\n\nTo be able to implement behaviour, requested in Comment 2, Tomcat would have to track which Java variables were declared. So, to not define a variable when it is created by the second time. But, consider the following example of mixing scriptlets and those tags:\n\n<% { %>\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n\n<% } { %>\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n\n<% } %>\n\nThere is no way to reliably tell the difference between the above example and the one in Comment 2.\n\n\nTo conclude, I would recommend the OP to use the following construct (using the JSTL tag library). I think, that it should be safe:\n\n<c:if test=\"${true}\">\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n</c:if>\n<c:if test=\"${true}\">\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n</c:if>\n\nOr, use <c:set /> from the same JSTL library.\n\n\nThus, I think that this issue should be closed either as WONTFIX, or as INVALID.",
            "date": "20100214T06:07:32",
            "id": 14
        },
        {
            "author": null,
            "body": "The page mentioned contridicts itself:\nhttp://struts.apache.org/1.2.8/userGuide/struts-bean.html#define\n\n*.  Unconditionally creates (or replaces) a bean under the specified identifier\nand\n*.  USAGE NOTE - There is a restriction in the JSP 1.1 Specification that disallows using the same value for an id  attribute more than once in a single JSP page. Therefore, you will not be able to use <bean:define> for the same bean name more than once in a single page\n\nI think if you are no longer going to allow a variable to be overwritten, then add a environment variable so we can turn the old behaviour on.\n\nFor us there is to many pages to change and would make the page hard to code using dozens of variables...\n\nThe comment about checking am not quite getting as one variable defined you can't use again:\n<c:if test=\"${true}\">\n   <bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n</c:if>\n<c:if test=\"${true}\">\n   <bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n</c:if>\n\nMy personal view is you should be able to overwrite a variable.  You could then mention scope, but thats the whole page, not block of code.",
            "date": "20100214T11:54:39",
            "id": 15
        },
        {
            "author": null,
            "body": "(In reply to comment #15)\n> Reviewing the fix to this issue,\n> I cannot find any provision in the JSP specification to support the requested\n> behaviour.\n> \n> The question is, when we are requested to declare a Java variable whether we\n> should try to reuse existing declaration, or we should always declare it anew.\n> \n> I cannot find anything in the spec that says about reusing existing\n> declaration. The only place relevant is chapter JSP.9.4.4 \"Actions\", and it\n> says that when we do a custom action, it is translated into Java code as\n> \n> declare AT_BEGIN variables\n> {\n>   declare NESTED variables\n>   transformation of foo\n> }\n> declare AT_END variables\n> \n> It just says \"declare\".\n> \n> \n> Looking at the example provided in Comment 2:\n> \n> In struts 1.2.8 the bean:define tag is a BodyTag, which in its *Tei class\n> declares a variable with the scope of VariableInfo.AT_END\n> \n> See\n> http://svn.apache.org/viewvc/struts/struts1/tags/STRUTS_1_2_8/src/share/org/apache/struts/taglib/bean/DefineTag.java?view=markup\n> \n> http://svn.apache.org/viewvc/struts/struts1/tags/STRUTS_1_2_8/src/share/org/apache/struts/taglib/bean/DefineTei.java?view=markup\n> \n> \n> The OP's problem is that such a tag defines both a scoped variable and a Java\n> variable (\"scripting variable\"). It is OK to put a value into pageContext under\n> the same name, but duplicate Java variables are not allowed.\n> \n> To be able to implement behaviour, requested in Comment 2, Tomcat would have to\n> track which Java variables were declared. So, to not define a variable when it\n> is created by the second time. But, consider the following example of mixing\n> scriptlets and those tags:\n> \n> <% { %>\n> \n> <bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n> \n> <% } { %>\n> \n> <bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n> \n> <% } %>\n> \n> There is no way to reliably tell the difference between the above example and\n> the one in Comment 2.\n> \n> \n> To conclude, I would recommend the OP to use the following construct (using the\n> JSTL tag library). I think, that it should be safe:\n> \n> <c:if test=\"${true}\">\n> <bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n> </c:if>\n> <c:if test=\"${true}\">\n> <bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n> </c:if>\n> \n> Or, use <c:set /> from the same JSTL library.\n> \n> \n> Thus, I think that this issue should be closed either as WONTFIX, or as\n> INVALID.\n\n\n\n\nHi Mr,\nThanks for reply,\nSorry, but i'm not right with you (IMHO, i'm an end user of tomcat).\nFirst, why previous versions of tomcat works right (6.0.20 and prior)?\nSecond, i don't use JSTL, i use the <logic:notEmpty> and <logic:notEqual> strut's tags.....and your solution (transated in struts) does not work.\n\n//example using notEmpty tag\n\n<logic:notEmpty name=\"myVar\" scope=\"request\">\n    <bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n</logic:notEmpty>\n\n<logic:notEmpty name=\"myVar\" scope=\"request\">\n    <bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n</logic:notEmpty>\n\n<logic:notEmpty name=\"myVar\" scope=\"request\">\n    <bean:define id=\"configurationExists\" toScope=\"request\" value=\"2\"/>\n</logic:notEmpty>\n\nTo confirm it, please download and run the attached example, it contains this code (in pages/Welcome.jsp) as the test case (it uses notEqual tag):\n\n<%-- HERE THE INCRIMINATED CODE --%>\n\n<bean:define id=\"configurationExists\" toScope=\"request\" value=\"0\"/>\n\n<logic:notEqual name=\"configurationExists\" value=\"1\">\n    <bean:define id=\"configurationExists\" toScope=\"request\" value=\"1\"/>\n</logic:notEqual>\n<logic:notEqual name=\"configurationExists\" value=\"2\">\n    <bean:define id=\"configurationExists\" toScope=\"request\" value=\"2\"/>\n</logic:notEqual>\n\n<%-- END --%>\n\nI think that this code could appear in many projects.\n\n......i think that exists many other projects that still using stuts 1.2.x.\n\nThis is only my opinion, in my world and in my case. \n\nPlease correct me if i am wrong.\n\nRegards,\n\nAgharta",
            "date": "20100215T08:03:57",
            "id": 16
        },
        {
            "author": null,
            "body": "The fix/workaround mentioned in this ticket does not work.  My last reply was replying to the comment before that doing checks would be a nightmare (to many code changes/testing) and that solution still has the same problem.  The problem is redeclaring a bean with the same ID.  The page I mention seems to contradict itself.\n\nAlthough now fixed in trunk which I haven't tested, someone else mentioned they think the new behaviour that a define can only be used once on a pge is correct.  If that is the rulling we need a backward compatible param for people like you and I.  My personal view is the variable is for the whole page, so you should be able to replace its value.",
            "date": "20100215T08:17:07",
            "id": 17
        },
        {
            "author": null,
            "body": "(In reply to comment #18)\n> The fix/workaround mentioned in this ticket does not work.  My last reply was\n> replying to the comment before that doing checks would be a nightmare (to many\n> code changes/testing) and that solution still has the same problem.  The\n> problem is redeclaring a bean with the same ID.  The page I mention seems to\n> contradict itself.\n> \n> Although now fixed in trunk which I haven't tested, someone else mentioned they\n> think the new behaviour that a define can only be used once on a pge is\n> correct.  If that is the rulling we need a backward compatible param for people\n> like you and I.  My personal view is the variable is for the whole page, so you\n> should be able to replace its value.\n\n\nHi,\nYou are right (i've don't read your post, sorry, my mistake. And, sorry Mr Konstantin Kolinko), but i hope that the patch provided by Mr Mark Thomas works better than your solution (i hope that no code will be rewrited by end users).\n\nWhen patch will be freezed in new version i'll test it.\n\nThanks again.\n\nAgharta",
            "date": "20100215T08:25:25",
            "id": 18
        },
        {
            "author": null,
            "body": "Created attachment 24991\n2010-02-16_tc7_bug42390_bug48616.patch\n\nPatch for trunk that\n- reverts r905145,\n- provides an alternative fix for bug 48616 and bug 42390,\n- replaces Vector -> List, Hashtable -> HashMap in the affected API.\n\nThe essence of this fix is that all those java variable declarations are not needed when we are inside a JspFragment, because it is scriptless.\n\nThat simplifies a lot and fixes bug 42390 and bug 48616 along the way.\n\nScriptingVariabler provides a list of Java variables to be declared,\nfiltering out those names that are already declared in the parent scopes (because those are still visible). That logic does not work when we enter a JspFragment, because a fragment is implemented in the generated servlet as a method, and does not see those variables in the calling scope.\n\nInstead of trying to fix ScriptingVariabler to detect being in those fragments and provide better lists, I make observation that in those fragments the Java variables can be not used at all.  Thus, we can ignore ScriptingVariabler exactly in those cases when it is wrong.\n\n\nFuture optimization might be to change ScriptingVariabler#ScriptingVariableVisitor and Generator#declareTemporaryScriptingVars#ScriptingVarVisitor to do not descend into fragments, as what they do will be ignored, but that will require to reimplement all code paths how Generator#GenerateVisitor#generateJspFragment() is called. I see 3 such code paths, and while they are not too complicated, they are not too trivial either, and I am afraid to introduce bugs when implementing them.",
            "date": "20100216T03:23:00",
            "id": 19
        },
        {
            "author": null,
            "body": "Created attachment 24992\n2010-02-16_tc6_bug42390_bug48616.patch\n\nPatch for Tomcat 6.0",
            "date": "20100216T04:01:29",
            "id": 20
        },
        {
            "author": null,
            "body": "Created attachment 24993\n2010-02-16_tc55_bug42390_bug48616.patch\n\nPatch for Tomcat 5.5",
            "date": "20100216T04:14:49",
            "id": 21
        },
        {
            "author": null,
            "body": "Trunk patch looks good to me. Feel free to apply it (reverting my previous fix).",
            "date": "20100216T20:45:19",
            "id": 22
        },
        {
            "author": null,
            "body": "Applied to trunk (r910792), proposed for 6.0 and 5.5.",
            "date": "20100217T01:11:59",
            "id": 23
        },
        {
            "author": null,
            "body": "This has been fixed in trunk and applied to 6.0.x. It will be included in 6.0.25 onwards.",
            "date": "20100218T10:28:20",
            "id": 24
        },
        {
            "author": null,
            "body": "Re-open to track to 5.5.x",
            "date": "20100218T10:28:59",
            "id": 25
        },
        {
            "author": null,
            "body": "*** Bug 48879 has been marked as a duplicate of this bug. ***",
            "date": "20100310T16:25:08",
            "id": 26
        },
        {
            "author": null,
            "body": "This patch was applied to 5.5.x in r935941 and will be in 5.5.30 onwards.",
            "date": "20100420T10:38:33",
            "id": 27
        },
        {
            "author": null,
            "body": "*** Bug 49434 has been marked as a duplicate of this bug. ***",
            "date": "20100614T13:31:03",
            "id": 28
        }
    ],
    "component": "Jasper",
    "description": "I'm using Struts 1.2.\nI've upgrade from tomcat 6.0.20 to 6.0.24 and nothing works.\n\nThe jsp compilation throws many error (i use the tag bean:define with same variable many times in jsp):\n\nDuring jsp precompilation:\n\n\"my_variable\" is already defined in _jspService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n\nand at runtime:\n\n26-gen-2010 10.16.43 org.apache.catalina.core.ApplicationDispatcher invoke\nGRAVE: Servlet.service() for servlet jsp threw exception\norg.apache.jasper.JasperException: Unable to compile class for JSP: \n\nAn error occurred at line: 459 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 576 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 693 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 810 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 927 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.045 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.162 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.279 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.396 in the generated java file\nDuplicate local variable configurationExists\n\nAn error occurred at line: 1.531 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.660 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.777 in the generated java file\nDuplicate local variable patientsExists\n\nAn error occurred at line: 1.897 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.014 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.131 in the generated java file\nDuplicate local variable multiportionExists\n\nAn error occurred at line: 2.251 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.368 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.485 in the generated java file\nDuplicate local variable generalExists\n\nAn error occurred at line: 2.605 in the generated java file\nDuplicate local variable messagesExists\n\nAn error occurred at line: 2.722 in the generated java file\nDuplicate local variable messagesExists\n\nAn error occurred at line: 2.842 in the generated java file\nDuplicate local variable printFindExists\n\nAn error occurred at line: 2.959 in the generated java file\nDuplicate local variable printFindExists\n\nStacktrace:\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:92)\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:330)\n        at org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:439)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:334)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:312)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:299)\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:589)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:317)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:551)\n        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:488)\n        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:968)\n        at org.apache.jsp.WEB_002dINF.pages.login.mainPage_jsp._jspService(mainPage_jsp.java:206)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n        at org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1062)\n        at org.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:386)\n        at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:229)\n        at org.apache.struts.action.ActionServlet.process(ActionServlet.java:1196)\n        at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:432)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)\n        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)\n        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)\n        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)\n        at org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1062)\n        at org.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:386)\n        at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:229)\n        at org.apache.struts.action.ActionServlet.process(ActionServlet.java:1196)\n        at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:432)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.displaytag.filter.ResponseOverrideFilter.doFilter(ResponseOverrideFilter.java:125)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:558)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n        at java.lang.Thread.run(Thread.java:619)\n\n\n\nBefore upgrading to 6.0.24 all works fine.\n\nReading the documentation of bean:define in struts javadoc i see this message:\n\nUSAGE NOTE - There is a restriction in the JSP 1.1 Specification that disallows using the same value for an id attribute more than once in a single JSP page. Therefore, you will not be able to use <bean:define> for the same bean name more than once in a single page. \n\nBut i've not specify any jsp version.\n\nSo, is this a tomcat 6.0.24 regression bug? \n\nI've not particular compilation type/version specified in my app.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "48616",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 blocker",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Struts 1.2 and bean:define tag throws jsp 1.1 regression exception",
    "systemSpecification": true,
    "version": "5.5.28"
}