{
    "comments": [
        {
            "author": null,
            "body": "I will not be fixing that, as this changes the value of toString for the URL.",
            "date": "20050907T12:05:30",
            "id": 0
        },
        {
            "author": null,
            "body": "Good point about toString(). I have a solution for that as well. Just override\norg.apache.naming.resources.DirContextURLStreamHandler.toExternalForm() and have\nit ignore the \"authority\" part of the URL, as follows (this is copied from\njava.net.URLStreamHandler.toExternalForm(), with \"authority\" part ignored):\n\n    /**\n     * Converts a <code>URL</code> of a specific protocol to a\n     * <code>String</code>.\n     *\n     * @param   u   the URL.\n     * @return  a string representation of the <code>URL</code> argument.\n     */\n    protected String toExternalForm(URL u) {\n\n\t// pre-compute length of StringBuffer\n\tint len = u.getProtocol().length() + 1;\n\tif (u.getPath() != null) {\n\t    len += u.getPath().length();\n\t}\n\tif (u.getQuery() != null) {\n\t    len += 1 + u.getQuery().length();\n\t}\n\tif (u.getRef() != null) \n\t    len += 1 + u.getRef().length();\n\n\tStringBuffer result = new StringBuffer(len);\n\tresult.append(u.getProtocol());\n        result.append(\":\");\n        if (u.getPath() != null) {\n            result.append(u.getPath());\n        }\n        if (u.getQuery() != null) {\n            result.append('?');\n            result.append(u.getQuery());\n        }\n\tif (u.getRef() != null) {\n\t    result.append(\"#\");\n            result.append(u.getRef());\n\t}\n\treturn result.toString();\n    }\n\nIt is important that URLs returned by ServletContext.getResource() that are\nequal have equals() return TRUE. This works for all other kinds of URLs.",
            "date": "20050907T19:47:39",
            "id": 1
        }
    ],
    "component": "Catalina",
    "description": "Consider the following servlet snippet:\n\n  URL main = context.getResource(\"/WEB-INF/wsdl/hello_literal.wsdl\");\n  URL sub = new URL(main, \"hello.xsd\");\n  URL sub1 = context.getResource(\"/WEB-INF/wsdl/hello.xsd\");\n\nWhile sub.toString().equals(sub1.toString()) is TRUE, sub.equals(sub1)\nreturns FALSE, where it should also return TRUE.\n\nI noticed the reason sub.equals.(sub1) is FALSE is because their\ngetHost() values are different:\n\n  sub.getHost() -> \"\"\n  sub1.getHost() -> null\n\nNotice that in the case of\n\n  URL sub = new URL(main, \"hello.xsd\");\n\njava.net.URLStreamHandler.parseURL() will set host to \"\", while in the\ncase of\n\n  URL sub1 = context.getResource(\"/WEB-INF/wsdl/hello.xsd\");\n\nwhich is implemented by\norg.apache.catalina.core.ApplicationContext.getResource() as follows:\n\n  return new URL\n      (\"jndi\", null, 0, getJNDIUri(hostName, fullPath),\n      new DirContextURLStreamHandler(resources));\n\nthe host component is set to \"null\".\n\nChanging\n\n  return new URL\n      (\"jndi\", null, 0, getJNDIUri(hostName, fullPath),\n      new DirContextURLStreamHandler(resources));\n\nto \n\n  return new URL\n      (\"jndi\", \"\", 0, getJNDIUri(hostName, fullPath),\n      new DirContextURLStreamHandler(resources));\n\nin ApplicationContext.getResource() fixes the problem.\n\nUnfortunately, I am having cvs problems, otherwise i would have committed\nthe fix myself.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "36534",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Context relative URLs returned by ServletContext.getResource() for the same path are not equal",
    "systemSpecification": true,
    "version": "Nightly Build"
}