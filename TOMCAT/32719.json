{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 13761\npatch fixing this problem\n\nAdded patch",
            "date": "20041215T19:03:31",
            "id": 0
        },
        {
            "author": null,
            "body": "*** Bug 32577 has been marked as a duplicate of this bug. ***",
            "date": "20041216T03:26:55",
            "id": 1
        },
        {
            "author": null,
            "body": "This is fixed in the CVS.  The fix is modified from the patch here, since your \npatch doesn't handle the case:\n   <listener-class>package.MyClass$${inner.class}</listener-class>\n\n \n\n",
            "date": "20041216T04:54:57",
            "id": 2
        },
        {
            "author": null,
            "body": "*** Bug 34843 has been marked as a duplicate of this bug. ***",
            "date": "20051124T17:26:07",
            "id": 3
        }
    ],
    "component": "Unknown",
    "description": "class: org.apache.tomcat.util.IntrospectionUtils\nmethod: replaceProperties(String, Hashtable, PropertySource[])\nCVS:\njakarta-tomcat-connectors/util/java/org/apache/tomcat/util/IntrospectionUtils.java\n\n\nA possibily unintentional feature of IntrospectionUtils.replaceProperties causes\nthe $ character to the stripped from web.xml files when they are loaded. \n\nThis was discovered when the name of an inner class was specified as a parameter:\n\n<init-param>\n <param-name>source.factory</param-name>\n <param-value>com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSource$Factory</param-value>\n</init-param>\n\nHowever when the servlet retrieved this parameter, the $ character had been\nremoved yeilding the result:\n\"com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSourceFactory\"\nrather than:\n\"com.ssl.javaservlets.tihinterface.PcoRegionsSqlDataSource$Factory\"\n\nThis seemed related to the processing of replacement properties defined in the\nstyle ${property.name}. However if the is no property \"property.name\" then the\nraw text \"${property.name}\" passes through untouched, likewise if a $ is placed\na the end of a string.\n\nUpon inspecting the IntrospectionUtils.replaceProperties method, I noticed that\nthis behaviour was due to the following code starting @ line 475:\n\n} else if (value.charAt(pos + 1) != '{') {\n    sb.append(value.charAt(pos + 1));\n    prev = pos + 2; // XXX\n} else {\n\nTherefore after consuming a $ and the lookahead says that a non { character\nfollows, only the non { character is placed on the buffer and the $ which has\njust been consumed is dropped. This can be fixed by simply adding the $ to the\nbuffer, thus:\n\n} else if (value.charAt(pos + 1) != '{') {\n    sb.append('$');\n    sb.append(value.charAt(pos + 1));\n    prev = pos + 2; \n} else {\n\n\nI looking back over the CVS history this faulty logic is almost 3 years old, yet\nI could not find an entry in the bug database for it. I've been using Tomcat for\nover 3 years now myself and find it strange to of only stubled over this bug\nafter all this time, I guess I've never used a string with the $ character before :P",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "32719",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "IntrospectionUtils feature causes $ charters to be stripped out of web.xml files",
    "systemSpecification": false,
    "version": "5.5.4"
}