{
    "comments": [
        {
            "author": null,
            "body": "Good, interesting catch.  It seems like something simple in the PageContext \nimlpementation, like\n\nif(! (exception instanceof Exception)) {\n  exception = new JspException(exception);\n}\n\nwould be a good wrap.  It only wraps if needed, and the JspException \nconstructor takes a Throwable root cause, so I think we'll be all set.  I'll \nwait to see what more experienced Jasper developers (Kin-Man?) think of this.",
            "date": "20040915T18:14:29",
            "id": 0
        },
        {
            "author": null,
            "body": "Yoav Shapira's suggestion (2004-09-15 18:14) seems like a reasonable way to handle this.  If my \nopinion matters :)",
            "date": "20040919T02:04:05",
            "id": 1
        },
        {
            "author": null,
            "body": "Fixed for 5.0.29 and 5.5.3.",
            "date": "20040920T18:09:33",
            "id": 2
        }
    ],
    "component": "Jasper",
    "description": "I am writing to report a case where calling PageContextImpl.getException()\ncan result in a ClassCastException.  This occurred in tomcat 5.0.19,\nbut examination of tomcat 5.0.28's source code, the problem could\noccur there as well.\n\nIn my application, I have an jsp declared as an error page.  This\nerror page uses a tag to record some additional information.  The\nfirst few lines of this tag are as follows:\n\n    public void doTag() throws IOException, JspException\n    {\n\ttry {\n\n\t    PageContext context = (PageContext)getJspContext();\n\t    JspWriter out = context.getOut();\n            HttpServletRequest request = (HttpServletRequest) context.getRequest();\n            Throwable error = context.getException();\n            // proceed to log the exception and some of the\n            // surrounding contextual information\n\nIn one case, the `catch' associated with this try caught a\nClassCastException from PageContextImpl.getException():\n\n  // line 608 in 5.0.19's PageContextImpl.java\n  // line 560 in 5.0.28's PageContextImpl.java\n  public Exception getException() { return (Exception)request.getAttribute(EXCEPTION); }\n\n\nThis would occur if the error was a result of a java.lang.Throwable.\n\n\nWhat possible paths might lead up to this?\n\nThe _jspService() generated by JspC typically terminates with\nsomething like the following:\n\n    } catch (Throwable t) {\n      if (!(t instanceof SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          out.clearBuffer();\n        if (pageContext != null) pageContext.handlePageException(t);\n      }\n    } finally {\n      if (_jspxFactory != null) _jspxFactory.releasePageContext(pageContext);\n    }\n\nIt's catching a Throwable.\n\nPageContextImpl.handlePageException() (lines 730 - 745 in version\n5.0.28) does this: \n\n\n   public void handlePageException(final Throwable t)\n        throws IOException, ServletException\n    {\n        if (t == null)\n            throw new NullPointerException(\"null Throwable\");\n\n        if (System.getSecurityManager() != null){\n            try{\n                AccessController.doPrivileged(new PrivilegedExceptionAction(){\n                    public Object run() throws Exception{\n                        doHandlePageException(t);\n                        return null;\n                    }\n                });\n\n\nIt's dealing with throwables.\n\nContinuing on to doHandlePageException(), (lines 763 - 786 in version\n5.0.28):\n\n    private void doHandlePageException(Throwable t)\n        throws IOException, ServletException {\n\n        if (errorPageURL != null && !errorPageURL.equals(\"\")) {\n\n            /*\n             * Set request attributes.\n             * Do not set the javax.servlet.error.exception attribute here\n             * (instead, set in the generated servlet code for the error page)\n             * in order to prevent the ErrorReportValve, which is invoked as\n             * part of forwarding the request to the error page, from\n             * throwing it if the response has not been committed (the response\n             * will have been committed if the error page is a JSP page).\n             */\n            request.setAttribute(\"javax.servlet.jsp.jspException\", t);\n            request.setAttribute(\"javax.servlet.error.status_code\",\n                new Integer(HttpServletResponse.SC_INTERNAL_SERVER_ERROR));\n            request.setAttribute(\"javax.servlet.error.request_uri\",\n            ((HttpServletRequest) request).getRequestURI());\n            request.setAttribute(\"javax.servlet.error.servlet_name\",\n                     config.getServletName());\n                try {\n                    forward(errorPageURL);\n\n\nIt's also dealing with Throwables.\n\n\nThe following two (short) jsp files reproduce the problem consistently.\n\n\n--------------- Page: foo.jsp -----------------------------------\n<%@ page session=\"false\"\n         language=\"java\" \n         errorPage=\"/myerror.jsp\"\n%>\n\n<html><body>hello world</body></html>\n<%\n  if (1 + 1 == 2) {\n    throw new Throwable(\"The cake fell in the mud\");\n  }\n%>\n------------------------------------------------------------------\n\n\n------------------- Page: myerror.jsp ----------------------------\n<!-- myerror.jsp -->\n<%@ page session=\"false\"\n         language=\"java\"\n         isErrorPage=\"true\"\n         import=\"java.io.PrintWriter\"\n%>\n\nAn error occurred:\n\n<pre>\n<%\nout.println(pageContext.getException().toString());\n\n%>\n</pre>\n------------------------------------------------------------------\n\n\nPerhaps getException() could take extra steps to ensure that the\nobject being returned is indeed an exception (and wrap it if it's\nnot).",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "31171",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "ClassCastException in org.apache.jasper.runtime.PageContextImpl.getException",
    "systemSpecification": true,
    "version": "5.0.19"
}