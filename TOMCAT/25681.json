{
    "comments": [
        {
            "author": null,
            "body": "This has already been fixed in the CVS.",
            "date": "20031222T03:22:24",
            "id": 0
        }
    ],
    "component": "Servlet & JSP API",
    "description": "Given a URL like:\nhttp://www.ultranet.tv/site/web_hosting?l=tr\nthe request logged in J2EE 1.4 DR (Tomcat 5) is:\n64.219.140.49 - - [21/Dec/2003:15:43:05 -0600] \"GET /site/web_hosting/ \nHTTP/1.1\" 200 7912\nThis apparently means that the request parameters have been lost while \nresolving the URL. \nIf the request URL is modifed to http://www.ultranet.tv/site/web_hosting/?\nl=tr, the log shows:\n64.219.140.49 - - [21/Dec/2003:15:36:35 -0600] \"GET /site/web_hosting/?l=tr \nHTTP /1.1\" 200 7842\nThus, the request parameters are apparently preserved.\nUnless the HTTP standards dictate that the request params in the first request \nshould be lost, which i can't imagine to be the case, this is a bug.\n\nP.S. In J2EE 1.4 Beta 2, the first request gets logged as follows:\n64.219.140.49 - - [21/Dec/2003:15:47:00 -0600] \"GET /site/web_hosting?l=tr \nHTTP/1.1\" 302 -\n64.219.140.49 - - [21/Dec/2003:15:47:00 -0600] \"GET /site/web_hosting/?l=tr \nHTTP/1.1\" 302 -\n64.219.140.49 - - [21/Dec/2003:15:47:03 -\n0600] \"GET /site/web_hosting/index.jsp?l=tr HTTP/1.1\" 200 7842\nP.P.S. It appears that there has been an attempt to make processing of these \nURLs more efficient by avoiding 302 responses, and resolving to the final \nlocation internally. However, this bug was introduced in doing so. The fix is \nlikely to be trivial for someone who is familiar with Tomcat architecture.\n\nThanks,\nrs.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "25681",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 critical",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "HTTP request params lost when sent with a URL ending with a folder w/o '/' at the end of URL",
    "systemSpecification": true,
    "version": "5.0.16"
}