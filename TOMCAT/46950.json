{
    "comments": [
        {
            "author": null,
            "body": "There is no <auth-constraint> in the configuration, so of course Tomcat doesn't ask for a certificate.",
            "date": "20090401T11:43:50",
            "id": 0
        },
        {
            "author": null,
            "body": "Ok. So now I changed the security-constraint to:\n<security-constraint id=\"SecurityConstraint_1\">\n                <web-resource-collection id=\"WebResourceCollection_1\">\n                        <web-resource-name/>\n                        <url-pattern>/LoginWithCert.do</url-pattern>\n                        <http-method>DELETE</http-method>\n                        <http-method>GET</http-method>\n                        <http-method>POST</http-method>\n                        <http-method>PUT</http-method>\n                        <http-method>HEAD</http-method>\n                </web-resource-collection>\n                <auth-constraint>\n                        <role-name>*</role-name>\n                </auth-constraint>\n                <user-data-constraint id=\"UserDataConstraint_4\">\n                        <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n                </user-data-constraint>\n</security-constraint>\n\nNow I get this error when I access the resource:\nHTTP Status 400 - No client certificate chain in this request\n\nBUT no certificate was asked in the SSL (re-)negotiation.",
            "date": "20090402T03:00:48",
            "id": 1
        },
        {
            "author": null,
            "body": "The following configuration works for me. At a guess, you haven't configured Tomcat to trust the issuer of your client certificate. The browser only prompts you to select a cert if it has one that the server will trust.\n\nPlease use the users list if you need further help configuring your SSL certs.\n\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Bug46950</web-resource-name>\n      <url-pattern>/bug46381.jsp</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>manager</role-name>\n    </auth-constraint>\n  </security-constraint>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Everything</web-resource-name>\n      <url-pattern>/*</url-pattern>\n    </web-resource-collection>\n    <user-data-constraint>\n      <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n  <login-config>\n    <auth-method>CLIENT-CERT</auth-method>\n  </login-config>",
            "date": "20090414T16:15:31",
            "id": 2
        },
        {
            "author": null,
            "body": "What works for you? Did you even read what I said?\n\nHow can the browser know if a server trusts a certain certificate or not without even asking for it?\n\nLet me explain the problem better.\n\nMost of my site runs without client cert checking, so I have SSLVerifyClient=\"none\" on the connector. But I have one servlet that DOES want a client certificate and so I configured the security restriction accordingly in the deployment descriptor. Just that one resource, not the entire site.\n\nIt's in these cases that a SSL renegotiation does not occur to ask for the client certificate. Tomcat only knows that I want a client certificate after the client sends the http request.\n\nApache httpd has this feature and someone at the tomcat user's list asked me to file this as a bug. Maybe it's just a missing feature.",
            "date": "20090415T04:03:39",
            "id": 3
        },
        {
            "author": null,
            "body": "(In reply to comment #4)\n> What works for you?\nThe security constraint and login configuration I posted which requires SSL for the entire context but only requires user authentication for a single JSP. If I browse to any resource except the one that requires auth using http I get switched to https as expected. If I then request the protected resource I get prompted for my certificate.\n\n> Did you even read what I said?\nYes I did. Quite carefully. Taking that attitude is not going to induce people to help you.\n\n> How can the browser know if a server trusts a certain certificate or not\n> without even asking for it?\nThis is the way the SSL handshake works. The server provides a client with a list of trusted certs. If the client doesn't have a user cert issued by one of the trysted certs the client doesn't waste time prompting the user to select one.\n\n> Let me explain the problem better.\n> \n> Most of my site runs without client cert checking, so I have\n> SSLVerifyClient=\"none\" on the connector.\n\nThat is new information. Your original bug report made no mention of using the APR/native connector. I'd expect the behaviour to remain the same but I'll re-test with the native and see.",
            "date": "20090415T04:38:10",
            "id": 4
        },
        {
            "author": null,
            "body": "OK, I can confirm this when I test with the APR/native connector. Looking for a fix now...",
            "date": "20090415T05:21:57",
            "id": 5
        },
        {
            "author": null,
            "body": "This is going to require a change to the APR/native connector.",
            "date": "20090416T12:37:33",
            "id": 6
        },
        {
            "author": null,
            "body": "Created attachment 23663\nPatch that makes the Apr connector behave like the non-Apr\n\nThis patch will turn on the SSL Client requirement prior to the SSL renegotiation prompting the browser for one.",
            "date": "20090514T04:17:52",
            "id": 7
        },
        {
            "author": null,
            "body": "The proposed patch does not work exactly as intended. It does not trigger renegotiation, rather it sets SSLVerifyClient for the all future SSL sessions created by that request processor.\n\nThe side effects of this are:\n- cert still not prompted for when transitioning from resource that doesn't require cert to one that does\n- subsequent SSL requests handled by that processor will prompt for a cert, even when not required.\n\nAs per comment #7, a fix for this that aligns the APR/native connector behaviour with the Java connectors will require a change to the native component of the native connector (to enable the connection to be renegotiated for the current connection).",
            "date": "20090527T06:08:48",
            "id": 8
        },
        {
            "author": null,
            "body": "The native fixes have been applied to the 1.1.x branch and trunk (1.2.x)\nThe Tomcat fixes have been applied to trunk (7.0.x) and proposed for 6.0.x and 5.5.x. Note that the 6.0.x/5.5.x patch depends on there being a new tc-native release",
            "date": "20090915T10:59:35",
            "id": 9
        },
        {
            "author": null,
            "body": "This has been fixed in 6.0.x and will be included in 6.0.21 onwards.\n\nIt will also be proposed for backport to 5.5.x",
            "date": "20091102T16:33:29",
            "id": 10
        },
        {
            "author": null,
            "body": "Thanks!",
            "date": "20091103T02:54:46",
            "id": 11
        },
        {
            "author": null,
            "body": "This has been applied to 5.5.x and will be included in 5.5.29 onwards.",
            "date": "20091130T16:33:37",
            "id": 12
        }
    ],
    "component": "Native:Integration",
    "description": "When a part of a webapp requires an SSL connection with a client certificate there should be an SSL renegotiation to request a client certificate from the browser.\n\nThis is the configuration I added to an webapp that already uses an SSL connector:\n\n<login-config id=\"LoginConfig_1\">\n                <auth-method>CLIENT-CERT</auth-method>\n                <realm-name>WPS</realm-name>\n</login-config>\n\n<security-constraint id=\"SecurityConstraint_1\">\n                <web-resource-collection id=\"WebResourceCollection_1\">\n                        <web-resource-name/>   \n                        <url-pattern>/LoginWithCert.do</url-pattern>\n                        <http-method>DELETE</http-method>\n                        <http-method>GET</http-method>\n                        <http-method>POST</http-method>\n                        <http-method>PUT</http-method>\n                        <http-method>HEAD</http-method>\n                </web-resource-collection>\n                <user-data-constraint id=\"UserDataConstraint_4\">\n                        <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n                </user-data-constraint>\n</security-constraint>\n\nRequests to /LoginWithCert.do require an SSL connection, if there isn't one, but no client certificate is requested.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "46950",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "SSL renegotiation does not occur when resource with CLIENT-CERT auth is requested",
    "systemSpecification": true,
    "version": "5.5.28"
}