{
    "comments": [
        {
            "author": null,
            "body": "Taking me off the CC list since I get see all these via tomcat-dev anyway.\n\nPlease do not add other people's e-mail addresses to a bugzilla entry unless\nthey ask you to.",
            "date": "20051004T18:36:51",
            "id": 0
        },
        {
            "author": null,
            "body": "Testing files with 5.5.x from CVS, IE6, XP(SP2+all patches), URIEncoding=\"UTF-8\"\nand port=\"8080\":\n\n'+', ' ' and '#' are OK for files, ';' gets truncated\n\nLooking at the headers using ieHTTPHeaders (I was very impressed that this works\nwith web folders as well as normal web pages) the fault lies with IE. You can\nsee from the headers that '#' is encoded but ';' is not. If you try forcing IE\nto send the correct headers by using a file name with '%B3' it correctly encodes\nthe '%' and you see '%25B3' in the headers and '%B3' in your webdav directory.\n\nIf you have a *simple* test client that shows that any of these characters are\nnot correctly handled by Tomcat's WebDAV servlet please attach it so I can\ninvestigate further but all indications so far are that for files this is a\nclient issue not a Tomcat problem. Best of luck getting MS to fix it...\n\nI also suggest you look at bug36303 which you may well run into if you haven't\nalready.\n\nI'll look at collections next...",
            "date": "20051004T23:50:05",
            "id": 1
        },
        {
            "author": null,
            "body": "With IE as the client the same behaviour is seen for collections as for files\nand the cause is the same - IE does not encode ';' in file names.\n\nJust to see what would happen, I tried the folder creation tests with DAV\nExplorer 0.91. Using TCP Mon from the Apache Axis project (a very handy utility)\nDAV Explorer is also getting the headers wrong but not in the same way as IE.\n\nDAV tuncates files with '#' in the name internally before they ar even sent to\nTomcat. For file names that contain ';' DAV explorer does not truncate but\nneither does it encode.\n\nSince you also reported your own client was having problems, I am going to set\nthis a NEEDINFO. The information I need is a sample client program that\ndemonstrates a problem with Tomcat.\n\nAs I have seen no sign of Tomcat misbehaviour here, if there is no further\nupdate after a few weeks I will close this report as invalid.",
            "date": "20051005T00:18:58",
            "id": 2
        },
        {
            "author": null,
            "body": "The error was produced with IE, DavExplorer and our own client code. Our own \nclient code uses apache webdav libs. The client was run from a Windows XP SP2 \nand MAC OSX 10.4.\n\nOur Tomcat server (5.5.12) was running on port 80.\n\nWe tested the same clients on Apache 2.0.54 with mod_dav without any problems. \nThis leads me to think that the problem lies with Tomcat and not our client.\n\nTest code:\n---------------------------------\n\n\nimport java.io.File;\nimport java.io.IOException;\n\nimport org.apache.commons.httpclient.HttpException;\nimport org.apache.commons.httpclient.HttpURL;\nimport org.apache.commons.httpclient.URIException;\nimport org.apache.webdav.lib.WebdavResource;\n\npublic class ModDavTestClient {\n\n\tpublic static final String TEST_FILENAME = \"myTestFile;testing.txt\";\n\tpublic static final String TEST_FILEPATH = \"C:/temp/\";\n\tpublic static final String TEST_CONTEXT \n= \"http://localhost:8080/planning/webdav/data/\";\n\tpublic static final String TEST_USERNAME = \"upload\";\n\tpublic static final String TEST_PASSWORD = \"test123\";\n\t\n\tpublic static void main(String args[]) {\n\t\tHttpURL homeUrl = null;\n\t\tWebdavResource webDavRes = null;\n\t\tboolean response = false;\n\t\tHttpURL dest = null;\n\n\t\t// Preparing File to be upload with webdav resource\n\t\tFile inputFile = new File(TEST_FILEPATH + TEST_FILENAME);\n\n\t\tif (!inputFile.exists()) {\n\t\t\tSystem.err.println(\"Test file not exists: \" + \nTEST_FILEPATH\n\t\t\t\t\t+ TEST_FILENAME);\n\t\t\tSystem.exit(0);\n\t\t}\n\n\t\t// Creating HttpURL for WebdavResource\n\t\ttry {\n\t\t\thomeUrl = new HttpURL(TEST_CONTEXT);\n\t\t\thomeUrl.setUserinfo(TEST_USERNAME, TEST_PASSWORD);\n\t\t} catch (URIException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\tif (homeUrl == null) {\n\t\t\tSystem.err.println(\"Error creating HomeURL\");\n\t\t\tSystem.exit(0);\n\t\t}\n\n\t\t// Creating WebdavResource\n\t\ttry {\n\t\t\twebDavRes = new WebdavResource(homeUrl);\n\t\t} catch (HttpException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(0);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(0);\n\t\t}\n\n\t\tStringBuilder destUrl = new StringBuilder(TEST_CONTEXT);\n\t\tdestUrl.append(TEST_FILENAME);\n\n\t\ttry {\n\t\t\tdest = new HttpURL(destUrl.toString());\n\t\t\tdest.setUserinfo(TEST_USERNAME, TEST_PASSWORD);\n\t\t} catch (URIException e1) {\n\t\t\te1.printStackTrace();\n\t\t\ttry {\n\t\t\t\twebDavRes.close();\n\t\t\t} catch (IOException e) {\n\t\t\t}\n\t\t\tSystem.exit(0);\n\t\t}\n\n\t\ttry {\n\t\t\tSystem.out.println(\"Prepare writing to destination: \" \n+ dest.getPath());\n\t\t} catch (URIException e2) {\n\t\t\te2.printStackTrace();\n\t\t\ttry {\n\t\t\t\twebDavRes.close();\n\t\t\t} catch (IOException e) {\n\t\t\t}\n\t\t\tSystem.exit(0);\n\t\t}\n\n\t\ttry {\n\t\t\tresponse = webDavRes.putMethod(dest.getPath(), \ninputFile);\n\t\t} catch (URIException e1) {\n\t\t\te1.printStackTrace();\n\t\t} catch (HttpException e1) {\n\t\t\te1.printStackTrace();\n\t\t} catch (IOException e1) {\n\t\t\te1.printStackTrace();\n\t\t}\n\n\t\tSystem.out.println(\"respond: \" + response);\n\n\t\ttry {\n\t\t\twebDavRes.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.exit(0);\n\t}\n\n}\n\n\nRunning output:\n--------------------\nPrepare writing to destination: /planning/webdav/data/myTestFile;testing.txt\nrespond: true\n\nChecking uploaded file:\n-----------------------\n[tomcat path]/webapps/planning/webdav/data/myTestFile\n\nIt suppose to be:\n[tomcat path]/webapps/planning/webdav/data/myTestFile;testing.txt\n\n\nTesting with same code, but upload to an Apache ModDav: it works.\n",
            "date": "20051005T09:48:22",
            "id": 3
        },
        {
            "author": null,
            "body": "Thanks for the client app. Having debugged my way through it looking at TCP Mon\nas I go, the request sent to Tomcat is not correctly encoded. However, the much\nsimpler test finally dawned on me. Telnet with MKCOL /webdav/test%3Bcol doesn't\nwork either so I will investigate further. However, once this is fixed (assuming\na fix is possible) there will still be a lot of things broken on the client side.",
            "date": "20051005T22:25:20",
            "id": 4
        },
        {
            "author": null,
            "body": "Created attachment 16655\nScreen dump of directorylisting with filename containing semi-colon.",
            "date": "20051011T13:07:11",
            "id": 5
        },
        {
            "author": null,
            "body": "Created attachment 16656\nScreen-dump of error-msg when I click the filename with semi-colon.",
            "date": "20051011T13:07:56",
            "id": 6
        },
        {
            "author": null,
            "body": "I have discovered a simular problem that seems to be related to this bug.\n\nI place a file with semi-colon in the filename under the Tomcat http server. \nWhen I am linking to that file (test;01.png) i get \"the requested resource is \nnot available.\n\nTake a look at the attached screendumps.\n\nScreen1 shows a directory listing of the file in question.\nScreen2 shows the error-msg when i click the filename.\n\nThis is not a problem in Apache 2.0.53\nI tested and found this problem using IE 6.0 and Firefox 1.0.7 against Tomcat \n5.5.12",
            "date": "20051011T13:10:40",
            "id": 7
        },
        {
            "author": null,
            "body": "The handling of encoded ; characters has now been fixed in the SVN and will be\nincluded in 5.5.18 and later.\n\nI have tested MKCOL /webdav/test%3Btest and the file test;test is created. All\nof the other issues I saw whilst investigating this bug were client related.\nThese issues are likely to continue to cause problems in this area. (For\nexample, IE doesn't encode the ; when requesting test;test and throws a fit if\nyou try.) On this basis I am closing this bug.\n\nIf you believe this bug is still valid please test using telnet before\nre-opening to make 100% sure you are seeing a Tomcat issue rather than a client one.",
            "date": "20060728T01:38:41",
            "id": 8
        },
        {
            "author": null,
            "body": "*** Bug 33806 has been marked as a duplicate of this bug. ***",
            "date": "20060830T03:18:03",
            "id": 9
        }
    ],
    "component": "Servlets:WebDAV",
    "description": "When writing files to the server using Tomcats WebDAV I am not able to write\nfiles that contain theese characters in the filename (or create folders):\n\n; (semicolon)\n+ (plus)\n# (pound)\n\nI know these are reserved characters, so I have tried to URL encode them, but\nTomcat ignores the URL encoding and writes the URL encoded filenames to disk.\nEg. \"myfile;01.txt\" is saved like \"myfile%B301.txt\" on the server. Tomcat is\nconfigured to do URL Encoding. If I don't do URL Encoding it simply cuts the end\nof the filename from semicolon like \"myfile\".\n\nI also tested this in Tomcat 5.5.12 with same problems. I have tested several\nclients. IE 6.0, DavExplorer and own code.\n\nThis is my Connector configuration in server.xml:\n <Connector port=\"80\" \n maxHttpHeaderSize=\"8192\" useBodyEncodingForURI=\"true\" URIEncoding=\"UTF-8\"\n maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n enableLookups=\"false\" redirectPort=\"8443\" acceptCount=\"100\"\n connectionTimeout=\"20000\" disableUploadTimeout=\"true\" />\n\nThis is what Tomcat logs in stdout.log:\n09:14:36,040  INFO MediaServiceImpl: destination = Scala/content/\n09:14:36,056  INFO MediaServiceImpl: MediaItem saved! Identifier: 7\n09:14:36,072  INFO MediaServiceImpl: MediaItemFile saved! Identifier: 1\n09:14:36,290  INFO [/rome-planning]: webdav: DefaultServlet.init:  input buffer\nsize=2048, output buffer size=2048\n09:14:36,290  INFO [/rome-planning]: webdav: [PROPFIND] /\n[Fatal Error] :-1:-1: Premature end of file.\n09:14:36,384  INFO [/rome-planning]: webdav: [PUT] /data/Scala/content/myfile\n\nstderr.log reports nothing.",
    "hasPatch": false,
    "hasScreenshot": true,
    "id": "36905",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Tomcat WebDAV characters bug",
    "systemSpecification": true,
    "version": "5.5.12"
}