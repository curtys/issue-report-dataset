{
    "comments": [
        {
            "author": null,
            "body": "Print rootcause's stack trace only if rootcause is different from\nJasperException",
            "date": "20040428T00:43:00",
            "id": 0
        },
        {
            "author": null,
            "body": "Thanks, this is definitely an improvement. \n\nFor IDE usage, it would be useful to do some additional changes to the build\nerror format:\n\nNot including a link to line number in build.xml, as that is not too significant\nto the developet. Instead, including the full path of the JSP which contains the\nerror. Also, text \"org.apache.jasper.JasperException\" is unnecessary. So instead of:\n\nE:\\bugs\\28603_tomcat\\project\\build.xml:23: org.apache.jasper.JasperException:\n/JSP.jsp(6,0) Include action: Mandatory attribute page missing\n\nthe output would look like:\n\nE:\\bugs\\28603_tomcat\\project\\web\\JSP.jsp [6:0] Include action: Mandatory\nattribute page missing \n\nThis would make the error format consistent with Javac. Is this possible? Thanks.\n",
            "date": "20040506T15:25:57",
            "id": 1
        },
        {
            "author": null,
            "body": "- Include full path of the JSP that contains the error:\n\n  Done!\n\n- Avoid including a link to line number in build.xml:\n\n  'ant' is adding the build.xml line number when catching the exception\n  thrown by JspC.execute(). I don't think there is anything we can do to\n  avoid this.\n\n- Text \"org.apache.jasper.JasperException\" is unnecessary:\n\n  The exception class name is printed by JasperException.toString(),\n  which is inherited from java.lang.Throwable.toString():\n\n    public String toString() {\n        String s = getClass().getName();\n        String message = getLocalizedMessage();\n        return (message != null) ? (s + \": \" + message) : s;\n    }\n\n  We could override JasperException.toString() to suppress the\n  exception class name and just output the exception message.\n  I agree the exception class name is redundant when using JspC,\n  but it is useful info when compiling via the JspServlet.\n  Won't be changed. :)\n",
            "date": "20040512T22:59:34",
            "id": 2
        },
        {
            "author": null,
            "body": "Ok, this is a sufficient solution for our purposes. Thanks a lot!\n",
            "date": "20040513T08:36:34",
            "id": 3
        }
    ],
    "component": "Jasper",
    "description": "1. Set up an application with an Ant script to compile JSPs as recommended at\nhttp://jakarta.apache.org/tomcat/tomcat-5.0-doc/jasper-howto.html\n2. Write a JSP which contains erroneous text such that the first phase (JSP ->\nJava translation) fails e.g. by including <jsp:include x=\"50\"/> in the page.\n3. Compile the application using the Ant script - a Jasper exception will be\nreported. This will be reported including the whole Jasper stack trace, which\nmakes the report unreadable. Just the error message with the location would be\nsufficient.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "28604",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "P3 minor",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "JspC should not display the whole stack trace of errors",
    "systemSpecification": false,
    "version": "5.0.19"
}