{
    "comments": [
        {
            "author": null,
            "body": "(In reply to comment #0)\n> When deploying an application in Tomcat 5.5 (been observed in 5.5.8 but not in  \n> 5.0.30), using a context definition xml file, such as  \n> <TOMCAT_CONF>/Catalina/hostname/myapp.xml, tomcat ignores the context path  \n> definition in the XML file (i.e. <context path=\"/some/path\">) and instead uses  \n> the file name (i.e. \"myapp\" in this case) as the path.  \n\nRTFM. Especially the section in\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/context.html\nthat states:\n\"The value of this field [path] must not be set except when statically defining\na Context in server.xml, as it will be infered from the filenames used for\neither the .xml context file or the docBase.\"\n\n> This makes it impossible to create complex server configurations where  \n> applications are hosted not under the root of the server, in addition to being  \n> confusing, counter-intuitive and just plain wrong.  \n\nNo, your statement is plain wrong. If you want to set the context path to\n\"/some/path\", name the XML file containing the Context definition \"some#path.xml\".\n\nBTW: Just doing a quick glance over Tomcat's documention, I didn't find the\nlatter mentioned. So it might be a good idea to add this to\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/context.html\nor\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/host.html#Automatic%20Application%20Deployment\n\n",
            "date": "20060109T16:53:51",
            "id": 0
        },
        {
            "author": null,
            "body": "We've encountered this as well, and got complaints about it.\nIt is very annoying, looks like afeature regression.\n\nBut now it seems that it is still possible, but one must code the path in the\nfile name by using '#'s instead of the '/'s ?",
            "date": "20060109T17:10:59",
            "id": 1
        },
        {
            "author": null,
            "body": "> RTFM. Especially the section in   \n> http://tomcat.apache.org/tomcat-5.5-doc/config/context.html   \n> that states:   \n> \"The value of this field [path] must not be set..it will be infered   \n> from the filenames used for either the .xml context file or the docBase.\"   \n   \nI must say that though I have read that documentation several times I haven't   \nactually read that paragraph - probably because the introduction paragraphs do   \nan very good job of describing the path attribute and what it does, and the   \nintroduction does not say anything about guessing from the file name.    \nSpecifically the introduction says that context path MUST [sic] be used and   \nthen goes to great lengths explaining how contexts can be loaded from files,   \nwithout ever mentioning to auto-guessing mechanism.   \n   \nI would also like to mention again that adhering to the path attribute is how   \ntomcat have worked in all previous versions, its how everyone who upgrades to   \ntomcat 5.5 would probably expect it to work, and it makes sense.    \n   \n> No, your statement is plain wrong. If you want to set the context path to  \n> /some/path\", name the XML file containing the Context definition  \n> \"some#path.xml\".  \n  \nThat is contrived. So basically you are saying that I can forget about having  \nlogical meaningful names to context files and instead I must use line noise to  \nform complex structures ? That sounds like a regression to me.   \n \nMight I suggest that for the sake of backward compatibility and for the peace \nof mind of people who are going to upgrade from 5.0 to 5.5, to support the \npath attribute if it exists and do the inferring only if it doesn't ?  \nAlso it might be a good idea to support a directory structure under \ncont/<engine name>/<host name>/ instead of coding directory separators into \nweird characters, chosen no doubt for their incompatibility with paths in URLs \nand not for readability and ease of use. ",
            "date": "20060109T17:23:26",
            "id": 2
        },
        {
            "author": null,
            "body": "Sorry about the flip reply, sometimes I can't help it :-(  \n  \nCan you please point me at the mailing list archive or somewhere else where  \nthis issue was discussed so I can follow up the arguments in favor of this  \nchange of behavior ? I did some web searches but couldn't find such a  \ndiscussion.  \n  \nThanks, and sorry about the previous comment. ",
            "date": "20060109T17:40:03",
            "id": 3
        },
        {
            "author": null,
            "body": "I'm one of those users who got lost upgrading from 5.0 to 5.5.\nIn particular: how you can map the root of the web server using a xml file? Have\nyou to name it .xml?\n\nAnyway, it seems to me very reasonable the last proposal: to have 5.5 backward\ncompatible and do the inferring only if the path attribute is missing.\n\nRegards,\n\nFabio Da Soghe",
            "date": "20060112T10:20:49",
            "id": 4
        },
        {
            "author": null,
            "body": "Created attachment 17409\nDesctiption of path encoding into xml deploy filenames\n\nI am the one who originally issued this problem in redhat's bugzilla so I think\nit would be good thing to have the same behaviour as in 5.0 because it makes\nupgrades much easier.\nBut for now the filename solution is sufficient as soon as it is documented\nsomewhere. I prepared this small patch against docs/config/host.xml.\nChanges like this should be probably documented somewhere in Release docs too.",
            "date": "20060113T09:32:55",
            "id": 5
        },
        {
            "author": null,
            "body": "I recently re-wrote the context name from filename section of the Context docs\nso I added a reference to this from the Host docs.\n\nThe changes will be in 5.5.21 onwards.\n\nFor the record, 5.5.x will not be made backwards compatible with the 5.0.x\nfunctionality.",
            "date": "20061106T18:58:35",
            "id": 6
        },
        {
            "author": null,
            "body": "Comment on attachment 17409\nDesctiption of path encoding into xml deploy filenames\n\n>--- container/webapps/docs/config/host.xml\t2006-01-03 16:15:14.000000000 +0100\n>+++ /home/mkaspar/prac/host.xml\t2006-01-13 09:16:53.000000000 +0100\n>@@ -272,7 +272,9 @@\n>         attribute of this <code>&lt;Context&gt;</code> element will typically\n>         be the absolute pathname to a web application directory, or the\n>         absolute pathname of a web application archive (WAR) file (which\n>-        will not be expanded).</li>\n>+        will not be expanded). The path attribute wil be automatically set to\n>+        its filename where slashes (\"/\") are encoded as hashes (\"#\") so\n>+        any#path.xml will result in path=\"/any/path\").</li>\n>     <li>Any web application archive file within the application base (appBase)\n>         directory that does not have a corresponding\n>         directory of the same name (without the \".war\" extension) will be",
            "date": "20070121T17:50:33",
            "id": 7
        }
    ],
    "component": "Unknown",
    "description": "When deploying an application in Tomcat 5.5 (been observed in 5.5.8 but not in  \n5.0.30), using a context definition xml file, such as  \n<TOMCAT_CONF>/Catalina/hostname/myapp.xml, tomcat ignores the context path  \ndefinition in the XML file (i.e. <context path=\"/some/path\">) and instead uses  \nthe file name (i.e. \"myapp\" in this case) as the path.  \n  \nThis makes it impossible to create complex server configurations where  \napplications are hosted not under the root of the server, in addition to being  \nconfusing, counter-intuitive and just plain wrong.  \n \nThe behavior should be reverted to how it was handled under tomcat 5.0.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "38198",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P1 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "When using context xml definitions standalone file, tomcat wrongly uses the file name instead the context path definition",
    "systemSpecification": true,
    "version": "5.5.8"
}