{
    "comments": [
        {
            "author": null,
            "body": "Where are you defining this context name?  In the web.xml (display-name \nattribute)?  In the context.xml file for the context?  Or explicitly by making \nit a directory in the webapps directory?",
            "date": "20040920T16:43:22",
            "id": 0
        },
        {
            "author": null,
            "body": "In the server.xml.\nI am using Eclipse and a tomcat plugin for it. It defines the context in the\nserver.xml file.",
            "date": "20040921T11:56:13",
            "id": 1
        },
        {
            "author": null,
            "body": "Can you attach your server.xml file to this report please?",
            "date": "20040921T19:13:00",
            "id": 2
        },
        {
            "author": null,
            "body": "Created attachment 12843\nserver.xml",
            "date": "20040923T07:43:47",
            "id": 3
        },
        {
            "author": null,
            "body": "Created attachment 12844\nThe Eclipse project for testing",
            "date": "20040923T07:45:11",
            "id": 4
        },
        {
            "author": null,
            "body": "I've verified your bug outside Eclipse, and I'm attaching a WAR that lets one \nreproduce it on an out-of-the-box tomcat.  Deploying this war as \nSessionSpace.war versus \"Session Space.war\" shows the bug.\n\nI'm updating the comopnent, platform, OS, version fields of the bug report as \nwell.",
            "date": "20040923T20:38:44",
            "id": 5
        },
        {
            "author": null,
            "body": "Created attachment 12851\nWAR to reproduce bug",
            "date": "20040923T20:39:18",
            "id": 6
        },
        {
            "author": null,
            "body": "This is due to browsers not recognizing spaces in the session cookie's path. See\nthe headers from two hits to the example (from the war file by Yoav Shapira).\n\nI'm attaching a patch to fix this.\nTested with MSIE 6 and Mozilla 1.7.2\n\n\nHeaders ========================================================\nhttp://localhost:8080/Sample%20App/test\n\n\n\nGET /Sample%20App/test HTTP/1.1\n\nHost: localhost:8080\n\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.2) Gecko/20040803\n\nAccept:\ntext/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\n\nAccept-Language: en-us,en;q=0.5\n\nAccept-Encoding: gzip,deflate\n\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n\nKeep-Alive: 300\n\nConnection: keep-alive\n\nCache-Control: max-age=0\n\n\n\nHTTP/1.x 200 OK\n\nServer: Apache-Coyote/1.1\n\nSet-Cookie: JSESSIONID=33047CF84AA4E7159F1262C21D4FEA83; Path=/Sample App\n\nContent-Type: text/html;charset=ISO-8859-1\n\nContent-Length: 165\n\nDate: Wed, 13 Oct 2004 01:31:50 GMT\n\n----------------------------------------------------------\n\nhttp://localhost:8080/Sample%20App/test\n\n\n\nGET /Sample%20App/test HTTP/1.1\n\nHost: localhost:8080\n\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.2) Gecko/20040803\n\nAccept:\ntext/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\n\nAccept-Language: en-us,en;q=0.5\n\nAccept-Encoding: gzip,deflate\n\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\n\nKeep-Alive: 300\n\nConnection: keep-alive\n\nReferer: http://localhost:8080/Sample%20App/test\n\nCache-Control: max-age=0\n\n\n\nHTTP/1.x 200 OK\n\nServer: Apache-Coyote/1.1\n\nSet-Cookie: JSESSIONID=82313411257D1DA54FDFD741D4E1FE78; Path=/Sample App\n\nContent-Type: text/html;charset=ISO-8859-1\n\nContent-Length: 165\n\nDate: Wed, 13 Oct 2004 01:32:03 GMT\n\n----------------------------------------------------------",
            "date": "20041013T02:14:32",
            "id": 7
        },
        {
            "author": null,
            "body": "Created attachment 13058\nPatch to encode spaces in session cookie path",
            "date": "20041013T02:16:14",
            "id": 8
        },
        {
            "author": null,
            "body": "Good investigation and finding, OK patch.  OK because replaceAll is in JDK 1.4, \nso I can use the patch as-is for Tomcat 5.5, but for Tomcat 5.0 we need the \nsame thing in JDK 1.3-compatible format.  Maybe I'll just URLEncoder.encode the \ncookie's path?",
            "date": "20041014T17:25:18",
            "id": 9
        },
        {
            "author": null,
            "body": "Ahh, good point.\n\nI originally went with the URLEncoder but it was encoding the \"/\" at the\nbeginning.  \n\nSo, to go this route, I would either need to strip out the \"/\" before encoding or \ndo a replace afterwards.  ",
            "date": "20041014T17:39:21",
            "id": 10
        },
        {
            "author": null,
            "body": "If characters other than spaces don't need to be considered, maybe use this\npatch on 5.5x. and use the URLEncoder for the older release?\n\nNote:  The Request class doesn't import URLEncoder yet so this means one more\nobject created for each request.  This needs to be added to the object creation\ninvolved with pulling and replacing the \"/\".   Probably trivial but I know there\nis a lot of effort being made to increase performance and it's a shame to add\nmore overhead just to support spaces in a context path. \n\n\n\n\n",
            "date": "20041014T18:00:06",
            "id": 11
        },
        {
            "author": null,
            "body": "Maybe add a URL encoded path field on the Context. (URL encoding stuff all the\ntime is a bit expensive, and it could be needed)\nI'll try it later today.\n\nBTW, before making any changes: cookie values should be URL encoded then ? I\ndon't remember that, but maybe it's true. Can anyone confirm ?",
            "date": "20041014T18:02:10",
            "id": 12
        },
        {
            "author": null,
            "body": "Actually, I think cookies shouldn't be URL encoded. See the ServerCookie class,\nand in particular the maybeQuote and isToken methods. Now ' ' isn't part of the\n\"special\" list anymore, for some reason.\n\nOTOH, the Cookie class from the servlet API includes:\n    private static final String tspecials = \",; \";\n\nI think the bug will only need a change there.",
            "date": "20041014T18:11:30",
            "id": 13
        },
        {
            "author": null,
            "body": "IMHO, Remy's idea is best.  But it will throw an IAE since the session cookie \nis v0.  Probably we could just remove the version check in maybeQuote, since \nI'm guessing that most UAs probably support quoted values, even if they don't \nsupport all of RFC2019.\n\nUsing the JDK1.3 j.n.URLEncoder is going to cause more problems then it will \never solve, given that it uses the platform encoding (which is unlikely to be \nutf-8 :).  If you have to encode the path, use the UEncoder in the Response.",
            "date": "20041014T19:20:05",
            "id": 14
        },
        {
            "author": null,
            "body": "Ah, yes, I missed that \"small\" point. I thought I had a really good idea here ;)\n\nBTW, can you explain the tspecials descrepancy between the two cookies classes\nfor the tspecial field ?",
            "date": "20041014T19:43:34",
            "id": 15
        },
        {
            "author": null,
            "body": "It looks like the ServerCookie value is the one from jakarta-servletapi (aka \nservlet-2.2), and simply hasn't been updated.",
            "date": "20041014T19:51:45",
            "id": 16
        },
        {
            "author": null,
            "body": "After discussion on the tomcat-dev list, I'm closing this as WONTFIX because \nit's a contrived use-case: the browser will never send a request with a space \ncharacter in it (it'd be encoded as %20, which is handled fine by Tomcat).",
            "date": "20041026T12:49:49",
            "id": 17
        },
        {
            "author": null,
            "body": "Yes, but the problem is that TC will set a cookie based on the unencoded path,\nand the browser doesn't make the association between that and the URL (somehow).\nIn theory, we would need to URL encode the context path using straight conversion.",
            "date": "20041026T13:05:22",
            "id": 18
        },
        {
            "author": null,
            "body": ".",
            "date": "20041026T15:45:53",
            "id": 19
        },
        {
            "author": null,
            "body": "It is fixed now, but the fix assumes UTF-8 encoding for URLs. I guess even if it\ndoesn't work always, it's better than it it never works.",
            "date": "20041026T15:47:03",
            "id": 20
        },
        {
            "author": null,
            "body": "Forgot to mention: for really tricky situations (i18n ...), you can also choose\nto set the cookie path to \"/\" by using emptySessionPath=\"true\" on the Connector.",
            "date": "20041026T15:49:41",
            "id": 21
        }
    ],
    "component": "Catalina",
    "description": "Well, I am not quite sure it is a bug, but I lost one day to find where my\nproblem was, so it may be helpful :)\nWhen the context name contains a space character (' ') everything works fine ,\nexcept that the session object in the request is null (and a new session is\ncreated when getSession is invoked ) even if a session has already been initialized.\nFor example:\npublic class MyServlet extends HttpServlet {\n\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n       doPost(request, response);\n    }\n    \n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n      \n        response.setContentType(\"text/html\");\n        PrintWriter out = response.getWriter();\n        out.println(\"<html><body><a href=\\\"MyServlet\\\"> click me!</a><br>\");\n        out.println(request.getSession().getAttribute(\"hello\"));\n        out.println(\"</body></html>\");\n        request.getSession().setAttribute(\"hello\", \"Hello!\");\n        \n    }\n}\n\nWhen the context name contains a space (fo example: \"Sample Project\") and you\nload the page and click on the link, the result is always :\nclick me\nnull\n\nWhen you change the name to \"SampleProject\", the problem is gone.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "31090",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "The session \"disappears\" when the context name contains the space character",
    "systemSpecification": false,
    "version": "5.5.3"
}