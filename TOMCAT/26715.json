{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 10249\nsee description",
            "date": "20040206T11:32:48",
            "id": 0
        },
        {
            "author": null,
            "body": "Fixed. Thanks.",
            "date": "20040206T11:51:43",
            "id": 1
        }
    ],
    "component": "Catalina",
    "description": "This can easily be reproduced.\n1. create a session via request.getSession(true).\n2. restart the server so the session will be persisted and loaded again.\n3. wait until the session has timed out according to the value specified in web.xml.\n4. the session can still be accessed by the client and stays accessible if not\nexplicitly invalidated by a call to session.invalidate().\n\nLooking at the codebase I think the reason for this is the accessCount field in\nStandardSession being in an inconsistent state after sessions have been reloaded\nfrom file. The attached patch solves it for me.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "26715",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Sessions that have been persisted during a server restart never time out.",
    "systemSpecification": true,
    "version": "5.0.18"
}