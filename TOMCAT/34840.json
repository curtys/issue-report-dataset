{
    "comments": [
        {
            "author": null,
            "body": "I don't think this use case will be handled, sorry. I'll likely mark this as\nwontfix.",
            "date": "20050510T20:23:57",
            "id": 0
        },
        {
            "author": null,
            "body": "Updating the war means you want to fully redeploy. Your war doesn't contain the\ncontext.xml, so no redeployment occurs. You should drop the .xml again after the\nwar update in this case. Sorry, there's no other solution (doing otherwise would\nbreak other cases), this is not a bug.",
            "date": "20050510T20:42:09",
            "id": 1
        },
        {
            "author": null,
            "body": "Updating the war means you want to fully redeploy. You should drop the .xml\nagain after the war update in this case. Sorry, there's no other solution (doing\notherwise would break other cases), this is not a bug.",
            "date": "20050510T20:42:26",
            "id": 2
        },
        {
            "author": null,
            "body": "*** Bug 34866 has been marked as a duplicate of this bug. ***",
            "date": "20050511T16:44:17",
            "id": 3
        },
        {
            "author": null,
            "body": "(In reply to comment #4)\n> *** Bug 34866 has been marked as a duplicate of this bug. ***\n\nBut I don't want to have the context.xml packed inside the WAR,\nbecause I use the context XML for defining init parameters which are\nmachine-specific, i.e. which are not part of the web application, they are\nrather deployment-time parameters.\n\nForcing to pack context descriptor *inside* of the webapp breaks the division of\nauthor and deployer, as described by SUN in the blueprintsfor J2EE.",
            "date": "20050511T16:54:44",
            "id": 4
        },
        {
            "author": null,
            "body": "Martin: your problem is not really related, please don't reopen the report.\n\nGernot: I think I have found a way to tweak the order of the resources so that\nthe behavior is better. I found it is possible as Tomcat will never remove any\nresources which are not inside the Host appBase, so in this case it works well\nto put the context file first (so it is never removed when a less relevant\nresource - such as the WAR - is updated). Hopefully, I didn't get it wrong.",
            "date": "20050512T11:45:21",
            "id": 5
        },
        {
            "author": null,
            "body": "*** Bug 34866 has been marked as a duplicate of this bug. ***",
            "date": "20050616T11:39:38",
            "id": 6
        },
        {
            "author": null,
            "body": "I am also experiencing this problem when I use the start/stop deployer commands\nwhich worked in version 5.5.7. My normall pattern was to stop the application,\nthen copy an updated war file then start the application.\n\nWith version 5.5.9 it deletes the <context>.xml file from the\nconf\\Catalina\\<host> directory for that context when it is stopped, so I can't\nstart it again.\n\nI guess for a redeploy case I should be using undeploy/redeploy which I am not,\nbut what about the case where I want to take the application offline say for a\ndatabase backup, there is now not a way to start the application again as it\ncan't find the context.\n\nAlso I agree with the other comments that I don't want to define my data sources\nwithin the war file I want to use a per server configuration. I know that I can\nalways modify the war file after it has been created with the context file\nbefore deploy but that would just be one extra step for someone to forget.\n\nPaul",
            "date": "20050817T19:48:02",
            "id": 7
        },
        {
            "author": null,
            "body": "Please do not reopen the report.",
            "date": "20050826T18:23:46",
            "id": 8
        }
    ],
    "component": "Catalina",
    "description": "I've a new installed tomcat and placed mycontext.xml (conf/Catalina/localhost):\n<Context docBase=\"/somewhere/somewhat.war\" />\n\nAfter updating somewhat.war tomcat removes mycontext.xml! So the application\nwill not be deployed correctly.\n\nThe tomcat docs\n(\"tomcat-docs/config/host.html#Automatic%20Application%20Deployment\") says:\n\"An update to a WAR which has been expanded will trigger an undeploy (with a\nremoval of the expanded webapp), followed by a deployment\"",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "34840",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "updating war - tomcat removes mycontext.xml",
    "systemSpecification": true,
    "version": "5.5.9"
}