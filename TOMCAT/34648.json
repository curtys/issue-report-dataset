{
    "comments": [
        {
            "author": null,
            "body": "You can set the\nUseCanonicalName On inside httpd.conf for that.\n",
            "date": "20050427T17:25:25",
            "id": 0
        },
        {
            "author": null,
            "body": "I do have this directive configured with \n\nUseCanonicalName On\n\nin httpd.conf, but it still doesn't select the host in tomcat based on the\nServerName directive in the VirtualHost directive block.",
            "date": "20050427T17:31:19",
            "id": 1
        },
        {
            "author": null,
            "body": "Created attachment 14857\nApache httpd.conf",
            "date": "20050427T17:37:05",
            "id": 2
        },
        {
            "author": null,
            "body": "Created attachment 14858\nApache vhost.conf",
            "date": "20050427T17:37:28",
            "id": 3
        },
        {
            "author": null,
            "body": "Created attachment 14859\nMod_JK workers.properties",
            "date": "20050427T17:37:47",
            "id": 4
        },
        {
            "author": null,
            "body": "Again, this is not mod_jk bug, nor feature.\nIf you wish you can use mod_header and inside your\nvirtual host set the:\n\nRequestHeader set HOST www.testhost.com\n\nThat'll do the trick.\n",
            "date": "20050427T18:42:04",
            "id": 5
        },
        {
            "author": null,
            "body": "We currently are using mod_header to rewrite the header, but the problem with\nthis is when it gets to tomcat and if you do a redirect it uses the new header.\n For instance if you are using mod_header and rewriting to www.testhost.com.\nLets say a user access www.testhost2.com and a redirect is done, it will\nredirect back to www.testhost.com.  This is problamatic with portals.  Also,\nwith portals we may want to show different content if they are accessing the\nsite via www.testhost.com or from www.testhost2.com, and with the rewritten\nheader it will always appear to be from www.testhost.com.  We have been\nuneventful in finding a work around for this which is what brought me here.  I\ntried the exact same configuration with Resin, changing nothing in apache\nbesides adding the LoadModule for resin's module and it works just fine using\nServerName which is what I would like to see in tomcat.\n\nI know this isn't a bug, but it doesn't follow the pattern you would expect.  I\nwould expect it to operate like resin did.",
            "date": "20050427T19:10:07",
            "id": 6
        },
        {
            "author": null,
            "body": "So it sounds like you want a Connector option to use request.getLocalName() \n(which is where the Apache ServerName ends up in Jk) for host mapping.  While \nnot technically difficult to implement, it sounds fragile.",
            "date": "20050427T20:26:59",
            "id": 7
        },
        {
            "author": null,
            "body": "Thanks again for the quick response, yea that is what I am looking for.  Though\nit would probably have to fall through some how as well, like trying to get the\nrequest.getLocalName() if that is null falling back on the\nrequest.getHeader(\"host\") in place of it.  I think this is something that ISP\nhosting enviroment, which is what we are, would find this quite useful.  As\ncurrently we have been tossing up the idea of switching to Resin, which I would\nrather not do as I have had great success with tomcat and would like to keep our\nproduction enviroment running on tomcat.\n\nWhat about this option would be fragile?",
            "date": "20050427T20:55:02",
            "id": 8
        },
        {
            "author": null,
            "body": "The reason why it will be fragile is because it will break the HTTP\nspecs. Other reason is for cases where there is mod_proxy->mod_jk->tomcat.\nIn that case it will receive the middle host name instead the front one.\n\nSo, why don't you just put the multiple <Alias>...</Alias> for\nthat host in the server.xml.\n",
            "date": "20050428T07:08:33",
            "id": 9
        },
        {
            "author": null,
            "body": "B/c we don't always know what hosts a client may have.  If we are managing their\ndns we would know and that isn't a terrible problem, but for other clients they\nmanage their own DNS and tend to by names up all the time and just point them to\ntheir IP address and we would have no knowledge of the new host that is pointing\nto our servers until we get a call from the client complaining about their new\ndomain not working.",
            "date": "20050428T14:34:33",
            "id": 10
        },
        {
            "author": null,
            "body": "Another thing we have some clients that have 50+ domain names.  This would mean\n100+ Alias entries as well to accomidate for www.testhost.com and testhost.com\nreferences that could be in the Host header.",
            "date": "20050428T15:49:48",
            "id": 11
        },
        {
            "author": null,
            "body": "(In reply to comment #8)\n> So it sounds like you want a Connector option to use request.getLocalName() \n> (which is where the Apache ServerName ends up in Jk) for host mapping.  \nWhile \n> not technically difficult to implement, it sounds fragile.\n\nReviewing the Catalina code, it looks like implementing an option (I'm \nthinking useIPVHosts=\"true\") to do this should work fine.  I'll add it into \nthe CVS later.",
            "date": "20050429T19:19:07",
            "id": 12
        },
        {
            "author": null,
            "body": "Awesome William,\n\nThanks a lot for your help with this.",
            "date": "20050429T20:38:19",
            "id": 13
        },
        {
            "author": null,
            "body": "The option has now been added to the CVS, and will appear in 5.5.10.\n\nTo enable it, use:\n  <Connector protocol=\"AJP/1.3\" useIPVHosts=\"true\" ... />\n",
            "date": "20050430T05:35:07",
            "id": 14
        },
        {
            "author": null,
            "body": "So the field was always there, but wasn't used?\n(well, it was used by tomcat 4.1 ;-) )\n\nI'm not quite sure, why the options is called useIPVHosts, but for me it's all\nabout moving the choice of the right vhost to apache. Haveing to configure the\nsame aliases in both tomcat and apache, that's what i'd call a fragile config.",
            "date": "20050801T08:34:18",
            "id": 15
        }
    ],
    "component": "Connector:AJP",
    "description": "Currently the implementation for which AJP1/3 Connector selects which host to\npass the request to is determined solely by the HTTP Host header.  It would be\nnice if it could optionally use the ServerName directive that is passed from\nApache through mod_jk to the AJP1/3 Connector.  This would be create for ISP\nhosting enviroments in which name based hosting may not always be the hosting\nmethod.  Currently our setup we have some hosts that are name based and some\nthat are address based.  For address based hosts consider the following apache conf\n\n<VirtualHost 192.168.2.100>\nServerName www.testhost.com\nJkMount /* default\n</VirtualHost>\n\nand the associated tomcat host conf\n\n<Host name=\"testhost\" appBase=\"webapps\">\n  <Alias>www.testhost.com</Alias>\n</Host>\n\nNow this client is setup as and address based host.  Let also say that the\ndomain name www.testhost2.com resolves to 192.168.2.100 as well.  Since we don't\nalways manage the DNS and clients could have (N) domains pointing to their IP\naddress.  The domain www.testhost.com will work just fine but www.testhost2.com\nwill not, b/c the host header will have www.testhost2.com obviously instead of\nwww.testhost.com.  Now if tomcat had an option to use the ServerName directive\nif it was passed this would then work for both the domains in question, as it\nwould lookup of www.testhost.com from ServerName passed through mod_jk instead\nof just solely looking up the Host Header.\n\nThis obviously isn't a bug but a feature request, I know that other containers\ndo already do this like Resin, handles this situation just fine.\n\nTomcat Version: 5.5.9\nMod_JK: 1.2.10\nApache: 2.0.54",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "34648",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "AJP uses Host header not ServerName directive from Apache",
    "systemSpecification": false,
    "version": "Unknown"
}