{
    "comments": [
        {
            "author": null,
            "body": "*** Bug 39057 has been marked as a duplicate of this bug. ***",
            "date": "20060327T23:46:23",
            "id": 0
        },
        {
            "author": null,
            "body": "If you submit a patch to Tomcat that does this, rather than a completely\nseparate servlet, it would be greatly appreciated.",
            "date": "20060413T19:34:47",
            "id": 1
        },
        {
            "author": null,
            "body": "I guess that's a no on the patch, but that's OK.  I still think this sample code\nis valuable, so I've updated the monitoring documentation page you reference to\nadd a link to this page in Bugzilla.  That way users will be shown this\nworkaround code.\n\nI think things are improving in this area anyways in Java 6, so we may not want\nto include this type of code in the distro core anyhow.",
            "date": "20061224T19:02:04",
            "id": 2
        },
        {
            "author": null,
            "body": "OK, feature is cool, but implementation has some bugs.\nJuergen Herrmann send me a better code contribution.\nPlease check the new JMXAdaptorLifecycleListener ( Tomcat 5.5 Revision 544401).\n\n<Server ...>\n...\n<Listener className=\"org.apache.catalina.mbeans.JMXAdaptorLifecycleListener\"\n          namingPort=\"8083\" port=\"8084\" host=\"myhost\" />  \n...\n</Server>\n\nPeter",
            "date": "20070604T23:21:59",
            "id": 3
        }
    ],
    "component": "Unknown",
    "description": "http://tomcat.apache.org/tomcat-5.5-doc/monitoring.html states:\n\n  Note:The JSR 160 JMX-Adaptor opens a second data protocol port. That is a\nproblem when you have installed a local firewall.\n\nThis can be fixed by using a custom JMXConnectorServer to control both\nports thus allowing firewall access.\n\nEg. This is a GLP I threw together to try it out:\n\npublic class JMXPortServer extends HttpServlet {\n  static JMXConnectorServer cs;\n  static String jmxHost;\n  static {\n    try {\n      final InetAddress host = InetAddress.getLocalHost();\n      jmxHost = host.getHostName();\n      final int jmxPort =\nInteger.parseInt(System.getProperty(\"org.jasig.portal.jmxPort\"));\n      final int jmxPort2 = jmxPort + 1;\n\n      LocateRegistry.createRegistry(jmxPort);\n      System.err.println(\"getPlatformMBeanServer()\");\n      MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n\n      HashMap env = new HashMap();\n      final String sslProperty = \"com.sun.management.jmxremote.ssl\";\n      String value = System.getProperty(sslProperty);\n      if (Boolean.getBoolean(value)) {\n        SslRMIClientSocketFactory csf = new SslRMIClientSocketFactory();\n        SslRMIServerSocketFactory ssf = new SslRMIServerSocketFactory();\n        env.put(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE, csf);\n        env.put(RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE, ssf);\n      }\n\n      final String passwordFileProperty =\n\"com.sun.management.jmxremote.password.file\";\n      value = System.getProperty(passwordFileProperty);\n      if (value != null) {\n        env.put(\"jmx.remote.x.password.file\", value);\n      }\n\n      final String jmxUrl = \"service:jmx:rmi://\" + jmxHost + \":\" + jmxPort2\n+\"/jndi/rmi://\" + jmxHost + \":\" + jmxPort + \"/server\";\n      final JMXServiceURL url = new JMXServiceURL(jmxUrl);\n      cs = JMXConnectorServerFactory.newJMXConnectorServer(\n          url, env, mbs);\n\n      try {\n        cs.start();\n        LogService.log(LogService.INFO, \"JMXPrtServer started on \" + jmxUrl);\n      } catch (IOException ex) {\n        LogService.log(LogService.ERROR, ex);\n      }\n    } catch (Exception ex) {\n      System.err.println(ex);\n    }\n  }\n}\n\nI tell tomcat to load the servlet through web.xml and start the\nJVM with:\n\n-Dcom.sun.management.jmxremote -Dorg.jasig.portal.jmxPort=7087\n-Dcom.sun.management.jmxremote.authenticate=true\n-Dcom.sun.management.jmxremote.ssl=false\n-Dcom.sun.management.jmxremote.password.file=/usr/local/src/myUBC2/conf/jmxremote.password\n\n\nI then run jconsole on my desktop with:\n\n  jconsole service:jmx:rmi://host:7088/jndi/rmi://host:7087/server\n\nand, bingo, JMX access.\n\nIt would be be better if this was built into Tomcat as a configuration\noption, rather than having to do it as part of every Tomcat instance.\n\nI haven't tried out the ssl connection code (I got this code from\nhttp://forum.java.sun.com/thread.jspa?forumID=58&threadID=703567)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "39055",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "P2 enhancement",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Firewall access for JSR 160 JMX with Java 5",
    "systemSpecification": true,
    "version": "5.5.16"
}