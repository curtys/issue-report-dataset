{
    "comments": [
        {
            "author": null,
            "body": "Looks like a good catch, thanks for reporting it.",
            "date": "20051128T22:05:53",
            "id": 0
        }
    ],
    "component": "Catalina:Cluster",
    "description": "On my Linux system (Fedore Core 3) running Java 1.4.2_06, when I configure\ntomcat to use SimpleTcpCluster, then when I try to shutdown tomcat, the shutdown\ntake a long time to complete and finally stops with an error as show in this log\nexcerpt:\n\n2005-11-15 13:48:44,202 INFO  Pausing Coyote HTTP/1.1 on http-8888\n2005-11-15 13:48:44,202 INFO  Pausing Coyote HTTP/1.1 on http-8444\n2005-11-15 13:48:45,205 INFO  Stopping service Catalina\n2005-11-15 13:48:45,206 INFO  Manager [/flexnet] expiring sessions upon shutdown\n2005-11-15 13:48:45,781 INFO  Stopped ClusterSender at cluster\nCatalina:type=Cluster,host=localhost with name\nCatalina:type=ClusterSender,host=localhost\n2005-11-15 13:50:50,440 INFO  Stopping Coyote HTTP/1.1 on http-8888\n2005-11-15 13:50:50,440 INFO  Stopping Coyote HTTP/1.1 on http-8444\n2005-11-15 13:50:50,448 ERROR Unable to process request in ReplicationListener\njava.nio.channels.ClosedSelectorException\n        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:55)\n        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:70)\n        at\norg.apache.catalina.cluster.tcp.ReplicationListener.listen(ReplicationListener.java:130)\n        at\norg.apache.catalina.cluster.tcp.ClusterReceiverBase.run(ClusterReceiverBase.java:394)\n        at java.lang.Thread.run(Thread.java:534)\n2005-11-15 13:50:50,472 ERROR Unable to start cluster listener.\njava.lang.NullPointerException\n        at\norg.apache.catalina.cluster.tcp.ReplicationListener.listen(ReplicationListener.java:182)\n        at\norg.apache.catalina.cluster.tcp.ClusterReceiverBase.run(ClusterReceiverBase.java:394)\n        at java.lang.Thread.run(Thread.java:534)\n\nNotice the long delay between stopping the ClusterSender and stopping Coyote.\n\nThis is apparently caused by a bug in Java 1.4.2 with closing a Selector when\nthere are selects active on it.\n\nThere is a simple fix to\norg.apache.catalina.cluster.tcp.ReplicationListener.stopListening:\n\n--- ReplicationListener.java    2005-11-16 09:02:50.055300180 -0800\n+++ ReplicationListener.java.fix        2005-11-16 09:02:45.017605588 -0800\n@@ -187,8 +187,11 @@\n      * @see org.apache.catalina.cluster.tcp.ClusterReceiverBase#stopListening()\n     */\n     protected void stopListening(){\n+        doListen = false;\n         if ( selector != null ) {\n             try {\n+                for ( int i = 0; i < getTcpThreadCount(); i++ )\n+                    selector.wakeup();\n                 selector.close();\n             } catch ( Exception x ) {\n                 log.error(\"Unable to close cluster receiver selector.\",x);\n@@ -196,7 +199,6 @@\n                 selector = null;\n             }\n         }\n-        doListen = false;\n    }\n\nBasically move the 'doListen = false' to the top of the method to avoid a race\ncondition that causes the Exceptions (selector.listen may be called while the\nclose is in progress and the selector may be set to null while the listener\nthreads are still looping.  The loop to call selector.wakeup() once for each\nthread before calling selector.close() works around the Java bug with closing\nwhile selects are in progress.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "37529",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Tomcat take a long time to stop when configured for clustering",
    "systemSpecification": true,
    "version": "5.5.12"
}