{
    "comments": [
        {
            "author": null,
            "body": "Did you actually try testing CLIENT-CERT authentication? ;)  It works.  Check \nout http://marc.theaimsgroup.com/?l=tomcat-user&m=109275632305374&w=2 for \nexample.",
            "date": "20040915T16:18:10",
            "id": 0
        },
        {
            "author": null,
            "body": "Are you, like, totally brain-dead?  CLIENT-CERT auth only works with \nMemoryRealm and (in 5.5.x) UDBRealm.  With the other Realms, it's just like the \nreporter states it is.  ",
            "date": "20040915T17:00:09",
            "id": 1
        },
        {
            "author": null,
            "body": "The example URL you give (marc.theaimsgroup.com) has role-name *. If web.xml \nhas inside security-role any role-name other than * then tomcat will give 403 \nto users in that role.",
            "date": "20041029T18:24:38",
            "id": 2
        },
        {
            "author": null,
            "body": "Changing this to an enhancement request.  OP, if you want to work on this, a \npatch would be gladly welcome.",
            "date": "20041118T16:11:12",
            "id": 3
        },
        {
            "author": null,
            "body": "This is now fixed in CVS for TC5.5.x",
            "date": "20041129T21:02:34",
            "id": 4
        }
    ],
    "component": "Catalina",
    "description": "CLIENT-CERT authentication, as defined in RealmBase, requires working\ngetPrincipal() method. However, DataSourceRealm and JDBCRealm have dummy\ngetPrincipal(), which always returns null, so CLIENT-CERT auth doesn't work with\nthese realms. Why is it like that? Will it be fixed?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "30352",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "P3 enhancement",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "CLIENT-CERT auth doesn't work with DataSourceRealm and JDBCRealm",
    "systemSpecification": true,
    "version": "5.0.27"
}