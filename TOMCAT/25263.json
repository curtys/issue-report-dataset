{
    "comments": [
        {
            "author": null,
            "body": "I think the problem is that when Jasper SMAPs a TemplateText node, it assumes \nthat when the input source line advances, the output source line advances as \nwell.  In 5.0.12, Jasper advanced the input source line and the output source \nline independently, and so SMAPped TemplateText nodes correctly.  I've been \nmeaning to fix this regression since it was introduced, but I've been slammed \nwith work, and so haven't had time.",
            "date": "20031208T00:11:38",
            "id": 0
        },
        {
            "author": null,
            "body": "Argh!  When I concatenated adjecent template text strings, I forgot to update\nthe smap too!  I'll try to fix this.  In the meantime, use the compiler option\n'mappedfile' as a workaround, which you may want to do anyway when debugging.",
            "date": "20031209T00:03:06",
            "id": 1
        },
        {
            "author": null,
            "body": "The suggested workaround of setting mappedfile to true works perfectly, once \nall the previously compiled JSP state is removed from the Tomcat work \ndirectory.  Thank you very much for the suggestion.\n\nBy the way, the default Tomcat settings are basically set up for debugging, \nexcept for mappedfile.  For example, checkInterval, classdebuginfo, \ndevelopment, keepgenerated, reloading are all set to development/debug settings \nby default.  Is there some special reason that mappedfile is not set \naccordingly?  Should it be?",
            "date": "20031209T00:54:06",
            "id": 2
        },
        {
            "author": null,
            "body": "Maybe it should.  Come to think of it, we should just set a single flag, such as\n'development', to turn on/off debugging.  So setting development would set some\nreasbable default for checkInterval, classdebuginfo, development, keepgenerated,\nreloading, and mappedfile.  What do you think?\n\nAnyway, this bug is fixed now.\n\n",
            "date": "20031209T02:54:31",
            "id": 3
        },
        {
            "author": null,
            "body": "I think a global flag that set some reasonable debug settings would be \nfantastic and make configuration much simpler.\n\nAnd, thanks for fixing the bug. :-)",
            "date": "20031209T03:23:45",
            "id": 4
        },
        {
            "author": null,
            "body": "I don't agree with merging the debug parameters, as they impact different\nthings. For instance, to use mappedfile, you had to remove the old generated\nJSPs. The development flag OTOH will be used right away.\n\nFor production, the only real setting is to precompile the JSPs. Everything else\nis not relevant and you can use the defaults (avoid enabling the background\ncompilation thread, of course ;-) ).\n\nI think the defaults should be tweaked a bit:\n- mappedfile should be true by default in the \"normal\" Jasper (as development is\ntrue)\n- mappedfile should be false by default when precompiling\nOther defaults could be adjusted like this, with the general intent being what\nyou want (but without a super \"dev\" flag).",
            "date": "20031209T10:03:06",
            "id": 5
        },
        {
            "author": null,
            "body": "That sounds reasonable.  Just getting mappedfile to default true, since \ndebugging is on anyway would be great.  I agree that the additional flexibility \nof the current model certainly has its place.  Nice compromise. +1 (as if I get \nto vote here ;-)",
            "date": "20031209T15:08:20",
            "id": 6
        },
        {
            "author": null,
            "body": "Just from looking at the code for the fix, I think it will still give the \nwrong SMAP for TemplateText nodes longer than JspUtil.CHUNKSIZE.  \nGenerator.java advances the output line when JspUtil.CHUNKSIZE is exceeded, so \nthe SMAPping code should too.",
            "date": "20031209T16:23:19",
            "id": 7
        }
    ],
    "component": "Jasper",
    "description": "Below is an example SMAP, JSP, and generated Java file that demonstrate an \nerror in the SMAP generation.\n\nThe test JSP (with line numbers) looks like this:\n\n01  <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n02  <%@ page language=\"java\" import=\"java.lang.*,java.util.*\" %>\n03  <%\n04  String path = request.getContextPath();\n05  String basePath = \"http://\"+request.getServerName()\n06  +\":\"+request.getServerPort()+path+\"/\";\n07  %>\n08  <HTML>\n09    <HEAD>\n10      <BASE HREF=\"<%=basePath%>\">     \n11      <TITLE>My JSP 'TestJSP.jsp' starting page</TITLE>\n12    </HEAD>\n13\n14      <BODY>\n15        <% \n16          Date date = new Date(); \n17          out.println(\"Current time is: \" + date);\n18          out.println(\".  \");\n19          date = new Date(); \n20          out.println(\"Now the time is \" + date);\n21          out.println(\".  \");\n22        %>\n23        <BR>This is my test JSP page. <BR>\n24      </BODY>\n25  </HTML>\n\nThe SMAP generated is as follows:\n\nSMAP\nTomcatTestJSP_jsp.java\nJSP\n*S JSP\n*F\n+ 0 TomcatTestJSP.jsp\nTomcatTestJSP.jsp\n*L\n1,3:42\n4,3:44\n6,4:47\n9:48,2\n10,5:50\n15,7:51\n21,5:58\n*E\n\nThe mapping of 10,5:50 is erroneous. It is both the wrong area within the \ngenerated java file, and it overlaps with the subsequent correct mapping of the \nembedded java scriptlet at 15,7:51.\n\nHere's the generated java file to which I added line number comments for \nillustration:\n\npackage org.apache.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\nimport java.lang.*;\nimport java.util.*;\n\npublic final class TomcatTestJSP_jsp extends \norg.apache.jasper.runtime.HttpJspBase\n    implements org.apache.jasper.runtime.JspSourceDependent {\n\n  private static java.util.Vector _jspx_dependants;\n\n  public java.util.List getDependants() {\n    return _jspx_dependants;\n  }\n\n  public void _jspService(HttpServletRequest request, HttpServletResponse \nresponse)\n        throws java.io.IOException, ServletException {\n\n    JspFactory _jspxFactory = null;\n    PageContext pageContext = null;\n    HttpSession session = null;\n    ServletContext application = null;\n    ServletConfig config = null;\n    JspWriter out = null;\n    Object page = this;\n    JspWriter _jspx_out = null;\n\n\n    try {\n      _jspxFactory = JspFactory.getDefaultFactory();\n      response.setContentType(\"text/html\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n      \t\t\tnull, true, 8192, true);\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      out.write(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 \nTransitional//EN\\\">\\r\\n\\r\\n\"); // line number 42\n\nString path = request.getContextPath(); // line 44\nString basePath = \"http://\"+request.getServerName()+\":\"+request.getServerPort()\n+path+\"/\"; // line 45\n\n      out.write(\"\\r\\n<HTML>\\r\\n\\t<HEAD>\\r\\n\\t\\t<BASE HREF=\\\"\"); //line 47\n      out.print(basePath); // line 48\n      out.write(\"\\\">\\t\\t\\r\\n\\t\\t<TITLE>My JSP 'TestJSP.jsp' starting \npage</TITLE>\\r\\n\\t</HEAD>\\r\\n\\r\\n\\t<BODY>\\r\\n\\t  \"); // line 49\n \n\t  \tDate date = new Date(); // line 51\n\t  \tout.println(\"Current time is: \" + date); // line 52\n      out.println(\".  \"); // line 53\n      date = new Date();  // line 54\n      out.println(\"Now the time is \" + date); // line 55\n      out.println(\".  \"); // line 56\n\t  \n      out.write(\"\\r\\n\\t\\t<BR>This is my test JSP page. \n<BR>\\r\\n\\t</BODY>\\r\\n</HTML>\\r\\n\");\n    } catch (Throwable t) {\n      if (!(t instanceof SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          out.clearBuffer();\n        if (pageContext != null) pageContext.handlePageException(t);\n      }\n    } finally {\n      if (_jspxFactory != null) _jspxFactory.releasePageContext(pageContext);\n    }\n  }\n}\n\nFrom this code, the lines 10-14 in the JSP should be mapped only to line 49 \n(like 10,5:49,0), but not to 50-54 as the 10,5:50 mapping dictates.  This is \ncertainly not the only time we've seen problems with this latest release, but \nthis is one of the smallest test cases we could produce.\n\nFor the record, the mappings in the previous version we tested, 5.0.12 were \ncorrect and are reproduced below. \n\nSMAP\nTomcatTestJSP_jsp.java\nJSP\n*S JSP\n*F\n+ 0 /TomcatTestJSP.jsp\nTomcatTestJSP.jsp\n*L\n1,2:42\n4,3:45\n6,2:48\n8:49,2\n9:50,4\n10:53,3\n11:55,2\n12:56\n13:56,2\n14:57\n15,7:59\n21:66\n22:66,3\n23:68,2\n24:70\n*E\n\nAlthough the output lines are different, due to changes in the JSP to Java \ntranslation, you'll note that the lines prior to line 15 are properly generated \nto previous lines in the java file in a non-overlapping manner with the 15,7:59 \nmapping, which is where the next java block begins.  This problem with the SMAP \ncurrently prevents IDE's from properly supporting source-level JSP debugging.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "25263",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Incorrect SMAP generated for JSP",
    "systemSpecification": true,
    "version": "5.0.16"
}