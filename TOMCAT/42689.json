{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 20366\ndiff to use Socket.connect with timeout parameter\n\nOur fix was to change DataSender.createSocket to use the ackTimeout for\nconnection establishment.  This fix will only work with jdk 1.4 or higher.",
            "date": "20070618T06:50:37",
            "id": 0
        },
        {
            "author": null,
            "body": "Thanks for the report. This has been fixed in svn and will be in 5.5.25.\nPeter",
            "date": "20070620T05:58:00",
            "id": 1
        }
    ],
    "component": "Catalina:Cluster",
    "description": "While testing clustering in our lab we noticed that when connectivity to one of\nthe cluster members was lost by pulling the network cable (serving replication\ntraffic), the entire cluster would become unresponsive.  We were pulling the\nnetwork cable to simulate catastrophic switch port failure or interface failure.\nWe were testing under load, using synchronous replication.  We found that\nexisting replication sockets would honor our timeout (ackTimeout)\nconfigurations, but new connections established because of pool growth or\nretries would not timeout socket connect attempts.  Because of not having a\ntimeout, requests would backlog and effectively bring the cluster down.\n\nTheoretically, this connection establishment problem exists for all users of the\nDataSender class.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "42689",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "no way to timeout new connect attempts for replication sockets",
    "systemSpecification": true,
    "version": "5.5.23"
}