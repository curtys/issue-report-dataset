{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 20977\nTest cases with different connector settings\n\nThese test cases can prove that either the documentation or the code needs to\nbe changed regarding the compression size settings",
            "date": "20071015T03:55:31",
            "id": 0
        },
        {
            "author": null,
            "body": "There is a mistake with the attribute name, it is compressionMinSize, not\nminCompressionSize\n\n(In reply to comment #0)\n> 2 of the compression related attributes for the http connector are:\n> \n> compression = on | off | force | <integer val>\n> The documentation states that integer val will be implemented as:\n> compression=\"on\" and minCompressionSize = <integer val>\n> \n> minCompressionSize = <integer val>\n> (The documentation for 5.5.12 doesnt mention this at all, but read this in the\n> server.xml)\n> \n> The problem is that the documenation gives the impression that only setting\n> compression=\"some integer val\" is sufficient, however the way the code is\n> written, the value of \"minCompressionSize\" always overrides the value specified\n> in the \"compression\" field. Even if minCompressionSize isnt set, it will still\n> get the default value of 2048 and override whatever value was there in the\n> \"compression\" field.\n> \n> I looked at the implementation of the http11 connector and found the following\n> code that might be the culprit:\n> \n> In org.apache.coyote.http11.Http11BaseProtocol.Http11ConnectionHandler.init\n>     processor.setCompression( proto.compression );\n>     processor.setCompressionMinSize( proto.compressionMinSize);\n> \n> since the \"setCompressionMinSize\" is called after compressionMinSize, its value\n> will override the value read from compression atttribute.\n> \n> \n> I have looked at the code for Tomcat 6.0 also, and the problems appears to still\n> be present.\n\n",
            "date": "20071018T06:25:38",
            "id": 1
        },
        {
            "author": null,
            "body": "Thanks for the report. This is fixed in trunk and proposed for 6.0.x and 5.5.x\n\n",
            "date": "20071130T11:17:11",
            "id": 2
        },
        {
            "author": null,
            "body": "Fixed in 5.5.x and will be included in 5.5.26 onwards.",
            "date": "20080106T15:13:58",
            "id": 3
        }
    ],
    "component": "Connector:HTTP",
    "description": "2 of the compression related attributes for the http connector are:\n\ncompression = on | off | force | <integer val>\nThe documentation states that integer val will be implemented as:\ncompression=\"on\" and minCompressionSize = <integer val>\n\nminCompressionSize = <integer val>\n(The documentation for 5.5.12 doesnt mention this at all, but read this in the\nserver.xml)\n\nThe problem is that the documenation gives the impression that only setting\ncompression=\"some integer val\" is sufficient, however the way the code is\nwritten, the value of \"minCompressionSize\" always overrides the value specified\nin the \"compression\" field. Even if minCompressionSize isnt set, it will still\nget the default value of 2048 and override whatever value was there in the\n\"compression\" field.\n\nI looked at the implementation of the http11 connector and found the following\ncode that might be the culprit:\n\nIn org.apache.coyote.http11.Http11BaseProtocol.Http11ConnectionHandler.init\n    processor.setCompression( proto.compression );\n    processor.setCompressionMinSize( proto.compressionMinSize);\n\nsince the \"setCompressionMinSize\" is called after compressionMinSize, its value\nwill override the value read from compression atttribute.\n\n\nI have looked at the code for Tomcat 6.0 also, and the problems appears to still\nbe present.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "43622",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 minor",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "compression / minCompressionSize attribute not properly implemented",
    "systemSpecification": false,
    "version": "5.5.12"
}