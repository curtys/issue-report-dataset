{
    "comments": [
        {
            "author": null,
            "body": "Tested same scenario with:\n\n ./version.sh\nUsing CATALINA_BASE:   /localdisk/data/apps/apache-tomcat-6.0.29\nUsing CATALINA_HOME:   /localdisk/data/apps/apache-tomcat-6.0.29\nUsing CATALINA_TMPDIR: /localdisk/data/apps/apache-tomcat-6.0.29/temp\nUsing JRE_HOME:        /localdisk/data/apps/jdk1.6.0_21\nUsing CLASSPATH:       /localdisk/data/apps/apache-tomcat-6.0.29/bin/bootstrap.jar\nServer version: Apache Tomcat/6.0.29\nServer built:   July 19 2010 1458\nServer number:  6.0.0.29\nOS Name:        Linux\nOS Version:     2.6.9-34.ELsmp\nArchitecture:   i386\nJVM Version:    1.6.0_21-b06\nJVM Vendor:     Sun Microsystems Inc.\n$\n\n\nAnd with:\n\n$\n$ ./version.sh\nUsing CATALINA_BASE:   /localdisk/data/apps/apache-tomcat-6.0.29\nUsing CATALINA_HOME:   /localdisk/data/apps/apache-tomcat-6.0.29\nUsing CATALINA_TMPDIR: /localdisk/data/apps/apache-tomcat-6.0.29/temp\nUsing JRE_HOME:        /localdisk/data/apps/jdk1.5.0_17\nUsing CLASSPATH:       /localdisk/data/apps/apache-tomcat-6.0.29/bin/bootstrap.jar\nServer version: Apache Tomcat/6.0.29\nServer built:   July 19 2010 1458\nServer number:  6.0.0.29\nOS Name:        Linux\nOS Version:     2.6.9-34.ELsmp\nArchitecture:   i386\nJVM Version:    1.5.0_17-b04\nJVM Vendor:     Sun Microsystems Inc.\n$\n\n\nIn both cases, the issue is NOT reproducible.  Thus, tomcat 6.0.x stream seems unaffected.",
            "date": "20100811T17:38:42",
            "id": 0
        },
        {
            "author": null,
            "body": "Thanks for the report and the thorough analysis. This has been fixed in 5.5.x and will be included in 5.5.31 onwards.",
            "date": "20100825T12:37:43",
            "id": 1
        }
    ],
    "component": "Connector:HTTP",
    "description": "Summary:\n   * issue found in 5.5.29 and still exists in 5.5.30.\n   * support for HTTP simple requests is broken as of tomcat 5.5.28.\n   * root cause: fix added to incorrect block in request line parser.\n\nDetails:\n\nWe've recently upgraded our product to use Apache Tomcat 5.5.29 from Apache Tomcat 5.5.25.  While testing, it was determined that some of our older clients who sent the following HTTP 0.9 request, described as \"Simple Requests\" in RFC 1945:\n\nGET /login/servlet/myservlet?ReplyType=ACTION&User=blah&Password=blahblah\n\n\nWould receive the following response:\n\nHTTP/1.1 400 Bad Request\nServer: Apache-Coyote/1.1\nTransfer-Encoding: chunked\nDate: Thu, 29 Jul 2010 19:26:06 GMT\nConnection: close\n\nFor the same request using Tomcat 5.5.25, we'd get the correct \"Simple-Response\" as required by RFC 1945.\n\nAfter turning debugging on, I determined that tomcat was throwing the following exception:\n\n2010-07-29 15:49:22,068 [http-8080-Processor24] DEBUG org.apache.coyote.http11.Http11Processor - Error parsing HTTP request header\njava.lang.IllegalArgumentException: Invalid character (CR or LF) found in method name\n at org.apache.coyote.http11.InternalInputBuffer.parseRequestLine(InternalInputBuffer.java:474)\n at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:829)\n at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)\n at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)\n at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)\n at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\n at java.lang.Thread.run(Thread.java:595) \n\n\nWhich doesn't make any sense.\n\nAfter some testing, I found that if an extra space character was added after the URI, I would once again get the correct \"Simple-Response\" back from tomcat.\n\n\nBased on the error message, I assumed it was likely the following bug fix in tomcat 5.5.28 that likely introduced the issue:\n\n46984: Reject requests with invalid HTTP methods with a 400 rather than a 501.\n\nLooking through the source, I found that this is the code block that is throwing the exception:\n\n$ diff ./apache-tomcat-5.5.27-src/connectors/http11/src/java/org/apache/coyote/http11/InternalInputBuffer.java ./apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/InternalInputBuffer.java\n471a472,476\n>             // Spec says no CR or LF in method name\n>             if (buf[pos] == Constants.CR || buf[pos] == Constants.LF) {\n>                 throw new IllegalArgumentException(\n>                         sm.getString(\"iib.invalidmethod\"));\n>             }\n763c768\n<                 throw new IOException\n---\n>                 throw new IllegalArgumentException\n$ \n\n\nAnd digging through the code repository, this is the subversion revision in which this issue was introduced:\n\nsvn diff -c 781763 http://svn.apache.org/repos/asf/tomcat/\n\n\nAlthough I've only briefly perused this code, it seems that the likely error is that this code block was added to the \"Reading the URI\" code block as opposed to the \"Reading the method name\" code block, as intended.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "49718",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Fix for bug 46984 breaks HTTP 0.9 requests",
    "systemSpecification": true,
    "version": "5.5.29"
}