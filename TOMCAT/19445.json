{
    "comments": [
        {
            "author": null,
            "body": "Note this exception doesn't happen on Mac os only. If you deploy a lot of\nwars(about 40 or so) on tomcat 5 then this also happens on solaris 8 and other\nplatforms as well.",
            "date": "20030521T06:59:40",
            "id": 0
        },
        {
            "author": null,
            "body": "Tomcat now tries to avoid opening lots of files (without guarantees), and\ndoesn't leak file descriptor. However, I think this bug is trying to prove that\nan OS global shared VM is bad for server environments.",
            "date": "20030625T08:16:18",
            "id": 1
        },
        {
            "author": null,
            "body": "Mac OS X imposes a low limit on the number of open file descriptors a process\nmay have, specifically 256 by default.  There is no easy way to fix this from\nJava, but in the catalina shell script, you should probably add a call to the sh\nbuiltin  ulimit to increase the number of allowed open files. For example:\n\nulimit -n 1024\n\nThis solved the problem in my application and probably would solve the problem\nin tomcat.",
            "date": "20040116T20:45:14",
            "id": 2
        }
    ],
    "component": "Catalina",
    "description": "When I install tomcat 5 on mac os x 10.2.5 running jdk 1.4.1_01-14 mixed mode\ntomcat comes up the first time. However if I stop the server and restart it then\nI get the following exception. The server doesn't stop however I get a \"document\n contains no data\" error when I try to access any page.\nCreated Listener\nStandardServer.await: create[8005]: java.net.SocketException: Too many open files\njava.net.SocketException: Too many open files\n        at java.net.ServerSocket.createImpl(ServerSocket.java:245)\n        at java.net.ServerSocket.getImpl(ServerSocket.java:203)\n        at java.net.ServerSocket.bind(ServerSocket.java:309)\n        at java.net.ServerSocket.<init>(ServerSocket.java:183)\n        at org.apache.catalina.core.StandardServer.await(StandardServer.java:523)\n        at org.apache.catalina.startup.Catalina.await(Catalina.java:625)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:587)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:297)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:394)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.commons.launcher.ChildMain.run(ChildMain.java:269)\njava.lang.NullPointerException\n        at\norg.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:483)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:468)\n        at org.apache.catalina.startup.HostConfig.run(HostConfig.java:968)\n        at java.lang.Thread.run(Thread.java:554)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "19445",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P3 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "tomcat doesn't startup the second time on mac os x 10.2.5",
    "systemSpecification": true,
    "version": "Nightly Build"
}