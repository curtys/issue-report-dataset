{
    "comments": [
        {
            "author": null,
            "body": "I have added the proper exception.\n\nThanks :-)",
            "date": "20030111T02:51:54",
            "id": 0
        },
        {
            "author": null,
            "body": "getLastAccessedTime has never been marked as throwing IllegalStateException\n(J2EE 1.2 => 1.4), and this is non-sense to make it throw it, because it's the\nonly way to detect conveniently that a session is in timeout (combined with\ngetMaxInactiveInterval).",
            "date": "20071206T06:46:01",
            "id": 1
        },
        {
            "author": null,
            "body": "Although this exception isn't in the pdf for the 2.4 spec it is in source code\nand the javadoc. It was clearly intended to be there. It would have been\nincluded in the pdf if it wasn't for the typo that was corrected in the first\nerrata.\n\nSee http://jcp.org/aboutJava/communityprocess/maintenance/jsr154/errata204.txt\nfor more details.",
            "date": "20071206T11:20:09",
            "id": 2
        },
        {
            "author": null,
            "body": "> Although this exception isn't in the pdf for the 2.4 spec\n\nIt has never been in the PDF spec, neither 2.2, 2.3 nor 2.4.\n\n> it is in source code and the javadoc.\n\nIt has never been in the publicized javadoc, neither 2.2, 2.3 nor 2.4.\nhttp://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpSession.html#getLastAccessedTime()\nThere is no source code for 2.2 or 2.3, it's binary only and non-normative.\n\n> It was clearly intended to be there. [...]\n> See http://jcp.org/aboutJava/communityprocess/maintenance/jsr154/errata204.txt\n> for more details.\n\nI stand corrected. Maintenance Review 1 adds IllegalStateException on getId and getLastAccessedTime. Maintenance Review 5 (for 2.5) removes it from getId, but \"leaves\" it on getLastAccessedTime.\nAt least we've won a new definition of \"clearly intended\": \"never present during 5 years of maintained documentation, and render the method useless\". For the \"method useless\" part, see http://bugs.sun.com/view_bug.do?bug_id=6470831 , ain't it sweet to access internal method to circumvent a \"clearly intended\" misbehaviour? All we need now is to mark getMaxInactiveInterval() as throwing the same exception :-)",
            "date": "20080227T02:17:53",
            "id": 3
        }
    ],
    "component": "Catalina",
    "description": "According to the javadocs for HttpSession.getLastAccessedTime() will throw \nan IllegalStateException if called against a method that has been invalidated.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "15967",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "IllegalStateException not thrown by HttpSession.getLastAccessedTime() if session has been invalidated.",
    "systemSpecification": false,
    "version": "Nightly Build"
}