{
    "comments": [
        {
            "author": null,
            "body": "Hmm, it seems you're right.  I'm attaching a WAR that shows this behavior.  I'm \nnot sure how we haven't detected this in our tests and the Sun TCK tests.  I'll \nask on tomcat-dev.",
            "date": "20040827T16:56:41",
            "id": 0
        },
        {
            "author": null,
            "body": "Created attachment 12549\nA simple WAR showing this (writes to System.out)",
            "date": "20040827T16:57:20",
            "id": 1
        },
        {
            "author": null,
            "body": "Fix committed on TOMCAT_5_0 branch.",
            "date": "20040828T12:50:32",
            "id": 2
        },
        {
            "author": null,
            "body": "This bug seem to have revived in Tomcat 5.5.16 and currently present in Tomcat\n5.5.17.",
            "date": "20060728T17:54:31",
            "id": 3
        },
        {
            "author": null,
            "body": "This has been re-fixed in SVN.\n\nThanks for the report.",
            "date": "20060907T02:07:24",
            "id": 4
        },
        {
            "author": null,
            "body": "*** Bug 39038 has been marked as a duplicate of this bug. ***",
            "date": "20061224T19:06:52",
            "id": 5
        }
    ],
    "component": "Unknown",
    "description": "I created an implementation of ServletContextListener and was expecting its \ncontextDestroyed(ServletContextEvent event) method to be invoked AFTER the \ndestroy() method of the single servlet for the web app.  The 2.4 servlet spec \nstates:\n\npublic void contextDestroyed(ServletContextEvent sce)\n  Notification that the servlet context is about to be shut down. All servlets \nand filters have been destroy()ed before any ServletContextListeners are \nnotified of context destruction.\n\n\nUsing Tomcat 5.0.25 and 5.0.27, the servlet destroy() method was invoked AFTER \nthe contextDestroyed() method, in violation of the spec.  I tried with and \nwithout <load-on-startup> in the web.xml to see if this made a difference, and \nit did not.\n\nNOTE:  The order of calls on the initialization side was correct and as I \nexpected.  The method contextInitialized(ServletContextEvent event) in my \nServletContextListener class was called before the init() methods of my \nservlet (and filters).",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "30762",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "destroy method in servlet called before contextDestroyed method in ServletContextListener class.",
    "systemSpecification": true,
    "version": "5.5.17"
}