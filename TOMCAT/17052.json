{
    "comments": [],
    "component": "Jasper",
    "description": "If a <jsp:element> has a nested <jsp:attribute name=\"name\">, the\n<jsp:attribute> body is erroneously used as the tag name of the\ngenerated element.\n\nThe JSP 2.0 spec JSP.5.14 says:\n\n   A jsp:element element has one mandatory\n   attribute, name, of type String. The value of\n   the attribute is used as that of the tag of the\n   element generated.\n\nIn other words,\n\n   <jsp:element name=\"foo\">\n      <jsp:attribute name=\"bar\">yada</jsp:attribute>\n   </jsp:element>\n\ngenerates this:\n\n   <foo bar=\"yada\"/>\n\nHowever, if the attribute's name happens to be \"name\", the tag\nname gets clobbered. Hence for this coding:\n\n   <jsp:element name=\"input\">\n      <jsp:attribute name=\"type\">text</jsp:attribute>\n      <jsp:attribute name=\"name\">userName</jsp:attribute>\n   </jsp:element>\n\ninstead of this:\n\n   <input type=\"text\" name=\"userName\" size=\"20\"/>\n\nit generates this:\n\n   <userName type=\"text\" size=\"20\"/>\n\nThis makes it impossible with XML syntax to generate HTML forms,\nthat use named input elements.\n\n--- Suggested Fix ---\n\nThe affected classes are in the org.apache.jasper.compiler package:\n\n   Generator.java\n   Node.java\n\nIn the Generator class, in the method\n\n   public void visit(Node.JspElement n)\n\nthe code currently has special handling for any attribute named\n\"name\", making it the tag name and excluding it from the rest of\nthe attribute generation.  This appears to be wrong to me, as it\nconfuses <jsp:attribute name=\"name\"> and <jsp:element\nname=\"foo\">, and it makes it impossible to create <input\ntype=\"text\" name=\"foo\"/>, as noted above.\n\nI think the fix would involve:\n\n   1. In Node.java: add a \"name\" property to the Node.JspElement\n      class, corresponding to the \"name\" attribute of the\n      <jsp:element> standard action. In the constructor, extract\n      the required \"name\" attribute passed in the first\n      parameter, and store it as the value of the name property. \n\n   2. In Generator.java: In the visit(Node.JspElement n) method,\n      take out the special handling, just using the\n      Node.JspElement \"name\" property as the tag name,\n      and allowing *all* Node.JspAttribute elements to\n      contribute to the tag attributes without skipping \"name\".",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "17052",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "jsp:element name attribute clobbered by nested jsp:attribute",
    "systemSpecification": true,
    "version": "5.0.0"
}