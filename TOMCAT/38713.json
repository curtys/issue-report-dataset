{
    "comments": [
        {
            "author": null,
            "body": "For more info:\nGot same error on Tomcat 5.5.15. Using JDK 1.5.0_06.\n\nApparently other people have seen this bug before (but on another JVM):\n\nhttp://mail-archives.apache.org/mod_mbox/tomcat-dev/200403.mbox/%3C406AADCC.7020003@ruc.dk%3E",
            "date": "20060222T20:19:01",
            "id": 0
        },
        {
            "author": null,
            "body": "We have the same problem. I think I managed to find out the cause: it only\nhappens if the JSP itself throws FileNotFoundException. So in order to\nreproduce: have only one JSP in your Webapp like so:\n\n<%!\n  java.util.Random r = new java.util.Random();\n%><% if(r.nextInt(10) > 0) throw new java.io.FileNotFoundException(); %>\n\nand put some concurrent load on that JSP.\n\nEvaluation: Jasper has a rather big catch block in JspServletWrapper.java and\nwill interpret any FNFE as an indication that the JSP itself has disappeared. It\nwill remove the JspServletWrapper which triggers a recompilation.\n\nI'm pretty sure there is a race condition in that recompilation code that causes\ntwo concurrent compilations for the same file. These two compilations would\nfight over the generated files and lead to the observed bug. See the thread dump\nbelow (taken after SDEInstaller hit a breakpoint in the offending line): two\ncompilations with different OIDs for JSPServletWrapper although the webapp has\nonly one JSP.\n\n\n\"http-16001-Processor22\" daemon prio=10 tid=0x00764340 nid=0x23 waiting on\ncondition [0xedb7e000..0xedb7f9f0]\n        at java.io.IOException.<init>(IOException.java:40)\n        at java.io.FileNotFoundException.<init>(FileNotFoundException.java:46)\n        at\norg.apache.jasper.compiler.SmapUtil$SDEInstaller.<init>(SmapUtil.java:248)\n        at\norg.apache.jasper.compiler.SmapUtil$SDEInstaller.install(SmapUtil.java:236)\n        at org.apache.jasper.compiler.SmapUtil.installSmap(SmapUtil.java:163)\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:429)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:472)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:451)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:511)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:295)\n        - locked <0xf1320090> (a org.apache.jasper.servlet.JspServletWrapper)\n\n\n\"http-16001-Processor25\" daemon prio=10 tid=0x00767a50 nid=0x26 runnable\n[0xed87d000..0xed87fc70]\n        at java.net.URLStreamHandler.setURL(URLStreamHandler.java:505)\n        at java.net.URLStreamHandler.parseURL(URLStreamHandler.java:283)\n        at sun.net.www.protocol.file.Handler.parseURL(Handler.java:50)\n        at java.net.URL.<init>(URL.java:596)\n        at java.net.URL.<init>(URL.java:464)\n        at java.net.URL.<init>(URL.java:413)\n        at java.net.JarURLConnection.parseSpecs(JarURLConnection.java:161)\n        at java.net.JarURLConnection.<init>(JarURLConnection.java:144)\n        at\nsun.net.www.protocol.jar.JarURLConnection.<init>(JarURLConnection.java:61)\n        at sun.net.www.protocol.jar.Handler.openConnection(Handler.java:24)\n        at java.net.URL.openConnection(URL.java:943)\n        at java.net.URL.openStream(URL.java:1007)\n        at\norg.apache.catalina.loader.StandardClassLoader.getResourceAsStream(StandardClassLoader.java:679)\n        at java.lang.Class.getResourceAsStream(Class.java:1998)\n        at org.apache.tools.ant.ComponentHelper.initTypes(ComponentHelper.java:741)\n        at\norg.apache.tools.ant.ComponentHelper.initDefaultDefinitions(ComponentHelper.java:247)\n        at org.apache.tools.ant.Project.init(Project.java:262)\n        at org.apache.jasper.compiler.Compiler.getProject(Compiler.java:116)\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:320)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:472)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:451)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:511)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:295)\n        - locked <0xf0c4d448> (a org.apache.jasper.servlet.JspServletWrapper)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)",
            "date": "20060310T11:58:18",
            "id": 1
        },
        {
            "author": null,
            "body": "Also found this problem with Tomcat 5.5.4 on Windows 2000 Professional.",
            "date": "20060401T13:01:02",
            "id": 2
        },
        {
            "author": null,
            "body": "(In reply to comment #2)\n> We have the same problem. I think I managed to find out the cause: it only\n> happens if the JSP itself throws FileNotFoundException. So in order to\n> reproduce: have only one JSP in your Webapp like so:\n> \n> <%!\n>   java.util.Random r = new java.util.Random();\n> %><% if(r.nextInt(10) > 0) throw new java.io.FileNotFoundException(); %>\n> \n> and put some concurrent load on that JSP.\n> \n\nI have seen this problem where the jsp does NOT have any code that throws a\nFileNotFoundException. I do not believe this is the source of the problem.\n\nI've seen the problem with Tomcat 5.0.28 with j2sdk1.4.2_05.\n\nNot that a browser refresh allows the JSP to compile correctly.",
            "date": "20060426T14:46:19",
            "id": 3
        },
        {
            "author": null,
            "body": "I tend to believe the race condition theory put forth by Matthias.  If one of\nyou wants to submit a patch for fix it, that'd be awesome.  Thanks.",
            "date": "20060615T19:25:26",
            "id": 4
        },
        {
            "author": null,
            "body": "I have also found this to occur in Tomcat 5.5.17 on both Windows XP and Windows\n2003 Server. This causes some concern for my boss, and I'm not sure what to tell\nhim. Please fix this ASAP.",
            "date": "20060618T23:41:51",
            "id": 5
        },
        {
            "author": null,
            "body": "This bug is related to bad version of jstl.jar (for example old jstl and new\nstandard.jar)",
            "date": "20060713T20:02:34",
            "id": 6
        },
        {
            "author": null,
            "body": "This bug took a while to track down. I ended up changing the \"fork\" parameter to\ntrue in the web.xml under Jasper <servlet-name>jsp</servlet-name> for Apache\nTomcat 5.5.17. My best guess is the problem must occur by sharing the JVM. When\nthe JVM is forked into two processes we no longer have the problem of sharing\nfiles (ie, trying to rename a file while it's in use). I hope this helps someone\nelse because I stared at this for quite some time.\n\nThanks,\n  Ron Ledwich",
            "date": "20060713T21:52:04",
            "id": 7
        },
        {
            "author": null,
            "body": "Thanks very much Ron Ledwich!  Your advice worked and saved me a lot of time!\n\nSincerely,\nJava Man\n\n(In reply to comment #8)\n> This bug took a while to track down. I ended up changing the \"fork\" parameter to\n> true in the web.xml under Jasper <servlet-name>jsp</servlet-name> for Apache\n> Tomcat 5.5.17. My best guess is the problem must occur by sharing the JVM. When\n> the JVM is forked into two processes we no longer have the problem of sharing\n> files (ie, trying to rename a file while it's in use). I hope this helps someone\n> else because I stared at this for quite some time.\n> \n> Thanks,\n>   Ron Ledwich\n\n",
            "date": "20060901T23:37:33",
            "id": 8
        },
        {
            "author": null,
            "body": "I have the same problem using tomcat bundled with JBoss 4.0.4. fork=true did not\nsolve the problem for me.",
            "date": "20060905T10:54:57",
            "id": 9
        },
        {
            "author": null,
            "body": "(In reply to comment #4)\n\n> I have seen this problem where the jsp does NOT have any code that throws a\n> FileNotFoundException. I do not believe this is the source of the problem.\n\nIt may not be obvious. Our code would include markup from a different server via\nHTTPUrlConnection. A 404 on the target is translated into a\nFileNotFoundException. 404s, FNF and compilation problems are clearly correlated\nin our case.\n\nI've looked at the synchronization code for JSP compilation before and a small\npatch won't do, I'm afraid.",
            "date": "20060921T07:21:58",
            "id": 10
        },
        {
            "author": null,
            "body": "Updating version to 5.5.17, the latest reported, and severity to normal.  If\nanyone can post attach a simple test WAR file to this Bugzilla page that will\nlet us reproduce the issue, that'd be awesome.",
            "date": "20061226T06:49:18",
            "id": 11
        },
        {
            "author": null,
            "body": "It happens also in 5.5.20\nIn our case it happens with jsp:include though I am not sure it is related.",
            "date": "20070131T08:45:05",
            "id": 12
        },
        {
            "author": null,
            "body": "Hi all - in XP the reason this was happening for us was because the overall file\npath of the file with an extension of .classtmp was > 256 characters long and\nthe rename would not work. We had the problem in tomcat within jboss, so\nrenaming the location of the jboss server to give us a filepath of <256 fixed\nthe problem.\n\n",
            "date": "20070326T17:58:25",
            "id": 13
        },
        {
            "author": null,
            "body": "(In reply to comment #14)\n> Hi all - in XP the reason this was happening for us was because the overall file\n> path of the file with an extension of .classtmp was > 256 characters long and\n> the rename would not work. We had the problem in tomcat within jboss, so\n> renaming the location of the jboss server to give us a filepath of <256 fixed\n> the problem.\n> \n> \nThis was the solution for me running Tomcat 5.5.12 on WinXp with java 1.4.2_09\n\n",
            "date": "20070709T12:45:30",
            "id": 14
        },
        {
            "author": null,
            "body": "I've seen this sporadically over the years. Most recently with 5.5.23 on Win XP.\nIt's not readily reproducable at will, as it seems to depend on the timing of\nthings. My most recent cases were when my computer was responding very\nsluggishly due to having a lot of applications running sucking up lots of system\nresources (and probably a bit of page thrashing). The race condition during\ncompiling sounds convincing to me. FWIW, here's a portion of my stacktrace:\n\njava.io.IOException: tmpFile.renameTo(classFile) failed\n\tat org.apache.jasper.compiler.SmapUtil$SDEInstaller.install(SmapUtil.java:246)\n\tat org.apache.jasper.compiler.SmapUtil.installSmap(SmapUtil.java:165)\n\tat org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:450)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:298)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:277)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:265)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:564)\n\tat\norg.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:204)\n\tat\norg.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:516)\n\tat org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:49)\n\tat\norg.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:567)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1442)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2325)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1186)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2325)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1186)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2325)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1186)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2325)\n\tat org.apache.jasper.compiler.Node$UninterpretedTag.accept(Node.java:1186)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2345)\n\tat org.apache.jasper.compiler.Node$JspBody.accept(Node.java:1896)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat\norg.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:571)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1442)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2225)\n\tat org.apache.jasper.compiler.Node$JspRoot.accept(Node.java:526)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\tat org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2220)\n\tat org.apache.jasper.compiler.Node$Root.accept(Node.java:457)\n\tat org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\tat\norg.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:585)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:179)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:296)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:277)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:265)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:564)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:299)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:315)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:265)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:803)",
            "date": "20070824T14:47:17",
            "id": 15
        },
        {
            "author": null,
            "body": "See http://issues.apache.org/bugzilla/show_bug.cgi?id=2500. \nDoes the fixing of bug 2500 make this problem go away?",
            "date": "20080129T09:08:11",
            "id": 16
        },
        {
            "author": null,
            "body": "Hi,\nWe are getting the same error in our Web app which runs on sun one 7.0 web \nserver.\n\nIn our case, we have a jsp file that has a <%@include file= .. > to another \njsp file.\n\nWe can see the .classtmp file for this jsp in the web server. \nNone of the solutions given in this post have worked for us so far.\n\nHas anyone faced a similar situation with sun one before? Please suggest a way \nforward.",
            "date": "20080219T02:56:08",
            "id": 17
        },
        {
            "author": null,
            "body": "We are running on Windows but had the same scenario: a jsp file that has a\n<%@include file= .. > to another jsp file.\n\nIt seemed that one possibility was the JSPs being compiled in the wrong order.\nSo we created an ANT task that we run when we deploy the web app to the server.\nThe ANT task compiles all the .jsp files, except those included ones.\n\nFor the included files, we renamed them to a different extension .jspinc and\nthese are not precompiled individually, but they do get compiled inline with the\nfiles that include them.\n\n",
            "date": "20080219T08:48:20",
            "id": 18
        },
        {
            "author": null,
            "body": "Hi Brian,\nThanks for replying.\nAs far as I can understand, you are precompiling the jsps before deploying. \nBut we depend on the server to compile them at run time. \nAlso, while looking into this issue, we found that when ever this error \noccurs, a file with an extension .classtmp exists in the work folder. \n\nAnd we have also found that when ever the size of the compiled servlet is \nbelow a particualr limit which is around 32KBs it is fine. But when the size \nexceeds this limit, we get the error.\n\nIs there any such limit to the sizes of the class files? if so, how can we \nremove this constraint? or is there any other way out? Will <%jsp:include> tag \nhelp?\n\n(In reply to comment #19)\n> We are running on Windows but had the same scenario: a jsp file that has a\n> <%@include file= .. > to another jsp file.\n> It seemed that one possibility was the JSPs being compiled in the wrong \norder.\n> So we created an ANT task that we run when we deploy the web app to the \nserver.\n> The ANT task compiles all the .jsp files, except those included ones.\n> For the included files, we renamed them to a different extension .jspinc and\n> these are not precompiled individually, but they do get compiled inline with \nthe\n> files that include them.\n\n",
            "date": "20080219T21:32:54",
            "id": 19
        },
        {
            "author": null,
            "body": "Using the test case provided by Matthias Ernst in comment#2 I can reproduce this on 5.5.23 in about 5 seconds using JMeter configured with 20 threads.\n\nWith the latest 5.5.x code I can't reproduce this even if I hammer the test JSP with with 250 threads for several minutes.\n\nAs Jonathan Leech suggests in comment#17 it looks very much like the fix for bug2500 also fixed this issue. That fix is in 5.5.25 onwards.",
            "date": "20090702T11:57:03",
            "id": 20
        }
    ],
    "component": "Jasper",
    "description": "[http-8080-Processor24 ERROR 26902165 DispatcherServlet.serviceWrapper()] -\nCould not complete request\norg.apache.jasper.JasperException: Unable to compile class for JSP\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:565)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n        at\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)\n        at\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)\n        at\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n        at\norg.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:97)\n        at\norg.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)\n        at\norg.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:928)\n        at\norg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:705)\n        at\norg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:625)\n        at\norg.springframework.web.servlet.FrameworkServlet.serviceWrapper(FrameworkServlet.java:386)\n        at\norg.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:346)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\n[http-8080-Processor24 ERROR 26902165 [wirelessapp].invoke()] -\nServlet.service() for servlet wirelessapp threw exception\njava.io.IOException: tmpFile.renameTo(classFile) failed\n        at\norg.apache.jasper.compiler.SmapUtil$SDEInstaller.install(SmapUtil.java:245)\n        at org.apache.jasper.compiler.SmapUtil.installSmap(SmapUtil.java:164)\n        at\norg.apache.jasper.compiler.AntCompiler.generateClass(AntCompiler.java:267)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:288)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:267)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:255)\n        at\norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:556)\n        at\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)\n        at\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)\n        at\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)\n        at\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)\n        at\norg.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:97)\n        at\norg.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)\n        at\norg.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:928)\n        at\norg.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:705)\n        at\norg.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:625)\n        at\norg.springframework.web.servlet.FrameworkServlet.serviceWrapper(FrameworkServlet.java:386)\n        at\norg.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:346)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n        at\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "38713",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "java.io.IOException: tmpFile.renameTo(classFile) failed when compiling new JSP (upon redeploy)",
    "systemSpecification": true,
    "version": "5.5.23"
}