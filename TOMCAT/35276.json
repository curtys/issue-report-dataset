{
    "comments": [
        {
            "author": null,
            "body": "Part of the observed exception stacktrace:\n--------------------\njava.lang.StackOverflowError\n\tjava.util.jar.JarFile.getEntry(JarFile.java:197)\n\tjava.util.jar.JarFile.getJarEntry(JarFile.java:180)\n\tsun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:674)\n\tsun.misc.URLClassPath$JarLoader.findResource(URLClassPath.java:663)\n\tsun.misc.URLClassPath.findResource(URLClassPath.java:142)\n\tjava.net.URLClassLoader$2.run(URLClassLoader.java:362)\n\tjava.security.AccessController.doPrivileged(Native Method)\n\tjava.net.URLClassLoader.findResource(URLClassLoader.java:359)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:977)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:972)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:972)\n\tjava.lang.ClassLoader.getResource(ClassLoader.java:972)\n\tjava.lang.ClassLoader.getResourceAsStream(ClassLoader.java:1159)\n\torg.apache.catalina.loader.WebappClassLoader.getResourceAsStream(WebappClassLoader.java:1153)\n\tjavax.xml.parsers.SecuritySupport$4.run(SecuritySupport.java:72)\n\tjava.security.AccessController.doPrivileged(Native Method)\n\tjavax.xml.parsers.SecuritySupport.getResourceAsStream(SecuritySupport.java:65)\n\tjavax.xml.parsers.FactoryFinder.findJarServiceProvider(FactoryFinder.java:213)\n\tjavax.xml.parsers.FactoryFinder.find(FactoryFinder.java:185)\n\tjavax.xml.parsers.DocumentBuilderFactory.newInstance(DocumentBuilderFactory.java:98)\n\torg.apache.jasper.xmlparser.ParserUtils.parseXMLDocument(ParserUtils.java:88)\n\torg.apache.jasper.xmlparser.ParserUtils.parseXMLDocument(ParserUtils.java:132)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.parseTLD(TagLibraryInfoImpl.java:217)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:162)\n\torg.apache.jasper.compiler.JspDocumentParser.getTaglibInfo(JspDocumentParser.java:1240)\n\torg.apache.jasper.compiler.JspDocumentParser.startPrefixMapping(JspDocumentParser.java:762)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startNamespaceMapping(AbstractSAXParser.java:2063)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:499)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(XMLNSDocumentScannerImpl.java:779)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1794)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tcom.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)\n\tjavax.xml.parsers.SAXParser.parse(SAXParser.java:375)\n\torg.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:176)\n\torg.apache.jasper.compiler.ParserController.doParse(ParserController.java:196)\n\torg.apache.jasper.compiler.ParserController.parseTagFileDirectives(ParserController.java:133)\n\torg.apache.jasper.compiler.TagFileProcessor.parseTagFileDirectives(TagFileProcessor.java:442)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.createTagFileInfo(TagLibraryInfoImpl.java:495)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.parseTLD(TagLibraryInfoImpl.java:250)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:162)\n\torg.apache.jasper.compiler.JspDocumentParser.getTaglibInfo(JspDocumentParser.java:1240)\n\torg.apache.jasper.compiler.JspDocumentParser.startPrefixMapping(JspDocumentParser.java:762)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startNamespaceMapping(AbstractSAXParser.java:2063)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:499)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(XMLNSDocumentScannerImpl.java:779)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1794)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tcom.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)\n\tjavax.xml.parsers.SAXParser.parse(SAXParser.java:375)\n\torg.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:176)\n\torg.apache.jasper.compiler.ParserController.doParse(ParserController.java:196)\n\torg.apache.jasper.compiler.ParserController.parseTagFileDirectives(ParserController.java:133)\n\torg.apache.jasper.compiler.TagFileProcessor.parseTagFileDirectives(TagFileProcessor.java:442)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.createTagFileInfo(TagLibraryInfoImpl.java:495)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.parseTLD(TagLibraryInfoImpl.java:250)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:162)\n\torg.apache.jasper.compiler.JspDocumentParser.getTaglibInfo(JspDocumentParser.java:1240)\n\torg.apache.jasper.compiler.JspDocumentParser.startPrefixMapping(JspDocumentParser.java:762)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startNamespaceMapping(AbstractSAXParser.java:2063)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:499)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(XMLNSDocumentScannerImpl.java:779)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1794)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tcom.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)\n\tjavax.xml.parsers.SAXParser.parse(SAXParser.java:375)\n\torg.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:176)\n\torg.apache.jasper.compiler.ParserController.doParse(ParserController.java:196)\n\torg.apache.jasper.compiler.ParserController.parseTagFileDirectives(ParserController.java:133)\n\torg.apache.jasper.compiler.TagFileProcessor.parseTagFileDirectives(TagFileProcessor.java:442)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.createTagFileInfo(TagLibraryInfoImpl.java:495)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.parseTLD(TagLibraryInfoImpl.java:250)\n\torg.apache.jasper.compiler.TagLibraryInfoImpl.<init>(TagLibraryInfoImpl.java:162)\n\torg.apache.jasper.compiler.JspDocumentParser.getTaglibInfo(JspDocumentParser.java:1240)\n\torg.apache.jasper.compiler.JspDocumentParser.startPrefixMapping(JspDocumentParser.java:762)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startNamespaceMapping(AbstractSAXParser.java:2063)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:499)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:330)\n\tcom.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(XMLNSDocumentScannerImpl.java:779)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1794)\n\tcom.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)\n\tcom.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)\n\tcom.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)\n\tcom.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)\n\tjavax.xml.parsers.SAXParser.parse(SAXParser.java:375)\n...\n...\n--------------------\n",
            "date": "20050608T23:02:15",
            "id": 0
        },
        {
            "author": null,
            "body": "It looks like the bug, if any, is in Sun's code, not Tomcat's.  Am I missing\nsomething here that's specific to Tomcat?  Have you tried reproducing this on\nother servers?",
            "date": "20051016T07:22:05",
            "id": 1
        },
        {
            "author": null,
            "body": "Why does it look like a bug in Suns code?\nThe only Sun code I see is the repackaged Xerces.\n\nIsn't Jasper part of Tomcat?\nIf so, the bug is located there, in the dependency resolving part.\n\nWhat part of Sun code would you think is in error here?",
            "date": "20051114T22:21:18",
            "id": 2
        },
        {
            "author": null,
            "body": "This not only applies to XML tagfiles calling EL functions from the the TLD, but\nalso to XML tagfiles importing other tags from the same TLD(!).\n\nThis basically breaks usage of XML tagfiles in tomcat, when used in a scenario\nof real-world complexity.",
            "date": "20051114T23:36:05",
            "id": 3
        },
        {
            "author": null,
            "body": "I have a fix for this bug, but unfortunately I am unable to get acess to the\nrepository behind the firewall.  Would appreciate if someone can commit the fix\nfor me.\n\nThe lines may be off.\n\nRCS file: /src/java/org/apache/jasper/compiler/JspDocumentParser.java,v\nretrieving revision 1.4\ndiff -u -r1.4 JspDocumentParser.java\n--- JspDocumentParser.java      21 Oct 2005 00:28:59 -0000      1.4\n+++ JspDocumentParser.java      15 Nov 2005 22:14:37 -0000\n@@ -465,7 +465,7 @@\n  \n     private void processChars() throws SAXException {\n  \n-        if (charBuffer == null) {\n+        if (charBuffer == null || directivesOnly) {\n             return;\n         }\n  \n@@ -767,6 +767,11 @@\n     public void startPrefixMapping(String prefix, String uri)\n         throws SAXException {\n         TagLibraryInfo taglibInfo;\n+\n+        if (directivesOnly && !(JSP_URI.equals(uri))) {\n+            return;\n+        }\n+\n         try {\n             taglibInfo = getTaglibInfo(prefix, uri);\n         } catch (JasperException je) {\n@@ -790,6 +795,14 @@\n      * Receives notification of the end of a Namespace mapping.\n      */\n     public void endPrefixMapping(String prefix) throws SAXException {\n+\n+        if (directivesOnly) {\n+            String uri = pageInfo.getURI(prefix);\n+            if (!JSP_URI.equals(uri)) {\n+                return;\n+            }\n+        }\n+\n         pageInfo.popPrefixMapping(prefix);\n     }",
            "date": "20051115T23:32:31",
            "id": 4
        },
        {
            "author": null,
            "body": "Committed. Diff looks OK. Let me know if I missed something.",
            "date": "20051115T23:46:14",
            "id": 5
        },
        {
            "author": null,
            "body": "Is the fix present in 5.5.13?",
            "date": "20051202T19:58:08",
            "id": 6
        },
        {
            "author": null,
            "body": "Yes",
            "date": "20051203T11:03:08",
            "id": 7
        }
    ],
    "component": "Jasper",
    "description": "A .tld file, bound to namespace \"http://test\" defines an EL function.\nThe same .tld file also defines a tagfile in tagx format.\n\nWhen the tagfile imports it's own namespace, and calls an EL function from it's\nown tag library, a StackOverflowError will occur when the taglib is loaded\n(usually when the first jsp/jspx importing the taglib is parsed.\n\ntld file\n----------\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\nhttp://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd\"\n        version=\"2.0\">\n\n  <tlib-version>1.0</tlib-version>\n  <short-name>test</short-name>\n  <uri>http://test</uri>\n\n  <tag-file>\n    <name>test</name>\n    <path>/WEB-INF/tags/test/test.tagx</path>\n  </tag-file>\n\n  <function>\n    <name>foo</name>\n    <function-class>test.Functions</function-class>\n    <function-signature>boolean foo()</function-signature>\n  </function>\n\n</taglib>\n----------\n\ntagx file\n----------\n<jsp:root xmlns:jsp=\"http://java.sun.com/JSP/Page\"\n          xmlns:test=\"http://test\"\n          version=\"2.0\">\n  ${test:foo()}\n</jsp:root>\n----------\n\njspx file\n----------\n<jsp:root xmlns:jsp=\"http://java.sun.com/JSP/Page\"\n          xmlns=\"http://www.w3.org/1999/xhtml\"\n          xmlns:test=\"http://test\" version=\"2.0\">\n  <html>\n    <body>\n      <test:test/>\n    </body>\n  </html>\n</jsp:root>\n----------",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "35276",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Calling EL fuction in same taglib from tagfile triggers infinite recursion",
    "systemSpecification": true,
    "version": "5.5.9"
}