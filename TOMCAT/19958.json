{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 6364\nExample webapp that demontrates the specified problem.",
            "date": "20030515T16:09:38",
            "id": 0
        },
        {
            "author": null,
            "body": "I completely rewrote input handling based on the model used for output, and it\nis now much faster (and memory efficient). Maybe there are bugs that slipped\nthrough my tests, though (so I'll look into the report).",
            "date": "20030515T17:41:45",
            "id": 1
        },
        {
            "author": null,
            "body": "The workaround I'm using right now is to wrap request.getInputStream() with a\nBufferedInputStream. \n\nI'm also looking at that bug (but I'm not as good as Remy ;-) )\n\n-- Jeanfrancois",
            "date": "20030515T17:56:10",
            "id": 2
        },
        {
            "author": null,
            "body": "I could reproduce the bug. The problem was that the input stream was incorrectly\nusing read() from the input buffer (instead, it should use readByte(); you can\npretty much imagine what was going on from there).\nNote that using readLine with the input stream is very inefficient (what it\nactually does is byte by byte reading). I'm not sure this can be optimized,\nunless I add marking support to byte reading (not sure if it's worth it).\n\nIronically, I tested the readLine() method of the reader a lot more (probably\nbecause it looks totally nasty ;-) ).\n\nThanks for the test case. If all bug reports were like that, maybe there would\nbe zero open bugs in BZ ...",
            "date": "20030515T19:49:02",
            "id": 3
        },
        {
            "author": null,
            "body": "I have tested against the latest nightlies and all is now ok .. thanks.",
            "date": "20030523T21:55:43",
            "id": 4
        }
    ],
    "component": "Connector:HTTP",
    "description": "We are having problems reading the ServletInputStream in\nTomcat 5.0.2. The data read is not what is expected.\n\nThe enclosed webapp example works fine in Tomcat 4.0.6 and\n4.1.24 .. but does NOT using 5.0.2 !!\n\nThe intent is to continue reading the request's input stream\nafter Tomcat has read the headers. For example we are having\nproblems parsing multipart/form-data posts and anything else\nthat contains data after the headers.\n\nThe enclosed zip file contains a webapp that can be used to\nduplicable the failure. I have enclosed log output the example\nwebapp produces from TC4.1 and TC5.0.\n\nI will post the zip file in a moment.\n\n1. unzip the enclised test.zip info c:\\ .. that is what the\n   server.xml files assume anyway\n\n2. test under TC4.1.24\n\n\ta. copy the tc41-server.xml to the tc41 config folder as server.xml\n\tb. start tc4.1.24\n\tc. start IE\n\td. ping http://server:8080/test/test\n\te. a form show be showing\n\tf. use the browse button and select the enclosed test.jpg file\n\tg. click submit\n\th. exit IE\n\ti. stop TC\n\tj. examine the log file (i have enclosed sample output in tc41.log)\n\t\n3. test under TC5.0.2\n\n\ta. copy the tc50-server.xml to the tc50 config folder as server.xml\n\tb. start tc5.0.2\n\tc. start IE\n\td. ping http://server:8080/test/test\n\te. a form show be showing\n\tf. use the browse button and select the enclosed test.jpg file\n\tg. click submit\n\th. exit IE\n\ti. stop TC\n\tj. examine the log file (i have enclosed sample output in tc50.log)\n\n4. compare the two log files .. note that the data read using TC5 is bad.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "19958",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Problems reading ServletInputStream",
    "systemSpecification": true,
    "version": "5.0.2"
}