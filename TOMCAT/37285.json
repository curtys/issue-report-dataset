{
    "comments": [
        {
            "author": null,
            "body": "Just so I understand, you're requesting that we modify the CGIServlet to not\necho query parameters and not count them in the content-length of the response?",
            "date": "20051118T16:56:51",
            "id": 0
        },
        {
            "author": null,
            "body": "In comparing Tomcat CGI implementation with Apache 2, when a POST of content \ntype text/xml occurs for Apache the query parameters are not included as part \nof the content (posted XML document).  Through scripts it is possible to \nidentify and strip off the line containing the query parameters, but this seems \nunnecessary.",
            "date": "20051118T17:55:54",
            "id": 1
        },
        {
            "author": null,
            "body": "*** Bug 38085 has been marked as a duplicate of this bug. ***",
            "date": "20060102T14:54:03",
            "id": 2
        },
        {
            "author": null,
            "body": "Part of the problem is that CGIRunner.run has to deal with the feature of \nHttpServlet that does _not_ discriminate between POST and GET.\n\nI recall reading in passing somewhere, that HttpServlet will parse the POST \ncontents into an internal data structure for enumeration via getParameterNames \nand retrieval via getParameterValue, if and only if the CONTENT_TYPE \nis \"application/x-www-form-urlencoded\".  This act will likely drain the stdin \nand lose whatever original content was there.\n\nAdditionally, the parameters parsed from the GET QUERY_STRING are thrown into \nthe getParameterNames mix.\n\n\nIn run(), when POST is observed, \n1. stdin is read into a buffer named content.  I speculated stdin is pre-\ndrained if content type is urlencoded.\n2. the HttpServlet parameters are written to the stream (S) that will be the \ncgis stdin.\n3. the 'content' buffer is appended to S {buffer is empty if urlencoded and the \nwhole thing if multipart form}\n\nOne problem I see is that content length is not increased when content buffer \nis written.  Maybe it gets measured elsewhere?\n\nMy original foray into this bug is due to that fact I am deploying a cgi app \n(YaBB) that does not use standard parameter separators -- it's legacy nature \nhas parameters being separated by & or ; .\n\nThe cgi app was not getting the parameters it needed because HttpServlet \nencoded or escaped the semis and subsequent equals to their equivalent %{nn} \nforms.  Since I can't recall the code numbers I'll use %.. For example: \nfoo.pl?a=1&b=2;c=3;d=4\ngot HttpServlet parsed into parameters\na=1\nb=2%..c%..3%..d%..4\n\nThings would be much cleaner if (presumably) HttpServlet did not automatically \ndrain stdin, and then CGIServelt could output verbatim the POST contents to the \ncgis stdin and not fool around with looping over parsed out parameters.\n",
            "date": "20060102T19:02:50",
            "id": 3
        },
        {
            "author": null,
            "body": "Created attachment 17327\nReplacement for CGIServlet.java (since I don't know how to create a patch)\n\nThanks to Mark T. and Martin D.",
            "date": "20060104T22:12:02",
            "id": 4
        },
        {
            "author": null,
            "body": "I have been reviewing this bug and some of the various unofficial CGI specs (if\nthere was an RFC, this would be so much easier) including:\nhttp://cgi-spec.golux.com/\nand\nhttp://hoohoo.ncsa.uiuc.edu/cgi/interface.html\n\nThe current parameter handling is somewhat at odds with these specs. I intend to\ncommit a patch over the next few days that will:\n- Only provide parameters on the command line for 'indexed' queries\n- Always provide the query string via the QUERY_STRING environment variable\n- Always provide any POST'd content un-modified via stdin\n- Never call getParameters()\n\nThis should resolve the issues set out in this bug and more closely align the\nbehaviour of the CGI Servlet with other CGI providers.",
            "date": "20060709T23:37:06",
            "id": 5
        },
        {
            "author": null,
            "body": "I have commited a patch that implements the changes outlined in my previous\ncomment. This change fixes this and the related bug.",
            "date": "20060713T02:08:16",
            "id": 6
        }
    ],
    "component": "Servlets:CGI",
    "description": "If an XML document is posted through CGI the CGIServlet is prepending the \ncontent with the query parameters from the URL.  Since the content is expected \nto be well formed XML (as specified by specifying \"Content-Type: text/xml\") the \nprepended query parameters cause the XML parsing to fail.  Assuming a test.sh \nscript has been configured for Tomcat which contains:\n\n  java test <&0 >test.out\n\nwhere test.java simply echoes the input (there is probably an easier way to do \nthis) as follows:\n\n  public class test {\n    public static void main(String[] args) {\n      try {\n        int c = System.in.read();\n        while(c > 0) {\n          System.out.print((char)c);\n          c = System.in.read();\n        }\n      } catch(Exception e) {e.printStackTrace();}\n    }\n  }\n\nThen exercise the Tomcat server by launching a telnet session for the Tomcat \nhost and port, such as \"telnet localhost 8080\", and enter the following:\n\n  POST /test/cgi-bin/test.sh?a=123&b=xyz HTTP/1.1\n  Host: localhost:8080\n  Content-type: text/xml; charset=UTF-8\n  Content-length: 250\n  Connection: close\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n  <Root>\n  <Date>2005-10-27 00:00:00</Date>\n  </Root>\n\nThe resulting test.out file will contain the submitted XML document prepended \nwith a line containing the query parameters (a=123&b=xyz).  Unfortunately the \nXML parser that is recieving this data is expecting XML data and the query \nparameters cause an exception (since they are invalid XML).  Note also that \nsince the query parameters are included their size is also counted against the \nprovided Content-length value which results in truncating the document when the \nContent-length is specified as the size of the XML document.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "37285",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "P2 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "POST of document through CGI",
    "systemSpecification": true,
    "version": "5.5.12"
}