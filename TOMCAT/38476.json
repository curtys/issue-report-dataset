{
    "comments": [
        {
            "author": null,
            "body": "Good suggestion.  I've applied a slightly modified version of the patch which\ndoes what you suggest but also checks for a null input source afterwards as the\ncurrent behavior does, just in case there's a regression possibility I'm not\naware of.  Better safe than sorry ;)  Thanks for contributing this.",
            "date": "20060413T20:42:27",
            "id": 0
        }
    ],
    "component": "Catalina",
    "description": "Missing tlds are not handled properly in TldConfig.tldScanTld(). Instead of\nthrowing an exception for the missing resource, an empty InputStream is created\nand so an exception is generated by the xml parser\n\nthere is a bad catch around line 536:\n\ntry {\n    inputSource = new InputSource(\n                context.getServletContext().getResourceAsStream(resourcePath));\n     if (inputSource == null) {\n                throw new IllegalArgumentException\n                    (sm.getString(\"contextConfig.tldResourcePath\",\n                                  resourcePath));\n     }\n     tldScanStream(inputSource);\n\n====\nas you can see \"if (inputSource == null)\" can't never be executed because of the\nprevious new InputSource(...) line. Should be fixed with:\n\nInputStream stream = context.getServletContext().getResourceAsStream(resourcePath);\n\n  if (stream == null) {\n    throw new IllegalArgumentException\n      (sm.getString(\"contextConfig.tldResourcePath\",\n                    resourcePath));\n  }\n\n            inputSource = new InputSource(stream );\n\n            tldScanStream(inputSource);",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "38476",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 minor",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "org.apache.catalina.startup.TldConfig doesn't handle missing tlds well",
    "systemSpecification": true,
    "version": "5.5.14"
}