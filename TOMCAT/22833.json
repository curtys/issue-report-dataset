{
    "comments": [
        {
            "author": null,
            "body": "The JSR-45 spec says:\n\n\"Each LineInfo has the form: 'InputStartLine # LineFileID , RepeatCount : \nOutputStartLine , OutputLineIncrement' where all but 'InputStartLine : \nOutputStartLine' are optional.... If absent LineFileID defaults to the most \nrecent value (initially zero).\"\n\nIn other words LineFileID is only required when it differs from the LineFileID \nof the previous LineInfo.  To the best of my knowledge Jasper is consistent \nwith that.\n\nYou're absolutely right that Jasper should SMAP JSP declarations, but doesn't.",
            "date": "20030902T03:50:41",
            "id": 0
        },
        {
            "author": null,
            "body": "Declaration are now properly mapped.  Thanks for reporting.",
            "date": "20030919T23:43:49",
            "id": 1
        }
    ],
    "component": "Jasper",
    "description": "In some cases the genereted SMAP seems wrong. If one looks at the JSR-45 and \ncompare it with the example below the SMAP seems wrong.\n\nThe Example is the same as in JSR-45. \n\nFile: Hello.jsp\n\n<HTML>\n<HEAD>\n<TITLE>Hello Example</TITLE>\n</HEAD>\n<BODY>\n<%@ include file=\"greeting.jsp\" %>\n</BODY>\n</HTML> \n\nFile 2: greeting.jsp\n\nHello There!<P>\nGoodbye on <%= new java.util.Date() %>\n\n\nThe output SMAP becomes:\n\nHello_jsp.java\nJSP\n*S JSP\n*F\n+ 0 /Hello.jsp\nHello.jsp\n+ 1 /greeting.jsp\ngreeting.jsp\n*L\n1,2:45   \n3:47,2\n4,2:49\n1#1:51,2\n2:52,2      <= seems wrong.. Should't it be 2#1:52,2\n6#0,3:54    \n*E\n\nIn all examples in JSR-45 they always use the file-id in the line info, \nshouldn't Jasper do the same? Like the following\n1#0,2:45   \n3#0:47,2\n4#0,2:49\n1#1:51,2\n2#1:52,2      \n6#0,3:54\n\n\nIt also looks like SMAP for JSP-declarations does not work. If I add a \n<%!\n\tvoid test() {\n\t\tSystem.out.print(\"Hello there..\");\n\t}\n%>\n\nfirst to Hello.jsp. The first SMAP-line mapping the declaration becomes 2,4:1 \nwhen should be 2,4:9 looking at the generated jsp.\n\n\n\n\nFirst example of generated JSP:\n\npackage org.apache.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\n\npublic final class Hello_jsp extends org.apache.jasper.runtime.HttpJspBase\n    implements org.apache.jasper.runtime.JspSourceDependent {\n\n  private static java.util.Vector _jspx_dependants;\n\n  static {\n    _jspx_dependants = new java.util.Vector(1);\n    _jspx_dependants.add(\"/greeting.jsp\");\n  }\n\n  public java.util.List getDependants() {\n    return _jspx_dependants;\n  }\n\n  public void _jspService(HttpServletRequest request, HttpServletResponse \nresponse)\n        throws java.io.IOException, ServletException {\n\n    JspFactory _jspxFactory = null;\n    PageContext pageContext = null;\n    HttpSession session = null;\n    ServletContext application = null;\n    ServletConfig config = null;\n    JspWriter out = null;\n    Object page = this;\n    JspWriter _jspx_out = null;\n\n\n    try {\n      _jspxFactory = JspFactory.getDefaultFactory();\n      response.setContentType(\"text/html\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n      \t\t\tnull, true, 8192, true);\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      out.write(\"<HTML>\\r\\n\");\n      out.write(\"<HEAD>\\r\\n\");\n      out.write(\"<TITLE>Hello Example\");\n      out.write(\"</TITLE>\\r\\n\");\n      out.write(\"</HEAD>\\r\\n\");\n      out.write(\"<BODY>\\r\\n\");\n      out.write(\"Hello There!\");\n      out.write(\"<P>\\r\\nGoodbye on \");\n      out.write(String.valueOf( new java.util.Date() ));\n      out.write(\"\\r\\n\");\n      out.write(\"</BODY>\\r\\n\");\n      out.write(\"</HTML>  \");\n    } catch (Throwable t) {\n      if (!(t instanceof javax.servlet.jsp.SkipPageException)){\n        out = _jspx_out;\n        if (out != null && out.getBufferSize() != 0)\n          out.clearBuffer();\n        if (pageContext != null) pageContext.handlePageException(t);\n      }\n    } finally {\n      if (_jspxFactory != null) _jspxFactory.releasePageContext(pageContext);\n    }\n  }\n}",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "22833",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Generated SMAP looks wrong",
    "systemSpecification": true,
    "version": "5.0.9"
}