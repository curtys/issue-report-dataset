{
    "comments": [
        {
            "author": null,
            "body": "Added the following new method to XMLCipher:\n\n    /**\n     * Returns an <code>EncryptedData</code> interface. Use this operation if\n     * you want to have full control over the serialization of the element\n     * or element content.\n     *\n     * This does not change the source document in any way.\n     *\n     * @param context the context <code>Document</code>.\n     * @param type a URI identifying type information about the plaintext form\n     *    of the encrypted content (may be <code>null</code>)\n     * @param serializedData the serialized data\n     * @return the <code>EncryptedData</code>\n     * @throws Exception\n     */\n    public EncryptedData encryptData(Document context, String type,\n        InputStream serializedData) throws Exception {\n",
            "date": "20060523T17:37:20",
            "id": 0
        },
        {
            "author": null,
            "body": "Closing old bugs.",
            "date": "20060806T17:35:50",
            "id": 1
        },
        {
            "author": null,
            "body": "The javadoc specifies that the type parameter may be null. If it is null the\nfollowing exceptione will be thrown: \"Cannot initialize URI with empty parameters\"\n\nThat is because in XMLCipher.java at line 1082 there is:\n\n_ed.setType(new URI(type).toString());\n\nwhich will throw a MalformedURIException if type is null.",
            "date": "20070726T08:29:49",
            "id": 2
        },
        {
            "author": null,
            "body": "Yes, this is a bug and I have fixed it. Thanks for reporting this issue.",
            "date": "20070727T06:45:10",
            "id": 3
        }
    ],
    "component": "Catalina",
    "description": "It would be useful to add an overloaded encryptData method that takes\nthe serialized data as a parameter. This is useful for applications that \nserialize element or element content itself.\n\nProposed method:\n\npublic EncryptedData encryptData(\n    Document context, boolean contentMode, byte[] serializedData) \n    throws Exception",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "38668",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "P3 enhancement",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Add XMLCipher.encryptData method that takes serialized data as parameter",
    "systemSpecification": true,
    "version": "5.0.0"
}