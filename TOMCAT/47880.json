{
    "comments": [
        {
            "author": null,
            "body": "*** Bug 47877 has been marked as a duplicate of this bug. ***",
            "date": "20090920T08:58:58",
            "id": 0
        },
        {
            "author": null,
            "body": "The proposed change is contributed public domain if anybody wants it.",
            "date": "20090920T09:02:30",
            "id": 1
        },
        {
            "author": null,
            "body": "Is it possible for the +x bit to be set, or retained, on these files during the build process for the zip?",
            "date": "20090921T02:09:55",
            "id": 2
        },
        {
            "author": null,
            "body": "Nope. That's why we have .tar.gz distros with unix line endings and appropriate execute bit settings and .zip distros with Windows line endings.",
            "date": "20090921T02:19:29",
            "id": 3
        },
        {
            "author": null,
            "body": "This has been fixed in trunk for 7.0.13 and has been proposed for 6.0.x and 5.5.x.",
            "date": "20110410T07:28:57",
            "id": 4
        },
        {
            "author": null,
            "body": "Fixed in 6.0.x and will be included in 6.0.33 onwards.",
            "date": "20110603T08:27:07",
            "id": 5
        },
        {
            "author": null,
            "body": "This has been fixed in 5.5.x and will be included in 5.5.34 onwards.",
            "date": "20110818T16:55:55",
            "id": 6
        }
    ],
    "component": "Native:Packaging",
    "description": "After the user downloads and extracts the .zip archive containing Tomcat executables, the \"executable\" flag on the .sh files is not set by default. This results unexpected and very cryptic error messages about the missing files (just because catalina.sh is not executable) and later about the incorrect pathes (just because setclasspath.sh is not executable). This is observed when the tries to executes startup.sh with sh command.\n\nThe problem is not obvious because the files with these improper permissions are not executed by the user from the command line. Instead, they are executed calling them from another scripts. The failure to execute setclasspath.sh is especially confusing as causes only warnings bout some problems with pathes.\n\nI suggest the following change in startup.sh that would make the permission problem obvious:\n\n# Check that target executable exists\nif $os400; then\n  # -x will Only work on the os400 if the files are: \n  # 1. owned by the user\n  # 2. owned by the PRIMARY group of the user\n  # this will not work if the user belongs in secondary groups\n  eval\nelse\n  if [ ! -e \"$PRGDIR\"/\"$EXECUTABLE\" ]; then\n    echo \"Cannot find $PRGDIR/$EXECUTABLE\"\n    echo \"This file is needed to run this program\"\n    exit 1\n  fi\n  if [ ! -x \"$PRGDIR\"/\"$EXECUTABLE\" ]; then\n    echo \"The $PRGDIR/$EXECUTABLE is not executable\"\n    echo \".sh files must have the executable flag set\"\n    exit 1\n  fi\nfi \n\nSteps to reproduce:\n\n1. Use the recent Tomcat distribution, apache-tomcat-6.0.20.zip. Do not use tar.gz as it may preserve the correct permissions.\n2. Extract into any empty directory and try to run startup.sh. You will get the message about catalina.sh missing that is not correct. After you set +x for catalina.sh you will get more messages that are never about permissions, leading analysis in confusing directions.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "47880",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "RFE",
    "priority": "P2 enhancement",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Lack of +x permissions on script files results cryptic and confusing error messages",
    "systemSpecification": true,
    "version": "5.5.33"
}