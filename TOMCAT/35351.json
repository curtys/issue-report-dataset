{
    "comments": [
        {
            "author": null,
            "body": "Tomcat v5.0 also produces similar errors to comment 1, eg:\n\n1) Using \"nested.TestComponent$InnerViewBean\" results in:\n  An error occurred at line: 8 in the jsp file: /inner_viewbean1.jsp\n  Generated servlet error:\n \nC:\\apache\\tomcat_50\\work\\Catalina\\localhost\\NestedViewBean\\org\\apache\\jsp\\inner_005fviewbean1_jsp.java:56:\ncannot resolve symbol\n  symbol  : class TestComponent$InnerViewBean \n  location: package nested\n  perchance you meant 'TestComponent.InnerViewBean'\n            viewBean = new nested.TestComponent$InnerViewBean();\n                                 ^\n  3 errors\n                \norg.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:84)\n                \norg.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:332)\n                \norg.apache.jasper.compiler.Compiler.generateClass(Compiler.java:412)\n                 org.apache.jasper.compiler.Compiler.compile(Compiler.java:472)\n                 org.apache.jasper.compiler.Compiler.compile(Compiler.java:451)\n                 org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n                \norg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:511)\n                \norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:295)\n                \norg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)\n                 org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)\n                 javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n2) Using \"nested.TestComponent.InnerViewBean\" (as for comment 1)",
            "date": "20050614T06:43:40",
            "id": 0
        },
        {
            "author": null,
            "body": "Created attachment 15397\ntestcase (exploded web app)\n\nTo use - unzip and place in WebApps/NestedViewBean/...\nInvoke using: http://localhost:8080/NestedViewBean/index.jsp or similar\n\nclick the following links:\n1) Inner view bean test ($)\n2) Inner view bean test (.) \n\nreproduces errors defined above.",
            "date": "20050614T07:11:03",
            "id": 1
        },
        {
            "author": null,
            "body": "Request support for both reference styles described in comment 1 as there is\nsome ambiguity as to the correct notation in this case.\n",
            "date": "20050614T07:33:05",
            "id": 2
        },
        {
            "author": null,
            "body": "The class used must be a JavaBean. Way 2) is the proper one. Please use\ntomcat-user for these kind of issues.",
            "date": "20050614T09:53:31",
            "id": 3
        },
        {
            "author": null,
            "body": "The same problem occurs when passing an instance of an inner class\nto a tag file as an <%@attribute>.\n\nE.g. you have nested tag files:\n\nFile list.tag:\n\n<%@ taglib prefix=\"list\" tagdir=\"/WEB-INF/tags/list\" %>\n<%@ attribute name=\"list\" type=\"java.util.Map\" %>\n<table border=\"1\">\n  <c:forEach items=\"${list}\" var=\"entry\" >\n    <list:row entry=\"${entry}\"/>\n  </c:forEach>\n</table>\n\nFile row.tag:\n\n<%@ attribute name=\"entry\" type=\"java.util.Map$Entry\"\n              required=\"true\" %>\n<tr>\n  <td>${entry.key}</td>\n  <td>${entry.value}</td>\n</tr>\n\nYou get the same error as described above; replacing the\n\"$\" in row.tag by \".\" has no effect either.",
            "date": "20050905T16:34:33",
            "id": 4
        },
        {
            "author": null,
            "body": "There are 3 attributes (type, class, and beanName) in useBean that can\npotentially specify an inner class.  The spec isn't clear if binary names\n(containing $) or canonical names (uses .) should be used with these attributes.\n My guess is the \"type\" attribute is intended for specifying the type of the\nvariable, and should use canonical names.  The attributes \"class\" and \"beanName\"\nare ientended for classLoaders etc, so they should use binary names.  The only\nproblem is when the \"type\" attribute is not specified, in which case the spec\nsays it should use the value for the \"class\" attribute.  Therefore there should\nbe a translation from the binary name to the canonical name here.\n\nI'll see if I can find a way to fix this, in the mean time, use the following\nworkaround:\n\nTo specify an inner class in <jsp:useBean>, use both the \"type\" and \"beanName\"\nattributes.  Use canonical names for the \"type\" attribute, and binary names for\nthe \"beanName\" attribute.",
            "date": "20051209T03:42:25",
            "id": 5
        },
        {
            "author": null,
            "body": "I have the fix from glassfish, so the lines can be off.\n\nRCS file:\n/cvs/glassfish/appserv-webtier/src/java/org/apache/jasper/compiler/Generator.java,v\nretrieving revision 1.12\nretrieving revision 1.13\ndiff -u -r1.12 -r1.13\n--- Generator.java      8 Dec 2005 01:28:41 -0000       1.12\n+++ Generator.java      13 Dec 2005 19:35:08 -0000      1.13\n@@ -1173,8 +1173,48 @@\n             String type = n.getTextAttribute(\"type\");\n             Node.JspAttribute beanName = n.getBeanName();\n  \n-            if (type == null) // if unspecified, use class as type of bean\n-                type = klass;\n+            // If \"class\" is specified, try an instantiation at compile time\n+            boolean generateNew = false;\n+            String canonicalName = null;    // Canonical name for klass\n+            if (klass != null) {\n+                try {\n+                    Class bean = ctxt.getClassLoader().loadClass(klass);\n+                    if (klass.indexOf('$') >= 0)  {\n+                        // Obtain the canonical type name\n+                        canonicalName = JspUtil.getCanonicalName(bean);\n+                    } else {\n+                        canonicalName = klass;\n+                    }\n+                    int modifiers = bean.getModifiers();\n+                    if (!Modifier.isPublic(modifiers) ||\n+                        Modifier.isInterface(modifiers) ||\n+                        Modifier.isAbstract(modifiers)) {\n+                        throw new Exception(\"Invalid bean class modifier\");\n+                    }\n+                    // Check that there is a 0 arg constructor\n+                    bean.getConstructor(new Class[] {});\n+                    // At compile time, we have determined that the bean class\n+                    // exists, with a public zero constructor, new() can be\n+                    // used for bean instantiation.\n+                    generateNew = true;\n+                } catch (Exception e) {\n+                    // Cannot instantiate the specified class, either a\n+                    // compilation error or a runtime error will be raised,\n+                    // depending on a compiler flag.\n+                    if\n(ctxt.getOptions().getErrorOnUseBeanInvalidClassAttribute()) {\n+                        err.jspError(n, \"jsp.error.invalid.bean\", klass);\n+                    }\n+                    if (canonicalName == null) {\n+                        // Doing our best here to get a canonical name\n+                        // from the binary name, should work 99.99% of time.\n+                        canonicalName = klass.replace('$','.');\n+                    }\n+                }\n+                if (type == null) {\n+                    // if type is unspecified, use \"class\" as type of bean\n+                    type = canonicalName;\n+                }\n+            }\n  \n             String scopename = \"PageContext.PAGE_SCOPE\"; // Default to page\n             String lock = \"_jspx_page_context\";\n@@ -1244,43 +1284,23 @@\n                 /*\n                  * Instantiate the bean if it is not in the specified scope.\n                  */\n-                boolean generateNew = false;\n-                if (beanName == null) {\n-                    try {\n-                        Class bean = ctxt.getClassLoader().loadClass(klass);\n-                        int modifiers = bean.getModifiers();\n-                        if (!Modifier.isPublic(modifiers) ||\n-                            Modifier.isInterface(modifiers) ||\n-                            Modifier.isAbstract(modifiers)) {\n-                            throw new Exception(\"Invalid bean class\nmodifier\");-                        }\n-                        // Check that there is a 0 arg constructor\n-                        bean.getConstructor(new Class[] {});\n-                        generateNew = true;\n-                    } catch (Exception e) {\n-                        // Cannot instantiate the specified class\n-                        if\n(ctxt.getOptions().getErrorOnUseBeanInvalidClassAttribute()) {\n-                            err.jspError(n, \"jsp.error.invalid.bean\", klass);\n-                        }\n-                    }\n-                }\n                 if (!generateNew) {\n-                    String className;\n+                    String binaryName;\n                     if (beanName != null) {\n                         if (beanName.isNamedAttribute()) {\n                             // If the value for beanName was specified via\n                             // jsp:attribute, first generate code to evaluate\n                             // that body.\n-                            className =\n+                            binaryName =\n                                 generateNamedAttributeValue(\n                                     beanName.getNamedAttributeNode());\n                         } else {\n-                            className =\n+                            binaryName =\n                                 attributeValue(beanName, false, String.class);\n                         }\n                     } else {\n                         // Implies klass is not null\n-                        className = quote(klass);\n+                        binaryName = quote(klass);\n                     }\n                     out.printil(\"try {\");\n                     out.pushIndent();\n@@ -1289,7 +1309,7 @@\n                     out.print(type);\n                     out.print(\") java.beans.Beans.instantiate(\");\n                     out.print(\"this.getClass().getClassLoader(), \");\n-                    out.print(className);\n+                    out.print(binaryName);\n                     out.println(\");\");\n                     out.popIndent();\n                     /*\n@@ -1305,7 +1325,7 @@\n                     out.pushIndent();\n                     out.printin(\"throw new ServletException(\");\n                     out.print(\"\\\"Cannot create bean of class \\\" + \");\n-                    out.print(className);\n+                    out.print(binaryName);\n                     out.println(\", exc);\");\n                     out.popIndent();\n                     out.printil(\"}\"); // close of try\n@@ -1314,7 +1334,7 @@\n                     // Generate codes to instantiate the bean class\n                     out.printin(name);\n                     out.print(\" = new \");\n-                    out.print(klass);\n+                    out.print(canonicalName);\n                     out.println(\"();\");\n                 }\n                 /*\n",
            "date": "20051213T20:50:22",
            "id": 6
        },
        {
            "author": null,
            "body": "(In reply to comment #7)\n> I have the fix from glassfish, so the lines can be off.\n\nJust to be clear, is this patch is still covered by your CCLA?  In English, is \nthis a grant from glassfish to that ASF?\n",
            "date": "20051214T08:16:10",
            "id": 7
        },
        {
            "author": null,
            "body": "(In reply to comment #8)\n> (In reply to comment #7)\n> > I have the fix from glassfish, so the lines can be off.\n> \n> Just to be clear, is this patch is still covered by your CCLA?  In English, is \n> this a grant from glassfish to that ASF?\n> \n\nThis is just a patch, and there is no license or copyright, so YES.",
            "date": "20051215T00:57:04",
            "id": 8
        },
        {
            "author": null,
            "body": "Kin-Man's patch has been applied to SVN trunk, and will appear in 5.5.15.\n\n(and, yes, the line numbers are off :).",
            "date": "20051215T05:17:00",
            "id": 9
        },
        {
            "author": null,
            "body": "*** Bug 38232 has been marked as a duplicate of this bug. ***",
            "date": "20060112T05:08:00",
            "id": 10
        },
        {
            "author": null,
            "body": "Regression in 6.0.18.\n\n<jsp:useBean id=\"event\" scope=\"request\" type=\"za.co.cocosoft.etude.server.model.EventData.NullEvent\">\n\nresult in:\n\n/home/mike/src/etude/build/generated/src/org/apache/jsp/event/detail_jsp.java:2258: package za.co.cocosoft.etude.server.model.EventData does not exist\n        za.co.cocosoft.etude.server.model.EventData.NullEvent event = null;\n/home/mike/src/etude/build/generated/src/org/apache/jsp/event/detail_jsp.java:2260: package za.co.cocosoft.etude.server.model.EventData does not exist\n          event = (za.co.cocosoft.etude.server.model.EventData.NullEvent) _jspx_page_context.getAttribute(\"event\", PageContext.REQUEST_SCOPE);",
            "date": "20090513T03:41:05",
            "id": 11
        },
        {
            "author": null,
            "body": "Forgive me! The bug was mine.... sorry for the time-waste.",
            "date": "20090513T03:45:44",
            "id": 12
        }
    ],
    "component": "Jasper",
    "description": "Jasper does not support nested class references in <jsp:useBean> tags. \n\nFor example, neither of the following nested class references are permitted:\n1) <jsp:useBean id=\"viewBean\" class=\"nested.TestComponent$InnerViewBean\" />\n2) <jsp:useBean id=\"viewBean\" class=\"nested.TestComponent.InnerViewBean\" />\n\nIn detail:\n1) Using \"nested.TestComponent$InnerViewBean\" results in:\n  An error occurred at line: 8 in the jsp file: /inner_viewbean1.jsp\n  Generated servlet error:\n  The nested type nested.TestComponent$InnerViewBean cannot be referenced using\nits binary name\n \norg.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:84)\n    org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:328)\n    org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:397)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:288)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:267)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:255)\n    org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:556)\n    org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n    org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n    org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n    javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n2) Using \"nested.TestComponent.InnerViewBean\" results in:\n  org.apache.jasper.JasperException: /inner_viewbean2.jsp(8,0) \n  The value for the useBean class attribute nested.TestComponent.InnerViewBean\nis invalid.\n   \norg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:39)\n    org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:405)\n    org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:146)\n    org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1223)\n    org.apache.jasper.compiler.Node$UseBean.accept(Node.java:1116)\n    org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n    org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2213)\n    org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2219)\n    org.apache.jasper.compiler.Node$Root.accept(Node.java:456)\n    org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n    org.apache.jasper.compiler.Generator.generate(Generator.java:3270)\n    org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:189)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:286)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:267)\n    org.apache.jasper.compiler.Compiler.compile(Compiler.java:255)\n    org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:556)\n    org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:293)\n    org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)\n    org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n    javax.servlet.http.HttpServlet.service(HttpServlet.java:802)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "35351",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "error <jsp:useBean> tags",
    "systemSpecification": false,
    "version": "5.5.12"
}