{
    "comments": [
        {
            "author": null,
            "body": "This regression is still present in 5.5.15",
            "date": "20060124T00:03:03",
            "id": 0
        },
        {
            "author": null,
            "body": "Regression is still present in 5.17",
            "date": "20060803T15:29:21",
            "id": 1
        },
        {
            "author": null,
            "body": "This regression is still present in 5.5.20",
            "date": "20061010T14:08:32",
            "id": 2
        },
        {
            "author": null,
            "body": "This works for me. Please confirm that your environment is configured correctly\nand if you still see the problem please attach an appropriate test case such as\nthe zipped source tree using the smallest possible set of files to reproduce the\nproblem.",
            "date": "20061023T15:42:36",
            "id": 3
        },
        {
            "author": null,
            "body": "I've found that adding  caching=\"false\"  to the jasper2 task will work around\nthis problem.\n\nUpdated jasper2 call:\n<jasper2\n  validateXml=\"false\"\n  caching=\"false\"\n  uriroot=\"${basedir}/${webapp.dir}\"\n  webXmlFragment=\"${basedir}/${build.dir}/WEB-INF/generated_web.xml\"\n  outputDir=\"${basedir}/${build.src.dir}\" />\n\n\nShould this work without the caching=\"false\"  ?\nI'll post an example project if that's still needed.\n\n\nThanks to Gr\u00e9goire Rolland for providing an example of a jasper2 call that works\nwith tomcat 5.5.20 jspc\n\nHis example posted here for posterity:\n<jasper2\n    trimspaces=\"true\" \n    caching=\"false\" \n    compilersourcevm=\"1.5\" \n    compilertargetvm=\"1.5\" \n    poolingenabled=\"false\"  \n    classdebuginfo=\"false\" \n    genstringaschararray=\"true\" \n    validateXml=\"false\" \n    addWebXmlMappings=\"true\" \n    smapdumped=\"false\"\n    smapsuppressed=\"true\"\n    verbose=\"99\"\n    webxml=\"${root.dir}/${ant.project.name}/${web}/WEB-INF/web.xml\"\n    uriroot=\"${root.dir}/${ant.project.name}/${web}\"\n   \nwebXmlFragment=\"${root.dir}/${ant.project.name}/${web}/WEB-INF/generated_web.xml\"\n    outputDir=\"${root.dir}/${ant.project.name}/${web}/WEB-INF/src\" />",
            "date": "20061211T15:28:40",
            "id": 4
        },
        {
            "author": null,
            "body": "Yes, please provide a test case. It should be the simplest possible project that\nexhibits this issue.",
            "date": "20061211T17:22:17",
            "id": 5
        },
        {
            "author": null,
            "body": "I have just tested this again and I still can't reproduce the issue you are reporting. If you still see this issue with 5.5.27 then, as previously requested, please provide the simplest possible test case that demonstrates the issue.",
            "date": "20090101T13:00:31",
            "id": 6
        },
        {
            "author": null,
            "body": "For reference:\nThe following mail thread has stacktrace for TC 6.0.18 reproducing the issue:\nhttp://marc.info/?t=122585333800002&r=1&w=2",
            "date": "20090103T07:40:35",
            "id": 7
        },
        {
            "author": null,
            "body": "Created attachment 23074\npatch that should fix the issue, against tc6.0.x",
            "date": "20090103T07:47:21",
            "id": 8
        },
        {
            "author": null,
            "body": "Though I am yet failing to reproduce the issue in current tc6.0.x, I have elaborated a theory why it occurs.\n\n1. The exception is caused by creating JasperLoader instance with\na null baseUrl and trying to use it to load a class, in JspCompilationContext#getJspLoader().\n\nUsually that does not occur, because JspCompilationContext#createOutputDir() is called first.\n\n2. During compilation the #createOutputDir() call does occur: a) in Compiler#isOutDated() when it checks for the full name of the java source / class file, b) later, when Compiler#generateJava() explicitly calls JspCompilationContext#checkOutputDir().\n\nThus, the compilation is not the route that leads to the preliminary creation of JasperLoader instance.\n\n3. I think that the issue is caused when JspServletWrapper#getDependants() gets called earlier than the compilation of the class occurs.\n\nThe events will occur as following:\n1) JspServletWrapper#getDependants() calls JspCompilationContext#load() that results in #getJspLoader() call and creation of JasperLoader instance. \n2) The JasperLoader instance is unusable and this call results in an exception.\nNevertheless the created JasperLoader instance is remembered.\n3) JspServletWrapper#getDependants() catches the exception, but silently swallows it.\n4) The program continues running but breaks later.\n\nThus, the question is what can cause the early #getDependants() call on a fresh compilation context. I am not able to reproduce it. Maybe there should be some interrelated tag/jsp files (OP mentioned: \"Seems to be related to the use of a custom taglib in a JSP that is included by another JSP\", but that is not sufficient). Also, the known workaround for the issue (disabling caching in JspC) should somehow fit into the picture.\n\nNevertheless, I am proposing a patch to TC 6.0, that I attached above. A side effect is that it mkdirs the output directory, but I think that must be OK.",
            "date": "20090103T08:31:39",
            "id": 9
        },
        {
            "author": null,
            "body": "I am -1 for any patch that guesses at a solution as there is no way to confirm the validity of the patch or that it fixes the root cause rather than hides symptoms.\n\nAs previously requested, a test case is required.",
            "date": "20090103T14:41:14",
            "id": 10
        },
        {
            "author": null,
            "body": "Created attachment 23078\nwebapp that reproduces the issue when compiled by JspC\n\nTo reproduce the issue:\n\nThe following recipe is for Eclipse IDE project for TC 6.0.\n\n1. In your project folder create the following subdirectory and two subdirectories in it:\n bug37084\n   /output\n   /source\n\n2. Unzip the war file into bug37084/source\n\n3. Create the following Run configuration:\ntype: Java Application\nMain class: org.apache.jasper.JspC\nArguments / Program arguments:  -uriroot bug37084\\source -d bug37084\\output\n\n4. Run the application\n\n5. A stacktrace is observed:\n\n04.01.2009 10:06:30 org.apache.jasper.JspC processFile\nSEVERE: ERROR-the file '\\index.jsp' generated the following general exception:\njava.lang.NullPointerException\n\tat sun.misc.URLClassPath$3.run(URLClassPath.java:323)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.misc.URLClassPath.getLoader(URLClassPath.java:320)\n\tat sun.misc.URLClassPath.getLoader(URLClassPath.java:297)\n\tat sun.misc.URLClassPath.getResource(URLClassPath.java:167)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:192)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n\tat org.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:134)\n...\n\n6. Delete the generated files from bug37084/output\n\n----------------------------------\n\nThe patch that I proposed above does not help. It just results in java.lang.ClassNotFoundException being thrown instead of the NPE.",
            "date": "20090103T23:11:32",
            "id": 11
        },
        {
            "author": null,
            "body": "From debugging the reproducer:\n\nIt appears that there are several (ca. 3) issues that pile up to produce this effect.\n\nIgnore my guesses about #getDependants() from comment 10. It is not related. The proposed patch, though, may be useful.\n\n\n1. First issue, the trigger:\n\nWhen JspC is run with caching enabled (the default), the tag library information, that is instances of TagLibraryInfoImpl class, is cached.\n\nWhen TagLibraryInfoImpl instance is created, its constructor passes two pieces of information to the JspCompilationContext that was used to create it.\n\nThat information is not passed if the instance is reused from the cache.\n\nFirst is, ctxt.createCompiler().getPageInfo() call followed by pageInfo.addDependant(location[0]).  -> See bug 46470 that it causes.\n\nSecond is ctxt.setTagFileJarUrl(path, jarFileUrl); call. It triggers this issue.\n\nWhen tagA.tagx is compiled (it is that tag inside a jar file) from inside of tagB.tagx (it is the tag in WEB-INF/tags) in the reproducer, in TagFileProcessor#loadTagFile() the following call: ctxt.getTagFileJarUrl(tagFilePath)\nfor the tag file returns null.\n\nThus JspServletWrapper instance is created there with a null tagFileJarUrl instead of the URL of the jar file.\n\n(The tagFilePath argument in the ctxt.getTagFileJarUrl(tagFilePath) call is just the path of the tag file. It does not include the name of the library -> name collisions are expected -> bug 46471. It may have other cause, but the concept is similar).\n\nThe TagFileProcessor#loadTagFile() method then proceeds and calls JspServletWrapper.loadTagFile().\n\n2. JspServletWrapper.loadTagFile() \n\nIt calls ctxt.compile(); and ctxt.load();\n\nThe compile() method calls compiler.isOutDated() and skips compilation if that method returns false.\n\nIn this case, because of invalid (null) tagFileJarUrl, the isOutDated() call cannot find the source file and returns \"false\", because the source is not found. The JspCompilationContext.compile() method silently returns without compiling anything.\nIs that by design? I think that it is.\n\n\nThus, compilation is skipped and we proceed to ctxt.load(). That method calls getJspLoader(), but because compilation never occurred, the baseUrl field is not initialized (null), and the method creates a misconfigured JasperLoader instance.\n\nAn attempt to load a class from that JasperLoader instance results in the NullPointerException that is observed.\n\nApplying the patch, that I proposed earlier (attachment 23074) will result in ClassNotFoundException been thrown instead, though there might be alternative implementations that will achieve the same result.\n\n\nProbably that NPE will occur also in some other situations, when isOutDated() returns false due to missing source, but I have not yet tried to reproduce that.",
            "date": "20090104T16:56:09",
            "id": 12
        },
        {
            "author": null,
            "body": "Created attachment 23807\nProposed patch - port of bug 46471 fix\n\nIt appears that porting the patch for bug 46471 is sufficient to fix this issue. I have attached the patch that ports the fix and will propose it for 5.5.x. I also ran the JSP 2.0 TCK with this in place and the tests passed.",
            "date": "20090612T15:23:55",
            "id": 13
        },
        {
            "author": null,
            "body": "Created attachment 23860\nProposed patch - port of bug 46471 fix (updated)\n\nThis patch, as well as the previous (attachment #23807) by Mark, both do fix this issue for me in tc5.5 - tested with the reproducer and with our webapp that experienced this issue.\n\nBut the previous patch does not fix issue 46471, because one change in TagFileProcessor class was omitted when backporting. Thus I propose the updated patch.",
            "date": "20090623T10:45:12",
            "id": 14
        },
        {
            "author": null,
            "body": "Created attachment 23861\nProposed patch - port of bug 46471 fix (updated 2)\n\nCompared with original tc6.0 fix for 46471 (http://svn.apache.org/viewvc?rev=739530&view=rev) and spotted an error in the backport.\nThus, updated patch.",
            "date": "20090623T11:24:18",
            "id": 15
        },
        {
            "author": null,
            "body": "This has been fixed in 5.5.x and will be included in 5.5.28 onwards.",
            "date": "20090710T03:30:20",
            "id": 16
        }
    ],
    "component": "Jasper",
    "description": "The following error doesn't occur when using tomcat 5.5.9\n\nSeems to be related to the use of a custom taglib in a JSP\nthat is included by another JSP\n\n\nThe JSP and custom taglib work fine when served by tomcat.\nBut the ant build script fails.\n\n\njspc:\n  [jasper2] Oct 13, 2005 2:54:18 PM org.apache.jasper.JspC processFile\n  [jasper2] SEVERE: ERROR-the file '\\WEB-INF\\jsp\\headerComponent.jsp' generated\nthe following general exception:\n  [jasper2] java.lang.NullPointerException\n  [jasper2]     at sun.misc.URLClassPath$3.run(URLClassPath.java:316)\n  [jasper2]     at java.security.AccessController.doPrivileged(Native Method)\n  [jasper2]     at sun.misc.URLClassPath.getLoader(URLClassPath.java:313)\n  [jasper2]     at sun.misc.URLClassPath.getLoader(URLClassPath.java:290)\n  [jasper2]     at sun.misc.URLClassPath.getResource(URLClassPath.java:160)\n  [jasper2]     at java.net.URLClassLoader$1.run(URLClassLoader.java:192)\n  [jasper2]     at java.security.AccessController.doPrivileged(Native Method)\n  [jasper2]     at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n  [jasper2]     at\norg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:133)\n  [jasper2]     at\norg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:65)\n  [jasper2]     at\norg.apache.jasper.JspCompilationContext.load(JspCompilationContext.java:596)\n  [jasper2]     at\norg.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:209)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:515)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:48)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:566)\n  [jasper2]     at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1441)\n  [jasper2]     at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n  [jasper2]     at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2213)\n  [jasper2]     at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2219)\n  [jasper2]     at org.apache.jasper.compiler.Node$Root.accept(Node.java:456)\n  [jasper2]     at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:584)\n  [jasper2]     at\norg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:169)\n  [jasper2]     at org.apache.jasper.compiler.Compiler.compile(Compiler.java:286)\n  [jasper2]     at org.apache.jasper.JspC.processFile(JspC.java:953)\n  [jasper2]     at org.apache.jasper.JspC.execute(JspC.java:1094)\n  [jasper2]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [jasper2]     at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  [jasper2]     at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  [jasper2]     at java.lang.reflect.Method.invoke(Method.java:585)\n  [jasper2]     at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:123)\n  [jasper2]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:341)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n  [jasper2]     at\norg.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n  [jasper2]     at\norg.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:37)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n  [jasper2]     at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:382)\n  [jasper2]     at org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:277)\n  [jasper2]     at org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:201)\n  [jasper2]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:341)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n  [jasper2]     at\norg.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n  [jasper2]     at org.apache.tools.ant.Project.executeTarget(Project.java:1185)\n  [jasper2]     at\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n  [jasper2]     at org.apache.tools.ant.Main.runBuild(Main.java:668)\n  [jasper2]     at org.apache.tools.ant.Main.startAnt(Main.java:187)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)\n  [jasper2] java.lang.NullPointerException\n  [jasper2]     at sun.misc.URLClassPath$3.run(URLClassPath.java:316)\n  [jasper2]     at java.security.AccessController.doPrivileged(Native Method)\n  [jasper2]     at sun.misc.URLClassPath.getLoader(URLClassPath.java:313)\n  [jasper2]     at sun.misc.URLClassPath.getLoader(URLClassPath.java:290)\n  [jasper2]     at sun.misc.URLClassPath.getResource(URLClassPath.java:160)\n  [jasper2]     at java.net.URLClassLoader$1.run(URLClassLoader.java:192)\n  [jasper2]     at java.security.AccessController.doPrivileged(Native Method)\n  [jasper2]     at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n  [jasper2]     at\norg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:133)\n  [jasper2]     at\norg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:65)\n  [jasper2]     at\norg.apache.jasper.JspCompilationContext.load(JspCompilationContext.java:596)\n  [jasper2]     at\norg.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:209)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:515)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:48)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:566)\n  [jasper2]     at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1441)\n  [jasper2]     at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n  [jasper2]     at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2213)\n  [jasper2]     at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2219)\n  [jasper2]     at org.apache.jasper.compiler.Node$Root.accept(Node.java:456)\n  [jasper2]     at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2163)\n  [jasper2]     at\norg.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:584)\n  [jasper2]     at\norg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:169)\n  [jasper2]     at org.apache.jasper.compiler.Compiler.compile(Compiler.java:286)\n  [jasper2]     at org.apache.jasper.JspC.processFile(JspC.java:953)\n  [jasper2]     at org.apache.jasper.JspC.execute(JspC.java:1094)\n  [jasper2]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [jasper2]     at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  [jasper2]     at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  [jasper2]     at java.lang.reflect.Method.invoke(Method.java:585)\n  [jasper2]     at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:123)\n  [jasper2]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:341)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n  [jasper2]     at\norg.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n  [jasper2]     at\norg.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:37)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n  [jasper2]     at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:382)\n  [jasper2]     at org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:277)\n  [jasper2]     at org.apache.tools.ant.taskdefs.SubAnt.execute(SubAnt.java:201)\n  [jasper2]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:341)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n  [jasper2]     at\norg.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n  [jasper2]     at org.apache.tools.ant.Project.executeTarget(Project.java:1185)\n  [jasper2]     at\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n  [jasper2]     at org.apache.tools.ant.Main.runBuild(Main.java:668)\n  [jasper2]     at org.apache.tools.ant.Main.startAnt(Main.java:187)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)\n\nBUILD FAILED\nC:\\cvs\\kls\\build.xml:79: The following error occurred while executing this line:\nC:\\cvs\\kls\\war.xml:114: org.apache.jasper.JasperException: Unable to compile\nclass for JSP",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "37084",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "JspC from ant fails on JSPs that use custom taglib",
    "systemSpecification": true,
    "version": "5.5.12"
}