{
    "comments": [
        {
            "author": null,
            "body": "The amount of time to hold a connection open on the Tomcat JNDIRealm side\nwouldn't matter, though, would it?  It's the LDAP server that's disconnecting\nthe connection, not Tomcat.\n\nLooking at the current JNDIRealm code, in the authenticate method, it already\ntries twice automatically to account for the first-time failure.  It tries once,\nand if a CommunicationException occurs (as is the case you report), it tries\nagain.  However, if the exception message is not null and does not contain\n\"close\", it won't try again.  Maybe it's this check that's the problem.",
            "date": "20050324T15:22:47",
            "id": 0
        },
        {
            "author": null,
            "body": "Right, but when handling the said communication exception:\n                // If contains the work closed. Then assume socket is closed.\n                // If message is null, assume the worst and allow the\n                // connection to be closed.\n                if (e.getMessage()!=null &&\n                    e.getMessage().indexOf(\"closed\") < 0)\n                    throw(e);\n\nHere, the text is: exception performing authentication\njavax.naming.CommunicationException: Connection reset [Root exception is \njava.net.SocketException: Connection reset]; remaining \nname 'ou=ou=users,dc=company,dc=com'\n\nSo no \"closed\", which means there won't be any retry. This type of hack is bad:\nwe should just retry once anyway. I'm changing that in 5.5.x.",
            "date": "20050324T18:10:29",
            "id": 1
        },
        {
            "author": null,
            "body": "I hope when you say you're going to retry once anyway, you ONLY mean if there's\na CommunicationException - if under normal circumstances, a user puts in a bad\npassword, an exception is thrown - if you try again with any type of exception,\nit could trigger an account lockout.  (I'll have to try a bad password to see\nwhat the precise exception is.)",
            "date": "20050325T01:56:43",
            "id": 2
        },
        {
            "author": null,
            "body": "We have a CVS browser, so how about verifying in the code that I did the right\nthing ?\n\nI did not test it, I simply removed the portions of code which looked highly\nsuspicious.",
            "date": "20050325T18:00:51",
            "id": 3
        },
        {
            "author": null,
            "body": "The code looks decent to me.  Will, please test 5.5.9 which will be out in a\ncouple of days, and if it still fails reopen this issue.  Thanks.",
            "date": "20050326T04:20:31",
            "id": 4
        },
        {
            "author": null,
            "body": "The patch looks ok to me too. For historical reference see ...\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-4.0/catalina/src/share/org/apache/catalina/realm/JNDIRealm.java\nrevision 1.12.\n\nAt one time, there was even more specific logic looking for \"Socket closed\".\n",
            "date": "20050327T17:04:15",
            "id": 5
        },
        {
            "author": null,
            "body": "The first login attempt each morning fails because the LDAP server has closed the idle connection. We \nare running Tomcat 5.5.15 It looks to me as though this results in a ServiceUnavailableException rather \nthan a CommunicationException which the previous fix addressed.\n\nApr 17, 2007 8:18:38 AM org.apache.catalina.realm.JNDIRealm authenticate\nSEVERE: Exception performing authentication\njavax.naming.ServiceUnavailableException: public.ldap.uq.edu.au:389; socket closed; remaining name \n'ou=People,o=The University of Queensland,c=AU'\n        at com.sun.jndi.ldap.Connection.readReply(Connection.java:410)\n        at com.sun.jndi.ldap.LdapClient.ldapBind(LdapClient.java:340)\n        at com.sun.jndi.ldap.LdapClient.authenticate(LdapClient.java:170)\n        at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2637)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2546)\n        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2520)\n        at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1901)\n        at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1806)\n        at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1731)\n        at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:\n338)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:\n321)\n        at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:248)\n        at org.apache.catalina.realm.JNDIRealm.getUserBySearch(JNDIRealm.java:1055)\n        at org.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:958)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:907)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:808)\n        at org.apache.catalina.authenticator.FormAuthenticator.authenticate(FormAuthenticator.java:257)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:416)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:199)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:754)\n        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:684)\n        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:876)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\n",
            "date": "20070417T17:10:22",
            "id": 6
        },
        {
            "author": null,
            "body": "This has been fixed in svn and will be included in 5.5.24 and 6.0.14 onwards.",
            "date": "20070601T18:42:41",
            "id": 7
        },
        {
            "author": null,
            "body": "(In reply to comment #8)\n> This has been fixed in svn and will be included in 5.5.24 and 6.0.14 onwards.\n\nI have recently tried using the JNDIRealm in 6.0.14 and it appears this problem\nhas not been fixed. I cannot post the message because it is on an internal\nsystem, but the error message is the same \"connection reset\" problem as before.\nMaybe the fix did not reach this release?!",
            "date": "20070828T07:11:17",
            "id": 8
        },
        {
            "author": null,
            "body": "The \"connection reset\" message refers to a problem that never existed in the\n6.0.x series - it was fixed before that series was started.\n\nPlease check your configuration via the users list. If you still see the\nproblem, you will need to post the stack trace (you can XXX out server names,\nports etc from the stack trace) so we can figure out where the problem lies.",
            "date": "20070904T19:11:24",
            "id": 9
        },
        {
            "author": null,
            "body": "This is NOT fixed on a Solaris platform in 5.5.25 although 5.5.17 works ok on \nWindows XP. See below....\n\n29-Jan-2008 14:35:30 org.apache.catalina.realm.JNDIRealm authenticate\nSEVERE: Exception performing authentication\njavax.naming.ServiceUnavailableException: ldap2.dundee.ac.uk:389; socket\nclosed; remaining name 'o=\ndundee'\nat com.sun.jndi.ldap.Connection.readReply(Connection.java:416)\nat\ncom.sun.jndi.ldap.LdapClient.getSearchReply(LdapClient.java:611)\nat com.sun.jndi.ldap.LdapClient.search(LdapClient.java:534)\nat com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1948)\nat com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1810)\nat com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1735)\nat\ncom.sun.jndi.toolkit.ctx.ComponentDirContext.p_search\n(ComponentDirContext.java:368)\nat\ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search\n(PartialCompositeDirContext.ja\nva:338)\nat\ncom.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search\n(PartialCompositeDirContext.ja\nva:321)\nat\njavax.naming.directory.InitialDirContext.search(InitialDirContext.java:248)\nat\norg.apache.catalina.realm.JNDIRealm.getUserBySearch(JNDIRealm.java:1051)\nat\norg.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:959)\nat\norg.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:908)\nat\norg.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:809)\nat\norg.apache.catalina.authenticator.FormAuthenticator.authenticate\n(FormAuthenticator.java:\n258)\nat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:417)\nat\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\nat\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\nat\norg.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:108)\nat\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)\nat\norg.apache.coyote.http11.Http11Processor.process(Http11Processor.java:870)\nat org.apache.coyote.http11.Http11BaseProtocol\n$Http11ConnectionHandler.processConnection(Ht\ntp11BaseProtocol.java:665)\nat\norg.apache.tomcat.util.net.PoolTcpEndpoint.processSocket\n(PoolTcpEndpoint.java:528)\nat\norg.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt\n(LeaderFollowerWorkerThread.j\nava:81)\nat org.apache.tomcat.util.threads.ThreadPool\n$ControlRunnable.run(ThreadPool.java:685)\nat java.lang.Thread.run(Thread.java:619)\n",
            "date": "20080205T04:46:35",
            "id": 10
        },
        {
            "author": null,
            "body": "(In reply to comment #11)\n> This is NOT fixed on a Solaris platform in 5.5.25 although 5.5.17 works ok on \n> Windows XP. See below....\n\nThat it works on an earlier release on XP and fails on a later release on\nSolaris is a strong indication of a configuration problem on Solaris. That said,\nthere was a minor improvement to the fix in 5.5.26. I don't think it will help\nbut it is worth trying.\n\nIf you still have problems, please use the users list in the first instance as\nthis looks like a configuration issue.\n\n",
            "date": "20080205T10:53:22",
            "id": 11
        },
        {
            "author": null,
            "body": "(In reply to comment #12)\n> (In reply to comment #11)\n> > This is NOT fixed on a Solaris platform in 5.5.25 although 5.5.17 works ok \non \n> > Windows XP. See below....\n> That it works on an earlier release on XP and fails on a later release on\n> Solaris is a strong indication of a configuration problem on Solaris. That \nsaid,\n> there was a minor improvement to the fix in 5.5.26. I don't think it will help\n> but it is worth trying.\n> If you still have problems, please use the users list in the first instance as\n> this looks like a configuration issue.\n\nNo response from users list. Its just this first time delay after the remote \nserver has closed the connection thats the pain.  (it eventually authenticates \nok once the timeout has expired). Which is this timeout? Can't find what \nconfiguration to look at ( server.xml 's match on both platforms ). \n\nSome pointers much appreciated. \n",
            "date": "20080212T02:14:18",
            "id": 12
        }
    ],
    "component": "Catalina",
    "description": "Using the JNDIRealm for authentication, if the LDAP server is set to \nautomatically disconnect the client (in this case, tomcat's JNDIRealm), tomcat \ndoes not discover this until it attempts another login.  If the connection has \nbeen reset, it results in a failed login attempt for the user.  So the first \ntime somebody logs into the application after some period of time (I think the \ntimeout is pretty short on our LDAP server), the user will get one failed \nlogin attempt before a real one.\n\nI've not seen in the documentation any properties on the JNDIRealm an amount \nof time to hold the connection open before electively disconnecting it.\n\n2005-02-28 07:47:39 JNDIRealm[/iso]:   Searching for myuserid\n2005-02-28 07:47:39 JNDIRealm[/iso]:   base: ou=users,dc=company,dc=com  \nfilter: (&(objectClass=user)(uid=myuserid))\n2005-02-28 07:47:39 JNDIRealm[/iso]: Exception performing authentication\njavax.naming.CommunicationException: Connection reset [Root exception is \njava.net.SocketException: Connection reset]; remaining \nname 'ou=ou=users,dc=company,dc=com'\n        at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1961)\n        at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1806)\n        at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1731)\n        at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search\n(ComponentDirContext.java:368)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search\n(PartialCompositeDirContext.java:338)\n        at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search\n(PartialCompositeDirContext.java:321)\n        at javax.naming.directory.InitialDirContext.search\n(InitialDirContext.java:248)\n        at org.apache.catalina.realm.JNDIRealm.getUserBySearch\n(JNDIRealm.java:1074)\n        at org.apache.catalina.realm.JNDIRealm.getUser(JNDIRealm.java:967)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:916)\n        at org.apache.catalina.realm.JNDIRealm.authenticate(JNDIRealm.java:809)\n        at org.apache.catalina.authenticator.FormAuthenticator.authenticate\n(FormAuthenticator.java:235)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:446)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:102)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:137)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:118)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:102)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:109)\n        at org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n        at org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:929)\n        at org.apache.coyote.tomcat5.CoyoteAdapter.service\n(CoyoteAdapter.java:160)\n        at org.apache.jk.server.JkCoyoteHandler.invoke\n(JkCoyoteHandler.java:300)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:374)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:743)\n        at org.apache.jk.common.ChannelSocket.processConnection\n(ChannelSocket.java:675)\n        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:866)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\nCaused by: java.net.SocketException: Connection reset\n        at java.net.SocketInputStream.read(SocketInputStream.java:168)\n        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\n        at java.io.BufferedInputStream.read1(BufferedInputStream.java:256)\n        at java.io.BufferedInputStream.read(BufferedInputStream.java:313)\n        at com.sun.jndi.ldap.Connection.run(Connection.java:780)\n        ... 1 more\n\n2005-02-28 07:47:39 JNDIRealm[/iso]: Closing directory context",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "33774",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "JNDIRealm fails when server disconnects after time",
    "systemSpecification": true,
    "version": "5.5.20"
}