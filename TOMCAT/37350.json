{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 16872\nOne of the images that tomcat wont' serve",
            "date": "20051104T04:09:11",
            "id": 0
        },
        {
            "author": null,
            "body": "You are having installation problems (maybe the naming-resources.jar file was\nnot updated). The error calling String getCanonicalPath() (which must exist in\nthe latest version) is causing the issue.",
            "date": "20051104T11:13:48",
            "id": 1
        },
        {
            "author": null,
            "body": "I don't want to be obsteferous here, but if it's a problem with\nnaming-resources.jar it's a bit more subtle than that. I installed off of the\ntomcat RPMs off the apache, so, unless there's a problem with the rpms, I've got\nan as-shipped install.\n\nI have a naming-resources.jar in what looks like the proper location:\n[pcasey@localhost ~]$ find . -name naming*.jar\n./realtomcat/common/lib/naming-factory.jar\n./realtomcat/common/lib/naming-resources.jar\n./realtomcat/common/lib/naming-factory-dbcp.jar\n\nWhen I do a cksum on the jar I get what looks like the right number (at least it\nmatches the jar I yanked off my (working) windows installation).\n\nThis is the chsum of the jar from the windows installation (copied onto the\nlinux box temporarily so I could cksum it):\n\n[pcasey@localhost mirror]$ cksum naming-resources.jar\n2735540403 46606 naming-resources.jar\n\nThis is the cksum of the one out of /commons/lib:\n\n[pcasey@localhost ~]$ cksum ./realtomcat/common/lib/naming-resources.jar\n2735540403 46606 ./realtomcat/common/lib/naming-resources.jar\n\nThere is one, and only one, copy of a jar named naming-resources.jar on the machine:\n\n[root@localhost /]# find . -name naming*.jar\nfind: ./proc/5638/task: No such file or directory\n./home/pcasey/realtomcat/common/lib/naming-factory.jar\n./home/pcasey/realtomcat/common/lib/naming-resources.jar\n./home/pcasey/realtomcat/common/lib/naming-factory-dbcp.jar\n\nSo, while it may well be a configuration problem, I don't think it's a problem\nwith the installation or having the wrong jars floating around from a previous\ninstall.\n",
            "date": "20051104T17:37:49",
            "id": 2
        },
        {
            "author": null,
            "body": "Yet more information:\n\nDid some more reseach, and I think the problem is with the 5.5.12 rpm package.\nWhen I cross checked a 5.5.12 windows.zip install against my linux 5.5.12 rpm\ninstall, I realized that the rpm install was using the same naming-resources.jar\nas the *5.5.9* install, while the windows install was using a newer\nnaming-resources.jar.\n\nWhen I swapped in the newer (from the windows .zip install) naming-resources.jar\nfile into my rpm install, all was well.\n\nSo...\n\nMy current theory is that the 5.5.12 linux rpm install is installing the wrong\nnaming-resources.jar.\n",
            "date": "20051104T18:03:12",
            "id": 3
        },
        {
            "author": null,
            "body": "(In reply to comment #4)\n\nI take it back, I installed from the 5.5.12 tarball, not the rpm package. I\nstill have the tarball if anybody wants it. Curiously though, I yanked the\nlatest tarball off of apache and the latest tarball has the *right* .jar in it.\nThe tarball I have has the *wrong* .jar in it. Looks like somebody already fixed\nthis after I got my tarball.\n",
            "date": "20051104T18:09:13",
            "id": 4
        },
        {
            "author": null,
            "body": "(In reply to comment #5)\n> (In reply to comment #4)\n> \n> I take it back, I installed from the 5.5.12 tarball, not the rpm package. I\n> still have the tarball if anybody wants it. Curiously though, I yanked the\n> latest tarball off of apache and the latest tarball has the *right* .jar in it.\n> The tarball I have has the *wrong* .jar in it. Looks like somebody already fixed\n> this after I got my tarball.\n> \n\nI was having the same problem on a windows machine, and I copied the naming*.jar\nfrom the beta 5.5.14 and all is well now.",
            "date": "20060103T20:48:31",
            "id": 5
        }
    ],
    "component": "Catalina",
    "description": "I have a web app that spits out dynamic pages that include within them links to\nstatic icons and whatnot. A typical <img> looks like:\n\n<img src=\"./img/help/newsurvey.gif\" />\n\nThese all work perfectly on Tomcat 5.5.9 on Windows XP.\n\nWhen I move the war over to my linux box with Tomcat 5.5.12, however, all the\n<img> tags that point to images over about 50k break. I don't get a broken link,\nI don't get a half an image, I just get ... nothing.\n\nWhen I look in catalina.out, I see what I think is the error message, but I\ncan't figure out the cause.\n\nAgain, small images server just fine. Big ones cause errors, but only when\nreferences via links as I described.\n\nAlso noteworthy is that Tomcat appears unable to serve the image even if I\nnavigate to it via the url directly e.g. typing:\n\nhttp://p500:9090/Corinna/img/help/navigatemain.png\n\nResults in the same error.\n\nThe error I get the *first* time I go after the resource. \n\nClientAbortException:  java.net.SocketException: Broken pipe\n        at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffe\nr.java:366)\n        at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:403)\n        at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:\n314)\n        at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:29\n3)\n        at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputSt\nream.java:97)\n        at org.apache.tapestry.request.ResponseOutputStream.forceFlush(ResponseO\nutputStream.java:149)\n        at org.apache.tapestry.engine.AbstractEngine.service(AbstractEngine.java\n:945)\n        at org.apache.tapestry.ApplicationServlet.doService(ApplicationServlet.j\nava:198)\n        at servlet.MyServlet.doService(MyServlet.java:167)\n        at org.apache.tapestry.ApplicationServlet.doGet(ApplicationServlet.java:\n159)\n        at servlet.MyServlet.doGet(MyServlet.java:141)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl\nicationFilterChain.java:252)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF\nilterChain.java:173)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperV\nalve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextV\nalve.java:178)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.j\nava:126)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.j\nava:105)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineVal\nve.java:107)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.jav\na:148)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java\n:868)\n        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.p\nrocessConnection(Http11BaseProtocol.java:663)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpo\nint.java:527)\n        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFol\nlowerWorkerThread.java:80)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadP\nool.java:684)\n        at java.lang.Thread.run(Thread.java:595)\n\nThe error I get *subsequent times*:\n\njava.lang.NoSuchMethodError:\norg.apache.naming.resources.ResourceAttributes.getCanonicalPath()Ljava/lang/String;\n\torg.apache.catalina.servlets.DefaultServlet.checkSendfile(DefaultServlet.java:1521)\n\torg.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:839)\n\torg.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:348)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:689)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:802)",
    "hasPatch": false,
    "hasScreenshot": true,
    "id": "37350",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Problems serving large (50k+) static images on linux",
    "systemSpecification": true,
    "version": "5.5.12"
}