{
    "comments": [
        {
            "author": null,
            "body": "Sorry, when I wrote \"302 Not Modified\" I actually ment \"304 Not Modified\".",
            "date": "20101205T07:41:06",
            "id": 0
        },
        {
            "author": null,
            "body": "Thanks for the report. This has been fixed in 7.0.x and will be included in 7.0.6 onwards.",
            "date": "20101210T05:11:55",
            "id": 1
        },
        {
            "author": null,
            "body": "(In reply to comment #2)\n> Thanks for the report. This has been fixed in 7.0.x and will be included in\n> 7.0.6 onwards.\n\nThanks :)\n\nI would like to note that the same behavior/bug exists in Tomcat 6.0.29 and 5.5.31 as well (I just tested it on these versions). Sorry I didn't that before. Maybe the fix needs to be backported?\n\nCheers\nKonstantin",
            "date": "20101210T10:57:33",
            "id": 2
        },
        {
            "author": null,
            "body": "Re-open against 5.5.x so it gets fixed in 5.5.x and 6.0.x",
            "date": "20101212T16:30:43",
            "id": 3
        },
        {
            "author": null,
            "body": "Fixed in 6.0.x and will be included in 6.0.30 onwards.",
            "date": "20110108T14:27:55",
            "id": 4
        },
        {
            "author": null,
            "body": "One minor glitch with the current fix for this issue:\n(regards 7.0, 6.0 and proposed patch for 5.5)\n\n\nIn DefaultServlet#serveResource(..) there is the following condition:\n        if ( (cacheEntry.context != null) \n                || ( ((ranges == null) || (ranges.isEmpty()))\n                        && (request.getHeader(\"Range\") == null) )\n                || (ranges == FULL) ) {\n\nNote the following part of it:\n (ranges == null || ranges.isEmpty()) && (request.getHeader(\"Range\") == null)\n\nWith the current fix for this issue a \"parseRange(request, response, cacheEntry.attributes)\" call is skipped and thus \"ranges\" remains to be null, but request.getHeader(\"Range\") still returns the original header.\n\n==============================================================================\nUsing MyWebApp with a custom 404.html page, as described by OP, I now get:\n\nIn current 7.0.x (at rev.1056780)\n-- Request:\nGET /MyWebApp/AUrlToAFileWhichDoesNotExist.gif HTTP/1.1\nHost: localhost\nKeep-Alive: 115\nConnection: keep-alive\nRange: bytes=0-499\n-- Response:\nHTTP/1.1 404 Not Found\nServer: Apache-Coyote/1.1\nTransfer-Encoding: chunked\nDate: Sat, 08 Jan 2011 20:49:46 GMT\n\n0\n-- Request: (without the \"Range\" header)\nGET /MyWebApp/AUrlToAFileWhichDoesNotExist.gif HTTP/1.1\nHost: localhost\nKeep-Alive: 115\nConnection: keep-alive\n--\nHTTP/1.1 404 Not Found\nServer: Apache-Coyote/1.1\nContent-Type: text/html\nContent-Length: 17\nDate: Sat, 08 Jan 2011 20:51:02 GMT\n\nError 404.html!\n--\n\nI.e., if \"Range\" header was specified, the custom error page is not used at all.\n\n\nIt is not a show stopper, as it is still better than it was before, because e.g. in 5.5.31 the response is the following:\n\n-- Request:\nGET /MyWebApp/AUrlToAFileWhichDoesNotExist.gif HTTP/1.1\nHost: localhost\nKeep-Alive: 115\nConnection: keep-alive\nRange: bytes=0-499\n-- Response:\nHTTP/1.1 206 Partial Content\nServer: Apache-Coyote/1.1\nAccept-Ranges: bytes\nETag: W/\"17-1294518367875\"\nLast-Modified: Sat, 08 Jan 2011 20:26:07 GMT\nContent-Range: bytes 0-16/17\nContent-Type: text/html\nContent-Length: 17\nDate: Sat, 08 Jan 2011 21:01:35 GMT\n\nError 404.html!\n--\nwhich is wrong, because it is successful \"206 Partial Content\", while \"404 Not Found\" was expected instead.",
            "date": "20110108T16:13:19",
            "id": 5
        },
        {
            "author": null,
            "body": "(In reply to comment #6)\nThis is fixed by r1056889 in 7.0 - will be in 7.0.6.\nProposed as an additional patch for this issue for 6.0 and 5.5.",
            "date": "20110109T03:17:24",
            "id": 6
        },
        {
            "author": null,
            "body": "fixed in 6.0.x and will be in 6.0.31 onwards",
            "date": "20110120T12:09:12",
            "id": 7
        },
        {
            "author": null,
            "body": "Will be in 5.5.32",
            "date": "20110120T14:23:11",
            "id": 8
        }
    ],
    "component": "Catalina",
    "description": "When using a static html file for 404 errors and the client sends a request to a file whoch doesn't exist, and adds a \"If-Modified-Since\" header with a date that is newer than the modification date of the static error file, then Tomcat returns \"302 Not Modofied\" instead of \"404 Not Found\".\n\nSteps to reproduce:\n1) Make a simple webapp that uses a static html file as custom error page for 404 errors, like this (web.xml):\n\n  <error-page>\n    <error-code>404</error-code>\n    <location>/errorpages/404.html</location>\n  </error-page>\n\n2) Do a GET request to a URL which points to a file that doesn't exist, and add a \"If-Modified-Since\" header with a date that is newer than the modification date of the 404 error file (the date may also be in the future), e.g.\n\nGET /MyWebApp/AUrlToAFileWhichDoesNotExist.gif HTTP/1.1\nHost: localhost\nKeep-Alive: 115\nConnection: keep-alive\nIf-Modified-Since: Tue, 08 Nov 2015 15:07:52 GMT \n\n(replace \"MyWebApp\" with your webapp's name)\n\n3) Tomcat returns \"HTTP/1.1 302 Not Modified\" instead of \"HTTP/1.1 404 Not Found\".\n\n\nActual Results: Tomcat returns a \"302 Not Modified\" response, because it seems to compare the date of the \"If-Modified-Header\" with the date of the static 404 error file.\n\nExpected Results: Tomcat returns a \"404 Not Found\" response, because the requested file does not exist.\n\n\nIf you omit the \"If-Modified-Since\" header or use a date that is older than the date of the error file, Tomcat correctly returns \"404 Not Found\", but adds an \"Last-Modified\" header with the modification date of the 404 file.\n\n\nThis behavior caused invalid 302 responses to be sent over the ISAPI redirector (bug 50363, with enabled chunked encoding support) when I was viewing my site in Firefox and pressed F5 to refresh it, because I think as of bug 49591, Tomcat uses chunked encoding for this response, which the ISAPI redirector didn't check.\n\nI tested on Tomcat 7.0.5 on 32-Bit Windows XP, with Tomcat Native 1.1.20, on Java 1.6.0_22.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "50413",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 minor",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Tomcat returns 304 instead of 404 response for static custom 404 error file",
    "systemSpecification": true,
    "version": "5.5.31"
}