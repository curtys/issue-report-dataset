{
    "comments": [
        {
            "author": null,
            "body": "I see the problem: can you please submit a patch in the diff -u format we ask\nfor on the Get Involved pages\n(http://www.apache.org/dev/contributors.html#patches) ?  I'll gladly commit it...",
            "date": "20051020T03:27:05",
            "id": 0
        },
        {
            "author": null,
            "body": "Created attachment 16968\nPatch to fix this defect",
            "date": "20051114T21:00:29",
            "id": 1
        },
        {
            "author": null,
            "body": "Fixed, thank you for finding this issue and submitting the patch.",
            "date": "20051128T21:50:02",
            "id": 2
        }
    ],
    "component": "Catalina",
    "description": "The digest authenticator does a simple tokenization of the authentication\nheader. If the username or the URI contain a comma, authentication fails because\nthe tokenization does not take into consideration tokens that have commas in them. \n\nTo duplicate, go to any page that requires digest authentication, and add the\nquery string ?a=b,c. Authentication will fail. If you've already authenticated,\nyou may need to close your browser and try again.\n\nFollowing is modified version of\norg.apache.catalina.authenticator.DigestAuthenticator.findPrincipal that fixes\nthe problem. It tokenizes using a regular expression that ignores commas between\nquotes (or rather, it ignores commas that are not followed by an even number of\nquotes).\n\nI would have tested and modified 5.5.12, except that I am using a custom build\nbased on 5.5.7. However, I have looked at DigestAuthenticator.java in 5.5.12 and\nnoticed that it has the same problem.\n\n    protected static Principal findPrincipal(Request request,\n                                             String authorization,\n                                             Realm realm) {\n\n        //System.out.println(\"Authorization token : \" + authorization);\n        // Validate the authorization credentials format\n        if (authorization == null)\n            return (null);\n        if (!authorization.startsWith(\"Digest \"))\n            return (null);\n        authorization = authorization.substring(7).trim();\n\n        String[] tokens = authorization.split(\",(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")+$)\");\n        \n        String userName = null;\n        String realmName = null;\n        String nOnce = null;\n        String nc = null;\n        String cnonce = null;\n        String qop = null;\n        String uri = null;\n        String response = null;\n        String method = request.getMethod();\n\n        for (int i = 0; i < tokens.length; i++) {\n            String currentToken = tokens[i];\n            if (currentToken.length() == 0)\n                continue;\n            \n            int equalSign = currentToken.indexOf('=');\n            if (equalSign < 0)\n                return null;\n            String currentTokenName =\n                currentToken.substring(0, equalSign).trim();\n            String currentTokenValue =\n                currentToken.substring(equalSign + 1).trim();\n            if (\"username\".equals(currentTokenName))\n                userName = removeQuotes(currentTokenValue);\n            if (\"realm\".equals(currentTokenName))\n                realmName = removeQuotes(currentTokenValue, true);\n            if (\"nonce\".equals(currentTokenName))\n                nOnce = removeQuotes(currentTokenValue);\n            if (\"nc\".equals(currentTokenName))\n                nc = removeQuotes(currentTokenValue);\n            if (\"cnonce\".equals(currentTokenName))\n                cnonce = removeQuotes(currentTokenValue);\n            if (\"qop\".equals(currentTokenName))\n                qop = removeQuotes(currentTokenValue);\n            if (\"uri\".equals(currentTokenName))\n                uri = removeQuotes(currentTokenValue);\n            if (\"response\".equals(currentTokenName))\n                response = removeQuotes(currentTokenValue);\n        }\n\n        if ( (userName == null) || (realmName == null) || (nOnce == null)\n             || (uri == null) || (response == null) )\n            return null;\n\n        // Second MD5 digest used to calculate the digest :\n        // MD5(Method + \":\" + uri)\n        String a2 = method + \":\" + uri;\n        //System.out.println(\"A2:\" + a2);\n\n        byte[] buffer = null;\n        synchronized (md5Helper) {\n            buffer = md5Helper.digest(a2.getBytes());\n        }\n        String md5a2 = md5Encoder.encode(buffer);\n\n        return (realm.authenticate(userName, response, nOnce, nc, cnonce, qop,\n                                   realmName, md5a2));\n\n    }",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "37132",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Digest authentication does not work if the username or URI contain a comma",
    "systemSpecification": true,
    "version": "5.5.7"
}