{
    "comments": [
        {
            "author": null,
            "body": "I do not understand the issue. If linking to resources outside of the webapp\nroot, use allowLinking. If it still does not work, I think this is not going to\nbe fixed.",
            "date": "20040402T15:50:32",
            "id": 0
        },
        {
            "author": null,
            "body": "No, no, no.\n\nThere resource, chError.jsp is local.  Except that when compiling this project,\nthis file is physically located in a different location, and referenced by a\nsymlink.\n\nfor example:\n\n> ls -l \nindex.jsp\nchError.jsp --> ../common_files/chError.jsp\n\nFor some reasons, Jasper treats a symbolic link file differently then a regular\nfile.  I have a good number of applications and all of them contain chError.jsp.\n I do not want to make copies of this file so I use symbolic link in each\napplication to link chError.jsp to a common location.  Jasper seems to have\ntrouble with that.   Once again, this is meant to be a local resource, not\nsomething outside of the application.\n\nI also don't know what you were referring to when you mentioned \"allowLinking\".\n I am using JspC with Jasper2.  I don't see such an option documented.\n\nThanks,",
            "date": "20040402T18:23:49",
            "id": 1
        },
        {
            "author": null,
            "body": "This will not be fixed. If you care, please submit a fix.",
            "date": "20040406T17:28:30",
            "id": 2
        },
        {
            "author": null,
            "body": "Hi Remy,\n\nI have tested a fix locally, and it takes just a minor change in JspC.execute()\nby replacing\n\n    String s = fjsp.getCanonicalPath();\n\nwith\n\n    String s = fjsp.getAbsolutePath();\n\nIt seems pretty harmless.  I don't have cvs submission permission yet, and I am\nin the process of figuring it out.  If you would be so kind, could you\nincorporate the fix in?\n\nThanks,\n--\nRick\n\n",
            "date": "20040408T17:55:41",
            "id": 3
        },
        {
            "author": null,
            "body": "Hi, \nPlease consider patching this.  \nThanks,\nRick\n--\n\n\nIndex: JspC.java\n===================================================================\nRCS file:\n/home/cvspublic/jakarta-tomcat-jasper/jasper2/src/share/org/apache/jasper/JspC.java,v\nretrieving revision 1.69\ndiff -u -r1.69 JspC.java\n--- JspC.java\t6 Apr 2004 17:58:59 -0000\t1.69\n+++ JspC.java\t8 Apr 2004 20:39:59 -0000\n@@ -830,7 +830,7 @@\n             Enumeration e = pages.elements();\n             while (e.hasMoreElements()) {\n                 String nextjsp = e.nextElement().toString();\n-                try {\n+                // try {\n                     File fjsp = new File(nextjsp);\n                     if (!fjsp.exists()) {\n                         if (log.isWarnEnabled()) {\n@@ -839,14 +839,21 @@\n                         }\n                         continue;\n                     }\n-                    String s = fjsp.getCanonicalPath();\n+                    // BZ#28147 getCanonicalPath() dereferences symbolic links.\n If the file\n+                    //          is a symbolic link to a file in a different\ndirectory, \n+                    //          getCanonicalPath() will cause the following\ns.startWith()\n+                    //          to fail to match the uriRoot, resulting in\nfile-not-found\n+                    //          error.  Changing to getAbsolutePath() will\nallow files that\n+                    //          are symbolic links to be found correctly.\n+                    // String s = fjsp.getCanonicalPath();\n+                    String s = fjsp.getAbsolutePath();\n                     //System.out.println(\"**\" + s);\n                     if (s.startsWith(uriRoot)) {\n                         nextjsp = s.substring(uriRoot.length());\n                     }\n-                } catch (IOException ioe) {\n+                // } catch (IOException ioe) {\n                     // if we got problems dont change the file name\n-                }\n+                // }\n \n                 if (nextjsp.startsWith(\".\" + File.separatorChar)) {\n                     nextjsp = nextjsp.substring(2);\n",
            "date": "20040409T18:01:25",
            "id": 4
        },
        {
            "author": null,
            "body": "If this is the only place where a change is needed, then it seems ok.",
            "date": "20040425T11:55:31",
            "id": 5
        }
    ],
    "component": "Jasper",
    "description": "Hi,\n\nI got the following exception when one of my JSP file in my webapp is actually a\nsymlink to a file in another directory location.  I verified that the symlink is\nvalid.  The file in question is chError.jsp.  Package name is\ncom.loudcloud.owm.shared.  Note that Jasper created extra directories\n(/soft/lco/occ/channels/shared/rsrc) for chError.jsp.\n\ngenerate\ngenerate/jsp\ngenerate/jsp/jsp.web.xml\ngenerate/jsp/com\ngenerate/jsp/com/loudcloud\ngenerate/jsp/com/loudcloud/owm\ngenerate/jsp/com/loudcloud/owm/shared\ngenerate/jsp/com/loudcloud/owm/shared/error_jsp.java\ngenerate/jsp/com/loudcloud/owm/shared/logout_jsp.java\ngenerate/jsp/com/loudcloud/owm/shared/soft\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco/occ\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco/occ/channels\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco/occ/channels/shared\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco/occ/channels/shared/rsrc\ngenerate/jsp/com/loudcloud/owm/shared/soft/lco/occ/channels/shared/rsrc/chError_jsp.java\n\n\n-----------------------------------------\n\n  [jasper2] (jasper.JspC                         762 ) ERROR-the file\n'/soft/lco/occ/channels/shared/rsrc/chError.jsp' generated the following general\nexception:\n  [jasper2] org.apache.jasper.JasperException: File\n\"/soft/lco/occ/channels/shared/rsrc/chError.jsp\" not found\n  [jasper2]     at\norg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:94)\n  [jasper2]     at\norg.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:404)\n  [jasper2]     at\norg.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:154)\n  [jasper2]     at\norg.apache.jasper.compiler.JspUtil.getInputStream(JspUtil.java:882)\n  [jasper2]     at\norg.apache.jasper.xmlparser.XercesEncodingDetector.getEncodingMethod(XercesEncodingDetector.java:160)\n  [jasper2]     at\norg.apache.jasper.xmlparser.XMLEncodingDetector.getEncoding(XMLEncodingDetector.java:98)\n  [jasper2]     at\norg.apache.jasper.compiler.ParserController.determineSyntaxAndEncoding(ParserController.java:351)\n  [jasper2]     at\norg.apache.jasper.compiler.ParserController.doParse(ParserController.java:208)\n  [jasper2]     at\norg.apache.jasper.compiler.ParserController.parse(ParserController.java:139)\n  [jasper2]     at\norg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:237)\n  [jasper2]     at org.apache.jasper.compiler.Compiler.compile(Compiler.java:456)\n  [jasper2]     at org.apache.jasper.JspC.processFile(JspC.java:747)\n  [jasper2]     at org.apache.jasper.JspC.execute(JspC.java:882)\n  [jasper2]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [jasper2]     at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  [jasper2]     at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  [jasper2]     at java.lang.reflect.Method.invoke(Method.java:324)\n  [jasper2]     at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:124)\n  [jasper2]     at\norg.apache.tools.ant.UnknownElement.execute(UnknownElement.java:269)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:301)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:328)\n  [jasper2]     at org.apache.tools.ant.Project.executeTarget(Project.java:1215)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets(Project.java:1063)\n  [jasper2]     at org.apache.tools.ant.Main.runBuild(Main.java:632)\n  [jasper2]     at org.apache.tools.ant.Main.startAnt(Main.java:183)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:197)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:56)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "28147",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "RFE",
    "priority": "P3 enhancement",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "JasperException for jsp files that are symbolic links",
    "systemSpecification": true,
    "version": "5.0.19"
}