{
    "comments": [
        {
            "author": null,
            "body": "Nice try, but your analysis of the problem is wrong (and the quick fix is very\nbad). The issue is in BasicAuthenticator:\n                if (colon < 0) {\n                    ...\n                } else {\n                    char[] buf = authorizationCC.getBuffer();\n                    username = new String(buf, 0, colon);\n                    password = new String(buf, colon + 1, \n                            buf.length - colon - 1);\n                }\nThis need to use authorizationCC.getEnd as the end of the buffer, rather than\nits length. I'll test it.",
            "date": "20050118T23:00:02",
            "id": 0
        },
        {
            "author": null,
            "body": "I tested my patch, and this fixes the issue. Thanks for finding it.",
            "date": "20050118T23:17:15",
            "id": 1
        }
    ],
    "component": "Catalina",
    "description": "setup\n- java 1.5.0.1\n- tomcat 5.5.4\n- UserDatabaseRealm\n\nto cause failuer, using wget as my test client\n- wget -O o --http-user=user --http-\npasswd=pinotnoir \"http://localhost:8080/myapp/myjsp.jsp\"\n- wget -O o --http-user=user --http-\npasswd=pinotnoir1 \"http://localhost:8080/myapp/myjsp.jsp\"\n- wget -O o --http-user=user --http-\npasswd=pinotnoir \"http://localhost:8080/myapp/myjsp.jsp\"\n\nby setting a breakpoint in RealmBase.authenticate, the username/credentials \nstrings show up as\n- user/pinotnoir\n- user/pinotnoir1\n- user/pinotnoir1  <==== incorrect, should be pinotnoir\n\nThe issues seems to be in Base64.decode:\n\ndecodedDataCC.allocate(lastData - numberQuadruple, -1);\ndecodedDataCC.setEnd(lastData - numberQuadruple);\ndecodedData = decodedDataCC.getBuffer();\n\n\ndecodedDataCC.allocate(lastData - numberQuadruple, -1);\n- allocate does not reallocate for the 3 test (pinotnoir) since the buffer was \nalready big enough from the previous request (pinotnoir1)\n- setEnd sets an end flag\n- getBuffer just gets the byte[], which is too big (pinotnoir1)\n\nfrom there on, things are just messed up.\n\nfor a quicky, I have just hacked the CharChunk.allocate to remove the size \ncheck:\n\n    public void allocate( int initial, int limit  ) {\n\tisOutput=true;\n//\tif( buff==null || buff.length < initial ) {\n\t    buff=new char[initial];\n//\t}\n\tthis.limit=limit;\n\tstart=0;\n\tend=0;\n\tisOutput=true;\n\tisSet=true;\n    }",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "33157",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "basic authentication fails in some cases",
    "systemSpecification": true,
    "version": "5.5.4"
}