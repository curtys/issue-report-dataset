{
    "comments": [
        {
            "author": null,
            "body": "*** Bug 34001 has been marked as a duplicate of this bug. ***",
            "date": "20050322T17:02:48",
            "id": 0
        },
        {
            "author": null,
            "body": "No surprise, it's simply the mail factory didn't get packaged in the release\n(see the naming-factory.jar). However, it *is* present in 5.5.7, so please do\nnot file bogus reports.",
            "date": "20050322T17:11:24",
            "id": 1
        },
        {
            "author": null,
            "body": "(In reply to comment #2)\n> No surprise, it's simply the mail factory didn't get packaged in the release\n> (see the naming-factory.jar). However, it *is* present in 5.5.7, so please do\n> not file bogus reports.\n\nThe bugzilla form doesn't appear to have an option for 5.5.8, so I took the next\nbest option (5.5.7).  I didn't have the time to verify against nightly builds or\n5.5.7... I did look at the source code, which included the factory class in\nquestion.  Hope this bug report at least helps to ensure that the packaging\nissue is resolved for 5.5.8-final.\n\nWith regards to naming-factory.jar, I see that the MailSessionFactory class is\nmissing in 5.5.8-alpha's JAR, but IS still present in the \"-src\" package as a\n\".java\" file.  I assume that it's just an oversight and not an intentional change?\n\nIn any case, thanks for your quick reply.",
            "date": "20050323T13:52:33",
            "id": 2
        },
        {
            "author": null,
            "body": "Chris, thanks for reporting this and sorry for the inconvenience.  I\naccidentally left out the JavaMail/JAF jars when building 5.5.8-alpha, so the\nfactory got dropped.  It was a clean build setup and I've already fixed it for\n5.5.9, which will have the factory as before.  We'll hopefully release\n5.5.9-alpha this weekend.\n\nI've also added reporting options for issues against 5.5.8 and 5.5.9.  I'm\nmodifying this bug to be against 5.5.8, and closing it as it's already been\nresolved in my build environment.  Thanks again.",
            "date": "20050323T15:08:35",
            "id": 3
        }
    ],
    "component": "Catalina",
    "description": "This is a regression: no such error occurs with Tomcat 5.5.4 (or earlier).  It\noccurs on Tomcat 5.5.8, maybe on other versions after 5.5.4 too.\n\nWhenever I attempt to access a JavaMail session, an exception occurs.  The\napplication in question follows the technique described in:\n\nhttp://jakarta.apache.org/tomcat/tomcat-5.5-doc/jndi-resources-howto.html\n\n...and yes, I have ensured that the \"activation\" and \"javamail\" JARs are ONLY\npresent in \"%CATALINA_HOME%\\common\\lib\" (and not in the application's\n\"/WEB-INF/lib\" folder or anything else like that).  I use the same version of\nJavaMail with Tomcat 5.5.4 and 5.5.8 (that's JavaMail 1.3.2).\n\nAnyway, here's the stacktrace.\n\njavax.naming.NamingException: Cannot create resource instance\n        at\norg.apache.naming.factory.ResourceFactory.getObjectInstance(ResourceFactory.java:132)\n        at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:304)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:792)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:139)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:780)\n        at org.apache.naming.NamingContext.lookup(NamingContext.java:152)\n        at\nfr.reflexe.commons.api.j2ee.StandardWebAppContainer.getMailSession(StandardWebAppContainer.java:182)\n        at ...\n\nThe web application is called \"open\", deployed as a directory in\n\"%CATALINA_HOME%\\webapps\".  In \"%CATALINA_HOME%\\conf\\Catalina\\localhost\", I've\nplaced the file \"open.xml\", which is read in.  Here's the document content:\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"yes\"?>\n<Context unpackWARs=\"false\" docBase=\"open\">\n\n <Environment name=\"someKey\" type=\"java.lang.String\" value=\"someValue\" />\n\n <Resource name=\"jdbc/OpenAGE\" auth=\"Container\" type=\"javax.sql.DataSource\"\n  maxActive=\"10\"\n  maxIdle=\"5\"\n  maxWait=\"10000\"\n  username=\"OPENAGE\"\n  password=\"OPENAGE\"\n  driverClassName=\"com.mysql.jdbc.Driver\"\n  url=\"jdbc:mysql://localhost/OPENAGE\"\n \nconnectionProperties=\"autoReconnect=true;useUnicode=true;characterEncoding=utf8;profileSql=false;useServerPrepStmts=false\"\n />\n\n <Resource name=\"mail/OpenAGE\" auth=\"Container\"\n  type=\"javax.mail.Session\"\n  mail.smtp.host=\"mailserver\"\n  />\n\n</Context>\n\nThe environment entries are readable, the datasource is too.  It's only the\nJavaMail Session factory that isn't working.  An appropriate resource reference\nis defined in /WEB-INF/web.xml (and worked fine with Tomcat 5.5.4).\n\nI looked into this a little further.  It appears that Tomcat does indeed bind\nSOMETHING to:\n\n  java:comp/env/mail/OpenAGE\n\n...but Tomcat's ResourceFactory throws \"javax.naming.NamingException: Cannot\ncreate resource instance\" when any attempt is made to access it.  If I call\nContext.list(\"\") on the context \"java:comp/env/mail\", the returned\nNamingEnumeration lists \"OpenAGE\" as a NameClassPair, but throws an exception\nwhen attempting to perform the lookup() to get access to the mail session.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "34131",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 blocker",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Regression: cannot create JavaMail sessions with MailSessionFactory in Tomcat 5.5.8",
    "systemSpecification": true,
    "version": "5.5.8"
}