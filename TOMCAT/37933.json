{
    "comments": [
        {
            "author": null,
            "body": "Yeah, well, it doesn't look like the spec will accept a previously defined \nRequest-Attribute here (at least with the 'recommended' action), so you have a \npoint.\n\nI'll have to look into it more to see if it's reasonable to do the compile-\ntime 'recommended' action, or if we will just have to do it at runtime.  In \nanycase, it won't be pretty :(.  \n\n\n\n",
            "date": "20051218T04:43:25",
            "id": 0
        },
        {
            "author": null,
            "body": "This is fixed now in the SVN trunk, and will appear in 5.5.15.\n\nThe fix raises a runtime error in your test case.  I don't see how to do it at \ntranslation time, but I'm happy to be proven wrong :).",
            "date": "20051219T01:53:00",
            "id": 1
        },
        {
            "author": null,
            "body": "*** Bug 38797 has been marked as a duplicate of this bug. ***",
            "date": "20060227T20:39:26",
            "id": 2
        }
    ],
    "component": "Servlet & JSP API",
    "description": "Hi,\nI am manokaran.I wrote a program in tomcat using eclipse IDE. \n\nThe code is as follows:\n\n1.>This is a Bean:\npackage MMM;\n\npublic class Bean {\n\tprivate String name;\n\tpublic void SetName(String s)\n\t{this.name=s;\n\t}\n\tpublic String getName()\n\t{\n\t\treturn name;\n\t}\n\n}\n\n 2.>This is a Servlet class:\npackage MMM;\n\nimport java.io.IOException;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n\n\npublic class Serv  extends HttpServlet{\n\n\tpublic void doGet(HttpServletRequest request,HttpServletResponse response)\nthrows ServletException,IOException\n\t{\n\t\tBean bean=new Bean();\n\t\tbean.SetName(\"manokaran\");\n\t\trequest.setAttribute(\"mano\",bean);\n\t\tRequestDispatcher rd=request.getRequestDispatcher(\"india.jsp\");\n\t\trd.forward(request,response);\n\t}\n}\n3.This is web.xml file:\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE web-app\n    PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n    \"http://java.sun.com/dtd/web-app_2_3.dtd\">\n\n<web-app>\n<servlet>\n<servlet-name>mano</servlet-name>\n<servlet-class>MMM.Serv</servlet-class>\n</servlet>\n<servlet-mapping>\n<servlet-name>mano</servlet-name>\n<url-pattern>/manokara.do</url-pattern>\n</servlet-mapping>\n</web-app>\n\n4.>This is Index.html file:\n<html>\n<form action=manokara.do>\n<input type=submit>\n</form>\n</html>\n \n5.>This is a JSP file:\n<jsp:useBean id=\"mano1\" class=\"MMM.Bean\" scope=\"request\" />\n<jsp:getProperty name=\"mano\" property=\"name\"/>\n\nReport:\n\n      The setAttribute, Jsp UseBean ID  and getProperty name must be same.\nthis is the correct procedure. this format was working well in tomcat and all\nweb,application servers.  \n      But the values set by me were : setAttribute(\"mano\",ss),getProperty\nname=\"mano\"      \nuseBean id=\"mano1\". Observe that the useBean id is set different. \n     Hence logically, this must not work. But in my case it is working in\nTOMCAT. The same code is not working in WEBLOGIC.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "37933",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P1 major",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Bugs in Tomcat",
    "systemSpecification": true,
    "version": "5.0.0"
}