{
    "comments": [
        {
            "author": null,
            "body": "Anyway, why don't you suggest len = 2 * cb.length ?",
            "date": "20040406T22:05:37",
            "id": 0
        },
        {
            "author": null,
            "body": "well actually changes above has a bug if:\n\nMath.max(Constants.DEFAULT_TAG_BUFFER_SIZE, cb.length) < len\n\nI just  pointed the problem, but I'm not sure about the strategy to use in \nbuffer increment...",
            "date": "20040407T08:41:25",
            "id": 1
        }
    ],
    "component": "Jasper",
    "description": "Well actually in reAllocBuff() method the policy is to incriment it by a \nconstant (512 bytes). In my case with a BIG <select> tag 99% of CPU is \nused just to increment the buffer. \n\nThe suggestion is to use\n\n***************\nlen = Math.max(Constants.DEFAULT_TAG_BUFFER_SIZE, cb.length);\n***************\ninstead of\n***************\n        if (len < Constants.DEFAULT_TAG_BUFFER_SIZE) {\n            len = Constants.DEFAULT_TAG_BUFFER_SIZE;\n        }\n***************\n\nIn my case (I'm using JSF RI 1.0) the change is from ~26 min to 2 sec.\n\nSincerely,\n\nunknown",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "28236",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "org.apache.jasper.runtime.BodyContentImpl buffer is too small",
    "systemSpecification": true,
    "version": "5.0.19"
}