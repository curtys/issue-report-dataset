{
    "comments": [
        {
            "author": null,
            "body": "Created attachment 14671\nBinary Cluster 5.5.9 fix pack\n\njakarta-tomcat-5.5.9 cluster fix pack /server/classes",
            "date": "20050410T12:11:32",
            "id": 0
        },
        {
            "author": null,
            "body": "Created attachment 14672\nSource Custer 5.5.9 Cluster Fix pack\n\nSource of the cluster fix pack",
            "date": "20050410T12:12:58",
            "id": 1
        },
        {
            "author": null,
            "body": "Please help me to fix the bug.",
            "date": "20050612T05:21:28",
            "id": 2
        },
        {
            "author": null,
            "body": "Download the binary attachment and extract this in your Tomcat 5.5.9\ndistribution.\nPeter",
            "date": "20050612T09:19:16",
            "id": 3
        },
        {
            "author": null,
            "body": "I'm using this patch on 5.5.9 with 8 hosts clustered together. I was seeing alot\nof memberDisappeared errors, now I'm still seeing them, but with more detail.\nHere's an example error from catalina.out:\n\nJul 18, 2005 5:40:51 PM org.apache.catalina.cluster.tcp.SimpleTcpCluster\nmemberDisappeared\nINFO: Received member\ndisappeared:org.apache.catalina.cluster.mcast.McastMember[tcp://10.0.0.15:4002,10.0.0.15,4002,\nalive=1018550]\nJul 18, 2005 5:40:51 PM org.apache.catalina.cluster.tcp.DataSender pushMessage\nINFO: resending 782 bytes to 10.0.0.15:4002 from 55784\njava.net.SocketException: Socket closed\n        at java.net.SocketInputStream.read(SocketInputStream.java:162)\n        at java.net.SocketInputStream.read(SocketInputStream.java:182)\n        at\norg.apache.catalina.cluster.tcp.DataSender.waitForAck(DataSender.java:542)\n        at\norg.apache.catalina.cluster.tcp.DataSender.pushMessage(DataSender.java:504)\n        at\norg.apache.catalina.cluster.tcp.FastAsyncSocketSender$FastQueueThread.run(FastAsyncSocketSender.java:401)\n\n\nA typical cluster config is:\n        <Cluster className=\"org.apache.catalina.cluster.tcp.SimpleTcpCluster\"\nname=\"hydraNation\"\n                 managerClassName=\"org.apache.catalina.cluster.session.DeltaManager\"\n                 expireSessionsOnShutdown=\"false\"\n                 useDirtyFlag=\"true\"\n                 notifyListenersOnReplication=\"true\">\n\n            <Membership\n                className=\"org.apache.catalina.cluster.mcast.McastService\"\n                mcastAddr=\"228.0.0.4\"\n                mcastPort=\"45564\"\n                mcastFrequency=\"700\"\n                mcastDropTime=\"5000\"/>\n\n            <Receiver\n                className=\"org.apache.catalina.cluster.tcp.Jdk13ReplicationListener\"\n                tcpListenAddress=\"10.0.0.12\"\n                compress=\"false\"\n                tcpListenPort=\"4002\"\n                />\n\n            <Sender\n                  className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                  replicationMode=\"fastasyncqueue\"\n                  compress=\"false\"\n                  doProcessingStats=\"true\"\n                  queueTimeWait=\"true\"\n                  maxQueueLength=\"1000\"\n                  queueDoStats=\"true\"\n                  queueCheckLock=\"true\"\n                  ackTimeout=\"15000\"\n                  waitForAck=\"true\"\n                  autoConnect=\"false\"\n                  keepAliveTimeout=\"@node.ackTimeout@\"\n                  keepAliveMaxRequestCount=\"-1\"/>\n\n            <Valve className=\"org.apache.catalina.cluster.tcp.ReplicationValve\"\n                  \nfilter=\".*\\.gif;.*\\.js;.*\\.jpg;.*\\.png;.*\\.htm;.*\\.html;.*\\.css;.*\\.txt;\"/>\n\n            <Deployer className=\"org.apache.catalina.cluster.deploy.FarmWarDeployer\"\n                      tempDir=\"/tmp/war-temp/\"\n                      deployDir=\"/tmp/war-deploy/\"\n                      watchDir=\"/tmp/war-listen/\"\n                      watchEnabled=\"false\"/>\n        </Cluster>\n\n\nany ideas?",
            "date": "20050718T23:42:46",
            "id": 4
        },
        {
            "author": null,
            "body": "Cluster is design that you used cluster domains.\nSpilt your cluster to pairs of backup nodes and used the new\nmod_jk 1.2.14 domain attribute to dispatch fail nodes to the\nright backup. Every Cluster domain use other McastAddress or McastPort.\n\nAlso your membership attribute are a probleme in real production env.\n                mcastFrequency=\"700\"\n                mcastDropTime=\"5000\"/>\n\nUsed instead:\n                mcastFrequency=\"1000\"\n                mcastDropTime=\"30000\"/>\n\nPeter",
            "date": "20050719T10:45:38",
            "id": 5
        }
    ],
    "component": "Catalina:Cluster",
    "description": "Readme - Clustering Jakarta Tomcat 5.5.9 fix\nDate: 10.04.2005\nAuthor: Peter Rossbach\n\nAfter some load test the current clustering shows some bugs.\n\n=>\n- At some case the complete cluster hang ( Linux Suse 9.1, Windows XP)\n- Memory consume with fastasyncqueue is to high under heavy load.\n       Probleme with waitAck and sync DataSender#pushMessage\n- No request processing sometimes.\n       Trouble with SessionManager background thread and wrong autoConnect sync\nblock\n\nHere my fixes\n\nDataSender\n*   No sync pushMessage with async background thread\n*   KeepAliveMaxRequestCount set to -1 ( disable), only timebased keep alive\n*   Socket Open Counter afer successfull open!\n*   More Trace messages\n*   better wait ack handling\n\nFastAsyncSocketSender\n*   move counter queuedNrOfBytes to background thread\n*   snyc only the counter and not the message queueing ( very important perf gap)\n*   More Trace messages\n\nAsyncSocketSender\n*   move counter queuedNrOfBytes to background thread\n*   snyc only the counter and not the message queueing ( very important perf gap)\n*   More Trace messages\n\nJdk13ReplicationListener\n*   Add Socket Listener -- Rename at > 5.5.9 to SocketReplicationListener\n*   More Trace messages to better understanding\n\nReplicationTransmitter\n*   set autoConnect to false ( Very bad thing second thread can close a socket\nthat other thread can use!)\n*   sync autoConnect sender check\n\nReplicationListener\n*   More Trace messages to better understanding\n\nPooledSocket\n*   sendMessage used autoConnect ( not heavy tested)\n\n===========================================================================S\nWith 5.5.9 are following cluster sender config possible:\n\n### pooled ###\n             <Sender\n                  className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                  replicationMode=\"pooled\"\n\t\t\t\t  ackTimeout=\"@node.ackTimeout@\"/>\n \n### fastasyncqueue ###\n// When you set compress=\"false\" you mus also do that at receiver!            \n// Make test that maxQueueLength is big!\n             <Sender\n                  className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                  replicationMode=\"fastasyncqueue\"\n                  compress=\"false\"\n                  doProcessingStats=\"true\"\n                  queueTimeWait=\"true\"\n                  maxQueueLength=\"1000\"\n                  queueDoStats=\"true\"\n                  queueCheckLock=\"true\"\n\t\t\t\t  ackTimeout=\"15000\"\n                  waitForAck=\"true\"\n                  autoConnect=\"false\"\n                  keepAliveTimeout=\"@node.ackTimeout@\"\n                  keepAliveMaxRequestCount=\"-1\"/>\n\n### asynchronous ###\n// When you set compress=\"false\" you mus also do that at receiver!            \n             <Sender\n                  className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                  replicationMode=\"asynchronous\"\n                  compress=\"false\"\n\t\t\t\t  ackTimeout=\"15000\"\n                  waitForAck=\"true\"\n                  autoConnect=\"false\"\n                  keepAliveTimeout=\"@node.ackTimeout@\"\n                  keepAliveMaxRequestCount=\"-1\"/>\n\n\n### synchronous ###\n             <Sender\n                  className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                  replicationMode=\"synchronous\"\n                  compress=\"false\"\n\t\t\t\t  ackTimeout=\"15000\"\n                  waitForAck=\"true\"\n                  keepAliveTimeout=\"@node.ackTimeout@\"\n                  keepAliveMaxRequestCount=\"-1\"/>\n\nWith this fix I implement a simple Socket Receiver that not used NIO!\nJdk13ReplicationListener\nAt > 5.5.9 I change the name to SocketReplicationListener\n               <Receiver \n                 \nclassName=\"org.apache.catalina.cluster.tcp.Jdk13ReplicationListener\"\n                  tcpListenAddress=\"@node.clustertcp.address@\"\n                  tcpListenPort=\"@node.clustertcp.port@\"\n                  />\n==========================================================\nCompile from source,\n\n* get Tomcat 5.5.9 binary release\n* get this fix pack jakarta-tomcat-5.5.9-cluster-fix-src-<date>.tar.gz and extract.\n* edit build.properties set catalina.home to you 5.5.9 release\ncatalina.home=d:/server/jakarta-tomcat-5.5.9\n* than compile and install\nant compile install\n\n* Install manually\nCopy build/classes to your tomcat release server/classes\n\n==========================================================\n                  \nSorry for the release trouble, :-(\nPeter\n\ns. attachment to this bug report",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "34389",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P2 blocker",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Tomcat 5.5.9 Cluster fix pack",
    "systemSpecification": true,
    "version": "5.5.9"
}