{
    "comments": [
        {
            "author": null,
            "body": "I think you should plan to investigate the issue yourself, as:\n- AFAIK large files work on the download direction (all people care about is\nthat when dealing with large files)\n- few people care about WebDAV functionality beyond basic stuff",
            "date": "20050802T19:54:04",
            "id": 0
        },
        {
            "author": null,
            "body": "(In reply to comment #1)\n> I think you should plan to investigate the issue yourself, as:\n> - AFAIK large files work on the download direction (all people care about is\n> that when dealing with large files)\n\nDo you mean that people split their big files ? It may be a solution but \nit is not always possible !\n\n> - few people care about WebDAV functionality beyond basic stuff\n\nI have made some more tests, and it happen also with a simple tomcat app\nwithout webdav functionality. Files between 2Gb and 4Gb do not produce\nthe problem, only files > 4 Gb.\n\nRegards\n\n",
            "date": "20050804T14:39:02",
            "id": 1
        },
        {
            "author": null,
            "body": "I wrote (which I think was simple to understand): \"I think you should plan to\ninvestigate the issue yourself\". This means more than doing tests: start\nthinking about at least HTTP dumps as the minimum.",
            "date": "20050804T14:58:06",
            "id": 2
        },
        {
            "author": null,
            "body": "I uploaded and downloaded (the same file) a 2614816768 byte file without an issue.\n\nUsing winxp and tomcat 5.1.{CVS HEAD}\n\n",
            "date": "20050804T16:02:24",
            "id": 3
        },
        {
            "author": null,
            "body": "idiot ... i meant 5.5.{cvs head}",
            "date": "20050804T16:07:30",
            "id": 4
        },
        {
            "author": null,
            "body": "He said only > 4GB was an issue. I think we should wait for at least HTTP dumps\nbefore we start testing this issue.",
            "date": "20050804T16:10:52",
            "id": 5
        },
        {
            "author": null,
            "body": ".",
            "date": "20050804T17:06:01",
            "id": 6
        },
        {
            "author": null,
            "body": "Although it is not possible to know for sure without appropriate information,\nthere was a rather obvious defect in DefaultServlet, which causes a bad\ncontent-length for ranges > 2GB. As the only reasonable strategy for\ntransferring such files is to use many single range requests, this was not\ntested well.",
            "date": "20050804T17:10:17",
            "id": 7
        }
    ],
    "component": "Servlets:WebDAV",
    "description": "in the webdav tomcat sample application i have copied a very \nbig file ( 6 Gigabytes ) \n\ni can see the file when i browse the directory with a browser \nand the size of the file is correctly displayed .\n\nwhen i try to download this file the resulting file is silently truncated\nto 2 Gigabytes\n\ni have tried several web clients to download ( firefox, wget, curl, cadaver ) \non both linux and windows platform, with always the same truncated result.\n\non the server side i have tested with both win2003 and linuxFC3 with \nboth tomcat5.0.28 and tomcat5.5.10 and with both java1.4.2_08 and java1.5.0_04\n( to be honest, i have not tested all the possible combinations !) \nbut every test produce the truncate problem.\n\nRegards",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "35978",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "P2 normal",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "tomcat truncate very big files",
    "systemSpecification": true,
    "version": "5.5.10"
}