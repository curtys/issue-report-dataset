{
    "comments": [
        {
            "author": null,
            "body": "The cause for this seems to be that in JspContextWrapper (which is used as the\nPageContext implementation in a tag file), the getVariableResolver() method\nreturns null.\n",
            "date": "20030207T02:08:06",
            "id": 0
        },
        {
            "author": null,
            "body": "Okay, I've verified that relaying getVariableResolver() in JspContextWrapper to\nthe original JspContext fixes this problem, i.e.:\n\n  public VariableResolver getVariableResolver() {\n    invokingJspCtxt.getVariableResolver();\n  }\n",
            "date": "20030207T02:17:26",
            "id": 1
        },
        {
            "author": null,
            "body": "The suggested fix would only work for attributes that are alredy defined in the\ninvoking context, and not for those that are defined locally in the tag files. \nI have a fix that I am now testing, and would commit that if it works.",
            "date": "20030207T02:40:33",
            "id": 2
        },
        {
            "author": null,
            "body": "Nae, this is not the complete solution. Now the JSP page scope is used when\nresolving variables in the tag file. I guess JspContextWrapper needs its own\nVariableResolver that knows about the tag file's local page scope, but how fix\nthat is beyond what I can figure out at the moment ;-)",
            "date": "20030207T02:46:00",
            "id": 3
        },
        {
            "author": null,
            "body": "Thanks for reporting this problem and pointing me to the right direction.",
            "date": "20030207T03:03:28",
            "id": 4
        }
    ],
    "component": "Jasper",
    "description": "Something is fundamentally wrong with EL evaluation in tag files, a bug that\nmust have been introduced recently (a nightly build from last week worked fine).\n\nThis tag file:\n\n  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jstl/core_rt\" %>\n  <%@ tag body-content=\"scriptless\" %>\n\n  Static text and c:out: <c:out value=\"static text\" />\n  <br>\n  EL expr with variable and c:out: \n  <c:out value=\"${pageContext.request.servletPath}\" />\n  <br>\n  EL expr with variable in text: ${pageContext.request.servletPath}\n  <br>\n  EL expr with static text: ${'static text'}\n\nproduces this output when invoked from a JSP page:\n\n  Static text and c:out: static text\n  EL expr with variable and c:out:\n  EL expr with variable in text:\n  EL expr with static text: static text \n\nIn other words, evaluation of an EL expression that contains variables (I've\ntested with other variables than pageContext, used here) results in the empty\nstring. An EL expression that only contains static text is evaluated correctly.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "16865",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P3 blocker",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "EL expressions in tag files no longer works",
    "systemSpecification": false,
    "version": "Nightly Build"
}