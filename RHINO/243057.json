{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "With the introduction of RefCallable interface Rhino allows to define native\nfunctions that can be used as rvalue so one can define a native function foo so\nfoo() = bar or even foo() += q works.\n\nAs regarding the default option it is already doable throw overriding\nScriptable.get method so I close the bug as fixed.",
            "date": "20050801T10:37:50",
            "id": 0
        }
    ],
    "component": "Compiler",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; T312461; YComp 5.0.0.0; .NET CLR 1.1.4322)\nBuild Identifier: \n\nThis report is a follow up of the newsgroup discussion \nhttp://groups.google.com/groups?hl=en&lr=&ie=UTF-8&oe=UTF-\n8&safe=off&frame=right&th=b21c4e09e133d24c&seekm=409C9F5A.2070208%\n40fastmail.fm#link8\nand is a new feature request.\n\nIn MS JScript you can assign to a construction that looks like a function call, \nfor example in ASP:\n    Session.Value(\"foo\") = \"bar\";\nwhich at runtime could be translated by Rhino to\n    Session.jsSet_Value(\"foo\", \"bar\");\n\nThe rule is that a property will have n arguments for the getter, and n+1 \narguments for the setter; for the setter, the last argument is rhs.\n\nAlso in JScript you can write\n    Session(\"foo\") = \"bar\";\nwhich translates to the same thing, because Value is marked as default property.\n\nA solution to mark getters/setters as default could be to implement a new \nprefix, so the Java class to be scripted will have \n    Session.jsGetDefault_Value(String key)\nand\n    Session.jsSetDefault_Value(String key, Object val)\n\nWhen encountering a construct like\n    var str = Session(\"foo\")\nthe runtime could check first if Session is instanceof Callable. If it is not, \nit can continue the introspection with checking whether Session has a default \ngetter matching the number of arguments.\n\n\n\nReproducible: Always\nSteps to Reproduce:\n1. compile Session.Value(\"foo\") = \"bar\";\n\n\nActual Results:  \njsc reports: Invalid assignment left-hand side.\n\n\nExpected Results:  \nCheck if the Session object, a Java class provided by the programmer, has a \nsetter named jsSet_Value(String key, Object rhs);\n\n\nThings can get more complicated, for example consider a call to ADODB.Recordset\n    var str = rs(\"field\");\nthat should translate in\n    var str = rs.jsGetDefault_Fields().jsGetDefault_Item\n(\"field\").jsGetDefault_Value();",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "243057",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "enhancement - ability to assign to Java function result and default properties",
    "systemSpecification": true,
    "version": "other"
}