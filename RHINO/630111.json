{
    "comments": [
        {
            "author": "brunofr@olympum.com",
            "body": "Created attachment 508643\nDetermine major.minor version using java.lang.Object.class\n\nInstead of using ClassFileWriter.class to determine the major.minor version, we can use java/lang/Object.class since the runtime that loaded it should be able to load a generated class.",
            "date": "20110201T02:40:36",
            "id": 0
        },
        {
            "author": "hannesw@gmail.com",
            "body": "Turns out the problem was due to InputStream.read() on the class resource only reading two bytes the first time around. Fixed in CVS.",
            "date": "20110301T23:16:56",
            "id": 1
        }
    ],
    "component": "Compiler",
    "description": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-us) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4\nBuild Identifier: CVS HEAD\n\nWhen setting ctx.setOptimizationLevel(9) to force compilation, generated class files under JDK7 b127 have major.minor version 0.0 and fail to load.\n\nReproducible: Always\n\nSteps to Reproduce:\nExecute test code:\n\n        ContextFactory contextFactory = ContextFactory.getGlobal();\n        contextFactory.call(new ContextAction() {\n            @Override\n            public Object run(Context ctx) {\n                ScriptableObject scope = ctx.initStandardObjects(null, true);\n                ctx.setOptimizationLevel(9);\n                return ctx.evaluateString(scope, \"var h = 'test'\", \"test\", 0, null);\n            }\n        });\nActual Results:  \njava.lang.UnsupportedClassVersionError: org/mozilla/javascript/gen/test_1 : Unsupported major.minor version 0.0\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:795)\n\tat org.mozilla.javascript.DefiningClassLoader.defineClass(DefiningClassLoader.java:62)\n\tat org.mozilla.javascript.optimizer.Codegen.defineClass(Codegen.java:160)\n\tat org.mozilla.javascript.optimizer.Codegen.createScriptObject(Codegen.java:115)\n\tat org.mozilla.javascript.Context.compileImpl(Context.java:2442)\n\tat org.mozilla.javascript.Context.compileString(Context.java:1367)\n\tat org.mozilla.javascript.Context.compileString(Context.java:1356)\n\tat org.mozilla.javascript.Context.evaluateString(Context.java:1108)\n\tat nodus.js.JdkBug$1.run(JdkBug.java:37)\n\nExpected Results:  \nfinish without an error\n\njava version \"1.7.0-ea\"\nJava(TM) SE Runtime Environment (build 1.7.0-ea-b127)\nJava HotSpot(TM) Client VM (build 20.0-b06, mixed mode, sharing)\n\nopenjdk version \"1.7.0-internal\"\nOpenJDK Runtime Environment (build 1.7.0-internal-b00)\nOpenJDK 64-Bit Server VM (build 20.0-b06, mixed mode)",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "630111",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- minor",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Codegen optimizer fails with Unsupported major.minor version 0.0 on JDK7",
    "systemSpecification": false,
    "version": "other"
}