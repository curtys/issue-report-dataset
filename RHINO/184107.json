{
    "comments": [
        {
            "author": "pschwartau@meer.net",
            "body": "Testcase added to JS testsuite:\n\n      mozilla/js/tests/js1_5/Scope/regress-184107.js\n\nCurrently passing in SpiderMonkey. In Rhino, the test fails in both\ncompiled and interpreted modes. As Igor states, function expressions\n\n      f = function()...\n\nare correctly created by Rhino in global scope, but function statements\n\n      function f() ...\n\nare being created in local scope.",
            "date": "20021210T00:32:50",
            "id": 0
        },
        {
            "author": "user@apochta.com",
            "body": "Created attachment 109964\nputting function expression statements always into activation object ignoring scopes introduced by with\n\nAfter the patch js1_5/Scope/regress-185485.js will fail as the patch follows SM\npath there and SM copes with this Ecma extension in a different way as Netscape\n4.* and it was decided that it was OK to keep the current SM behavior in this\nobscure case.",
            "date": "20021223T00:26:45",
            "id": 1
        },
        {
            "author": "user@apochta.com",
            "body": "I commited the fix.",
            "date": "20021223T15:09:34",
            "id": 2
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Verified FIXED. \n\nThe above testcase, js1_5/Scope/regress-184107.js, now passes in \nboth Rhino interpreted and comiled modes.\n\nThe testcase js1_5/Scope/regress-185485.js has now been corrected.\nIt now passes in Rhino as well as in SpiderMonkey -",
            "date": "20030108T22:44:31",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R4",
            "date": "20040213T12:20:25",
            "id": 4
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003\n\nWhen evaluationg the following test:\n\nvar x = {y:10};\nwith (x) {\n\tfunction f()  {\n\t\treturn y;\n\t}\n}\n\nvar result = f();\n\nvar ok1 = (x.f === undefined)\nprint(ok1)\n\nvar ok2 = (result === x.y);\nprint(ok2)\n\n\nRhino incorrectly put f into the x object instead of the global scope. \n\nThe test would work as expected if function f()... would be replaced by f =\nfunction()...\n\n\n\nReproducible: Always\n\nSteps to Reproduce:",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "184107",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "with(...) { function f ...} should set f in the global scope",
    "systemSpecification": true,
    "version": "other"
}