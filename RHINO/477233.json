{
    "comments": [
        {
            "author": "martin@blom.org",
            "body": "I think this patch fixes the problem: \n\nRCS file: /cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/optimizer/Codegen.java,v\nretrieving revision 1.264.2.2\ndiff -u -r1.264.2.2 Codegen.java\n--- src/org/mozilla/javascript/optimizer/Codegen.java\t12 Dec 2008 10:37:25 -0000\t1.264.2.2\n+++ src/org/mozilla/javascript/optimizer/Codegen.java\t18 Mar 2009 22:52:19 -0000\n@@ -2787,6 +2787,7 @@\n                       case Token.REF_NS_NAME:\n                         methodName = \"nameRef\";\n                         signature = \"(Ljava/lang/Object;\"\n+                                    +\"Ljava/lang/Object;\"\n                                     +\"Lorg/mozilla/javascript/Context;\"\n                                     +\"Lorg/mozilla/javascript/Scriptable;\"\n                                     +\"I\"",
            "date": "20090318T22:55:19",
            "id": 0
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Patch committed, thanks.\n\nChecking in src/org/mozilla/javascript/optimizer/Codegen.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/optimizer/Codegen.java,v  <\n--  Codegen.java\nnew revision: 1.271; previous revision: 1.270\ndone\nRCS file: /cvsroot/mozilla/js/rhino/testsrc/doctests/477233.doctest,v\ndone\nChecking in testsrc/doctests/477233.doctest;\n/cvsroot/mozilla/js/rhino/testsrc/doctests/477233.doctest,v  <--  477233.doctest\n\ninitial revision: 1.1\ndone",
            "date": "20090327T02:30:56",
            "id": 1
        }
    ],
    "component": "E4X",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.9.1b2pre) Gecko/20081123 Minefield/3.1b2pre\nBuild Identifier: rhino1_7R2-RC3.zip\n\nI've run into a problem with E4X filters on namespaced elements. The\nfollowing example demonstrates the problem:\n\nvar xml = <atom:feed xmlns:atom=\"http://www.w3.org/2005/Atom\">\n            <atom:entry>\n              <atom:title>One</atom:title>\n            </atom:entry>\n            <atom:entry>\n              <atom:title>Two</atom:title>\n            </atom:entry>\n           </atom:feed>;\n\nif (1) {\n  var atom = new Namespace(\"http://www.w3.org/2005/Atom\");\n  print(xml.atom::entry.(atom::title == \"One\"));\n}\nelse {\n  default xml namespace = \"http://www.w3.org/2005/Atom\";\n  print(xml.entry.(title == \"One\"));\n  default xml namespace = \"\";\n}\n\nThe first part of the if () statement results in the following stack\ntrace when optimization is turned on (tested with rhino1_7R2-RC3.zip).\nThe second part works.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Run provided example using \"java -jar js.jar bad-filter.js\"\n\nActual Results:  \n        at org.mozilla.javascript.optimizer.Codegen.badTree(Codegen.java:1273)\n        at org.mozilla.javascript.optimizer.BodyCodegen.visitIfJumpEqOp(Codegen.java:4429)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateExpression(Codegen.java:2589)\n        at org.mozilla.javascript.optimizer.BodyCodegen.visitDotQuery(Codegen.java:4758)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateExpression(Codegen.java:2805)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateCallArgArray(Codegen.java:3551)\n        at org.mozilla.javascript.optimizer.BodyCodegen.visitStandardCall(Codegen.java:3314)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateExpression(Codegen.java:2271)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateStatement(Codegen.java:2118)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateStatement(Codegen.java:1937)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateStatement(Codegen.java:1937)\n        at org.mozilla.javascript.optimizer.BodyCodegen.generateBodyCode(Codegen.java:1363)\n        at org.mozilla.javascript.optimizer.Codegen.generateCode(Codegen.java:327)\n        at org.mozilla.javascript.optimizer.Codegen.compileToClassFile(Codegen.java:182)\n        at org.mozilla.javascript.optimizer.Codegen.compile(Codegen.java:91)\n        at org.mozilla.javascript.Context.compileImpl(Context.java:2391)\n        at org.mozilla.javascript.Context.compileString(Context.java:1359)\n        at org.mozilla.javascript.Context.compileString(Context.java:1348)\n        at org.mozilla.javascript.tools.shell.Main.loadScriptFromSource(Main.java:495)\n        at org.mozilla.javascript.tools.shell.Main.processFileSecure(Main.java:483)\n        at org.mozilla.javascript.tools.shell.Main.processFile(Main.java:452)\n        at org.mozilla.javascript.tools.shell.Main.processSource(Main.java:443)\n        at org.mozilla.javascript.tools.shell.Main.processFiles(Main.java:196)\n        at org.mozilla.javascript.tools.shell.Main$IProxy.run(Main.java:117)\n        at org.mozilla.javascript.Context.call(Context.java:515)\n        at org.mozilla.javascript.ContextFactory.call(ContextFactory.java:507)\n        at org.mozilla.javascript.tools.shell.Main.exec(Main.java:179)\n        at org.mozilla.javascript.tools.shell.Main.main(Main.java:157)\n\n\nExpected Results:  \n<atom:entry xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  <atom:title>One</atom:title>\n</atom:entry>",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "477233",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- major",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "E4X filters with namespaces codegen bug",
    "systemSpecification": true,
    "version": "other"
}