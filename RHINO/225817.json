{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 135575\nFix to pass js1_5/Exceptions/regress-50447.js\n\nRhino CVS tip already contains code to put fileName and lineNumber properties.\nI added that code to ScriptRuntime.getCatchObject together with code to create\nJS Error objects from Java exceptions only when scripts catches exceptions. But\nit did not help to pass js1_5/Exceptions/regress-50447.js and the patch fixes\nthat so hopefully the patch makes Rhino matching SpiderMonkey behavior.",
            "date": "20031115T18:56:15",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 135590\nFixing typo in the patch that caused js1_5/Object/regress-96284-001.js to fail\n\nThe SpiderMonkey test suite is awesome!",
            "date": "20031115T21:10:03",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix, but I keep the bug open since I think it would be resonable\nto add fileName and lineNumber properties to JS objects representing caught Java\nexecptions.",
            "date": "20031117T09:51:28",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 135705\nAdding fileName and lineNumber for Java execptions\n\nWith the patch when I run:\n\ntry {\n\tnull.value;\n} catch (e) {\n\tprint(format_ex(e));\n}\n\ntry {\n\tnew java.util.Vector(-1);\n} catch (e) {\n\tprint(format_ex(e));\n}\n\nfunction format_ex(e)\n{\n\treturn e.fileName+\":\"+e.lineNumber+\": \"+e.name+\": \"+e.message;\n}\n\nI get:\n\n/tmp/x.js:2: TypeError: Cannot read property \"value\" from null\n/tmp/x.js:8: JavaException: java.lang.IllegalArgumentException: Illegal\nCapacity: -1\n\nThe patch adds new exception constructor, JavaException and puts the original\njava exception as javaException property of the catch object so the following\nwould also works:\n\ntry {\n\tnew java.util.Vector(-1);\n} catch (e if JavaException) {\n\te.javaException.printStackTrace();\n}",
            "date": "20031117T10:08:58",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "I commiteed the last patch.",
            "date": "20031117T11:08:11",
            "id": 4
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 135706\nPatch to remove skipping of js1_5/Exceptions/regress-50447.js from test suite\n\nWith the patches committed the test cases passes fully OK.",
            "date": "20031117T11:10:12",
            "id": 5
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Thanks, Igor. Patch checked in for rhino-n.tests:\n\n[//d/JS_TRUNK/mozilla/js/tests] cvs ci rhino-n.tests\nChecking in rhino-n.tests;\n/cvsroot/mozilla/js/tests/rhino-n.tests,v  <--  rhino-n.tests\nnew revision: 1.57; previous revision: 1.56\ndone\n\n\nMarking Verified FIXED. Testcase js1_5/Exceptions/regress-50447.js\nabove now passes in the Rhino shell, in compiled/interpreted modes.",
            "date": "20031117T16:51:55",
            "id": 6
        },
        {
            "author": "igor@mir2.org",
            "body": "Trageting as resolved against 1.5R5",
            "date": "20040213T11:35:03",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "It would be nice if Rhino would define fileName and lineNumber in error objects\nas SpiderMonkey does.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "225817",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Support for fileName/lineNumber properties in Error objects",
    "systemSpecification": false,
    "version": "other"
}