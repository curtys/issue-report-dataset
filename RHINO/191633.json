{
    "comments": [
        {
            "author": "user@apochta.com",
            "body": "Created attachment 113335\nTest case: calling eval on a string with 40000 lines of // comments",
            "date": "20030202T16:29:49",
            "id": 0
        },
        {
            "author": "user@apochta.com",
            "body": "Created attachment 113336\nReplace tail recursion in TokenStream.getToken by a loop\n\nThe patch also removes unused TokenStream.isJSIdentifier() and adds few\noptimizations not to call java.lang.Character methods for ASCII characters.\n\nIn addition patch makes sure that different occurrences of the same string\nreturned as the same String instance which allows to speedup the interpreter\nmode as different functions from a single script use the same string instances\nfor equals strings which reduces the need to call String.equals in various\nruntime hash tables.",
            "date": "20030202T16:41:05",
            "id": 1
        },
        {
            "author": "user@apochta.com",
            "body": "As this bug is not a regression since 1.5R3, its fixing should wait 1.5R4 release.",
            "date": "20030202T16:44:28",
            "id": 2
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Testcase added to JS testsuite:\n\n      mozilla/js/tests/js1_5/Regress/regress-191633.js\n\nThis passes in SpiderMonkey, but fails in Rhino as Igor indicated.\nSince the failure output is so enormous, I have temporarily added\nthe test to the rhino-n.tests skip list:\n\n      /cvsroot/mozilla/js/tests/rhino-n.tests,v  <--  rhino-n.tests\n      new revision: 1.52; previous revision: 1.51\n\nWe can remove it from the skip list once this fix is checked in -",
            "date": "20030203T20:17:53",
            "id": 3
        },
        {
            "author": "user@apochta.com",
            "body": "I commited the fix.",
            "date": "20030214T20:21:32",
            "id": 4
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Verified FIXED.\n\nThe above testcase now passes in the Rhino shell. I tested\noptimization levels -1, 0, 1, and 9.\n\nI will now remove the testcase from the rhino-n.tests skip list -",
            "date": "20030214T22:35:02",
            "id": 5
        },
        {
            "author": "pschwartau@meer.net",
            "body": "rhino-n.tests has now been updated:\n\nChecking in rhino-n.tests;\n/cvsroot/mozilla/js/tests/rhino-n.tests,v  <--  rhino-n.tests\nnew revision: 1.54; previous revision: 1.53\ndone",
            "date": "20030214T22:38:04",
            "id": 6
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R5",
            "date": "20040213T12:12:10",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003\nBuild Identifier: Rhino CVS from 2003-02-02\n\nCurrently Rhino tokenizer calls itself recursively to process single line\ncomments which can lead to too deep recursion when processing many lines of //\ncomments.\n\nReproducible: Always\n\nSteps to Reproduce:\n1.Run Rhino shell against the following attached JavaScript file\n\nActual Results:  \nException in thread \"main\" java.lang.StackOverflowError\n        at org.mozilla.javascript.TokenStream.getToken(TokenStream.java:753)\n        at org.mozilla.javascript.TokenStream.getToken(TokenStream.java:1197)\n\n\nExpected Results:  \nSingle true should be printed",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "191633",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Rhino tokenizer should not use recursion",
    "systemSpecification": true,
    "version": "other"
}