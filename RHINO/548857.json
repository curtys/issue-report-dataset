{
    "comments": [
        {
            "author": "hannesw@gmail.com",
            "body": "I committed the change you proposed. Thanks!\n\nhttps://github.com/mozilla/rhino/commit/a6c0bec9132f4b9ac286a2b062b0bd78503c27c2",
            "date": "20111119T14:52:25",
            "id": 0
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_2; en-us) AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10\nBuild Identifier: 1.7R2\n\nDToA.JS_dtoa() has a line:\n  x = (i > 32) ? word0(d) << (64 - i) | word1(d) >>> (i - 32) : word1(d) << (32 - i);\nthis should be:\n  x = (i > 32) ? ((long) word0(d)) << (64 - i) | word1(d) >>> (i - 32) : ((long) word1(d)) << (32 - i);\n\nIn the case of Double.longBitsToDouble(2), this  eventually leads to:\n  S = pow5mult(S, s5);\ntrying to compute 5^2147483647, which almost literally takes forever.\n\nIt would probably be good to audit the other uses of word0 and word1.\n\nReproducible: Always\n\nSteps to Reproduce:\ndouble value = Double.longBitsToDouble(2);\nScriptRuntime.toString(value));\nSystem.out.println(\"all done\");\nActual Results:  \nHangs\n\nExpected Results:  \nPrints \"all done\"",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "548857",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- critical",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "hang converting number to string",
    "systemSpecification": false,
    "version": "other"
}