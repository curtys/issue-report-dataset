{
    "comments": [
        {
            "author": "pschwartau@meer.net",
            "body": "cc'ing Igor -",
            "date": "20030505T21:15:42",
            "id": 0
        },
        {
            "author": "timothy.folks@edgescape.com",
            "body": "Just clarifying: in the sample Foo class posted with the initial report, void \nbar should be *public* void bar. It was a typo. The public void bar method \ngenerates the error message.",
            "date": "20030506T03:44:32",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "1. Inability to use instances of Java String obtained via LiveConnect as an\nargument to Java method taking CharSequence parameter. This is a regression\nsince Rhino 1.5R3 and I will file a separated bug for that. For example in 1.5R3\nthe following prints 4 as expected but in 1.5R4* it gives an exception:\n\nvar length = Packages.test.length(java.lang.String(\"test\"))\nprint(length)\n\nwhere test is \n\npublic class test\n{\n\tpublic static int length(CharSequence cs)\n\t{\n\t\treturn cs.length();\n\t}\n}\n\n\n2. Inability to use JS primitive strings as an argument to Java method taking\nCharSequence parameter (this bug). It never worked so it is just a new feature\nto support. Note that the fact that JS primitive strings are represented\ninternally by instances of java.lang.String does not matter here since\nLiveConnect support treats them in a very different way than instances of\njava.lang.String exposed to scripts via LiveConnect.",
            "date": "20030506T08:17:01",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "Changing title to better reflect the bug nature",
            "date": "20030506T08:19:00",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 122570\nFix: use type.isInstance(str) to check if str can be used as argument with the given type\r\n\n\n\nThe fix replaces explicit checks to see if type is Object, Serializable or\nComparable by more generic calls to type.isInstance(str) which covers\nCharSequence case as well.",
            "date": "20030506T12:42:51",
            "id": 4
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20030506T15:36:06",
            "id": 5
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Verified FIXED.\n\nBelow, I compare Rhino1_5R3 vs. Rhino1_5R5pre before and after\nthe fix. For \"//Do something\" in Tim's testcase above, I put:\n\n  System.out.println(\"\\nYOU HAVE FOUND THE Foo.bar METHOD\\n\");\n\n\n------------------------------  Rhino1_5R3:  ------------------------------ \n[ ] java -classpath \".;D:/JS_TRUNK/mozilla/js/rhino/build/rhino1_5R3/js.jar\" \n         org.mozilla.javascript.tools.shell.Main\nRhino 1.5 release 3 2002 01 24\njs> importClass(Packages.Foo);\njs> var o = new Foo;\njs> o\nFoo@540408\n\n------------------ PROVIDING A JS PRIMITIVE STRING ------------------\njs> o.bar('test');\njs: \"<stdin>\", line 4: Can't find method Foo.bar(string).\n\n--------------------- PROVIDING A JAVA STRING  ----------------------\njs>o.bar(java.lang.String(\"test\"))\n\nYOU HAVE FOUND THE Foo.bar METHOD\n\n\n\n\n--------------------------  Rhino1_5R5pre BEFORE  ---------------------------\n[ ] java -classpath \".;D:/JS_TRUNK/mozilla/js/rhino/build/rhino1_5R5pre/js.jar\" \n         org.mozilla.javascript.tools.shell.Main\nRhino 1.5 release 5 0000 00 00\njs> importClass(Packages.Foo);\njs> var o = new Foo;\njs> o\nFoo@18a7efd\n\n------------------ PROVIDING A JS PRIMITIVE STRING ------------------\njs> o.bar('test');\njs: \"<stdin>\", line 4: Can't find method Foo.bar(string).\n\n--------------------- PROVIDING A JAVA STRING  ----------------------\njs> o.bar(java.lang.String(\"test\"))\njs: \"<stdin>\", line 6: Can't find method Foo.bar(string).\n\n\n\n\n--------------------------  Rhino1_5R5pre AFTER  ---------------------------\n[ ] java -classpath \".;D:/JS_TRUNK/mozilla/js/rhino/build/rhino1_5R5pre/js.jar\"  \n          org.mozilla.javascript.tools.shell.Main\nRhino 1.5 release 5 0000 00 00\njs> importClass(Packages.Foo);\njs> var o = new Foo;\njs> o\nFoo@18a7efd\n\n------------------ PROVIDING A JS PRIMITIVE STRING ------------------\njs> o.bar('test');\n\nYOU HAVE FOUND THE Foo.bar METHOD\n\n--------------------- PROVIDING A JAVA STRING  ----------------------\njs>o.bar(java.lang.String(\"test\"))\n\nYOU HAVE FOUND THE Foo.bar METHOD",
            "date": "20030507T00:48:46",
            "id": 6
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R5",
            "date": "20040213T11:43:07",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.3) Gecko/20030312\nBuild Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.3) Gecko/20030312\n\nRunning under Java 1.4.1 Calling a Java method that takes a CharSequence and\npassing either a JavaScript string or a Java string results in \"Can't find\n method(string)\" or \"Cannot convert <string> to java.lang.CharSequence\"\nrespectively.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Using Java 1.4 or higher, create a simple Java class:\n\npublic Foo {\n  void bar(CharSequence cs) {\n      //Do something\n  }\n}\n\n2. Compile the class.\n3. Start Rhino with Foo in the classpath.\n4. importClass(Packages.Foo);\n5. var o = new Foo\n6. o.bar('somestring');\n\nActual Results:  \nMessage returned:\n\"<stdin>\", line 3: Can't find method Foo.bar(string).\n\nExpected Results:  \nSimply returned to the shell prompt without error",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "204513",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Not recognizing JS primitive string as CharSequence",
    "systemSpecification": true,
    "version": "other"
}