{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 188127\nFix",
            "date": "20050703T19:17:06",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20050703T19:19:24",
            "id": 1
        },
        {
            "author": "mcbp223@yahoo.com",
            "body": "(In reply to comment #2)\n> I committed the fix\n\nThanks for your quick response.\n\nThere's one more problem that leaves the Context.scratchRefTarget unpopped, I \nthink in \n    ScriptRuntime.callRef() \nthe call to \n    storeScriptable(cx, thisObj); \nshould be changed to \n    ref.pushTarget(cx, ref, thisObj);\nif later on in the generated class you'll use ref.popTarget().\n\nAlso you might want to mark this bug as related to 243057.",
            "date": "20050704T00:22:29",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "(In reply to comment #3)\n> (In reply to comment #2)\n> > I committed the fix\n> \n> Thanks for your quick response.\n> \n> There's one more problem that leaves the Context.scratchRefTarget unpopped, I \n> think in \n>     ScriptRuntime.callRef() \n> the call to \n>     storeScriptable(cx, thisObj); \n> should be changed to \n>     ref.pushTarget(cx, ref, thisObj);\n> if later on in the generated class you'll use ref.popTarget().\n\nThis is not applicable to the CVS head. After 1.6R1 the Ref was changed not to\npass the target argument there. It simplified the implementation for the price\nof forcing Ref objects to store the target themselves.\n\n",
            "date": "20050704T05:57:41",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "*** Bug 301488 has been marked as a duplicate of this bug. ***",
            "date": "20050731T13:19:11",
            "id": 4
        }
    ],
    "component": "Core",
    "description": "From a message that Mike C. posted to netscape.public.mozilla.jseng:\n\nHi,\nI am trying to use the new refGet/refSet features in 1_6R1, but I get an\nerror when trying to load the generated class.\n\nExample:\n// file rassign.js\nSession(\"foo\") = \"bar\";\n\n-------------------------\njava -cp js.jar org.mozilla.javascript.tools.jsc.Main rassign.js\n\njava -cp .;js.jar rassign\n\nException in thread \"main\" java.lang.VerifyError: (class: rassign, method:\n_c0 s\nignature:\n(Lrassign;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scri\nptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Obj\nect;\n) Incompatible argument to function\n-------------------------\n\nIf I decompile the generated class and I recompile it with Sun's javac\n(after converting the DUP instructions in the function exec() to a Java\naccepted call), the class gets loaded correctly.\n\nTested with JRE 1.4.2 and 1.5.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "299539",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Bad bytecode for function assignments",
    "systemSpecification": true,
    "version": "other"
}