{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 187339\nFix\n\nAFAICS this one-line fix is enough to fix the optimizer issue that caused the\nbug. But since the bug was in Rhino since the first public release and survived\nall the changes during last 5 years I am very reluctant to commit the fix\nwithout really good testing.",
            "date": "20050626T14:06:47",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the patch.",
            "date": "20050801T14:03:05",
            "id": 1
        },
        {
            "author": "mcbp223@yahoo.com",
            "body": "(In reply to comment #2)\n\nI still have some infinite loops when I set \nContext.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME true and I use the feature, both \nin the compiler and at runtime. Should this go in a separate bug report?",
            "date": "20050802T22:00:18",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "(In reply to comment #3)\n> (In reply to comment #2)\n> \n> I still have some infinite loops when I set \n> Context.FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME true and I use the feature, both \n> in the compiler and at runtime. Should this go in a separate bug report?\n\nDo you see this with latest CVS tip as well? It contains a few fixes in this\narea. If yes, then file a bug indeed.",
            "date": "20050802T22:05:26",
            "id": 3
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; T312461; YComp 5.0.0.0; .NET CLR 1.1.4322; .NET CLR 2.0.50215)\nBuild Identifier: \n\nRhino compiler gets in a infinite loop when \ncompiled with -opt greather than zero, for this file: \n\n------------------------------\u00ad------------ \n// file infloop.js \nfunction infLoop(inStr) { \n  var i = -1; \n  while ((i = inStr.indexOf(\"%\")) != -1) { \n    inStr = inStr.replace(\"%\", \"\"); \n  } \n\n  return inStr; \n}\n\nvar str = infLoop(\"abc%def\"); \n------------------------------\u00ad------------ \n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. save the above code in a file (infloop.js)\n2. java -cp js.jar org.mozilla.javascript.tools.jsc.Main -opt 1 infloop.js\n\nActual Results:  \nCompiler hangs, with processor at 100%.\nIf compiled with -opt 0 the compilation succeeds and a class file is generated.\n\n\n\nTested and reproduced with 1_5R5 and 1_6R1.\n\nIn 1_5R5 the loop is in the class\norg.mozilla.javascript.optimizer.Optimizer\nin\n    private static void\n    typeFlow(OptFunctionNode fn, Block theBlocks[])\n\nI did not debug with 1_6R1 sources but I assume it is in the same place.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "298786",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Infinite loop when compiling with optimization",
    "systemSpecification": false,
    "version": "other"
}