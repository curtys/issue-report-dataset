{
    "comments": [
        {
            "author": "ludovic.claude@laposte.net",
            "body": "Created attachment 321232\nUnit test for this optimization bug\n\nThis unit test fails with both Rhino 1.6R5 and Rhino 1.7R1 on Windows XP / JDK 1.4.2_13",
            "date": "20080516T11:18:01",
            "id": 0
        },
        {
            "author": "ludovic.claude@laposte.net",
            "body": "Created attachment 321237\nSimpler Unit test for this optimization bug\n\nI removed the class inheritance thing which was causing lots of clutter. The minimal code triggering this bug is actually quite simple.",
            "date": "20080516T11:51:37",
            "id": 1
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Fixed: \n\nChecking in src/org/mozilla/javascript/optimizer/Optimizer.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/optimizer/Optimizer.java,v  <--  Optimizer.java\nnew revision: 1.51.2.1; previous revision: 1.51\ndone\nRCS file: /cvsroot/mozilla/js/rhino/testsrc/doctests/Attic/434041.doctest,v\ndone\nChecking in testsrc/doctests/434041.doctest;\n/cvsroot/mozilla/js/rhino/testsrc/doctests/Attic/434041.doctest,v  <--  434041.doctest\nnew revision: 1.1.2.1; previous revision: 1.1\ndone\n\nChecking in src/org/mozilla/javascript/optimizer/Optimizer.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/optimizer/Optimizer.java,v  <--  Optimizer.java\nnew revision: 1.53; previous revision: 1.52\ndone\nChecking in testsrc/doctests/434041.doctest;\n/cvsroot/mozilla/js/rhino/testsrc/doctests/434041.doctest,v  <--  434041.doctestnew revision: 1.2; previous revision: 1.1\ndone",
            "date": "20090101T22:03:09",
            "id": 2
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14\nBuild Identifier: Rhino 1.6R5 and 1.7R1\n\nHello,\n\nI found a bug in the optimized Javascript code where calling a (slightly hacked) function which adds a new key/value pair into an object adds instead NaN/value to that object. \n\nI have created a JUnit test reproducing that bug. \n\nThanks, Ludovic\n\nReproducible: Always\n\nSteps to Reproduce:\nUnit test provided\nActual Results:  \n{NaN:\"value\"}\n\nExpected Results:  \n{key:\"value\"}",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "434031",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "NaN added to an object when optimization is used",
    "systemSpecification": true,
    "version": "other"
}