{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Reassigning to the reporter as I have neither interest nor time for Rhino.\n\nSee also bug 288433.\n\n",
            "date": "20060331T16:20:22",
            "id": 0
        },
        {
            "author": "inonit@inonit.com",
            "body": "Confirmed.  Bug exists in both XMLBeans and DOM implementations of E4X.  Here's a more complete testcase:\n\nvar ns12 = new Namespace(\"foo\");\nvar nestInfo = <a xmlns=\"foo\">\n\t<ParameterAvailabilityInfo>\n\t\t<ParameterID>10</ParameterID>\n\t\t<PowerOfTen>1</PowerOfTen>\n\t</ParameterAvailabilityInfo>\n\t<ParameterAvailabilityInfo>\n\t\t<ParameterID>100</ParameterID>\n\t\t<PowerOfTen>2</PowerOfTen>\n\t</ParameterAvailabilityInfo>\n\t<ParameterAvailabilityInfo>\n\t\t<ParameterID>1000</ParameterID>\n\t\t<PowerOfTen>3</PowerOfTen>\n\t</ParameterAvailabilityInfo>\n</a>\nvar paramInfo100 = nestInfo.ns12::ParameterAvailabilityInfo.(ns12::ParameterID == 100);\nTEST(1, 2, Number(paramInfo100.PowerOfTen));\n\ndefault xml namespace = ns12;\nvar paramInfo100 = nestInfo.ParameterAvailabilityInfo.(ParameterID == 100);\nTEST(2, 2, Number(paramInfo100.PowerOfTen));\n\nOutput:\n\nFAILED!: Section 1 of test -\nFAILED!: Expected value:\nFAILED!: 2\nFAILED!: Actual value:\nFAILED!: 0\nFAILED!: \nPASSED! 2\n\nAssigning to myself.",
            "date": "20070207T15:46:27",
            "id": 1
        },
        {
            "author": "inonit@inonit.com",
            "body": "First, my test case was wrong.  This bug actually does *not* exist in either the XMLBeans or the DOM implementations of E4X, unless the optimizer is on.  In other words, if the optimization level is set to 0 or 1, the error above results; otherwise, the test works as expected.\n\nChanging title to clarify the bug.  To the submitter: an alternative workaround to using the default namespace is to run with optimization off.\n\nReassigning this bug to \"nobody\" as I have not tackled the optimizer yet.  I'll attach a revised testcase that exercises the bug (but works correctly with optimization level -1).",
            "date": "20070208T14:18:11",
            "id": 2
        },
        {
            "author": "inonit@inonit.com",
            "body": "Created attachment 254415\ntest case to exercise the bug",
            "date": "20070208T14:19:59",
            "id": 3
        },
        {
            "author": "bob@bclary.com",
            "body": "You didn't use the normal tri-license boiler-plate on the test. I'm not sure we can check it into the tree otherwise. CCd Gerv for more info.",
            "date": "20070227T03:52:56",
            "id": 4
        },
        {
            "author": "gerv@mozilla.org",
            "body": "Indeed. David: is there a particular reason you chose MPL/GPL dual rather than the standard MPL/LGPL/GPL tri-license? If not, please could you replace this boilerplate text with the standard text from:\nhttp://www.mozilla.org/MPL/boilerplate-1.1/\n?\n\nThanks :-)\n\nGerv",
            "date": "20070227T09:27:11",
            "id": 5
        },
        {
            "author": "inonit@inonit.com",
            "body": "Well, I've got 5 license-related bugmails noting a variety of problems with potential test checkins, but hopefully it's OK if I answer them all here. :)\n\nI wrote a script to parse out the Rhino license text from all the source files and make sure it was consistent, etc.  And then I added the ability to generate the license boilerplate for my contributions (or the contributions of others, since I sometimes check in patches that others write, and I use their names on them).\n\n* Rhino's got the dual license, so that's why my boilerplate has that.  I can take a look at modifying my program to emit a different boilerplate for mozilla/js/tests/ and will do that.\n\n* My \"Netscape Communications Corporation\" version of the license seems to be from an earlier version of the program, before I realized that some files had a  different copyright notice (IIRC, most files in Rhino have NCC, including many created long after that would have made sense, so I originally thought \"the original code\" referred to the whole project for that reason).\n\n* I can get rid of the emacs header or whatever it is (the 'mode' thing); I think it's a bit strange to have in the source tree to begin with.  A substantial portion of the Rhino files have it and a substantial portion do not.  Again, an earlier version of the program before I noticed that it was \"optional.\"\n\n* As for naming the files (Bob suggests I name them after ECMA spec. sections) I just noticed (in my laborious journeys through the E4X tests) that many E4X tests that come out of bugs end up in the Regress/regress-xxxxxx.js part of the tree even if they pertain to an identifiable portion of the spec (and even if they emit a message identifying a spec section), but some don't (they're added to the relevant section of the tree).  I may have been assuming too much -- i.e., assuming there was a reason for that -- so I thought I would defer the decision on where they belonged in the tree to Bob.  There's also a related process reason on my end -- I'm keeping all my conformance tests that are not in the tree in a single directory, which is somewhat easier than sprinkling them throughout the tree.  But of course I could still name the file after a spec section.\n\nSo anyway, I'm happy to make all of these changes myself and re-submit, but I'd want to do it the \"right\" way (update my license boilerplate generation script) which will make it probably take a bit longer (the first time).  I also don't mind someone else making the changes on my behalf and committing the files with the alterations.  I'm going to mess with my script anyway (for future contributions) so unless there's a desire to get these in the tree right away there's nothing to be gained by spending the additional cycles making the changes for me. :)",
            "date": "20070227T10:10:31",
            "id": 6
        },
        {
            "author": "gerv@mozilla.org",
            "body": "For Rhino code, you are right - the MPL/GPL is the correct license. Apologies for not noticing this. For Mozilla code, please use the tri-license.\n\nThe fields in the boilerplate should be filled in appropriately for you, not just copied. So if the files are your own work, then you are the Original Author, and so on. See http://www.mozilla.org/MPL and linked pages for guidance on what to put.\n\nIt's fine to have an Emacs header; many files have it.\n\nI'm not qualified to comment on file naming.\n\nGerv\n",
            "date": "20070227T11:51:18",
            "id": 7
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "Issue(In reply to comment #8)\n> For Rhino code, you are right - the MPL/GPL is the correct license. Apologies\n> for not noticing this. For Mozilla code, please use the tri-license.\n> \n\nJust attempting to further clarify: tests living in js/tests are not Rhino code (they aren't even included in the Rhino distribution). They're common test code for all JS implementations, thus they're generic Mozilla code and should display the tri-license.",
            "date": "20070227T12:30:47",
            "id": 8
        },
        {
            "author": "inonit@inonit.com",
            "body": "What would be a good thing to call \"the original code\" in this instance?\n\n\"The Original Code is _____________.  ... The Initial Developer of the Original Code is ...\"",
            "date": "20070227T15:41:27",
            "id": 9
        },
        {
            "author": "gerv@mozilla.org",
            "body": "\"The Original Code is a JavaScript test case.\" would serve fine. Often we just put \"The Original Code is mozilla.org code.\"\n\nGerv\n",
            "date": "20070227T16:17:53",
            "id": 10
        },
        {
            "author": "inonit@inonit.com",
            "body": "Created attachment 256639\nFixed license and filename\n\nI chose something similar (and already started uploading) based on Bob's advice (which I originally missed) in another bug.",
            "date": "20070227T16:31:58",
            "id": 11
        },
        {
            "author": "bob@bclary.com",
            "body": "Comment on attachment 256639\nFixed license and filename\n\napproved with nits: modeline, contributor.\n\n/cvsroot/mozilla/js/tests/e4x/Regress/regress-329257.js,v  <--  regress-329257.js",
            "date": "20070227T18:39:25",
            "id": 12
        },
        {
            "author": "hannesw@gmail.com",
            "body": "*** Bug 378552 has been marked as a duplicate of this bug. ***",
            "date": "20111124T07:26:57",
            "id": 13
        },
        {
            "author": "hannesw@gmail.com",
            "body": "Tested in recent releases and master branch, dot queries with namespaces are now working with opt-level > 0.",
            "date": "20111124T07:30:40",
            "id": 14
        }
    ],
    "component": "E4X",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\n\nWhen using filtering an xmllist, I cannot filter using the ns:: syntax without Rhino throwing an exception.  The workaround is to declare the default namespace prior to the statement then namespace prefixes aren't required.\n\nReproducible: Always\n\nSteps to Reproduce:\nThe query that caused this:\n\nvar paramInfo100 = nestInfo.ns12::ParameterAvailabilityInfo.(ns12::ParameterID == 100);\nActual Results:  \njava.lang.RuntimeException: Bad tree in codegen\norg.mozilla.javascript.WrappedException: Wrapped java.lang.RuntimeException: Bad tree in codegen (/data/brownd/dev/current/server/soaptest/dist/foo/runtests.js#23)\n        at org.mozilla.javascript.Context.throwAsScriptRuntimeEx(Context.java:1776)\n        at org.mozilla.javascript.MemberBox.invoke(MemberBox.java:191)\n        at org.mozilla.javascript.FunctionObject.call(FunctionObject.java:393)\n\n\n\nThe workaround is this:\n\ndefault xml namespace = ns12;\nvar paramInfo100 = nestInfo.ParameterAvailabilityInfo.(ParameterID == 100);",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "329257",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Rhino optimizer cannot handle namespace prefix in E4X dot query",
    "systemSpecification": true,
    "version": "other"
}