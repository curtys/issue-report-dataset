{
    "comments": [
        {
            "author": "petermichaux@gmail.com",
            "body": "Created attachment 347120\nchanges per the ticket description",
            "date": "20081109T03:33:37",
            "id": 0
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Fixed: \n\nChecking in src/org/mozilla/javascript/ScriptableObject.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/ScriptableObject.java,v  <--  ScriptableObject.java\nnew revision: 1.143; previous revision: 1.142\ndone",
            "date": "20090102T02:26:00",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "In ScriptableObject, the definition of associateValue is\n\npublic synchronized final Object associateValue(Object key, Object value)\n{\n    if (value == null) throw new IllegalArgumentException();\n    Map<Object,Object> h = associatedValues;\n    if (h == null) {\n        h = associatedValues;\n        if (h == null) {\n            h = new HashMap<Object,Object>();\n            associatedValues = h;\n        }\n    }\n    return Kit.initHash(h, key, value);\n}\n\nThis looks something like double check locking but without a synchronized check between the two tests for h being null. \n\nSince the whole method is synchronized, couldn't this code be reduced to\n\npublic synchronized final Object associateValue(Object key, Object value)\n{\n    if (value == null) throw new IllegalArgumentException();\n    Map<Object,Object> h = associatedValues;\n    if (h == null) {\n        h = new HashMap<Object,Object>();\n        associatedValues = h;\n    }\n    return Kit.initHash(h, key, value);\n}",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "463867",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Superfluous code in ScriptableObject associateValue",
    "systemSpecification": false,
    "version": "head"
}