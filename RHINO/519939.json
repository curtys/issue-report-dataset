{
    "comments": [
        {
            "author": "mguillemot@yahoo.fr",
            "body": "Created attachment 404004\nPatch adding an optional SourceProvider to the debugger",
            "date": "20091001T10:06:15",
            "id": 0
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "So... this patch would actually cause the debugger to show the HTML surrounding the script in the debugger, right? That sounds useful to me.\n\nWhat's the significance of the knownSource argument?",
            "date": "20091023T09:33:33",
            "id": 1
        },
        {
            "author": "mguillemot@yahoo.fr",
            "body": "Correct, this way the debugger can show the full HTML page containing the JS code. It's not perfect because breakpoints can only be set on scripts that have been already parsed, but it is a first step.\n\nThe knownSource is a kind of fallback solution in cases where the SourceProvider can't determine the origin of the code. It is the decompiled version of the JS code being executed.",
            "date": "20091023T09:41:42",
            "id": 2
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "(In reply to comment #3)\n> \n> The knownSource is a kind of fallback solution in cases where the\n> SourceProvider can't determine the origin of the code. It is the decompiled\n> version of the JS code being executed.\n\nBut, the caller already knows that, right? I'd rather remove that argument, and have SourceProvider return null, and have the caller check for that instead.",
            "date": "20091023T12:36:55",
            "id": 3
        },
        {
            "author": "mguillemot@yahoo.fr",
            "body": "this sounds ok: if response is null, caller has to handle it as it is done currently.",
            "date": "20091023T12:41:50",
            "id": 4
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "Committed the version with no knownSource:\n\ncvs ci -m \"Fix for Bug 519939 - Rhino JS debugger: allow to configure a \"source provider\"\" -l \"/Rhino/toolsrc/org/mozilla/javascript/tools/debugger/Dim.java\" \"/Rhino/toolsrc/org/mozilla/javascript/tools/debugger/SourceProvider.java\" \"/Rhino/toolsrc/org/mozilla/javascript/tools/debugger/Main.java\"\n    Checking in toolsrc/org/mozilla/javascript/tools/debugger/Main.java;\n    /cvsroot/mozilla/js/rhino/toolsrc/org/mozilla/javascript/tools/debugger/Main.java,v  <--  Main.java\n    new revision: 1.77; previous revision: 1.76\n    done\n    RCS file: /cvsroot/mozilla/js/rhino/toolsrc/org/mozilla/javascript/tools/debugger/SourceProvider.java,v\n    done\n    Checking in toolsrc/org/mozilla/javascript/tools/debugger/SourceProvider.java;\n    /cvsroot/mozilla/js/rhino/toolsrc/org/mozilla/javascript/tools/debugger/SourceProvider.java,v  <--  SourceProvider.java\n    initial revision: 1.1\n    done\n    Checking in toolsrc/org/mozilla/javascript/tools/debugger/Dim.java;\n    /cvsroot/mozilla/js/rhino/toolsrc/org/mozilla/javascript/tools/debugger/Dim.java,v  <--  Dim.java\n    new revision: 1.16; previous revision: 1.15\n    done\nok (took 0:30.161)",
            "date": "20091023T12:55:19",
            "id": 5
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14\nBuild Identifier: \n\nHtmlUnit makes a great usage of the lineNumber argument in Context.compileXxxx. This allows us to have correct line indication in error messages for javascript embeded in HTML code like\n<html>\n<head>\n<script> // do something here\n...\n</script></head></html>\n\nIn this example, we would pass 3 as lineNo to Rhino for the compilation.\n\nThis works fine... until we use the debugger: it receives a script and displays it starting at line 1 but follows execution with line indication base on the lineno provided to Context.compileXXXXX\n\nTo fix this problem and allow to see javascript code in their context, the provided patch introduce an optional SourceProvider to the debugger that can provided the sources. It works great with scripts embeded in Html in the case of HtmlUnit.\n\nAdditionally the patch provides access to the debugger Main instance (a better class name would be nice) to allow further configuration.\n\n\nReproducible: Always",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "519939",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Rhino JS debugger: allow to configure a \"source provider\"",
    "systemSpecification": true,
    "version": "other"
}