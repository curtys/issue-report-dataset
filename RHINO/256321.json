{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 156615\nFix: serialization restoration\n\nThe patch does not change PrototypeValues to implement Serializable interface.\nInstead it makes prototypeValues transient and during serialization of\nIdScriptableObject simply records number of prototype entries so when the\nobject is read its prototype map is restored with empty initial state.\n\nThus the patch assumes that there is no value in serialization of prototype\nentries and it OK to always rebuild them. But this is probably what the\napplication wants in any case.",
            "date": "20040820T18:23:36",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix: if full serialization would be necessary (esoteric\nsituation AFAICS) the bug can be reopened but for now IdScriptableObject is\nserializable again.",
            "date": "20040820T18:27:27",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "To simplify usage of IdScriptableObject during work on E4X implementation and to\nreduce the size of IdScriptableObject instances I added the internal class\nIdScriptableObject.PrototypeValues which stores all variables related to\nprototype id map.\n\nIn this way IdScriptableObject just needs one field, prototypeValues, to support\nid mapping for prototype objects. But I forgot about serialization: \nPrototypeValues does not implement Serializable which made IdScriptableObject\nand the wast majority of Rhino objects unserializable.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "256321",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Regression: no serialization for IdScriptableObject",
    "systemSpecification": true,
    "version": "head"
}