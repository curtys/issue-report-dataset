{
    "comments": [
        {
            "author": "pschwartau@meer.net",
            "body": "Here is the ECMA section:\n\n\n15.9.1.8 Daylight Saving Time Adjustment\n\nAn implementation of ECMAScript is expected to determine the daylight saving time \nalgorithm. The algorithm to determine the daylight saving time adjustment \nDaylightSavingTA(t), measured in milliseconds, must depend only on four things:\n\n(1) the time since the beginning of the year    \n          t \u2013 TimeFromYear(YearFromTime(t))\n(2) whether t is in a leap year                 \n          InLeapYear(t)\n(3) the week day of the beginning of the year\n          WeekDay(TimeFromYear(YearFromTime(t))\nand\n(4) the geographic location.\n\nThe implementation of ECMAScript should not try to determine whether the exact \ntime was subject to daylight saving time, but just whether daylight saving time \nwould have been in effect if the current daylight saving time algorithm had been \nused at the time. This avoids complications such as taking into account the years \nthat the locale observed daylight saving time year round.\n\nIf the host environment provides functionality for determining daylight saving \ntime, the implementation of ECMAScript is free to map the year in question to \nan equivalent year (same leap-year-ness and same starting week day for the year) \nfor which the host environment provides daylight saving time information. The \nonly restriction is that all equivalent years should produce the same result.\n",
            "date": "20001027T00:27:10",
            "id": 0
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Mike, do you want this one, too?",
            "date": "20001027T00:49:14",
            "id": 1
        },
        {
            "author": "mike+mozilla@meer.net",
            "body": "Sure!  I just got the Spider Monkey counterpart.",
            "date": "20001027T00:50:47",
            "id": 2
        },
        {
            "author": "mike+mozilla@meer.net",
            "body": "Created attachment 20284\nproposed fix; new EquivalentYear function.",
            "date": "20001207T06:22:46",
            "id": 3
        },
        {
            "author": "mike+mozilla@meer.net",
            "body": "A little discussion of EquivalentYear is in 58116.\n\nWith the same EquivalentYear fix in Spider Monkey, Rhino's (java's) current\nnotion of daylight savings begins differing from that of Spider Monkey in 1581! \n(before, of course, giving up the ghost at year 0.)  Since there pretty likely\nwasn't daylight savings in 1581, I think this patch probably gives more-correct\nbehavior.\n\nThey match out to year 4000, so I think I got the mod 400 leap year behavior\nright.",
            "date": "20001207T08:49:58",
            "id": 4
        },
        {
            "author": "mike+mozilla@meer.net",
            "body": "Created attachment 20287\nupdated version of last patch, also gets equiv. year before formatting timezone.",
            "date": "20001207T08:50:47",
            "id": 5
        },
        {
            "author": "mike+mozilla@meer.net",
            "body": "CCing Norris.",
            "date": "20001207T08:51:16",
            "id": 6
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Reassigning Mike's Rhino bugs to Patrick, as per recent meeting - ",
            "date": "20010302T21:51:21",
            "id": 7
        },
        {
            "author": "igor@mir2.org",
            "body": "I look at the patch",
            "date": "20040328T11:09:43",
            "id": 8
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 144946\nPatch update to reflect code evolution during past 3 years",
            "date": "20040328T11:15:32",
            "id": 9
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 145081\nPatch update to include only essential changes",
            "date": "20040330T10:47:37",
            "id": 10
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the patch",
            "date": "20040330T12:49:37",
            "id": 11
        }
    ],
    "component": "Core",
    "description": "Rhino computes daylight savings time wrong for years before 1AD\nIt appears to never recognize daylight savings time before year 1.\n\noxymoron:44 % java -jar js.jar\njs> d = new Date(2000,6)\nSat Jul 01 00:00:00 GMT-0700 (PDT) 2000\njs> d.setFullYear(1900)                  \n-2193325200000\njs> d\nSun Jul 01 00:00:00 GMT-0700 (PDT) 1900\njs> d.setFullYear(0)\n-62151465600000\njs> d\nSat Jul 01 00:00:00 GMT-0800 (PST) 0000\njs> d.setFullYear(-1000)\n-93708460800000\njs> d\nTue Jul 01 00:00:00 GMT-0800 (PST) -1000\njs> d.getTimezoneOffset()\n480\njs> d.setFullYear(2000)\n962434800000\njs> d\nSat Jul 01 00:00:00 GMT-0700 (PDT) 2000\njs> d.getTimezoneOffset()\n420\n\nSee section 15.9.1.8 of the ECMA v3 spec, which says that the daylight\nsavings time adjustment should be applied to all dates, regardless of year.\nThat is, there should be no attempt to track the actual historical definitions\nand adoption of daylight savings time.\n\nSee also bug #58116: spidermonkey has a similar bug for years before 1970",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "58118",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "P3 normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "ECMA Compliance: daylight savings time wrong prior to year 1",
    "systemSpecification": false,
    "version": "other"
}