{
    "comments": [
        {
            "author": "hannesw@gmail.com",
            "body": "Thanks for the report. ES5 makes it quite clear that the operand expression always has to be evaluated (step 1 in 11.4.1). Fixed in master and rhino_1_8.\n\nhttps://github.com/mozilla/rhino/commit/9e3d434569218fc5ae2a14a0241582e7939956c9",
            "date": "20120215T14:56:13",
            "id": 0
        }
    ],
    "component": "Core",
    "description": "Created attachment 596136\nSimple JUnit test case\n\nUser Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:10.0) Gecko/20100101 Firefox/10.0\nBuild ID: 20120129021758\n\nSteps to reproduce:\n\n\"delete (bar,baz)\" should evaluate the expression \"(bar,baz)\" before applying the \"delete\" operator. If either \"bar\" or \"baz\" is not defined in the current environment, a ReferenceError should be thrown. \nIRFactory#createUnary(int, Node) simplifies (optimizes?) the \"delete\" operator to return just \"true\" instead of evaluating any embedded expression.\n\nAlso see bug 508547 for a similar bug report.\n\n\nActual results:\n\n\"delete (bar,baz)\" just returns \"true\" instead of throwing a ReferenceError\n\n\nExpected results:\n\n\"delete (bar,baz)\" needs to throw a ReferenceError. Ouput from SpiderMonkey interacting shell:\n---\njs> delete (bar,baz)\ntypein:17: ReferenceError: bar is not defined\n---",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "726121",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "\"delete\" operator does not evaluate embedded expressions",
    "systemSpecification": false,
    "version": "head"
}