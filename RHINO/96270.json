{
    "comments": [
        {
            "author": "james.cakalic@Maritz.com",
            "body": "Having the same problem. Scripts that worked fine in 1.5R3 now get something \nlike this in 1.5R4:\n\ncom.ibm.bsf.BSFException: JavaScript Error: Function importClass must be called \nwith a class; had \"[JavaPackage \ncom.emaritz.mario.participation.FindParticipationStatusByDateCmd]\" instead. (; \nline 5)\n\nJim Cakalic\njames.cakalic@Maritz.com",
            "date": "20030218T23:01:15",
            "id": 0
        },
        {
            "author": "pschwartau@meer.net",
            "body": "cc'ing Igor -",
            "date": "20030218T23:19:35",
            "id": 1
        },
        {
            "author": "user@apochta.com",
            "body": "Jim, do you set any classloaders in your application? And what the following\nscript will print under 1.5R4 and 1.5R3:\n\njava.lang.System.out.println(Packages.org.mozilla.javascript.Context.currentContext.optimizationLevel)\n\nvar cl =\njava.lang.Class.forName(\"com.emaritz.mario.participation.FindParticipationStatusByDateCmd\");\n\njava.lang.System.out.println(cl);\n",
            "date": "20030219T00:08:13",
            "id": 2
        },
        {
            "author": "user@apochta.com",
            "body": "CC to Jim so he will get a message about the previous comment.",
            "date": "20030219T00:10:17",
            "id": 3
        },
        {
            "author": "user@apochta.com",
            "body": "This is indeed a regression since 1.5R3 caused by the fact that 1.5R4 uses\nScriptableObject.has to check for property existence instead of checking\nScriptableObject.get != NOT_FOUND. In this way an assignment to a property which\ninitial value is initialized on the first read access would not need to create\nthe default value. See CVS log for org/mozilla/javascript/ScriptRutime.java from\n2002-04-11.\n\nUnfortunately not all classes are updated for this pattern change and in\nparticular ImporterTopLevel does not have proper has method, which can be seen\nif the following script is run in Rhino shell with optimization level -1:\n\nimportPackage(java.util);\nvar v = Vector();\nprint(v);\n\nwhich gives:\n\njs: \"/home/igor/js/x/test.js\", line 2: uncaught JavaScript exception:\nReferenceError: \"Vector\" is not defined. (/home/igor/js/x/test.js; line 2)\n\nAs far as I can see the bug is visible only when calling constructors of Java\nobjects imported through importPackage without using new keyword. If the above\nexample will be changed to \n\nimportPackage(java.util);\nvar v = new Vector();\nprint(v);\n\nit correctly prints \"[]\"\n\n",
            "date": "20030220T22:31:28",
            "id": 4
        },
        {
            "author": "user@apochta.com",
            "body": "Created attachment 115059\nFix: proper implementation of has in ImporterTopLevel and NativeJavaPackages",
            "date": "20030220T23:07:31",
            "id": 5
        },
        {
            "author": "user@apochta.com",
            "body": "I commited the fix",
            "date": "20030225T09:19:10",
            "id": 6
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Marking FIXED - the tests given by Igor in Comment #5 both pass now.\nI tested this in the Rhino shell with optimization levels -1, 0, 1, 9.",
            "date": "20030225T20:05:33",
            "id": 7
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Marking Verified.\n\nSonali and Jim: please reopen this bug if the fix doesn't work for you -",
            "date": "20030225T20:10:25",
            "id": 8
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R4.1",
            "date": "20040213T11:46:09",
            "id": 9
        }
    ],
    "component": "Core",
    "description": "Hi,\nI want to create a new insatnce of my java class from within a javascript.\n\n//JAVASCRIPT CODE\n importClass(Packages.com.sonicsw.xs.envelope.Address)\n address = new Packages.com.sonicsw.xs.envelope.Address(\"Queue1\");\n\nI'm using BSF 2.2 and Rhino Javascript Engine 1.5 on Windows 2000, \nto execute this javascript.\n\nHowever, the execution just hangs at the 2nd line written above.\nThe Address class is in classpath too.\nPlease let me know what am I missing here.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "96270",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- blocker",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Unable to create java objects from within a javascript.",
    "systemSpecification": true,
    "version": "other"
}