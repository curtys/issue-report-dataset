{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Wrong bug to resolve",
            "date": "20050112T18:33:06",
            "id": 0
        },
        {
            "author": "hannesw@gmail.com",
            "body": "I found a similar problem when appending elements using the += operator. The\nproblem only appears if there are space characters between tags in the existing\nlist and XML.ignoreWhitespace is set to false. Here's how to reproduce it in\nRhino shell:\n\njs> XML.ignoreWhitespace = false;\nfalse\njs> var xml = <a> <b/><b/></a>;\njs> xml.b += <c/>;\n<b/>\n<b/>\n<c/>\njs> print(xml);\n<a>\n  <b/>\n</a>\njs>\n\nThe expected result from print(xml) would be \n\n<a>\n  <b/>\n  <b/>\n  <c/>\n</a>\n\nNote that if I leave away the space char in the original XML literal, or don't\nset XML.ignoreWhitespace to false, the result is as expected. If I add more\nspaces, I get other bogus results. \n\nShould I file a new bug for this? Are there any insights on the original bug,\nsuch as where to look, and if this is a Rhino or a XMLBeans bug?",
            "date": "20050526T21:34:10",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "Marking as fixed: new issues should be reported as bugs",
            "date": "20050801T11:14:04",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "I \"fixed\" the wrong bug.",
            "date": "20050801T11:15:13",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "Reassigning to please_see_bug_288433@eml.cc pending resolution of bug 288433",
            "date": "20060401T12:26:29",
            "id": 4
        },
        {
            "author": "inonit@inonit.com",
            "body": "This issue is fixed in the coming non-XMLBeans implementation of E4X, or at least the first issue is.  The test in comment #2 gives output other than that suggested, but I'm not sure which is right.  The output given is:\n\n<a>\n\n  <b/>\n  <b/>\n  <c/>\n</a>\n\nI'd have to carefully go back to the pretty-printing part of the spec to see whether the extra newline is appropriate given the presence of a non-empty text node in there.",
            "date": "20070128T00:28:46",
            "id": 5
        },
        {
            "author": "inonit@inonit.com",
            "body": "My reading of ECMA357 2nd ed. 10.2.1 is that the output in comment 6 is correct, thus I am closing this bug as fixed (if XMLBeans is not present, of course; see bug 355677).",
            "date": "20070207T03:07:46",
            "id": 6
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Adding target milestone of 1.6R6 based on the date this bug was resolved FIXED.",
            "date": "20070518T15:09:35",
            "id": 7
        }
    ],
    "component": "E4X",
    "description": "-------- Original Message --------\nSubject: Found a few E4X bugs\nDate: Fri, 30 Jul 2004 16:47:40 -0700\nFrom: John Schneider <john.schneider@agiledelta.com>\nReply-To: <john.schneider@agiledelta.com>\nOrganization: AgileDelta, Inc.\n\nDescription: Replacing a list item with a new list that contains that item\ncauses incorrect result.\n\nTest case:\n\n\tvar x = <x>\n\t\t\t<b>two</b>\n\t\t\t<b>three</b>\n\t\t  </x>;\n\n\t// insert <a> element in from of first <b> element\n\tx.b[0] = <a>one</a> + x.b[0];\n\n\tprint(x);\n\nExpected:\n\n\t<x>\n\t\t<a>one</a>\n\t\t<b>two</b>\n\t\t<b>three</b>\n\t</x>\n\nActual:\n\n\t<x>\n\t\t<a>one</a>\n\t\t<a>one</a>\n\t\t<b>three</b>\n\t</x>",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "263934",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "XMLList assign produces bogus result",
    "systemSpecification": true,
    "version": "head"
}