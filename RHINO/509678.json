{
    "comments": [
        {
            "author": "hannesw@gmail.com",
            "body": "Created attachment 393739\nHand written replacement for native JSON parser",
            "date": "20090811T10:08:16",
            "id": 0
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Created attachment 393761\nA few small mods to patch: adding type params, formatting",
            "date": "20090811T13:32:12",
            "id": 1
        },
        {
            "author": "hannesw@gmail.com",
            "body": "I committed the last patch plus a minor fix in two of the tests I added, and removed the JsonLexer class which isn't used anymore.\n\nRemoving src/org/mozilla/javascript/json/JsonLexer.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/json/JsonLexer.java,v  <--  JsonLexer.java\nnew revision: delete; previous revision: 1.1\ndone\nChecking in src/org/mozilla/javascript/json/JsonParser.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/json/JsonParser.java,v  <--  JsonParser.java\nnew revision: 1.2; previous revision: 1.1\ndone\nRemoving testsrc/org/mozilla/javascript/tests/json/JsonLexerTest.java;\n/cvsroot/mozilla/js/rhino/testsrc/org/mozilla/javascript/tests/json/JsonLexerTest.java,v  <--  JsonLexerTest.java\nnew revision: delete; previous revision: 1.1\ndone\nChecking in testsrc/org/mozilla/javascript/tests/json/JsonParserTest.java;\n/cvsroot/mozilla/js/rhino/testsrc/org/mozilla/javascript/tests/json/JsonParserTest.java,v  <--  JsonParserTest.java\nnew revision: 1.2; previous revision: 1.1\ndone",
            "date": "20090812T09:29:35",
            "id": 2
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Thanks so much for doing this!",
            "date": "20090812T17:50:45",
            "id": 3
        },
        {
            "author": "rspeyer@gmail.com",
            "body": "Created attachment 394339\nadded \\b as a valid escape character in JSON strings",
            "date": "20090813T19:32:36",
            "id": 4
        },
        {
            "author": "hannesw@gmail.com",
            "body": "Thanks Raphael, I committed your patch.",
            "date": "20090814T08:26:36",
            "id": 5
        },
        {
            "author": "rspeyer@gmail.com",
            "body": "Created attachment 399062\nmake JSON.parse fail on invalid leading and trailing whitespace",
            "date": "20090907T13:47:46",
            "id": 6
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Thanks, Raphael, this fixes a regression in the unit test. Patch committed:\n\nChecking in src/org/mozilla/javascript/json/JsonParser.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/json/JsonParser.java,v  <--  JsonParser.java\nnew revision: 1.5; previous revision: 1.4\ndone",
            "date": "20090914T22:12:05",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "The parser for the built-in JSON object is currently based on regular expressions (see bug 505211). This is a hand written parser that should be quite a bit faster.\n\nA few notes regarding numbers: I'm using java.lang.Double.valueOf() to parse numbers, as from empirical testing this does the right thing in most cases (except for leading zeroes, which I check for manually). \n\nAlso, I removed the special handling for very large numbers using java.math.BigDecimal, so now 9999999999999999 is parsed as 10000000000000000 and 1.5e99999999 is parsed as positive Infinity. This matches the way numbers are parsed by the main Rhino parser, Spidermonkey, and V8, and I couln't find anything in the ES5 spec saying that JSON numbers should be parsed differently. I changed the unit test accordingly.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "509678",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Performance improvement for built-in JSON parser",
    "systemSpecification": true,
    "version": "head"
}