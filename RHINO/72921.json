{
    "comments": [
        {
            "author": "norrisboyd@gmail.com",
            "body": "Fixed:\n\nChecking in NativeGlobal.java;\n/cvsroot/mozilla/js/rhino/org/mozilla/javascript/NativeGlobal.java,v  <--  Nativ\neGlobal.java\nnew revision: 1.24; previous revision: 1.23\ndone",
            "date": "20010322T21:56:43",
            "id": 0
        },
        {
            "author": "pschwartau@meer.net",
            "body": "VERIFIED FIXED with rhino and rhinoi shells built on WinNT 2001-03-27.",
            "date": "20010327T23:15:18",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "The following causes an exception in the current Rhino build:\n\nEvalError.toString(); \njs: uncaught JavaScript exception: java.lang.NullPointerException\n\n\nI get the same exception from TypeError, etc. : all the \"NativeError\" types.\nBy contrast, Error.toString() may be invoked without causing an exception: \n\njs> print(Error.toString());\nfunction Error() {\n        [native code]\n}\n\n\n\nI believe the NativeError types should have toString as well. See: \n\n------------------------------------------------------------------------------\nECMA3 Section 15.11.7.7 Properties of the NativeError Prototype Objects\n\nEach NativeError prototype object is an Error object (its [[Class]] is \"Error\"). \nThe value of the internal [[Prototype]] property of each NativeError prototype \nobject is the Error prototype object(section 15.11.4).\n\n------------------------------------------------------------------------------\n\n\nSince EvalError.prototype is an instance of Error, and Error.toString exists, \nI would expect EvalError.toString to exist also -",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "72921",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "NativeError objects are missing toString() method",
    "systemSpecification": true,
    "version": "other"
}