{
    "comments": [
        {
            "author": "ivan.outer@gmail.com",
            "body": "The same here. \"void EXPR\" is parsed as UnaryExpression (Is it correct btw?). And when UnaryExpression is serialized to source, it calls operatorToString(getType()), \"void\" is not there.\n\nWorkaround is to add operatorNames.put(Token.VOID, \"void\"); However either reflection must be used or lib must be recompiled.",
            "date": "20120224T10:52:36",
            "id": 0
        },
        {
            "author": "hannesw@gmail.com",
            "body": "Fixed in git master and rhino_1_8 branch.\n\nhttps://github.com/mozilla/rhino/commit/8ba9619bc53a3a61e9e026ef86b6ad698a850d38",
            "date": "20120224T15:04:49",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "User Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.22) Gecko/20110902 Firefox/3.6.22\nBuild ID: 20110902133716\n\nSteps to reproduce:\n\n        String source = \"void window.open();\";\n        Parser parser = new Parser();\n        AstRoot astRoot = parser.parse(new StringReader(source), null, 1);\n        System.out.println(astRoot.toSource());\n\n\n\nActual results:\n\nException in thread \"main\" java.lang.IllegalArgumentException: Invalid operator: 126\n\tat org.mozilla.javascript.ast.AstNode.operatorToString(AstNode.java:364)\n\n\nExpected results:\n\nPrinted source as supplied",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "688018",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Calling toSource on a parsed script containing 'void' throws exception - sample attached",
    "systemSpecification": false,
    "version": "head"
}