{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 129150\nFix: optimize away empty try only if finally absent or empty\n\nThe bug is triggered by an incorrect optimization in createTryCatchFinally of\nomj/IRFactory.java where it removes all try/catch/finally as long as try is\nempty. \n\nThe patch changes that to apply optimization only if finally is empty as well. \n\n\nIn principle the case of empty try with a non-trivial finally can be replaced\nby just the finally block instead of generating full code for try/catch/finally\nsupport but IMO it does not that frequent to bother.",
            "date": "20030804T11:52:18",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20030805T17:31:43",
            "id": 1
        },
        {
            "author": "pschwartau@meer.net",
            "body": "*** Bug 217591 has been marked as a duplicate of this bug. ***",
            "date": "20030828T18:08:06",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "Trageting as resolved against 1.5R5",
            "date": "20040213T11:36:17",
            "id": 3
        }
    ],
    "component": "Compiler",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.3b) Gecko/20021213\nBuild Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.3b) Gecko/20021213\n\n(Appologies in advance if this bug was already reported.)\n\nWhen there is no code in a try block, then the finally block is not executed.\n\nReproducible: Always\n\nSteps to Reproduce:\ntry { }\nfinally { print(123 }\n\n\nActual Results:  \n(nothing)\n\nExpected Results:  \n123\n\nI tried this with the command line 'js', which seems to default to interprete mode.\nWhen I do js -opt 9, I get the same results, so it looks like the compiler is\nalso affected.\nIn C's version 'SpiderMonkey' does appear to work, and does print the 123 message.\n\nIf I add a semicolon, it works:\njs> try { ; } finally { print(123) }\n123",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "214945",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "finally not executed if try empty",
    "systemSpecification": true,
    "version": "other"
}