{
    "comments": [
        {
            "author": "user@apochta.com",
            "body": "Created attachment 113355\nTest case",
            "date": "20030202T22:16:43",
            "id": 0
        },
        {
            "author": "user@apochta.com",
            "body": "As the bug presents in 1.5R3, its fix should wait until 1.5R4 is released. ",
            "date": "20030202T22:18:44",
            "id": 1
        },
        {
            "author": "user@apochta.com",
            "body": "Created attachment 113398\nFix: use special buffer for unreading of several chars and move the logic of recognizing line ends and format chars to TokenStream to follow SM more closely. LineBuffer is kept only for buferization.",
            "date": "20030203T16:30:38",
            "id": 2
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Testcase added to JS testsuite:\n\n      mozilla/js/tests/js1_5/Regress/regress-191668.js\n\nCurrently passing in SpiderMonkey, but failing in Rhino as\nIgor described above -",
            "date": "20030203T20:39:22",
            "id": 3
        },
        {
            "author": "user@apochta.com",
            "body": "Created attachment 113539\nPatch update\n\nThis is a patch update that integrates LineBuffer into TokenStream and teaches\nit to read tokens from String, not only java.io.Reader to avoid constructing\nStringReader/TokenStream buffer when evaluating scripts from strings.",
            "date": "20030205T00:12:10",
            "id": 4
        },
        {
            "author": "user@apochta.com",
            "body": "I commited the patch",
            "date": "20030214T17:10:19",
            "id": 5
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Verified FIXED.\n\nThe above testcase now passes in the Rhino shell. I tested\noptimization levels -1, 0, 1, and 9.",
            "date": "20030214T22:42:29",
            "id": 6
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R5",
            "date": "20040213T12:11:56",
            "id": 7
        },
        {
            "author": "igor@mir2.org",
            "body": "Fixing wrong milestone assignment",
            "date": "20040213T14:37:17",
            "id": 8
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003\nBuild Identifier: Rhino CVS from 2003-02-02\n\nRhino tokenizer violates single character lookahead restriction of\nomj.LineBuffer when implementing recognition of HTML comments <!-- . In\nparticular, LineBuffer assumes that calls to LineBuffer.match will not unread\nafter successful match, but code to recognize <!-- does exactly that as <! and\n<!- are valid sequence of JavaScript operators. \n\nThe following attached test case calls eval on \"if (0<!-0) ++j;\" prefixed by\nincreasing sequence of spaces to make sure that at some point <!- occurs on\ninternal buffer boundary when LineBuffer.unread can not work.\n\n\n\nReproducible: Always\n\nSteps to Reproduce:\nRun the test by Rhino shell\nActual Results:  \nException in thread \"main\" java.lang.RuntimeException: FAILED ASSERTION\n        at org.mozilla.javascript.Context.codeBug(Context.java:2150)\n        at org.mozilla.javascript.LineBuffer.unread(LineBuffer.java:116)\n        at org.mozilla.javascript.TokenStream.getToken(TokenStream.java:1131)\n\n\nExpected Results:  \nThe test should print OK",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "191668",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Tokenizer can fail on <!-",
    "systemSpecification": true,
    "version": "other"
}