{
    "comments": [
        {
            "author": "szegedia@freemail.hu",
            "body": "Created attachment 237950\nTestcase to reproduce the problem",
            "date": "20060912T09:34:31",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I try to check this during the weekend. Catches are tricky.",
            "date": "20060912T11:38:33",
            "id": 1
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "I've committed a fix. If you wish, you can check the diff of Interpreter.java revisions 1.310 and 1.312",
            "date": "20060926T11:47:30",
            "id": 2
        },
        {
            "author": "hannesw@gmail.com",
            "body": "The committed patch breaks the JS-to-bytecode compiler. The problem is that code generated by o.m.j.optimizer.Codegen needs to be adapted as well. Currently it throws a java.lang.NoSuchMethodError, because it still calls the method with the old (Context, Scriptable) signature.",
            "date": "20061011T12:08:32",
            "id": 3
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "Which method are we talking about?",
            "date": "20061011T12:20:05",
            "id": 4
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "Ok, since I don't wish to touch the optimizer, and because I don't want to break classes pregenerated with a jsc from an earlier Rhino release, I switched back to the earlier method signature.",
            "date": "20061011T12:28:37",
            "id": 5
        },
        {
            "author": "hannesw@gmail.com",
            "body": "Sorry, I edited this out of my comment. I'm talking about ScriptRuntime.enterActivationFunction(), for which an invoke with the old signature is generated at line 1372 of optimizer/Codegen.java. ",
            "date": "20061011T12:31:21",
            "id": 6
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Adding target milestone of 1.6R6 based on the date this bug was resolved FIXED.",
            "date": "20070518T15:10:48",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "When  attempting to restart a continuation that is captured from a catch block, an exception is thrown. The problem is in function enterActivationFunction() in ScriptRuntime.java line 2844:\n\nNativeCall call = (NativeCall)activation;\n\nit is invoked from Interpreter.java line 2852 that says \n\nScriptRuntime.enterActivationFunction(cx, frame.scope);\n\nthis throws a ClassCastException, because frame.scope is a NativeWith created by the catch(e) block instead of a NativeCall.\n\nAttached are two files (TestContinuation.java and TestContinuation.js) that jointly reproduce the problem. Note that you won't get the root cause ClassCastException when you run it because it'll trigger interpret()'s exception handler that'll later run into a NPE because the continuation's stack wasn't restored properly. However, it is the ClassCastException that is the root cause of the problem.\n\nMy guess is that rewriting Interpreter.java line 2852 so that it doesn't specify frame.scope but instead walks the parent chain until it finds a NativeCall would help. Changing the signature of ScriptRuntime.enterActivationFunction to accept NativeCall instead of a generic Scriptable would also help enforce the practice.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "352319",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Can't restart a continuation from a catch block",
    "systemSpecification": false,
    "version": "head"
}