{
    "comments": [
        {
            "author": "szegedia@freemail.hu",
            "body": "Created attachment 199795\nThe patch that implements the feature\n\nI've attached a patch that implements the feature. Please comment on it -- if\nit goes uncommented for a week I'll commit it.",
            "date": "20051017T12:28:37",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Comment on attachment 199795\nThe patch that implements the feature\n\n>+    public final void setMaximumInterpreterStackDepth(int max)\n>+    {\n>+        if(optimizationLevel != -1) {\n>+            throw new IllegalStateException(\"Cannot set maximumInterpreterStackDepth when optimizationLevel != -1\");\n>+        }\n>+        if(max < 1) {\n>+            throw new IllegalArgumentException(\"Cannot set maximumInterpreterStackDepth to less than 1\");\n>+        }\n>+        maximumInterpreterStackDepth = max;\n>+    }\n\nYou need to add a line like:\n\tif (sealed) onSealedMutation();\n\nbefore assigning Context.maximumInterpreterStackDepth to ensure that sealed\nContext instances are not modifiable. See other setXXX methods in Context.\n\nOtherwise the patch is OK.",
            "date": "20051017T13:25:31",
            "id": 1
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "Ok, committed the patch with addition of \n\n        if(sealed) onSealedMutation();\n",
            "date": "20051104T13:13:05",
            "id": 2
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; en) Opera 8.50\nBuild Identifier: \n\nRhino interpreted mode uses its own stack structure on Java heap instead of the \nJava stack. A too deep stack (i.e. one due to an infinite recursion) in \ninterpreter will eventually consume all memory, leading to a global \nOutOfMemoryError that will affect the operation of the entire VM. In contrast, \nbytecode-compiled functions use the Java stack and an infinite recursion will \nonly cause a StackOverflowError that won't affect other parts of the VM.\n\nWe need a feature for specifying a maximum interpreter stack depth in Context.\n\nReproducible: Always\n\nSteps to Reproduce:",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "312702",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Feature for limiting call stack depth in interpeter",
    "systemSpecification": false,
    "version": "other"
}