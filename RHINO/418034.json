{
    "comments": [
        {
            "author": "matthieu.riou@gmail.com",
            "body": "Created attachment 303815\nPatch to rely on JLine for a better shell\n\nA separate file must be added in addition to this patch.",
            "date": "20080217T05:15:57",
            "id": 0
        },
        {
            "author": "matthieu.riou@gmail.com",
            "body": "Created attachment 303816\nJLine hooks\n\nCopy this file in toolsrc/org/mozilla/javascript/tools/shell.",
            "date": "20080217T05:17:53",
            "id": 1
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "I finally got a chance to try this out. Works great from the command line on Unix and Windows. Doesn't work so well from the Eclipse console: on Unix the entered text is printed out when enter is pressed, so that the text is effectively repeated. And on Windows the shell terminates before accepting any input. \n\nPerhaps the thing to do is just provide a command-line switch to disable this that could be used from within Eclipse. It'd be better to detect if you're running in an Eclipse console, but I don't know if that's possible. \n\nIdeas?",
            "date": "20080314T20:12:35",
            "id": 2
        },
        {
            "author": "matthieu.riou@gmail.com",
            "body": "Actually I was seeing it as an opt-in feature, if JLine is in your classpath then it uses it, otherwise just don't use Jline. I'd be surprised if folks who run this into an Eclipse console were using JLine already. Or you think that an additional option is necessary?",
            "date": "20080315T02:21:22",
            "id": 3
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Well, the problem is that if you load all the source into Eclipse then you need JLine to compile. I suppose another option is to exclude JLine from the source list, or to make it so ShellLine will compile without JLine. I'll look at the latter on my flight Monday if I have a chance.",
            "date": "20080315T19:55:24",
            "id": 4
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "I changed ShellLine to just use reflection and I've now committed the changes.\n\nThanks for contributing this; it makes the console much more pleasant to use! If I get more time to play with this I may explore completion for object/property chains starting with global variables (e.g. java.lang.Str^I)",
            "date": "20080318T15:13:55",
            "id": 5
        }
    ],
    "component": "Compiler",
    "description": "User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b3pre) Gecko/2008020507 Firefox/3.0b3pre\nBuild Identifier: \n\nThis is the first version of a patch to improve the Rhino shell by adding line editing, history and completion. It relies on the JLine library to work but the dependency is optional at runtime.\n\nA bit more about the implementation itself. Instead of relying only on reflection, which worked but led to a rather ugly code, I've added a new file that includes all the JLine code. The classes contained in that file are only loaded if JLine is found in the classpath. The drawback is that JLine is required for compilation but I don't think it's a big problem, I've just modified a bit the Ant scripts.\n\nOn the plus side it allowed me to implement a custom completor (the interface that handles completion in JLine) and add completion for all Rhino shell functions (load, print, spawn, ...).\n\nLet me know how it goes...\n\nReproducible: Always",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "418034",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "[PATCH] Rhino shell improvement - better line editing",
    "systemSpecification": true,
    "version": "other"
}