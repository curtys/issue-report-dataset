{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 191196\nImplementation as a patch",
            "date": "20050801T13:39:09",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 191199\nCompilable version of the patch",
            "date": "20050801T13:43:01",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the patch",
            "date": "20050801T13:50:54",
            "id": 2
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)\nBuild Identifier: rhino1_5R5\n\nThe debugger normally brings hidden windows to the front when a breakpoint is \nhit, which informs the user that their script is frozen. \n\nHowever, if the window is minimised to the task bar (not simply underneath \nother windows), then the user receives no feedback that their script has hit a \nbreakpoint. In our use case, this means that the system is frozen at the \nbreakpoint, but the user does not realise this. \n\n(I guess this is subjective; it could be argued that if the user has minimised \ntheir window, they don't want any feedback?)\n\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Attach a debug session to a Rhino engine with any script containing a \nfunction definition\n2. Set a breakpoint in that function\n3. Minimise the window\n4. Execute the function so that the break point is hit\n\nActual Results:  \nThe breakpoint is hit, but the debugger window does not show any feedback. The \nthread of execution never returns to the program that passed the command to the \nRhino engine. \n\nExpected Results:  \nI would like the debugger window to unminimise itself, or possible start \nflashing on the toolbar, drawing the users attention to it. \n\nWe have altered our version to get the desired behaviour... \n\nThe following code, added to the EnterInterrupt class definition in \ntoolsrc/org/mozilla/javascript/tools/debugger/Main.java, does what I'd like to \nsee happen (starting with the code at line numbers 1957):\n\n1957: // raise the debugger window\n      int state = db.getExtendedState();\n      if (state == Frame.ICONIFIED)\n      {\n         db.setExtendedState(Frame.NORMAL);\n      }\n1958: db.toFront();",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "278701",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Minimised windows don't indicate that breakpoints have been hit",
    "systemSpecification": true,
    "version": "other"
}