{
    "comments": [
        {
            "author": "hannesw@gmail.com",
            "body": "Reassigning to Igor (hope that's ok ;-)",
            "date": "20040206T16:05:13",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 140752\nFix: populate ids array in NativeArray with dense indexes first\n\nSince array literals in Rhino creates instances of NativeArray with the\ninternal dense array containing literal elements, the patch changes\nNativeArray.getIds to return ids array with dense indexes coming first and\nindexes for elements added later after that.",
            "date": "20040206T18:17:41",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20040206T20:16:51",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "Trageting as resolved against 1.5R5",
            "date": "20040213T11:36:04",
            "id": 3
        }
    ],
    "component": "Core",
    "description": "User-Agent:       \nBuild Identifier: \n\nWhen an array is built using an array literal and elements are added to the\narray later on (using array[x]=y or array.push(y)), looping through it with a\nfor-in loop goes through elements in wrong order. It seems the elements added\nlater are always processed first.\n\nReproducible: Always\nSteps to Reproduce:\nRhino 1.5 release 5 0000 00 00\njs> var array = [1, 2, 3];\njs> array.push(4);\n4\njs> for (var i in array) print(i);\n\nActual Results:  \n3\n0\n1\n2\n\nExpected Results:  \n0\n1\n2\n3",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "233274",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "for/in loop goes through array elements in wrong order",
    "systemSpecification": true,
    "version": "other"
}