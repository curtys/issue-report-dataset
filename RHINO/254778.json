{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 155484\nFix: label code refactoring\n\nThe patch changes label logic to make the parser to check for all syntax errors\nrelated to label usage like duplicated labels, unknown labels in continue/break\nor continue label that does not point to a loop. After that IRFactory is asked\nto create proper labeled statements. \n\nThe refactoring simplified NodeTransformer noticeably and now all syntax errors\nare checked during parsing so NodeTransformer can always assume the correct\nparsing tree.",
            "date": "20040808T12:53:04",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20040808T13:57:35",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "Currently Rhino treats a JavaScript statement with a label as 2 separated\nstatements. This is visible in any syntax construction that is sensitive to\nnumber of statements. For example in Rhino shell the following prints ERROR!\ninstead of been silent:\n\nif (false)\n\tlabel: print(\"ERROR\");\n\nAnother example is the following syntactically correct fragment which currently\nfails with syntax errors instead of printing OK:\n\nif (true)\n\tlabel: print(\"OK\");\nelse \n\tlabel: print(\"ERROR\");",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "254778",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Rhino treats label as separated statement",
    "systemSpecification": false,
    "version": "head"
}