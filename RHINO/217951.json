{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 130714\nFix: removing instruction counter reset as suggested.",
            "date": "20030901T10:10:20",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix.",
            "date": "20030901T11:07:27",
            "id": 1
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Rubber-stamp vrfy -",
            "date": "20030908T22:13:08",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "Trageting as resolved against 1.5R5",
            "date": "20040213T11:35:52",
            "id": 3
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\nBuild Identifier: \n\nIn org.mozilla.javascript.Interpreter.interpret(...), the instruction count \ngets reset during the processing of Token.CALL bytecodes. I'm not sure if this \nbehavior is intentional, but it differs from the behavior of the \nIcode_CALLSPECIAL bytecode. \n\nIn any case, I think the solution is to remove line 2322:\n\n   cx.instructionCount = instructionCount;\n\nwhich does not appear in the handler for the similar Icode_CALLSPECIAL bytecode.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Create a Context that observes the instruction counts\n2. run some Javascript code in an infinite loop that calls a function\n\nActual Results:  \nContext.observeInstructionCount() never gets called\n\n\nExpected Results:  \nContext.observeInstructionCount() should get called occasionally",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "217951",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "instruction count reset during a call bytecode",
    "systemSpecification": true,
    "version": "other"
}