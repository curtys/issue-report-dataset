{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 148816\nInterpreter bytecode without restrictions\n\nThe patch changes bytecode in 2 ways:\n\n1. To remove 32K limit on the size of jump offset the patch adds a hashtable\nfor jump offset that does not fit short. The jumpcode then checks if the offset\nis 0 then it uses the hashtable to lookup the jump target based on the jump pc.\nTo decrease code duplication the interpreter loop is reorganized to have all\njump-related code in one place.\n\n2. To remove 64K restriction on various indexes and counters a new prefix\nbytecode Icode_REG_IND* and Icode_REG_STR* are introduced. They preload string\nor index arguments of various instructions so the instructions themselves can\nuse already extracted value. The prefixes know how to deal with arbitrary int\nvalues and encode them accordingly.",
            "date": "20040519T08:55:33",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the above patch as a series of smaller patches.",
            "date": "20040519T08:56:32",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "Currently the interpreter bytecode limits code complexity in various ways. For\nexample, it restricts the size of jump offsets to 32K, the number of different\nstrings is limited to 64K per script and the number of arguments in function\ncalls can not exceed 64K.\n\nAlthough such limits are quite reasonable, they are occasionally hit especially\nwith automatically generated scripts. It would be nice if the interpreter would\nnot contain such restrictions.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "244014",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Removal of code complexity limits in the interpreter",
    "systemSpecification": false,
    "version": "other"
}