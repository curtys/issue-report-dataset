{
    "comments": [
        {
            "author": "mozilla.bugs@cgrand.net",
            "body": "Additional information: b is set in the top level scope.",
            "date": "20071208T15:59:05",
            "id": 0
        },
        {
            "author": "mozilla.bugs@cgrand.net",
            "body": "Created attachment 292241\nproposed patch\n\nThis patche makes the destructuring assignment to set properties in the current scope.",
            "date": "20071208T21:15:51",
            "id": 1
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Thanks for the patch. Committed:\n\nChecking in Parser.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/Parser.java,v  <--  Parser.java\nnew revision: 1.123; previous revision: 1.122\ndone\n",
            "date": "20071210T18:01:21",
            "id": 2
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11\nBuild Identifier: CVS HEAD\n\nI have a function with destructured parameters\n(eg function(a, [b]) {...}).\n\nThis function is called from several threads and the b (in this example) appears to be shared :-(\nIf I rewrite my functions without destructured parameters (eg function(a, ab) { const b = ab[0]; ... } it solves the problem.\n\nCompiled & interpreted mode.\n\nReproducible: Always\n\nSteps to Reproduce:\nfunction f(a, [b]) { \n    java.lang.Thread.sleep(2000);\n    print(a + \";\" + b);\n}\nspawn(f, [1, [2]]);\nspawn(f, [3, [4]]);\nActual Results:  \n3;4\n1;4\n\nExpected Results:  \n3;4\n1;2",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "407374",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "-- major",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Destructuring assignment isn't threadsafe",
    "systemSpecification": true,
    "version": "other"
}