{
    "comments": [
        {
            "author": "hannesw@gmail.com",
            "body": "I was able to reproduce this with a CVS snapshot from 2008-02-05 whith the example code wrapped in a function and optlevel set to -1, but not with current CVS snapshot. Marking as fixed.",
            "date": "20081113T22:24:00",
            "id": 0
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\nBuild Identifier: Rhino HEAD snapshot from 2008-02-05 with token patch\n\nvar x = function() {\n   throw \"Some Exception\";\n}\n\ntry {\n   return x();\n} catch (e) {\n   logException(e); // will not be reached\n}\n\ntry {\n   var y = x();\n   return y;\n} catch (e) {\n   logException(e); // works fine\n}\n\nReproducible: Always\n\nSteps to Reproduce:\n1.see pseudo code describing the problem\n2.\n3.\nActual Results:  \nexception has not been catched and propergated up the stack\n\nExpected Results:  \nexception should have been catched and handled by the catch-code-block\n\nCan easily be workarounded by asigning the returnvalue to a local variable and returning the variable instead.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "463111",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "retrun function() will cause exceptions thrown by evaluating the function not to be catched by a surrounding try-catch",
    "systemSpecification": true,
    "version": "other"
}