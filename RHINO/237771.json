{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Targeting 1.5R5",
            "date": "20040317T13:26:29",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 144116\nFix: explicitly define toSource for all interested objects",
            "date": "20040317T13:27:56",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 144145\nFixing use of this in place of thisObj in the previous patch in NativeArray",
            "date": "20040317T17:30:01",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20040317T18:38:30",
            "id": 3
        }
    ],
    "component": "Core",
    "description": "The current implementation of toSource in Rhino does not allow to transfer\nObject.prototype.toSource to be transfered to other objects since it uses Java\ninheritance to call a particular method and as such does not fit into prototype\npattern of JS. \n\nIn the current SM shell I have:\n\n\njs> var a = [1,2];\njs> a.toSource = Object.prototype.toSource\n\nfunction toSource() {\n    [native code]\n}\n\njs> a.toSource()\n({0:1, 1:2, toSource:function toSource() {[native code]}})\n\njs> Object.prototype.toSource == Array.prototype.toSource\nfalse\n\n\nwhile the same session in Rhino gives:\n\n\njs> var a = [1,2];\njs> a.toSource = Object.prototype.toSource\nfunction toSource() { [native code for Object.toSource, arity=0] }\n\njs>  a.toSource()\n[1, 2]\n\njs>  Object.prototype.toSource == Array.prototype.toSource\ntrue",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "237771",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "toSource should be generic",
    "systemSpecification": false,
    "version": "other"
}