{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 177503\nFix as patch",
            "date": "20050315T17:10:30",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix, thanks for discovering it!",
            "date": "20050315T17:13:59",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "User-Agent:       Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)\nBuild Identifier: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)\n\n      While surfing to the following page:\n\n \n\n      <html>\n\n      <body>\n\n      <form name=\"form1\" method=\"get\">\n\n      First Name <input type=\"text\" name=\"firstName\" value=\"John\"><br>\n\n      Last Name <input type=\"text\" name=\"lastName\" value=\"Doe\"><br>\n\n        <input type=\"submit\" value=\"Submit>>\" name=\"submit\">\n\n      </form>\n\n      <div id=\"div1\"></div>\n\n      <script>\n\n      <!--\n\n      function window.onload()\n\n      {\n\n         document.getElementById(\"div1\").innerText = \"onload triggered\"; \n\n      }\n\n      //-->      \n\n      </script>\n\n      </body>\n\n      </html>\n\n \n\n      The Rhino javascript engine will enter into an infinite loop.\n\n      This is due to an incorrect function parse tree because of a redundant \ninitialization.\n\n      The source of the problem is in the function method at \norg.mozilla.javascript.parser.\n\n      The problematic code is:\n\n \n\n        Node pn = nf.initFunction(fnNode, functionIndex, body, syntheticType);\n\n        if (memberExprNode != null) {\n\n            pn = nf.initFunction(fnNode, functionIndex, body, syntheticType);\n\n \n\n            pn = nf.createAssignment(Token.ASSIGN, memberExprNode, pn);\n\n            if (functionType != FunctionNode.FUNCTION_EXPRESSION) {\n\n                // XXX check JScript behavior: should it be createExprStatement?\n\n                pn = nf.createExprStatementNoReturn(pn, baseLineno);\n\n            }\n\n        }\n\n      \n\n      As you can see in the code, the initFunction can be called twice. The \nhtml example above leads to that redundant initialization.\n\n      We suggest removing the second call to the function method.\n\n\n\nReproducible: Always\n\n\n\n\nThe MIT License\n\nCopyright (c) 2005 VERITAS Operating Company \n\n \n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\n \n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\n \n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "286251",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "initFunction can be called twice",
    "systemSpecification": true,
    "version": "other"
}