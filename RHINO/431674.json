{
    "comments": [
        {
            "author": "norrisboyd@gmail.com",
            "body": "Fixed: \n\nChecking in src/org/mozilla/javascript/JavaMembers.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/JavaMembers.java,v  <--  JavaMembers.java\nnew revision: 1.77; previous revision: 1.76\ndone\nChecking in testsrc/org/mozilla/javascript/tests/JavaAcessibilityTest.java;\n/cvsroot/mozilla/js/rhino/testsrc/org/mozilla/javascript/tests/JavaAcessibilityTest.java,v  <--  JavaAcessibilityTest.java\nnew revision: 1.4; previous revision: 1.3\ndone\nChecking in testsrc/org/mozilla/javascript/tests/PrivateAccessClass.java;\n/cvsroot/mozilla/js/rhino/testsrc/org/mozilla/javascript/tests/PrivateAccessClass.java,v  <--  PrivateAccessClass.java\nnew revision: 1.4; previous revision: 1.3\ndone\n",
            "date": "20080501T14:09:04",
            "id": 0
        }
    ],
    "component": "Core",
    "description": "Automagic property access -- and when it's a bit too magical\n\nLet's say you have a Java class with a standard getFoo/setFoo pair of methods. Rhino lets automatically unmangles the names and let you write code like this:\n\nvar aFooHolder = new JavAFooHolder();\naFooHolder.foo = 'kung';\nprint(aFooHolder.foo); // prints 'kung'\n\nMagical! But wait, theres (unfortunately) more. Under some circumstances (what are these?) Rhino will also see private class variables. Even more unfortuantely, it seems to prefer the private member variables to the demangled property-access methods. This can bite you like a black mamba on a sunless Serengetti night. Let's say that the FooHolder?'s setFoo method has Important Side Effects:\n\nvar aFooHolder = new JavAFooHolder();\naFooHolder.foo = 'kung'; // should also close the Exhaust Port leading to the reactor core \nprint(aFooHolder.foo); // prints 'kung', because the private member variable is set correctly\n\n\nassertFalse(ExhaustPort.isOpen); // Augh! We're wide open to Rebel attack!\n\nThis can be maddening, because the member variable appears to have been 'set' but it was really inserted with a needle. Beware!",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "431674",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Java field private access doesn't work well with Java Bean access",
    "systemSpecification": true,
    "version": "1.7R1"
}