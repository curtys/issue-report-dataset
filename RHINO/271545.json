{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Here is a relevant section of ECMA 357:\n\n13.4.2 The XML Constructor\nSyntax\n       new XML ( [ value ] )\n...\nSemantics\nWhen the XML constructor is called with no arguments or a single argument value,\nthe following steps are taken:\n    1. If value is null, undefined or not supplied, let value be the empty string\n...",
            "date": "20041124T14:47:46",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "Changing the title: the actual bug is that while XML() creates true leaf empty\ntext object which should ignore attempts to add xml child to it, the resulting\nXML(\"\") does allow child insertion.\n\nNote that XML(nonEmptyStringWithoutXMLMarkup) behaves properly and creates text\nnode which ignore any attempt to add a child to it.",
            "date": "20041124T15:23:09",
            "id": 1
        },
        {
            "author": "igor@mir2.org",
            "body": "Changing title one more time:\n\nThe bug is that while XML(\"\") does create empty text node, XML() creates\nnon-leaf object.\n",
            "date": "20041124T15:29:44",
            "id": 2
        },
        {
            "author": "igor@mir2.org",
            "body": "I added e4x/Regress/regress-271545.js to the test suite which currently generates:\n\nBug Number 271545\nSTATUS: XML(\"\") should create empty text node\nFailure messages were:\nFAILED!: Section 1 of test -\nFAILED!: Expected value:\nFAILED!: \nFAILED!: Actual value:\nFAILED!: <a>foo</a>\nFAILED!: \n",
            "date": "20041124T15:31:18",
            "id": 3
        },
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 166960\nFix: make XML() equivalent to XML(\"\")",
            "date": "20041124T23:01:44",
            "id": 4
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20041124T23:16:58",
            "id": 5
        }
    ],
    "component": "E4X",
    "description": "Werner Sharp wrote:\n> \n> In the appendChild behavior below, it looks like Rhino is treating \"new\n> XML()\" different than \"new XML(\"\")\".  The same issue appears when doing...\n> \n> x = new XML();\n> x.a = \"foo\";\n> print (x.toXMLString());\n> x = new XML(\"\");\n> x.a = \"foo\";\n> print (x.toXMLString());\n> \n> The first case creates \"<a>foo</a>\" while the second case does not.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "271545",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "XML() does not create empty text nodes",
    "systemSpecification": true,
    "version": "other"
}