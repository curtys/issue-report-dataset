{
    "comments": [
        {
            "author": "pschwartau@meer.net",
            "body": "Igor's test has been added to the JS testsuite:\n\n          mozilla/js/tests/ecma_3/Function/regress-137181.js\n\n\nCurrently passing in SpiderMonkey, failing in Rhino:\n\nFAILED!: Section 1 of test -\nFAILED!: Expected value '1', Actual value 'undefined'\n\nFAILED!: Section 2 of test -\nFAILED!: Expected value '1', Actual value '-1'",
            "date": "20020412T21:17:07",
            "id": 0
        },
        {
            "author": "ibukanov8@yahoo.com",
            "body": "Created attachment 79191\nCode fix: patch to omj/Arguments.java\n\nThe patch uses the special NOT_FOUND value to flag deleted indexes. It also\nmake sure that original array object passed to Function.call is not modified,\nas all changes goes to cloned copy. It is not necessary for the fix, but it is\nthe only place in the current Rhino that can alter Object[] array passed to\nFunction.call and I think it is better to remove this exceptional case.\n\nI will run the tests and if there are no objections will commit it in couple\ndays.",
            "date": "20020414T22:20:34",
            "id": 1
        },
        {
            "author": "ibukanov8@yahoo.com",
            "body": "Created attachment 79192\nFixing comments misspells in the previous patch version",
            "date": "20020414T22:25:33",
            "id": 2
        },
        {
            "author": "ibukanov8@yahoo.com",
            "body": "I committed the fix so Rhino passes the additional tests.",
            "date": "20020416T07:39:04",
            "id": 3
        },
        {
            "author": "user@apochta.com",
            "body": "As this is in Rhino CVS for a long time now, maybe it can be marked fixed/verified?",
            "date": "20021203T20:18:22",
            "id": 4
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Igor is correct - marking FIXED",
            "date": "20021203T21:30:18",
            "id": 5
        },
        {
            "author": "pschwartau@meer.net",
            "body": "Marking Verified Fixed.\n\nIgor's testcase now passes in both the rhino and rhinoi shells -",
            "date": "20021203T21:32:12",
            "id": 6
        },
        {
            "author": "igor@mir2.org",
            "body": "Targeting as resolved against 1.5R4",
            "date": "20040213T12:20:07",
            "id": 7
        }
    ],
    "component": "Core",
    "description": "Reported in the JS Engine newsgroup by ibukanov8@yahoo.com (Igor Bukanov):\n\n\"Given the following and my reading of Ecma-262\n\nfunction test1(x) {\n    x = 1;\n    delete arguments[0];\n    return x;\n}\n\nfunction test2(x) {\n    x = 1;\n    delete arguments[0];\n    arguments[0] = -1;\n    return x;\n}\n\n\ntest1(0) and test2(0) should both return 1, since after |delete argument[0]|,\narguments[0] loses any connection with x, even if arguments[0] is recreated. \n\n\nFrom ECMA-262 Edition 3:\n\n\nSection 10.1.8 Arguments Object\n\n*  For each non-negative integer, arg, less than the value of the length\nproperty, a property is created with name ToString(arg) and property\nattributes { DontEnum }. The initial value of this property is the value \nof the corresponding actual parameter supplied by the caller. The first \nactual parameter value corresponds to arg = 0, the second to arg = 1, \nand so on. In the case when arg is less than the number of formal \nparameters for the Function object, this property shares its value with \nthe corresponding property of the activation object. This means that \nchanging this property changes the corresponding property of the \nactivation object and vice versa.\n\n\nSection 10.2.3 Function Code\n\n*  Variable instantiation is performed using the activation object as \nthe variable object and using property attributes { DontDelete }.\n\n\nSpiderMonkey meets these expectations, but Rhino does not.\nIn Rhino, test1(0) returns |undefined|; test2(0) returns -1.\n\n\nNote the testcase for bug 72884,\n\n     mozilla/js/tests/ecma_3/Function/arguments-001.js\n\ndoes not touch this area, so maybe it should be updated to\ncover this issue as well -\"\n\n\n\nFOR REFERENCE:\n\nbug 72884 (SpiderMonkey) \"Arguments object has incorrect [[Prototype]] property\"\nbug 79568 (Rhino)        \"delete on an arguments[i] not working correctly\"",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "137181",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "delete on an arguments[i] not working correctly",
    "systemSpecification": true,
    "version": "other"
}