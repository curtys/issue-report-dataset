{
    "comments": [
        {
            "author": "igor@mir2.org",
            "body": "Created attachment 157409\nFix: return insist on library presense in ScriptRuntime.getLibraryScope\n\nTo allow for custom wrapping of objects in xml implementation WrapFactory\ncallsed XMLLib.extractFromScopeOrNull which in turns called\nScriptRuntime.getLibraryScope to find the scope where XML initialization\nhappens. But that method throwsed execption if it could not find the library.\n\nTo fix the bug I changed ScriptRuntime.getLibraryScope to return null if\nlibrary scope was not detected and renamed the method to\nScriptRuntime.getLibraryScopeOrNull.",
            "date": "20040830T14:05:10",
            "id": 0
        },
        {
            "author": "igor@mir2.org",
            "body": "I committed the fix",
            "date": "20040830T14:57:55",
            "id": 1
        }
    ],
    "component": "Core",
    "description": "Currently Context.toObject implicitly requires prior call\nContext.initStandardObjects. That dependency should not exist. \n\nThe issue was reported by Hannes Wallnoefer at helma-dev@helma.org list:\n\nHannes Wallnoefer wrote:\n>... in Helma we're calling init() on the shared \n> global scope before calling initStandardObjects()  (in file \n> src/helma/scripting/rhino/RhinoCore.java):\n> \n>            global.init();\n>            global.initStandardObjects(context, false);\n> \n> With this, I get:\n> \n> Error: java.lang.IllegalStateException: Failed to find library scope\n> java.lang.IllegalStateException: Failed to find library scope\n>        at \n> org.mozilla.javascript.ScriptRuntime.getLibraryScope(ScriptRuntime.java:184) \n> \n>        at \n> org.mozilla.javascript.xml.XMLLib.extractFromScopeOrNull(XMLLib.java:46)\n>        at \n> org.mozilla.javascript.WrapFactory.wrapAsJavaObject(WrapFactory.java:148)\n>        at org.mozilla.javascript.WrapFactory.wrap(WrapFactory.java:104)\n>        at \n> helma.scripting.rhino.RhinoCore$WrapMaker.wrap(RhinoCore.java:980)\n>        at \n> org.mozilla.javascript.ScriptRuntime.toObject(ScriptRuntime.java:857)\n>        at \n> org.mozilla.javascript.ScriptRuntime.toObject(ScriptRuntime.java:817)\n>        at org.mozilla.javascript.Context.toObject(Context.java:1634)\n>        at helma.scripting.rhino.GlobalObject.init(GlobalObject.java:71)\n>        at helma.scripting.rhino.RhinoCore.<init>(RhinoCore.java:94)\n>        at \n> helma.scripting.rhino.RhinoEngine.getRhinoCore(RhinoEngine.java:134)\n>        at helma.scripting.rhino.RhinoEngine.init(RhinoEngine.java:79)\n>        at \n>\nhelma.framework.core.RequestEvaluator.initScriptingEngine(RequestEvaluator.java:86) \n> \n>        at \n> helma.framework.core.RequestEvaluator.run(RequestEvaluator.java:113)\n>        at java.lang.Thread.run(Thread.java:534)\n> \n> After looking at the code, I saw that init() expects \n> initStandardObjects() to have run already ...",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "257425",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "-- normal",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Regression: Context.toObject() should not require Context.initStandardObjects",
    "systemSpecification": true,
    "version": "head"
}