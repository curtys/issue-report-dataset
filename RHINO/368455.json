{
    "comments": [
        {
            "author": "bjervis@google.com",
            "body": "Created attachment 254086\nPatch to add get/set syntax to object literals.",
            "date": "20070205T23:47:13",
            "id": 0
        },
        {
            "author": "inonit@inonit.com",
            "body": "Apologize for not getting to this yet.  It's in the queue and I want to be careful with it, given that the last patch I committed (bug 224334) turned out to have some issues ...",
            "date": "20070207T02:41:28",
            "id": 1
        },
        {
            "author": "bjervis@google.com",
            "body": "Created attachment 254858\nRevised patch with compile path supported and a decompiler bug fixed.",
            "date": "20070212T21:48:56",
            "id": 2
        },
        {
            "author": "bjervis@google.com",
            "body": "Created attachment 254870\nAdded my name to contributors\n\nI keep forgetting to add myself to the source files.",
            "date": "20070212T23:05:23",
            "id": 3
        },
        {
            "author": "szegedia@freemail.hu",
            "body": "(In reply to comment #3)\n> Created an attachment (id=254858) [details]\n> Revised patch with compile path supported and a decompiler bug fixed.\n> \n\nAlmost good - you must keep the ScriptRuntime.newObjectLiteral() method with the old signature as well for backward compatibility. Developers can compile scripts to .class files offline with \"jsc\" command line utility, and we strive to preserve binary compatibility of the ScriptRuntime's public API, so scripts compiled to .class files with earlier Rhino continue working with a later version. Of course, you can have the old signature version delegate to new signature version, and you can mark the old signature version deprecated.",
            "date": "20070213T09:47:16",
            "id": 4
        },
        {
            "author": "bjervis@google.com",
            "body": "Created attachment 254965\nAdded compat version of NativeFunction.newObjectLiteral\n\nAdded a backward compatible version of NativeFunction.newObjectLiteral based on a comment from Attila that got attached to bug 369525,",
            "date": "20070213T17:45:31",
            "id": 5
        },
        {
            "author": "bjervis@google.com",
            "body": "Created attachment 254966\nAdded deprecated\n\nI keep forgetting details...",
            "date": "20070213T17:50:18",
            "id": 6
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Fixed in cvs:\n\nChecking in Decompiler.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/Decompiler.java,v  <--  Decompiler.java\nnew revision: 1.22; previous revision: 1.21\ndone\nChecking in Interpreter.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/Interpreter.java,v  <--  Interpreter.java\nnew revision: 1.319; previous revision: 1.318\ndone\nChecking in Parser.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/Parser.java,v  <--  Parser.java\nnew revision: 1.109; previous revision: 1.108\ndone\nChecking in ScriptRuntime.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/ScriptRuntime.java,v  <-- ScriptRuntime.java\nnew revision: 1.258; previous revision: 1.257\ndone\nChecking in Token.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/Token.java,v  <--  Token.java\nnew revision: 1.37; previous revision: 1.36\ndone\nChecking in optimizer/Codegen.java;\n/cvsroot/mozilla/js/rhino/src/org/mozilla/javascript/optimizer/Codegen.java,v  <--  Codegen.java\nnew revision: 1.244; previous revision: 1.243\ndone\n\nOnly change from Bob's patch was to remove the @Deprecated annotation since\nwe haven't been requiring JDK 1.5 to compile.",
            "date": "20070403T21:16:13",
            "id": 7
        },
        {
            "author": "norrisboyd@gmail.com",
            "body": "Adding target milestone of 1.6R6 based on the date this bug was resolved FIXED.",
            "date": "20070518T15:11:54",
            "id": 8
        }
    ],
    "component": "Core",
    "description": "SpiderMonkey allows the definition of getter and setter functions in an object initializer.  See, e.g., http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Guide:Creating_New_Objects:Defining_Getters_and_Setters\n\nRhino would gain compatibility by adding this feature as well.  On the other hand, it would require modifying Rhino's parser, which has been described recently (and not-so-recently) as a frightening proposition.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "368455",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "-- enhancement",
    "product": "Rhino",
    "project": "RHINO",
    "summary": "Implement \"get\" and \"set\" getter/setter forms in object initializers in Rhino",
    "systemSpecification": true,
    "version": "other"
}