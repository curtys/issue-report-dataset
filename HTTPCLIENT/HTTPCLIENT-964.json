{
    "comments": [
        {
            "author": "Jonathan Moore",
            "body": "The attached patch adds a test to TestProtocolCompliance that allows for a variety of behaviors, all of which would be conditionally compliant:\n\n1. raise a ClientProtocolException\n2. return an error response without forwarding the request\n3. forward a corrected request instead (possibly by rewriting to a simple \"no-cache\" with no field name)\n\nThe patch also applies a stopgap fix, which is to consider this a \"fatally noncompliant\" request in RequestProtocolCompliance.java and return a 400 error (option #2). However, I think it's worth discussing whether this\nis the right approach or not. Another approach would simply be to not enforce this particular protocol requirement.\n\nThe patch is granted to the ASF with the permission of my employer.\n",
            "date": "2010-07-02T14:03:36.746+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in. Many thanks, Jon\n\nOleg",
            "date": "2010-07-07T16:03:01.772+0000",
            "id": 1
        }
    ],
    "component": "HttpCache",
    "description": "\"Field names MUST NOT be included with the no-cache directive in a request.\"\n\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.4\n\nCurrently, the cache implementation allows a request containing something like:\n    Cache-Control: no-cache=\"Content-Location\"\nto be passed downstream towards the origin.\n\nThis is another one of those tricky situations where our client has passed us a non-compliant request.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-964",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Trivial",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "no-cache directives with field names are transmitted downstream",
    "systemSpecification": true,
    "version": "4.1 Alpha2"
}