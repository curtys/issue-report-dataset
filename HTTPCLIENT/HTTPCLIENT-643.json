{
    "comments": [
        {
            "author": "Vadim Permakoff",
            "body": "Attached is example of code: MultiHomeProtocolSocketFactory.java and MultiHomeSSLProtocolSocketFactory.java to resolve this issue",
            "date": "2007-04-02T14:47:31.452+0000",
            "id": 0
        },
        {
            "author": "Vadim Permakoff",
            "body": "Attached is example of code: MultiHomeProtocolSocketFactory.java and MultiHomeSSLProtocolSocketFactory.java to resolve this issue",
            "date": "2007-04-02T14:48:08.470+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks,\n\nThis looks useful to me. The questions is whether we want to put this code to the 'contrib' package or to HttpClient proper. \n\nWhat do you think?\n\nOleg",
            "date": "2007-04-02T15:14:55.568+0000",
            "id": 2
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Should definitely go into proper. It's a common use case.",
            "date": "2007-04-02T16:24:24.466+0000",
            "id": 3
        },
        {
            "author": "Roland Weber",
            "body": "Looks like a case for proper. The error handling and Java version support needs a bit of polishing though.\n\ncheers,\n  Roland\n",
            "date": "2007-04-02T17:14:36.598+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Another question to follow immediately: what target release? 3.1, 3.2 or 4.0? Since 3.1-rc1 has already been officially released 3.1 is supposed to be in the state of code freeze by now barring serious bugs only. \n\nThoughts?\n\nOleg",
            "date": "2007-04-02T17:21:01.504+0000",
            "id": 5
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "We can certainly bundle it as an addition in 3.1, if it is not set as the default.",
            "date": "2007-04-02T17:26:18.551+0000",
            "id": 6
        },
        {
            "author": "Roland Weber",
            "body": "I can live with putting this into 3.1. It does not affect either binary or source compatibility. And it makes sense.\nWe should not let users wait for this code for several releases just to stick to the RC definition.\n\nBut if you don't like the idea, I have no problem with putting it into 3.1 contrib and 4.0 proper either.\n\ncheers,\n  Roland\n",
            "date": "2007-04-02T17:41:10.586+0000",
            "id": 7
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Very well, 3.1 it is.\n\nOleg",
            "date": "2007-04-02T18:35:21.398+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Vadim,\n\nI took a closer look at the code and found out that both factories would not work as advertised (no fail-over for multi-home remote servers) if the connect timeout was set to a non-zero value. This needs to be fixed if you want the code to be accepted into the main distribution of HttpClient.\n\nOleg ",
            "date": "2007-04-23T07:52:19.457+0000",
            "id": 9
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks,\n\nThis patch is not ready for inclusion into the stable distribution without additional work. I have no cycles left to work on anything but major bugs in the HttpClient 3.x code line. I suggest we postpone this issue until 4.0\n\nOleg",
            "date": "2007-05-10T09:04:52.262+0000",
            "id": 10
        },
        {
            "author": "Vadim Permakoff",
            "body": "Hi Oleg,\nSorry, I did not look in this thread for a long time and now my reply is probably too late, but anyway, I hope it may be useful. \nI put here the code just as an example, how the problem was resolved in our case. I don't pretend it to go to any version unchanged and I did not test this code with all possible scenarios, but actually it works fine for me if the connect timeout is set to a non-zero value. I'm not sure why it does not work in your case, can you please provide a bit more info?\n",
            "date": "2007-10-14T16:34:55.973+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Vadim,\nBecause both socket factories do not seem to provide the same fail-over logic when the connection timeout is set to a non zero value. They merely call the ControllerThreadSocketFactory#createSocket method; \n====\n    int timeout = params.getConnectionTimeout();\n\n    if (timeout == 0)\n\n    {\n\n      return createSocket(host, port, localAddress, localPort);\n\n    }\n\n    return ControllerThreadSocketFactory.createSocket(\n\n        this, host, port, localAddress, localPort, timeout);\n\n  }\n\n====\n\nI still intend to incorporate the patch into the 4.0 branch in the due course. You are very welcome to give me a helping hand, though, if you want this to happen sooner ;-)\n\nOleg ",
            "date": "2007-10-14T19:58:08.883+0000",
            "id": 12
        },
        {
            "author": "Vadim Permakoff",
            "body": "I see. This is what I did not mention: I registered http protocol with MultiHomeProtocolSocketFactory and https with MultiHomeSSLProtocolSocketFactory.\n\n  // register custom http and https protocols\n  static\n  {\n    Protocol protocolHttp = new Protocol(\"http\",\n                                     (ProtocolSocketFactory)new MultiHomeProtocolSocketFactory(),\n                                     DEFAULT_HTTP_PORT);\n    Protocol.registerProtocol(\"http\", protocolHttp);\n    Protocol protocolHttps = new Protocol(\"https\",\n                            (ProtocolSocketFactory)new MultiHomeSSLProtocolSocketFactory(),\n                            DEFAULT_HTTPS_PORT);\n    Protocol.registerProtocol(\"https\", protocolHttps);\n  }\n\nI did not need to change any code in HTTP Client (which I like a lot, nice architecture!), just created these 2 Factories and registered in my other class. In this case the MultiHomeProtocolSocketFactory#createSocket will be called from ControllerThreadSocketFactory#createSocket.\n",
            "date": "2007-10-19T13:17:51.909+0000",
            "id": 13
        },
        {
            "author": "Vadim Permakoff",
            "body": "Oleg,\nAny problems using it as I described above? \nRegards, \nVadim",
            "date": "2007-10-30T18:26:18.097+0000",
            "id": 14
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "No, no problem, but as far as I understand this only works when the factory is registered as the default one.   \n\nOleg",
            "date": "2007-10-30T18:39:50.787+0000",
            "id": 15
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Automatic connect fail-over for multi-home remote servers implemented in SVN trunk\n\nOleg ",
            "date": "2008-02-06T21:43:46.856+0000",
            "id": 16
        }
    ],
    "component": "HttpClient (classic)",
    "description": "The HTTP Client does not provide automatic fail-over for multi-home remote servers (web-farm) if one server in a farm goes down",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-643",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Provide fail-over for multi-home remote servers (if one server in a farm goes down)",
    "systemSpecification": true,
    "version": "3.1 RC1"
}