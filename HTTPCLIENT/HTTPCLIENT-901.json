{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "I added ContextAwareAuthScheme interface and tweaked RequestProxyAuthentication and RequestTargetAuthentication interceptors\n\nhttp://svn.apache.org/viewvc?view=revision&revision=889860\n\nIt is all yours now.\n\nOleg",
            "date": "2009-12-11T23:37:02.297+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Sebastiaan,\n\nAre you working on this issue, or shall I take over?\n\nOleg",
            "date": "2010-02-23T12:35:35.855+0000",
            "id": 1
        },
        {
            "author": "Sebastiaan van Erk",
            "body": "Yes, I'm definitely still working on this, but I've been short on time due to some deadlines recently.\n\nI have all the code working for my specific use case, but to make it work for everybody there need to be some small fixes and polishing.\n\nThe problem is integrating the protocol into the auth scheme design in httpclient. The main issues are:\n- the protocol should be connection based, but not all implementations on the server side are (apache being the main exception). \n- the protocol uses negotiation that should be finished even when a non 401 or 407 response code is returned.\n\nI'm really busy with a deadline the next 2-3 weeks, but after that I'm finishing the project which needs this Kerberos auth/proxy auth, and it will be put live at the customer location.\n\nI don't know in what way you want to proceed. I can submit what I have,  and you can do what you want with it, or else I can submit it in small patches (but I'll need time to put it into that form, so it'll have to wait until after the deadline). Another option is to reserve a day sometime soon in the weekend and get in touch (e.g. chat) and try to fix it on that day, because I think with direct feedback it'll work much faster.\n\nRegards,\nSebastiaan",
            "date": "2010-02-23T14:27:42.224+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Truth to be told I neither have time, nor competence, nor inclination to work on this issue. I just wanted to know whether you were still interested in working on SPNEGO improvements in principle. \n\nI would prefer your changes submitted as a series of incremental small patches, which obviously will require some preparation on your part. No need to rush things. Take your time. \n\nOleg",
            "date": "2010-02-23T15:00:52.059+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Sebastiaan,\n\nI had to go ahead and fix the problem with the proxy authentication exercising my best judgement based on your input. I guess we will have to live with SPNEGO in its present form for now. Hopefully you will manage to get around to submitting your improvements some time in the future. \n\nClosing as FIXED.\n\nOleg  ",
            "date": "2010-04-08T18:38:33.533+0000",
            "id": 4
        }
    ],
    "component": "HttpClient (classic)",
    "description": "The interface to be added would be:\n\n/**\n * This interface represents an extended  authentication scheme\n * that requires access to {@link HttpContext} in order to\n * generate an authorization string.\n *\n * @since 4.1\n */\n\npublic interface ContextAwareAuthScheme extends AuthScheme {\n\n    /**\n     * Produces an authorization string for the given set of\n     * {@link Credentials}.\n     *\n     * @param credentials The set of credentials to be used for athentication\n     * @param request The request being authenticated\n     * @param context HTTP context\n     * @throws AuthenticationException if authorization string cannot\n     *   be generated due to an authentication failure\n     *\n     * @return the authorization string\n     */\n    Header authenticate(\n            Credentials credentials,\n            HttpRequest request,\n            HttpContext context) throws AuthenticationException;\n\n}\n\nBinary compatibility can be maintained by doing an instanceof check at the location where AuthScheme.authenticate() is called at the moment, and calling the context aware version if available.\n\nThis interface is necessary for the NegotiateScheme authentication scheme because the service names for the authentication tickets are based on the hostname of the target host or proxy host, depending on whether it's normal or proxy authentication, and this information is only available from the HttpContext.\n\nWithout the HttpContext there is a workaround that works most of the time, which looks like this:\n\n\tString host;\n\tif (isProxy()) {\n\t\t// FIXME this should actually taken from the HttpContext.\n\t\tHttpHost proxy = ConnRouteParams.getDefaultProxy(request.getParams());\n\t\thost = proxy.getHostName();\n\t} else {\n\t\thost = request.getLastHeader(\"Host\").getValue();\n\t}\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-901",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Add a ContextAwareAuthScheme that has access to the HttpContext in the authenticate method",
    "systemSpecification": true,
    "version": "4.1 Alpha1"
}