{
    "comments": [
        {
            "author": "Jeff Dever",
            "body": "*** HTTPCLIENT-37 has been marked as a duplicate of this bug. ***",
            "date": "2002-07-22T09:42:53.000+0000",
            "id": 0
        },
        {
            "author": "Jeff Dever",
            "body": "> And there is the real problem, which is the reason I don't like JAR \nfiles\n> checked into CVS either.  (Disk space isn't expensive enough to be a\n> deterrent any more :-)\n> \n> Let's assume that I want to build a single app that uses two different\n> commons packages (A and B) that both depend on a third one (S).  In the\n> runtime environment of my app, all three are going to be in the same \nclass\n> loader, so there can obviously only be one copy of S.\n> \n> The challenge comes when A and B each depend on different versions of S.\n> I don't find out about problems (say, incompatible method signatures due\n> to changes between S1 and S2) until I'm doing integration testing (and\n> only then if my test suite happens to include coverage for the \ncombination\n> in question).\n> \n> I'd really like the compiler to help me catch things like this, by \nforcing\n> *my* compilations of A and B to use a specific copy of S, no matter what\n> the A and B project documentation declares to be the required versions.\n> \n> In non-Mavenized builds like BeanUtils and Digester, I manage this \nthrough\n> a shared \"${user.home}/build.properties\" file that declares which \nversion\n> of S's jar files should be used.  (This relies on using the same \nproperty\n> name in each build script, which is generally true for Commons projects\n> but not always true elsewhere.)\n> \n> Fortunately, Jason just added similar functionality to Maven, so \nMavenized\n> apps will be able to do the same sort of \"local override\" configuration.\n> So, there is now even less reason for projects to continue to check JAR\n> files into CVS.\n> \n> Craig\n> \n",
            "date": "2002-07-23T00:27:52.000+0000",
            "id": 1
        },
        {
            "author": "Jeff Dever",
            "body": "dIon has started working to this.",
            "date": "2002-08-08T02:51:15.000+0000",
            "id": 2
        },
        {
            "author": "dion gillard",
            "body": "Maven build is complete AFAIK. maven clean test will compile all code and tests\nand run TestNoHost.\n\nJars are also downloaded by maven as per the project.xml",
            "date": "2002-10-31T00:16:32.000+0000",
            "id": 3
        },
        {
            "author": "Jeff Dever",
            "body": "Thanks dIon.",
            "date": "2003-01-22T07:07:45.000+0000",
            "id": 4
        }
    ],
    "component": "HttpClient (classic)",
    "description": "- ease of building. HttpClient should be buildable without the user needing to\ngo away and download extra jars. Maven does a good job of this.\n- automated site and build on a nightly basis to pick up changes\n- move to j2sdk1.4",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-67",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Build environment configuration: Mavenize the build process",
    "systemSpecification": false,
    "version": "2.0 Alpha 1"
}