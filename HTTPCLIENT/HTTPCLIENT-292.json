{
    "comments": [
        {
            "author": "Alfonso",
            "body": "Created an attachment (id=8887)\nDebug log of the problem (edited to hide names)\n",
            "date": "2003-11-03T20:30:44.000+0000",
            "id": 0
        },
        {
            "author": "Alfonso",
            "body": "As I can see, one possible way of solving the problem is to \"forget\" the list of\nrealms used for proxy authentication when trying the validation after receiving\nthe \"401\" from the remote host. This can be done by changing in\nHttpMethodBase#processAuthenticationResponse.\n\nIn lines 2476-2484 it says\n\n            case HttpStatus.SC_UNAUTHORIZED:\n                challenges =\ngetResponseHeaderGroup().getHeaders(HttpAuthenticator.WWW_AUTH);\n                realmsUsed = realms;\n                host = conn.getVirtualHost();\n                if (host == null) {\n                    host = conn.getHost();\n                }\n                break;\n\nClearing the list of realms used for the proxy could be something like \n\n\n            case HttpStatus.SC_UNAUTHORIZED:\n                challenges =\ngetResponseHeaderGroup().getHeaders(HttpAuthenticator.WWW_AUTH);\n                proxyRealms.clear();\n                realmsUsed = realms;\n                host = conn.getVirtualHost();\n                if (host == null) {\n                    host = conn.getHost();\n                }\n                break;\n\nRecompiling after this change and trying again the test case retrieves the page\njust fine (do I have to attach a log?)",
            "date": "2003-11-03T20:36:48.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Yes, please. The log would be quite of some help.\n\nOleg",
            "date": "2003-11-03T21:43:33.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Alfonso,\nCan you test if the patch below fixes the problem?\n\nOleg",
            "date": "2003-11-04T02:17:36.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=8895)\nPossible fix. Please test\n",
            "date": "2003-11-04T02:18:05.000+0000",
            "id": 4
        },
        {
            "author": "Alfonso",
            "body": "Oleg,\n\nWow!!! again, thanks. Applied the patch and re-tested. It now works as expected.\nAs with the previous bug, should I close this or it is something you should do?.\n\nThanks again\n\nAlfonso",
            "date": "2003-11-04T05:24:20.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed to 2.0 branch. \n\nI just realized that one of my recent patches (auto-generated headers cleanup)\ncomplete broke authentication in CVS HEAD. My bad. I'll provide a fix for CVS\nHEAD tomorrow. My apologies.\n\nOleg",
            "date": "2003-11-04T07:35:44.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=8996)\nPatch against CVS HEAD (take 1)\n",
            "date": "2003-11-08T19:11:21.000+0000",
            "id": 7
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "The patch against CVS HEAD is virtually identical to that for 2.0 branch. The\npatch also solves the problem with auto-generated headers by restricting headers\ncleanup to 'Cookie' headers only.\n\nOleg",
            "date": "2003-11-08T19:14:16.000+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks, any objections to committing this one?\n\nOleg",
            "date": "2003-11-11T01:43:41.000+0000",
            "id": 9
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nI haven't had a chance to try this patch out, but if it works for you that's\ngood enough for me.\n\nMike",
            "date": "2003-11-11T03:14:12.000+0000",
            "id": 10
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike,\nIt all can wait. There is no rush. I'd feel better if someone else had a look.\n\nOleg",
            "date": "2003-11-11T06:37:04.000+0000",
            "id": 11
        },
        {
            "author": "Michael Becke",
            "body": "Hi Oleg,\n\nI finally had some time to try this one out.  It looks good to me.\n\nMike",
            "date": "2003-11-12T12:09:52.000+0000",
            "id": 12
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed to CVS HEAD\n\nOleg",
            "date": "2003-11-14T06:25:57.000+0000",
            "id": 13
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Sadly enough, I just discovered even though the patch fixed the problem with\nNTLM Proxy + Basic host authentication, but unintentionally broke Basic Proxy +\n[Digest | Basic] host authentication. I am going to reopen the bug report, and\nstart working on a better fix. This bug is a release blocker.\n\nAbsence of a reliable and comprehensive testcase suite for all possible proxy +\nhost authentication combinations has become a real pain in the rear. As far as I\nam concerned this is the greatest deficiency of HttpClient I know of at the moment.",
            "date": "2003-11-16T23:32:44.000+0000",
            "id": 14
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9134)\nPatch against 2.0 (take 2)\n",
            "date": "2003-11-17T05:46:27.000+0000",
            "id": 15
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I am perfectly aware that the proposed fix is not pretty. Unfortunately I do not\nsee a more elegant solution that would not require API changes. Any better ideas?\n\nI'll try to come up with something more elegant for the 2.1 branch. \n\nOleg",
            "date": "2003-11-17T05:49:50.000+0000",
            "id": 16
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nI agree, our lack of auth/proxy tests is a continuous source of problems.  One of our goals for 2.1 \nshould be an effective method for testing all of the various combinations of proxy, authentication \nand SSL.  Ideally it would be best to make this setup as simple as possible.  Do you have any \nthoughts about how we can best accomplish this?\n\nMike",
            "date": "2003-11-17T11:45:20.000+0000",
            "id": 17
        },
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=9255)\n2.0 Patch 3\n",
            "date": "2003-11-24T11:03:52.000+0000",
            "id": 18
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nAttached is another take on this problem.  It removes the necessity of checking for NTLM explicitly.  \nI was able to test it successfully with basic authentication on the proxy and digest on the host.  \nNTLM has not been tested.   What do you think?\n\nMike",
            "date": "2003-11-24T11:07:12.000+0000",
            "id": 19
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike,\nUnfortunately the patch would bring us exactly where we had started in the first\nplace :( NTLM proxy + target host authentication would still be left broken\n\nOleg",
            "date": "2003-11-24T20:57:39.000+0000",
            "id": 20
        },
        {
            "author": "Michael Becke",
            "body": "Yes, it seems we're back to where we started from.  What exactly about that behavior is causing \nproblems?  Why does the proxy try to re-authenticate in the fourth request?  Also, is this a problem \nif preemptive authentication is used?\n\nMike",
            "date": "2003-11-24T21:29:36.000+0000",
            "id": 21
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike, \nmy assumption is that the presence of (extra) Proxy-Authorization header prompts\nthe NTLM proxy to invalidate the authorization for the given connection and\nforce re-authentication. As HttpClient assumes that it has already attempted\nauthentication against the said proxy, it just gives up. \n\nI do not know NTLM authentication in great details, so I may be wrong here, but\nthe main difference to digest and basic authentication schemes is that NTLM\nscheme is connection oriented. Once the agent has been successfully\nauthenticated with an NTLM authentication authority, user identity is propagated\nto all the following requests as long as connection is kept alive, whereas\ndigest and basic authentication schemes are request oriented and thus must\ninclude Proxy-Authorization | Authorization directive with every request.\nCurrently HttpClient does not differenciate connection and request oriented\nschemes. \n\nI can well be wrong in my assumptions, but the empirical evidence seems to\nsupport them so far. After all, my initial patch did fix the problem with NTLM\nauthentication.\n\nOleg",
            "date": "2003-11-24T22:07:30.000+0000",
            "id": 22
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nI agree, it does seem that the presence of the Proxy-Authorization header on the\nalready authenticated connection causes re-authentication.  So, for NTLM to work\nthe proxy-auth header must be removed once authenticated.  I don't think either\npatch 2 or 3 handles this case, unless (in the case of patch 2) the host also\nuses NTLM.  What we really need is a way to remove NTLM headers after the\nauthentication has succeeded.\n\nMike",
            "date": "2003-11-25T02:35:52.000+0000",
            "id": 23
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "> What we really need is a way to remove NTLM headers after the\n> authentication has succeeded.\nAgreed. However, that still poses the same problem: how do we tell NTLM\nauthentication from all others? I do not see a way around that ugly test for the\n2.0 branch at least:\n \nif (\"NTLM\".equalsIgnoreCase(authscheme.getSchemeName())) {\n  // clean up\n}\n\nAs far as HEAD CVS goes, there are more elegant solutions, which would require\nAuthScheme interface extension, though.\n\nWhat are your thoughts?\n\nOleg",
            "date": "2003-11-25T03:11:23.000+0000",
            "id": 24
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9393)\nPatch against 2.0 (take 4)\n",
            "date": "2003-12-05T01:00:33.000+0000",
            "id": 25
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "The patch should take care of the problem for HttpClient 2.0. It ain't not\npretty, but that appears to be the only option we have that does not require API\nchanges. Alfonso, if you are still monitoring this bug report, I would really\nappreciate if you test the patch a little bit. If works for me, but a second\noption would be quite welcome.\n\nMeanwhile, I'll be working on a more elegant fix for the CVS HEAD\n\nOleg ",
            "date": "2003-12-05T01:05:39.000+0000",
            "id": 26
        },
        {
            "author": "Michael Becke",
            "body": "Hi Oleg,\n\nI tested with basic and digest authentication using a proxy and all seems to work for me.  Nice job.  \nThe fix is not the prettiest, but I think it's the only real choice for 2.0.\n\nMike",
            "date": "2003-12-05T08:27:33.000+0000",
            "id": 27
        },
        {
            "author": "Alfonso",
            "body": "I'm currently unable to test it and it could take a couple of weeks to test.\nWill that be still be useful for you ?",
            "date": "2003-12-05T22:29:15.000+0000",
            "id": 28
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Alfonso,\nOf course, we will not be able to wait that long before committing the patch,\nbut it would still be interesting to hear from you, whenever you happen to have\ntime.\n\nOleg",
            "date": "2003-12-05T22:47:54.000+0000",
            "id": 29
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9451)\nPatch against 2.0 (take 5)\n",
            "date": "2003-12-09T04:38:21.000+0000",
            "id": 30
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "My previous patch turned out to be flawed: successful authentication against\nNTLM proxy + basic host may get screwy when followed by redirect if NTLM headers\nare not cleaned up. Corrected. \n\n(But the real stuff is still to follow shortly)\n\nOleg",
            "date": "2003-12-09T04:44:55.000+0000",
            "id": 31
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9452)\nPatch against CVS HEAD (take 2)\n",
            "date": "2003-12-09T04:46:07.000+0000",
            "id": 32
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "The patch also fixes the HTTPCLIENT-46 and provides foundation for fixing the bug\n#15297. Once the patch is committed, the fix for the said bug will be just a\nmatter of adding a parameter to the HttpClientParams class\n\n\nChangelog:\n\n* Plug-in mechanism for authentication modules\n\n* AuthModule interface implementing authentication modules can now be\ninstantiated using default (parameter-less) constructor\n\n* Authentication modules can now retain limited state information (the state is\nretained within the lifetime of the method director)\n\n* Authentication scheme selection routine can be easily parameterized \n* Yet another massive refactoring of HttpMethodDirector (Haven't I been a\ntrouble lately?)\n\nStill, I am not entirely satisfied with the existing state of authentication\nframework: \n* First of all, NTLM & Digest schemes still need to be refactored to take\nadvantage of their new-found capability to maintain authentication state\n* Secondly, our current strategy is to keep authentication headers as long as\nthey may be useful and to remove them whenever we think (or guess) they may no\nlonger reflect the state of authentication process. It _might_ be better to make\nauthentication scheme smart enough to know what kind of authentication\ninformation is required at the given point of the authentication process and to\nsupply authentication headers only when they are really needed\n* Thirdly, our current approach towards deciding whether an authentication\nattempt failed or succeeded is kind of screwy. Knowing the state of the\nauthentication process AND the response status code we should be able to tell if\nauthentication has been successful or has failed. Instead we just resort to what\nis essentially guessing by maintaining a set of supposedly unique\ntokens/ids/realms/god-knows-whats that represent authentication attempts.\nBesides, currently we make an assumption that HttpClient may attempt to respond\nto authorization challenge only once for a given realm and host. With this\nscheme may get into trouble when trying to bolt interactive authentication on\ntop of it\n* Finally, we totally neglected ports. Currently ports are not taken into\nconsideration when assigning credentials to the HTTP state, nor when keeping the\nlist of failed authentication attempts\n\nAnyways, first things first. Let me know what you think about the patch\n\n\nOleg",
            "date": "2003-12-09T04:53:02.000+0000",
            "id": 33
        },
        {
            "author": "Michael Becke",
            "body": "Hi Oleg,\n\nDoes the 2.0 patch work with NTLM authentication?  I haven't been able to try it but from scanning \nthe code I think there may be a problem.  I'm looking at the following section in execute():\n\n            while (forwardCount++ < MAX_FORWARDS) {\n                cleanAuthHeaders();\n\n                //write the request and read the response, will retry\n                processRequest(state, conn);\n\n                if (!isRetryNeeded(statusLine.getStatusCode(), state, conn)) {\n                    // nope, no retry needed, exit loop.\n                    break;\n                }\n\n            } //end of retry loop\n\nIt seems that the NTLM authorization headers are removed before they can be sent in \nprocessRequest().  They are added in isRetryNeeded() when challenged and then removed again by \ncleanAuthHeaders() before sent to the server in processRequest().  What do you think?\n\nMike",
            "date": "2003-12-09T12:13:56.000+0000",
            "id": 34
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "> What do you think?\n\nI think I screwed up. Corrected patches to follow soon.\n\nOleg",
            "date": "2003-12-09T16:49:01.000+0000",
            "id": 35
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9460)\nPatch against 2.0 (take 6)\n",
            "date": "2003-12-09T18:40:23.000+0000",
            "id": 36
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=9461)\nPatch against CVS HEAD (take 3)\n",
            "date": "2003-12-09T19:11:47.000+0000",
            "id": 37
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Problem corrected. I could test NTLM host authentication and seems to work fine.\nUnfortunately I do not have access to a NTLM proxy, so this remains to be tested\nyet. Let me know what you think.\n\nOleg",
            "date": "2003-12-09T19:15:14.000+0000",
            "id": 38
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nAs before, I was not able to test NTLM, but it looks correct to me.\n\nMike",
            "date": "2003-12-10T11:37:59.000+0000",
            "id": 39
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nThe HEAD patch looks very good.  I only have two minor comments:\n\n - the else in AuthPolicy.getAuthScheme() should throw an IllegalStateException.\n - The get*AuthenticationRealm() methods in HttpMethod should probably be deprecated.\n \nMike",
            "date": "2003-12-10T12:34:34.000+0000",
            "id": 40
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Agreed. I'll take care of these two points. If there are no other comments or\nobjections I would like to commit both patches tonight around 20:00 GMT and\ncontinue with authentication cleanup on CVS HEAD. Please let me know by then if\nanyone needs more time to review the patches.\n\nOleg",
            "date": "2003-12-10T16:42:56.000+0000",
            "id": 41
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Both patches committed. With my fingers crossed I close the bug report. \n\nAlfonso, when you happen to have a chance, please retest your application using\nthe newest 2.0 and HEAD shapshots. That would be really appreciated.\n\nMeanwhile, I'll carry on refactoring authentication logic on CVS HEAD\n\nOleg",
            "date": "2003-12-11T05:08:55.000+0000",
            "id": 42
        },
        {
            "author": "isabelleB",
            "body": "i just feel so dumb for asking this, but ... errrmmmmm .... how should i use the\npatches you release here ?? \nthey just look like cvs logs, so i suppose i have to go to the cvs repository,\ndownload the modified classes and re-build all ... but the name \"patch\" made me\nthink there could be an easier use of it, am i wrong ?\n\nfeel free to delete this post, but please, let me know if i'm *that* dumb !",
            "date": "2003-12-23T22:30:49.000+0000",
            "id": 43
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Isabelle,\nThe patches have already been applied. All you have to do is to pull the latest\ncode snapshot from the CVS. Please make sure to use HTTPCLIENT_2_0_BRANCH tag to\nobtain 2.0 API compatible code (pre-2.0rc3). \n\nOleg",
            "date": "2003-12-24T23:34:51.000+0000",
            "id": 44
        },
        {
            "author": "isabelleB",
            "body": "ok, thanks a lot :) - especially for being so nice towards someone *this* dumb ;]",
            "date": "2003-12-29T22:07:07.000+0000",
            "id": 45
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Using a Microsoft proxy with NTLM validation enabled the authorization against a\nremote host does not work. This, of course, assuming that the page is correctly\nfetched (which currently is not), see the NTLM authentication bug number 24327",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-292",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Blocker",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "NTLM Proxy and basic host authorization",
    "systemSpecification": true,
    "version": "2.0 Beta 2"
}