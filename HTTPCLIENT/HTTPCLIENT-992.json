{
    "comments": [
        {
            "author": "Jonathan Moore",
            "body": "The attached patch addresses this issue by either propagating the IOException (for no-cache requests) or by generating a 504 (Gateway Timeout) error.\n\nThis patch is contributed to the ASF with the permission of my employer.\n",
            "date": "2010-09-08T19:36:02.751+0000",
            "id": 0
        },
        {
            "author": "Jonathan Moore",
            "body": "By the way, here was something I could use a little input on, behavior-wise:\n\nSuppose we have a cache entry dated 10 seconds ago with 'Cache-Control: max-age=5'. This is now 5 seconds stale and has an age of 10 seconds. If a client asks for this entry with 'Cache-Control: max-age=20', what should we do, if the revalidation with the origin fails?\n\n(a) return the stale cache entry, as the overall age of the request is less than the max-age requested\n(b) return a 504 (Gateway Timeout), since max-age on a request assumes the cache entry is still fresh and just tightens the freshness constraints; if the client was ok with a stale entry they would have used 'max-stale' instead\n\nThe current patch does (a), preferring to returning a stale entry over a 504 error, but I am actually leaning a little towards (b) now. I think 'max-age' on a request means \"I want a *fresh* response no older than this\".\n",
            "date": "2010-09-08T19:43:25.063+0000",
            "id": 1
        },
        {
            "author": "Jonathan Moore",
            "body": "I've attached a patch that implements option (b) above if so desired.\n\nThis patch is contributed to the ASF with the permission of my employer.\n",
            "date": "2010-09-08T19:48:56.869+0000",
            "id": 2
        },
        {
            "author": "Jonathan Moore",
            "body": "Answered my own question by reading the RFC:\n\n\"max-age\n    Indicates that the client is willing to accept a response whose age is no greater than the specified time in seconds. Unless max- stale directive is also included, the client is not willing to accept a stale response.\"\n\nSo option (b) is actually the correct behavior here.\n",
            "date": "2010-09-08T20:18:07.035+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Committed option B.\n\nOleg",
            "date": "2010-09-08T20:45:45.454+0000",
            "id": 4
        }
    ],
    "component": "HttpCache",
    "description": "The current implementation will serve a stale response in the case that it has a stale cache entry but revalidation with the origin fails. However, the RFC says we SHOULD NOT do this if the client explicitly requested a first-hand or fresh response (via no-cache, max-age, max-stale, or min-fresh).\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-992",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "cache should not generate stale responses to requests explicitly requesting first-hand or fresh ones",
    "systemSpecification": true,
    "version": "4.1 Alpha2"
}