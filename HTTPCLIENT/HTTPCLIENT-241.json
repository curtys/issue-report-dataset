{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "HttpMethod#getContentLength method should also be changed accordingly.\n\nOleg",
            "date": "2003-07-04T01:46:27.000+0000",
            "id": 0
        },
        {
            "author": "Michael Becke",
            "body": "Any thoughts on the best way to handle the API changes required?  In particular\nthe getContentLength() methods are a problem.  We can either deprecate the\nmethods and create new ones with different names that return longs or break the\nAPI and change the int to a long.  I would prefer not the break the APIs but I\ndo not like creating the other named methods either.\n\nMike",
            "date": "2003-07-13T02:52:08.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike,\nThis is exactly the case where I believe breaking API is a lesser evil, even if\nCactus folks may decide to burn me at the stake for expressing such a herecy. \n\nMoreover, I want to suggest that we should deprecate\nHttpMethod#setRequestContentLength(int) and instead of creating\nHttpMethod#setRequestContentLength(long) we should create\nEntityEnclosingMethod#setRequestContentLength(long). Only entity enclosing\nmethods are supposed to have request body IMHO.\n\nBut I feel we should run an informal vote on this issue. I am prepared to\nrepresent the Dark Side of HttpClient and aggressively push for API breakage.\n\nEvil Comrade Oleg",
            "date": "2003-07-13T03:40:28.000+0000",
            "id": 2
        },
        {
            "author": "Michael Becke",
            "body": "Fortunately this is already the case:)  HttpMethod does not have any content\nlength methods.  Only EntityEnclosingMethod has setContentLength().  I will\nattach a patch in a second that I think is all that we will need to do.  The\nonly real API breaks are changing HttpMethodBase.getRequestContentLength() and\nHttpMethodBase.getResponseContentLength() from returning ints to longs.  Both of\nthese methods are protected.\n\nMike",
            "date": "2003-07-13T04:13:56.000+0000",
            "id": 3
        },
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=7273)\npatch 1\n",
            "date": "2003-07-13T04:14:20.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "You are right. Fortunately all the affected methods are not part of the\nHttpMethod interface, and most importantly, getResponseConentLength is not\npublic. That saves me quite a lot of troubles ;-). I think it is good to be\ncommitted.\n\nOleg",
            "date": "2003-07-13T04:34:29.000+0000",
            "id": 5
        },
        {
            "author": "Michael Becke",
            "body": "I will apply the patch before long.  First though, I will send a heads-up to the slide folks as they \nhave a class that overrides getRequestContentLength().  Fortunately the fix is trivial but we should \ntry to be courteous.\n\nMike ",
            "date": "2003-07-14T05:19:07.000+0000",
            "id": 6
        },
        {
            "author": "Michael Becke",
            "body": "No word from the Slide folks.  Patch applied.\n\nMike",
            "date": "2003-07-15T19:44:13.000+0000",
            "id": 7
        }
    ],
    "component": "HttpClient (classic)",
    "description": "You should probably change the EntityEnclosingMethod content length field \nto a long in a future release. Currently it's an int.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-241",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Support for handling large files should be added",
    "systemSpecification": false,
    "version": "2.0 Beta 2"
}