{
    "comments": [
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5956)\nwire log for failed connections.\n",
            "date": "2003-04-23T02:32:46.000+0000",
            "id": 0
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5957)\nwire log after the fix.\n",
            "date": "2003-04-23T02:33:25.000+0000",
            "id": 1
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5958)\ninitialize inProxyAuthenticationRetry in HttpMethodBase.execute\n",
            "date": "2003-04-23T02:38:19.000+0000",
            "id": 2
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5959)\nSet inProxyAuthenticationRetry to true in HttpMethodBase.processAuthenticationResponse\n",
            "date": "2003-04-23T02:39:22.000+0000",
            "id": 3
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5960)\ncheck \"keep-alive\" connection header before closing connection\n",
            "date": "2003-04-23T02:41:08.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Bin, what version of HttpClient are you using? The wire log does not seem to\nhave been produced with a recent nightly build. HttpClient is a rapidly evolving\nlibrary and we simply can't support anything else but the CVS HEAD. So, please\nmake sure that you can reproduce the alleged bug with the most recent CVS snapshot.\n\nAnd, please, please, please submit patches in diff format\n\nOleg ",
            "date": "2003-04-23T04:08:13.000+0000",
            "id": 5
        },
        {
            "author": "Bin Chen",
            "body": "The version of httpClient was taken from a nightly build (0307).  We are in a \nrelease schedule so we can not keep moving to the latest nightly build.  We did \ntry the 0410 build and it di not work at all.  We just finished fixing the \nproblems in the (0307) version so we can do our release with it.  I am just \ncoming back to submit the bugs and hopefully get them fix for the 2.0 final \nrelease.  Depend on how much time I have, I may or may not be able to reproduce \nthe same problems in latest build.  I will try my best.  I am also trying to \nget CVS setup so I can do a proper diff for patches.\n\nPart of the difficulty in reporducing the problem is to find a NTLM proxy \nserver that send the response like that (HTTP/1.0 and keep-alive).  ",
            "date": "2003-04-23T04:28:19.000+0000",
            "id": 6
        },
        {
            "author": "Michael Becke",
            "body": "This problem brings up a number of questions.  The first being: should we allow persistent \nconnections with HTTP 1.0?  From looking at RFC 2068 and 1945 the answer seems to be maybe.  \nIf the host responds with \"keep-alive\" I think we should.  In the case of a proxied connection \nthings are a little more hazy.  It seems like we should not use Connection headers in this case, but \nshould still honor them.  I am not sure though.\n\nEither way I think we should accept \"keep-alive\" headers in the case of HTTP 1.0 and I will attach a \npatch for this in a minute.\n\nOn the proxy front I think we need a little more discussion.  In the particular case of an NTLM \nproxy I completely defer to Adrian.  I fortunately have no idea how NTLM works :)  \n\nDoes NTLM plus an HTTP 1.0 proxy ever work?  In a browser?  If so there must be some way to \nmake it work for us.\n\nMike",
            "date": "2003-04-23T08:30:29.000+0000",
            "id": 7
        },
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=5967)\nshouldCloseConnection() patch\n",
            "date": "2003-04-23T08:31:13.000+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike, I think it makes sense to commit the keep-alive patch. The NTLM proxy\nissue should be addressed separately, I suppose, along with the related HTTPCLIENT-200\n\nOleg",
            "date": "2003-04-25T16:09:50.000+0000",
            "id": 9
        },
        {
            "author": "Adrian Sutton",
            "body": "Sorry, I missed this one in the recent flurry of NTLM related problems.  NTLM will work with any\nsetup which has:\n\n1. Only one step of the process using NTLM authentication (ie: can't authenticate to a proxy and\nthe webserver using NTLM)\n\n2. Persistent connections.  NTLM authentications the connection not the request.\n\nSo if it is appropriate for a HTTP 1.0 proxy to support keep-alive then doing so would allow\nNTLM to work.",
            "date": "2003-04-25T17:56:37.000+0000",
            "id": 10
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Bin, we believe that the bug has been fixed. Please re-test your application\nwith the most recent CVS snapshot. If the problem persists, just reopen the bug\nreport\n\nOleg",
            "date": "2003-04-26T01:15:26.000+0000",
            "id": 11
        },
        {
            "author": "Bin Chen",
            "body": "The patch did not work.  I will attach latest log.",
            "date": "2003-04-26T03:22:17.000+0000",
            "id": 12
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=6019)\ntrace/debug/wire log\n",
            "date": "2003-04-26T03:23:04.000+0000",
            "id": 13
        },
        {
            "author": "Bin Chen",
            "body": "I added a debug line and it shows that the connectHeader is null.  But the wire \nlog (see previous attachement) clearly shows the header being there.\n\n--- tip/HttpMethodBase.java\t2003-04-25 13:45:16.000000000 -0500\n+++ HttpMethodBase.java\t2003-04-25 16:16:26.000000000 -0500\n@@ -873,6 +873,7 @@\n         } else {\n             connectionHeader = getResponseHeader(\"proxy-connection\");\n         }\n+        LOG.debug (\"connectionHeader = \" + connectionHeader);\n         if (connectionHeader != null) {\n             if (connectionHeader.getValue().equalsIgnoreCase(\"close\")) {\n                 if (LOG.isDebugEnabled()) {\n",
            "date": "2003-04-26T04:50:20.000+0000",
            "id": 14
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=6020)\nLog shows connectionHeader is null\n",
            "date": "2003-04-26T04:57:40.000+0000",
            "id": 15
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Excuse me, Bin, but see it for yourself:\n\n<< \"HTTP/1.0 407 Proxy Authentication Required[\\r][\\n]\"\n<< \"Date: Fri, 25 Apr 2003 19:24:23GMT[\\r][\\n]\"\n<< \"Content-Length: 257[\\r][\\n]\"\n<< \"Content-Type: text/html[\\r][\\n]\"\n<< \"Server: NetCache appliance (NetApp/5.3.1R1)[\\r][\\n]\"\n<< \"Proxy-Authenticate: NTLM[\\r][\\n]\"\n<< \"Proxy-Authenticate: Basic realm=\"proxy server\nsghdqpx03.global.ad.sabre.com\"[\\r][\\n]\"\n<...>\n\nThe response does not contain \"Proxy-connection: keep-alive\" header and is of\nversion HTTP/1.0. No wonder that HttpClient drops the connection. \n\nI can only suggest one of the following approaches:\n\n1. Report the problem to the Net Appliance folks\n2. Use basic authentication (if permittable by the security guidelines of your\ncompany)\n3. Hack in that 'inProxyAuthenticationRetry' flag back again.\n\nIf you decide to pursue the third option, I doubt that we would accept this\npatch into HttpClient code trunk. I am going to setup squid proxy with NTLM\nauthentication next week and run a few tests. If squid also omits the keep-alive\nheader, we'll have to consider the work-around you proposed. Otherwise, you'll\nhave to live with a fork of your own.\n\nI leave the bug open until tested against 'squid' proxy. If 'squid' does not\nexhibit the same behavior with regard to the keep-alive header, the bug will be\nmarked as invalid  \n\nOleg",
            "date": "2003-04-26T05:00:48.000+0000",
            "id": 16
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "*** HTTPCLIENT-200 has been marked as a duplicate of this bug. ***",
            "date": "2003-04-26T05:04:40.000+0000",
            "id": 17
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=6021)\nAnother log showing all the headers\n",
            "date": "2003-04-26T05:11:45.000+0000",
            "id": 18
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "OK, I see what is going on here. The proxy responds with 'connection:\nkeep-alive' header whereas HttpClient expects 'proxy-connection: keep-alive'.\nEven though it does not seem to be a very compliant behaviour it can still be\neasily mended. I'll tweak shouldCloseConnection method a bit. But probably not\ntoday. It's kind of late here\n\nOleg",
            "date": "2003-04-26T05:15:21.000+0000",
            "id": 19
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Fix applied. Please test against the most recent CVS snapshot\n\nOleg",
            "date": "2003-04-26T17:31:54.000+0000",
            "id": 20
        },
        {
            "author": "Fabien Guironnet",
            "body": "I've tested against the most recent CVS snapshot, but I still have connection\nproblem when I try to use a NTLM Proxy (Squid)...\nI think that the client must notify to the proxy that it must keep the connexion\nalive : if you add the request header \"Proxy-Connection: Keep-Alive\" to the\nmethod before execute it : it works!\nI don't know if we must do this for all NTLM proxies or just for Squid...\n\nFabien",
            "date": "2003-04-26T17:55:43.000+0000",
            "id": 21
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Fabien,\n\nWire log would really help. \n\nThe problem appears to be squid specific. I am afraid I'll have to set up squid\nproxy with NTLM authentication at work next week and run a few tests.\n\nSo, stay tuned\n\nOleg",
            "date": "2003-04-26T18:08:24.000+0000",
            "id": 22
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Ok. I think I found the trouble-maker. HttpClient downgrades HTTP protocol\nversion to 1.0 in when sending requests via a HTTP/1.0 proxy server. No wonder\nthe proxy does not keep the connection alive.\n\n04:24:256[DEBUG] HttpMethod - -Execute loop try 1\n...\n04:24:287[DEBUG] wire - ->> \"GET http://www.google.fr/ HTTP/1.1[\\r][\\n]\"\n...\n04:24:474[DEBUG] wire - -<< \"HTTP/1.0 407 Proxy Authentication Required[\\r][\\n]\"\n...\n04:24:537[DEBUG] wire - -<< \"Server: squid/2.5.STABLE1-20030121[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Mime-Version: 1.0[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Date: Sat, 26 Apr 2003 11:04:24 GMT[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Content-Type: text/html[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Content-Length: 1289[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Expires: Sat, 26 Apr 2003 11:04:24 GMT[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"X-Squid-Error: ERR_CACHE_ACCESS_DENIED 0[\\r][\\n]\"\n04:24:537[DEBUG] wire - -<< \"Proxy-Authenticate: NTLM[\\r][\\n]\"\n04:24:553[DEBUG] wire - -<< \"X-Cache: MISS from roland[\\r][\\n]\"\n04:24:553[DEBUG] wire - -<< \"Proxy-Connection: close[\\r][\\n]\"\n...\n04:24:803[DEBUG] HttpMethod - -Execute loop try 2\n...\n04:24:818[DEBUG] wire - ->> \"GET http://www.google.fr/ HTTP/1.0[\\r][\\n]\"\n...\n\nThe question is whether this kind of behavior is wrong or not? Shall 407\nresponse be treated specially when deciding whether HTTP protocol is to be\ndowngraded? Any opinions?\n\nOleg\n \n",
            "date": "2003-04-28T03:09:24.000+0000",
            "id": 23
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=6041)\nHttpMethodBase#readStatusLine\n",
            "date": "2003-04-28T05:18:38.000+0000",
            "id": 24
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks, what do you think about the patch I just attached? I think HTTP version\nof the proxy server should not be taken into consideration by the HttpClient,\nregardless of how we decide to fix the NTLM authetication problem\n\nOleg ",
            "date": "2003-04-28T05:21:28.000+0000",
            "id": 25
        },
        {
            "author": "Michael Becke",
            "body": "This patch justs ignore http version when using a proxy?  It seems like this might fix things for this \ncase, but I'm not sure it's a universal solution.  How will this effect other proxies?\n\nI think Adrian's idea of always sending keep-alive with NTLM is good, but I would take it even \nfuther.  Why not always send keep-alive.  It seems like we might as well always ask for a persistent \nconnection.\n\nMike",
            "date": "2003-04-28T07:28:59.000+0000",
            "id": 26
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike,\n\nI respectfully disagree. I believe the proposed solution is more general than\nthat discovered by Fabian. Persistent connections with HTTP/1.0 is a dirty and\nan error prone business. The HTTP spec is horribly vague on this issue and we\nshould be careful about including 'Keep-Alive' token with each and every\nrequest. I find it extremely confusing. However, as far as proxies are\nconcerned, the spec is quite plain. Here's the exact wording of the RFC 2068\n(more up-to-date RFC 2616 simply refers to this chapter of the RFC 2068):\n\n...\n\n19.7.1 Compatibility with HTTP/1.0 Persistent Connections\n\n...\n\n   A client MUST NOT send the Keep-Alive connection token to a proxy\n   server as HTTP/1.0 proxy servers do not obey the rules of HTTP/1.1\n   for parsing the Connection header field.\n...\n\nHowever, since the spec does not mention 'proxy-connection' directive at all, I\nsuppose we may be a bit more liberal. I believe it should be safe to include\nthis header with HTTP/1.0 when communicating via a proxy.\n\nTo reiterate my main point here: HttpClient should not take into consideration\nthe version of the proxy server, as the proxy server is supposed to be\nabsolutely transparent (at least in theory) to the client. If the proxy has an\nissue with a higher version of the HTTP protocol, I believe, it is supposed to\nrespond with 501 (NOT IMPLEMENTED) or 505 (WRONG HTTP VERSION). Otherwise, we\ncan assume that the proxy is at least aware of the HTTP version in question. \n\n\nThis said, we may still employ 'proxy-connection' directive to add an extra\nlevel of support for some proxies like squid.\n\nI'll attach another patch within a few hours and be waiting for additional feedback\n\nOleg",
            "date": "2003-04-28T18:27:13.000+0000",
            "id": 27
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=6045)\npatch (take 1)\n",
            "date": "2003-04-28T19:27:18.000+0000",
            "id": 28
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nI hear what you are saying.  I agree that \"Connection: keep-alive\" is not good for proxies, but I \nthink \"Proxy-connection\" is totally safe.  It is quite strange that Proxy-connection is not \nmentioned \nat all in RFC 2616, but that all proxies seem to use it.  From looking at a few newsgroup posts it \nseems that Netscape added proxy-connection support some time ago and it just caught on.\n\nThe main reason I suggested adding a \"keep-alive\" is that it seems this is what all browsers \n(that I \ntried) do.\n\nFor now, I would be happy always adding a Proxy-connection keep-alive when communicating \nwith \nproxies.  I think we should also investigate connection keep-alive for non-proxied requests.\n\nAre there any side effects of ignoring HTTP version?\n\nMike",
            "date": "2003-04-28T19:54:57.000+0000",
            "id": 29
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Clearly, there are side effects. For instance, 'expect: 100-continue' handshake\nsimply does not work with squid. \n\nThe problem is that the only way of knowing what kind of proxy we are dealing\nwith is to receive 407 status code. In all other cases HttpClient will happily\nsend HTTP/1.1 requests even though the proxy may be compliant with HTTP/1.0 spec\nonly. I strongly believe that HttpClient should behave consistently regardless\nof whether proxy authentication is used or not, whether preemptive\nauthentication is enabled or not. There should be no code modality. It is by far\na greater evil, imho\n\nOleg",
            "date": "2003-04-28T22:27:52.000+0000",
            "id": 30
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=6057)\nPatch (take 2)\n",
            "date": "2003-04-29T02:30:45.000+0000",
            "id": 31
        },
        {
            "author": "Michael Becke",
            "body": "Looks good to me.\n\nMike",
            "date": "2003-04-29T03:10:54.000+0000",
            "id": 32
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch applied.\n\nOleg",
            "date": "2003-04-29T03:49:50.000+0000",
            "id": 33
        },
        {
            "author": "Bin Chen",
            "body": "New problem:\n\nMy NTLM proxy does not like using the same connection between first \"CONNECT\" \nand the subsequent \"CONNECT\" with type-1 message.  The issue was created in \nv1.140.  Below is part of the diff between v1.140 and v1.139 that caused \nproblem.  I tried to change it back to the way in v1.139, it worked.  I will \nattach logs for both working and non-working tries.\n\ndiff -u -r1.139 -r1.140\n...\n         if (httpVersion.equals(\"HTTP/1.0\")) {\n-            http11 = false;\n+            if (!proxied) {\n+                http11 = false;\n+            }\n         } else if (httpVersion.equals(\"HTTP/1.1\")) {\n",
            "date": "2003-05-01T23:22:17.000+0000",
            "id": 34
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=6129)\nFailed log.  connection NOT closed\n",
            "date": "2003-05-01T23:23:23.000+0000",
            "id": 35
        },
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=6130)\nsuccess log.  connection CLOSED.\n",
            "date": "2003-05-01T23:24:28.000+0000",
            "id": 36
        },
        {
            "author": "Bin Chen",
            "body": "Highlight the difference of two logs:\n\nIn the failed run, due to the check isProxied, the HTTP/1.0 is ignored and the \nconnection ie kept open (The proxy server later will fail the authentication \nattempt).  In the success run (restored 1.139 logic), the connection is closed.\n\nFailed run:\n\n2003/05/01 09:24:14:546 CDT [DEBUG] wire - -<< \"                        \"\n2003/05/01 09:24:14:546 CDT [DEBUG] HttpMethod - -Resorting to protocol \nversiondefault close connection policy\n2003/05/01 09:24:14:546 CDT [DEBUG] HttpMethod - -Should NOT close connection, \nusing HTTP/1.1.\n2003/05/01 09:24:14:546 CDT [DEBUG] HttpMethod - -Execute loop try 2\n2003/05/01 09:24:14:546 CDT [TRACE] HttpMethod - -enter \nHttpMethodBase.processRequest(HttpState, HttpConnection)\n2003/05/01 09:24:14:546 CDT [TRACE] HttpMethod - -Attempt number 1 to process \nrequest\n2003/05/01 09:24:14:546 CDT [TRACE] HttpMethod - -enter \nHttpMethodBase.writeRequest(HttpState, HttpConnection)\n\nSuccess run:\n\n2003/05/01 10:47:26:578 CDT [DEBUG] wire - -<< \"                        \"\n2003/05/01 10:47:26:578 CDT [DEBUG] HttpMethod - -Resorting to protocol \nversiondefault close connection policy\n2003/05/01 10:47:26:578 CDT [DEBUG] HttpMethod - -Should close connection, \nusing HTTP/1.0.\n2003/05/01 10:47:26:578 CDT [TRACE] HttpConnection - -enter HttpConnection.close\n()\n2003/05/01 10:47:26:578 CDT [TRACE] HttpConnection - -enter \nHttpConnection.closeSockedAndStreams()\n2003/05/01 10:47:26:578 CDT [DEBUG] HttpMethod - -Execute loop try 2\n2003/05/01 10:47:26:578 CDT [TRACE] HttpMethod - -enter \nHttpMethodBase.processRequest(HttpState, HttpConnection)\n2003/05/01 10:47:26:578 CDT [TRACE] HttpMethod - -Attempt number 1 to process \nrequest\n2003/05/01 10:47:26:578 CDT [DEBUG] HttpMethod - -Opening the connection.\n2003/05/01 10:47:26:578 CDT [TRACE] HttpConnection - -enter HttpConnection.open\n()\n2003/05/01 10:47:26:593 CDT [TRACE] HttpMethod - -enter \nHttpMethodBase.writeRequest(HttpState, HttpConnection)\n",
            "date": "2003-05-01T23:38:50.000+0000",
            "id": 37
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "OK. My fault. Patch will follow in a minute.\n\nOleg",
            "date": "2003-05-02T00:06:01.000+0000",
            "id": 38
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=6131)\nCorrective patch (take 1)\n",
            "date": "2003-05-02T00:24:30.000+0000",
            "id": 39
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Bin, could you please apply the patch and let me know if it fixes the problem?\n\nOleg",
            "date": "2003-05-02T00:26:35.000+0000",
            "id": 40
        },
        {
            "author": "Bin Chen",
            "body": "Oleg,\n\nIt did not work and I will attach the log.",
            "date": "2003-05-02T00:38:45.000+0000",
            "id": 41
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I have to admit my good intentions turned out to be causing more harm than good.\nI'll just remove offending code.\n\nOleg",
            "date": "2003-05-02T02:12:15.000+0000",
            "id": 42
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Offending code removed. That should fix the problem.\n\nOleg",
            "date": "2003-05-02T02:18:35.000+0000",
            "id": 43
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Description:\n\nWhen dealing with a NTLM proxy server that sends response back with lines:\n\n14:51:27:750 << HTTP/1.0 407 Proxy Authentication Required\n14:51:27:796 << Date: Mon, 14 Apr 2003 19:52:43GMT[\\r][\\n]\n14:51:27:796 << Content-Length: 257[\\r][\\n]\n14:51:27:796 << Content-Type: text/html[\\r][\\n]\n14:51:27:796 << Server: NetCache appliance (NetApp/5.3.1R1)[\\r][\\n]\n14:51:27:796 << Connection: keep-alive[\\r][\\n]\n14:51:27:796 << Proxy-Authenticate: NTLM \nTlRMTVNTUAACAAAABgAGACgAAAAGggEAtOoNy4M0g0EAAAAAAAAAAEdMT0JBTA==[\\r][\\n]\n\nThe httpClient code is using the \"HTTP/1.0\" as clue for closing the connection \nand ignored the \"Connection: keep-alive\".  That caused the NTLM authentication \nto fail as the NTLM requires the response to the challenge to be sent back on \nthe same connection.\n\nProposed Fix:\n\nOur fix is to add a flag inProxyAuthenticationRetry (in HttpMethodBase) to \nindicate that the method is doing proxy authentication retry.  When the flag is \ntrue, in \"HttpMethodBase.shouldCloseConnection\", check the \"Connection: keep-\nalive\" before determining to close the connection.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-195",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "NTLM authentication failed due to closing of connection",
    "systemSpecification": true,
    "version": "2.0 Alpha 3"
}