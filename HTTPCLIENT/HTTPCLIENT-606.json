{
    "comments": [
        {
            "author": "samuel sanchez",
            "body": "modified class HttpMethodDirector",
            "date": "2006-11-15T15:23:18.000+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Samuel,\n\nCould you please create a patch in diff -u format against SVN trunk\n\nOleg",
            "date": "2006-11-16T10:27:52.000+0000",
            "id": 1
        },
        {
            "author": "samuel sanchez",
            "body": "Patch applied over /jakarta/commons/proper/httpclient/trunk/src/java/org/apache/commons/httpclient/HttpMethodDirector.java , revision Revision 413281.",
            "date": "2006-11-16T11:46:57.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Samuel,\n\nHere is a slightly different take at fixing the problem. Please review and comment\n\nOleg",
            "date": "2006-11-18T13:18:52.000+0000",
            "id": 3
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Oleg, I think your version does the right thing. IMHO redirect URLs must be URL encoded in any case. So no point in first trying with the wrong one and on exception trying the right charset, as in Samuel's patch.",
            "date": "2006-11-20T08:12:57.000+0000",
            "id": 4
        },
        {
            "author": "samuel sanchez",
            "body": "Oleg,\n\nthe patch that you suggest is not working for me, both for the escaped problematic URL that i've tried (http://www.dipualba.es/municipios/F%E9rez) and for it's parsed version of the same URL using ISO-8859-1 charset encoding.\n\nSamuel.\n\n",
            "date": "2006-11-20T08:56:39.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "OK. I see the problem with the patch. The HTTP element charset defaults to US-ASCII, whereas the default URI charset should be UTF-8.\n\nI see no way around adding a new HTTP parameter specifically for the URI charset.\n\nNew patch attached. Please review.\n\nOleg",
            "date": "2006-11-20T10:01:14.000+0000",
            "id": 6
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Looks correct.",
            "date": "2006-11-20T10:48:40.000+0000",
            "id": 7
        },
        {
            "author": "samuel sanchez",
            "body": "Hi Oleg,\n\nIt's still not working for me.\n\nThe problem is in the class HttpMethodDirector, and is not when building the URI in a specific charset, but when reading the attribute 'location' used to build that URI:\n\nHeader locationHeader = method.getResponseHeader(\"location\");\nString location = locationHeader.getValue();\n\nThe attribute 'responseHeaders' of the method 'method' contains the location where to redirect, but it looks like it has not been properly parsed.\n\nThe first 'try-catch' block in my original patch was for handling both escaped and non.escaped 'location' values.",
            "date": "2006-11-22T15:19:00.000+0000",
            "id": 8
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Samuel,\n\nThis server is misbehaving. It returns non-ASCII characters in a HTTP header, which is a gross violation of the spec:\n\n2006/11/22 17:08:26:625 CET [DEBUG] header - -<< \"Location: http://www.dipualba.es/municipios/F?rez/[\\r][\\n]\"\n\nThe server must URL-encode the URL (in UTF-8) correctly. There is nothing we can do.",
            "date": "2006-11-22T16:09:18.000+0000",
            "id": 9
        },
        {
            "author": "Ori Regev",
            "body": "Hi,\n\nI'm encountering the same problem (version 3.0.1) when trying to load the following URL with HTTPClient:\n\nhttp://www.comedycentral.com/sitewide/droplets/podRedirect.jhtml/redirect.m4v?feed=ComedyCentralStandUpPodcastForResearch&file=http://a1926.g.akamai.net/downloadstor.download.akamai.com/10768/comedy/podcasts/standup/133_standup.m4v\n\n(This is an enclosure URL from the RSS feed at: http://feeds.feedburner.com/comedycentral/standup, I've noticed that other feeds from FeedBurner misbehave in the same way. Please note that Firefox and IE manage to redirect despite this encoding problem)\n\nthanks,\nOri",
            "date": "2006-11-25T08:57:31.000+0000",
            "id": 10
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "If I hear no complaints I'll check in the fix (httpmethoddir.patch).\n\nOleg",
            "date": "2006-12-05T09:19:48.000+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in\n\nOleg",
            "date": "2006-12-08T11:35:49.000+0000",
            "id": 12
        }
    ],
    "component": "HttpClient (classic)",
    "description": "When HttpMethodDirector handles the case of redirecting the incoming connection to the location specified in the header of the http caller method, if this location has any \"special\" charset encoding (extended charsets like ISO 8859-1,etc.) the redirection fails this way:\n\ndd-MMM-YYYY hh:mm:ss org.apache.commons.httpclient.HttpMethodDirector processRedirectResponse\nWARNING: Redirected location 'http://www.anyCharsetEncodedUrl.ko' is malformed\n\n\nYou can test it using this class:\n\n\npublic class SimpleHttpTestNotWorking {\n\n\tpublic static int urlStatus(String pUrl) throws org.apache.commons.httpclient.HttpException,java.io.IOException{\n\t\torg.apache.commons.httpclient.HttpClient client = new org.apache.commons.httpclient.HttpClient();\n\t\torg.apache.commons.httpclient.HttpMethod method = new org.apache.commons.httpclient.methods.GetMethod(pUrl);\n\t\treturn client.executeMethod(method);\n\t}\n\t\t\n\tpublic static void main(String[] args) {\n\t\ttry{\n\t\t\tString url = \"http://www.dipualba.es/municipios/F%E9rez\"; //known problematic URL\n\t\t\tSystem.out.println(\"Return code for [\"+url+\"]: \"+SimpleHttpTestWorking.urlStatus(url));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\n\nWhat I've done to solve it for my particular case has been:\n\n\n1) In the requester side, I've modified the calling:\n\n\npublic class SimpleHttpTestWorking {\n\n\tpublic static int urlStatus(String pUrl) throws org.apache.commons.httpclient.HttpException,java.io.IOException{\n\t\torg.apache.commons.httpclient.HttpClient client = new org.apache.commons.httpclient.HttpClient();\n\t\torg.apache.commons.httpclient.HttpMethod method;\n\t    String encoding = (String)client.getParams().getParameter(\"http.protocol.content-charset\");\n\t    client.getParams().setParameter(\"http.protocol.element-charset\", encoding);\n\t    try{\n\t    \tmethod = new org.apache.commons.httpclient.methods.GetMethod(pUrl);\n\t    }catch(IllegalArgumentException iae){\n\t\t    try{\n\t\t    \torg.apache.commons.httpclient.URI uri = new org.apache.commons.httpclient.URI(pUrl,true);\n\t\t    \tmethod = new org.apache.commons.httpclient.methods.GetMethod(uri.getURI());\n\t\t    }catch(org.apache.commons.httpclient.URIException ue){\n\t\t    \torg.apache.commons.httpclient.URI uri = new org.apache.commons.httpclient.URI(pUrl,false,encoding);\n\t\t\t    method = new org.apache.commons.httpclient.methods.GetMethod(uri.getEscapedURI());\n\t\t    }\t\t    \t\n\t    }\t\t\n\t\treturn client.executeMethod(method);\n\t}\n\t\t\t\n\tpublic static void main(String[] args) {\n\t\ttry{\n\t\t\tString url = \"http://www.dipualba.es/municipios/F\u00e9rez\"; //the same problematic URL\n\t\t\tSystem.out.println(\"Return code for [\"+url+\"]: \"+SimpleHttpTestWorking.urlStatus(url));\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\n\n2) In org.apache.commons.httpclient.HttpMethodDirector.processRedirectResponse(HttpMethod method) , I've replaced\n\n\n...\nredirectUri = new URI(location, true);\n...\n\n\nfor the following code:\n\n\n...\n/*\n * [2006-11-14] \n * Handles redirections to encoded URI locations \n * (only if URI and Connection encoding charset has been properly setted)\n * */ \ntry{\n\tredirectUri = new URI(location, true);\n}catch(URIException ue){\n\tObject encoding = this.conn.getParams().getParameter(\"http.protocol.element-charset\");\n\tif(encoding != null){\n\t\tredirectUri = new URI(location, false, (String)encoding);\n\t}else{\n\t\tthrow ue;\n\t}\n}\n...\n\n\n\nHope it helps!",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-606",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "HttpMethodDirector fails when redirecting to a encoded URL location",
    "systemSpecification": true,
    "version": "3.0.1"
}