{
    "comments": [
        {
            "author": "Michael Becke",
            "body": "I'd like to go ahead and tackle this one, but I need a little clarification. \nDoes the following correctly describe what we want?\n\n- we want to perform a get on www.google.com, let's say www.google.com has X > 1\nIP addresses \n- we want to specify which IP address x to actually connect to\n- we want www.google.com in the Http header instead of x\n\nIf this is the case, it sounds like we may want support for custom DNS\nresolution.  Though this might be a little more than is needed for this simple\ncase I think that is what it boils down to.\n\nMike\n",
            "date": "2003-02-28T02:37:16.000+0000",
            "id": 0
        },
        {
            "author": "Jeff Dever",
            "body": "I think the idea is more one ip -> multiple hosts.\n\nGET HTTP/1.1 216.239.39.101/\nHost: www.google.com\n\n\nGET HTTP/1.1 216.239.39.101/\nHost: www.google.ca\n\nMight be a non-issue.",
            "date": "2003-02-28T06:14:41.000+0000",
            "id": 1
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "An easy solution would be to create means to set IP and Host header field\nseparately (so no implicit DNS lookup ever occurs).\n\nThis approach would separate HttpClient from the DNS lookup if needed. If\nsomeone wants to use a custom DNS lookup method he can do it, but HttpClient\ndoesn't have to care about.",
            "date": "2003-02-28T16:51:20.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike, are you working on this one?\n\nOleg",
            "date": "2003-04-04T17:57:59.000+0000",
            "id": 3
        },
        {
            "author": "Michael Becke",
            "body": "Oleg, I haven't started working on this one yet. It is all yours if you would like.\n\nMike",
            "date": "2003-04-04T21:43:52.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Actually not :) But as far as I can see it's the only one left standing between \nus and beta-1 release. I'll try to tackle it this weekend. The problem is I \ncurrently do not see an elegant solution.\n\nOleg",
            "date": "2003-04-04T21:49:26.000+0000",
            "id": 5
        },
        {
            "author": "Michael Becke",
            "body": "I agree.  This is the last bug to be addressed.  Please take a look if you have\ntime this weekend.  I will be out of town all weekend, but will have some time\nnext week to help out.  \n\nShould we make a push to clear up all remaining problems next week and perhaps\nbeta-1 the following week?\n\nMike",
            "date": "2003-04-04T23:02:06.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=5664)\nPatch (take 1)\n",
            "date": "2003-04-06T18:31:10.000+0000",
            "id": 7
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nGenerally speaking looks good to me.  It's simple and gets the job done with no\ndamaging API changes.  There is only one missing piece of functionality in\nHttMethodBase.generateRequestLine().  I'm guessing it should probably be using\nthe virtual host name here.  Perhaps it should the host should always be used\nwhen virtual.\n\nI also have only a few minor comments:\n\n- I think the comments in HttpConnection.setHost() and getHost() should stay as\nthey are.  Using \"host name\" implies it should be a DNS name.\n- HostConfiguration.sethost(String) has an extra @param javadoc\n- there should probably be some test cases for the virtual host\n\nMike",
            "date": "2003-04-08T08:28:11.000+0000",
            "id": 8
        },
        {
            "author": "Michael Becke",
            "body": "Okay, after reading the RFC it looks like the virtual host should probably not\nbe used, except when using a proxy.\n\nMike",
            "date": "2003-04-08T08:57:58.000+0000",
            "id": 9
        },
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=5686)\npatch\n",
            "date": "2003-04-08T10:39:34.000+0000",
            "id": 10
        },
        {
            "author": "Michael Becke",
            "body": "The above patch it the same as Oleg's plus the following changes:\n\n- a test case\n- support for virtual host in the status line (when proxied)\n- the comment changes mentioned previously\n\nMike",
            "date": "2003-04-08T10:41:48.000+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Agreed.\n\nI was not quite sure whether virtual host name was to be used in the status \nline. With the current implementation we have to assume that virtual host name \nare supposed to be DNS resolvable. I guess such assumption is sane\n\nOleg\n\n",
            "date": "2003-04-08T16:00:16.000+0000",
            "id": 12
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed",
            "date": "2003-04-10T01:41:01.000+0000",
            "id": 13
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Need to be able to open a socket to one ipaddress (or hostname) and then include\na virtual hostname in the Host header. Use InetAddress class perhaps.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-60",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Handle virtual hosts, relative urls, multi-homing",
    "systemSpecification": true,
    "version": "2.0 Alpha 1"
}