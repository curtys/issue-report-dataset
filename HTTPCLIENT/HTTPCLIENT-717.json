{
    "comments": [
        {
            "author": "Roland Weber",
            "body": "I've added null checks to both methods.\nIf anybody wants to contribute unit tests, you're welcome.\n\ncheers,\n  Roland\n",
            "date": "2007-12-22T14:47:06.608+0000",
            "id": 0
        }
    ],
    "component": "",
    "description": "SimpleHttpConnectionManager.shutdown() causes NPE if no connection has been created, whereas MultiThreadedHttpConnectionManager.shutdown() does not.\n\nSimple test case:\n\n\tMultiThreadedHttpConnectionManager cm = new MultiThreadedHttpConnectionManager();\n\tcm.shutdown(); // OK\n\t\t\n\tSimpleHttpConnectionManager sm = new SimpleHttpConnectionManager();\n\tsm.shutdown(); // NPE\n\n\nI came across this in JMeter - a sample was using Post with AutoRedirect, which (correctly) caused an IllegalArgumentException, and so the connection was not created. \n\nThe JMeter code could try to keep track of this, but it would be tedious, and it seems to me that SimpleHttpConnectionManager should ignore the shutdown() if the connection is null.\n\nThe problem does not arise when using closeIdleConnections(timeout) - unless one uses the special value:\n\n      closeIdleConnections(System.currentTimeMillis() - Long.MAX_VALUE)\n\nbut it would probably be sensible to protect against this as well.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-717",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "NPE in SimpleHttpConnectionManager.shutdown()",
    "systemSpecification": true,
    "version": "3.1 (end of life)"
}