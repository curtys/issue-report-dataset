{
    "comments": [
        {
            "author": "Sam Berlin",
            "body": "Patch that tests & fixes the three scenarios.",
            "date": "2008-03-21T04:42:12.756+0000",
            "id": 0
        },
        {
            "author": "Sam Berlin",
            "body": "I should mention the patch also has a minor API touchup of removing the InterruptedException declaration from the various execute methods.  Since the only way it can happen is by an abort, and it's possible that an abort may also cause an IOException, it didn't make much sense to distinguish the exceptions.  So now the potential InterruptedException is wrapped by an IOException, consolidating the kinds of exceptions that can happen from an execute down to an HttpException and an IOException.",
            "date": "2008-03-21T04:45:51.478+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in. Many thanks, Sam.\n\nThe only change I did was re-throwing InterruptedException as InterruptedIOException instead of plain IOException\n\nOleg",
            "date": "2008-03-21T11:37:53.045+0000",
            "id": 2
        }
    ],
    "component": "HttpClient (classic)",
    "description": "With svn commit #639506, a few more scenarios become testable & can be fixed.  These are: aborting before HttpClient.execute is called, aborting between setting the connection request for aborting and setting the connection release trigger, and aborting after a redirected route uses a new connection request.  As of r639506, those three scenarios fail to abort correctly.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-760",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Abort Before Execute & Various Other Times Fails",
    "systemSpecification": true,
    "version": "4.0 Alpha 2"
}