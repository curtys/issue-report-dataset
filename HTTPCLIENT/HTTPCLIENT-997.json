{
    "comments": [
        {
            "author": "Jonathan Moore",
            "body": "The attached patch addresses this issue. In addition, there were a couple of bugs that were fixed:\n\n1. When we get a potentially cacheable response outside of the validation path, we likewise MUST check for out-of-order Date headers and not replace existing entries with older-dated ones.\n\n2. Client requests with 'no-cache' or 'no-store' were causing invalidation of existing cache entries, which is not actually required by the protocol.\n\nThis patch is contributed to the ASF with the permission of my employer.\n",
            "date": "2010-09-21T14:45:23.830+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in.\n\nOleg",
            "date": "2010-09-22T14:54:18.545+0000",
            "id": 1
        }
    ],
    "component": "HttpCache",
    "description": "There is a protocol recommendation that when we attempt to revalidate a cache entry, but we receive a response that has a Date header that's actually *older* than that of our current entry, we SHOULD revalidate again unconditionally with either max-age=0 or no-cache (since some upstream cache would appear to be out-of-date).\n\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.6\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-997",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "cache module should handle out-of-order validations properly and unconditionally refresh",
    "systemSpecification": true,
    "version": "4.1 Alpha2"
}