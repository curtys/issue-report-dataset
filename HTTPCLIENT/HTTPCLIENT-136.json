{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "The problem has been worked around by means of a very ugly hack. A better \nsolution does not appear possible without a significant redesign. Possible \nsolution would be to split monolithic HttpMethod interface into a pair of \nHttpRequest/HttpResponse interfaces, which would allow executing extra requests \n(such as CONNECT request or GET request in response to POST request redirect) \nbehind the scene and returning the resultant response to the caller.\n\nOleg",
            "date": "2003-04-29T19:58:19.000+0000",
            "id": 0
        },
        {
            "author": "RJ Auburn",
            "body": "What are the details on this \"ugly hack\"?",
            "date": "2004-05-15T04:08:43.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "In HttpClient 2.0 API HttpMethod interface represents both request and response,\nwhich effectively implies one to one relationship between a request and a\nresponse. Unfortunately this is not always true. For instance, HTTP proxy\ntunneling requires a CONNECT method to be executed against the server before the\noriginal HTTP method can be executed against the target server. Should the\nCONNECT method fail (due to authorization error, for instance), its response\nshould be returned as if it was a response to the original HTTP method. This is\ncurrently not possible due to the monolithic design of HttpMethod interface. The\nproblem has been worked around by providing a method to copy the response\ncontent (status line, response headers and response body) from one method onto\nanother. A better, more elegant solution requires HttpMethod interface be split\ninto HttpREquest / HttpResponse pair of interfaces ",
            "date": "2004-05-16T17:29:08.000+0000",
            "id": 2
        },
        {
            "author": "Kees Jongenburger",
            "body": "the proxy method does not work either when creating a\nnew HttpClient(new MultiThreadedHttpConnectionManager());\n*tried 2.0 and 3.0-alpha2*",
            "date": "2004-09-20T21:40:50.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Kees, what exactly do you mean by a \"proxy method\"? Please consider providing\nsample code and the wire/debug trace\n\nhttp://jakarta.apache.org/commons/httpclient/troubleshooting.html\n\nOleg",
            "date": "2004-09-20T21:48:13.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "This long standing bug has finally been fixed in SVN trunk. \n\nAlso see HTTPCLIENT-649\n\nOleg",
            "date": "2007-05-13T20:08:23.104+0000",
            "id": 5
        }
    ],
    "component": "HttpClient (classic)",
    "description": "1. The HttpClient class does not save the StatusLine from the hidden\nConnectMethod object used to connect via an HTTP proxy server, thus any proxy\nfailures are only picked up as 'anonymous exceptions', this is useless for\ngracefull recovery and rapid debugging.\n\n2. The current class structure is too fragile to neatly support HTTP Proxy (and\nauthenication) chains so it would be a good idea to look at this at the same\ntime, preferable with support for a Proxy chain redirect when an non/dead HTTP\nProxy server is found.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-136",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Inadequate HTTP proxy server support in HttpClient.",
    "systemSpecification": true,
    "version": ""
}