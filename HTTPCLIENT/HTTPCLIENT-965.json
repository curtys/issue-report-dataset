{
    "comments": [
        {
            "author": "Jonathan Moore",
            "body": "The provided patch fixes this issue by adding 'max-age=0' to revalidations for these directives and generating a 504 if there is an IOException when attempting to revalidate a stale entry.\n\nThere is a related issue:\nhttps://issues.apache.org/jira/browse/HTTPCLIENT-962\n\nwhere it is not currently clear if the cache is a shared cache or not. The conservative assumption here is that we are a\nshared cache, and hence must-revalidate and proxy-revalidate are essentially the same.\n\nHowever, the unit tests for proxy-revalidate in TestProtocolRequirements are conditional on whether the CachingHttpClient claims to be a shared cache or not.\n\nThis patch is contributed to the ASF with the permission of my employer.\n",
            "date": "2010-07-02T17:04:36.071+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in. Many thanks, Jon\n\nOleg",
            "date": "2010-07-07T16:11:24.950+0000",
            "id": 1
        }
    ],
    "component": "HttpCache",
    "description": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.4\n\nThere are a couple of missed requirements here regarding must-revalidate and proxy-revalidate (which applies only to shared caches).\n1. When a cache entry with this directive is revalidated, it must be an end-to-end revalidation (meaning it must include 'max-age=0' on the request).\n2. If the revalidation with the origin fails, the cache MUST NOT return a stale entry and MUST return a 504 response.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-965",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "cache does not honor must-revalidate or proxy-revalidate Cache-Control directives",
    "systemSpecification": true,
    "version": "4.1 Alpha2"
}