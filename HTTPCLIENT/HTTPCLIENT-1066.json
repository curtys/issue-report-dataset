{
    "comments": [
        {
            "author": "Angus Ng",
            "body": "Causing issue after the fix.",
            "date": "2011-03-02T23:11:55.698+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I just can't make everyone happy, can I? \n\nI'll try to revert the changes to URIUtils#rewriteURI method without completely breaking the fix for HTTPCLIENT-929.\n\nOleg",
            "date": "2011-03-03T21:04:17.712+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I hanged the way URIUtils#rewriteURI handles multiple consecutive slashes in the URI path component: multiple leading slashes will be replaced by one slash in order to avoid confusion with the authority component. The remaining content of the path component will not be modified.\n\nPlease re-test your application against the latest SVN snapshot.\n\nOleg ",
            "date": "2011-03-07T15:10:24.888+0000",
            "id": 2
        },
        {
            "author": "Angus Ng",
            "body": "Thanks Oleg. It seems all working fine with me now.\n\nCheers,\nAngus",
            "date": "2011-03-08T03:29:48.437+0000",
            "id": 3
        }
    ],
    "component": "HttpClient (classic)",
    "description": "I've put the same comment as in the following issue.\n\nhttps://issues.apache.org/jira/browse/HTTPCLIENT-929?focusedCommentId=13001748#comment-13001748\n\nI am using httpclient 4.1. I had a problem with this fix. In DefaultRequestDirector.rewriteRequestURI method, for non-proxied URI and when it is a absolute URI, it will call the URIUtils.rewriteURI, which then take the \"RawPath\" from an uri and normalize it. So when I pass an uri, for example, http://www.whatever.com/1//3, it will automatically remove the extra slash and become http://www.whatever.com/1/3. I've got a REStful service to accept the uri (/{param1}/{param2}/{param3}) and it takes when there is an empty value past in. Now because of the auto slash removal, the \"3\" value shift left for a position and match to the {param2}. I wouldn't say the above solution is wrong, but I guess it should not change what value that user pass in.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-1066",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "HTTPClient 4.1 auto slash removal",
    "systemSpecification": true,
    "version": "4.0.3, 4.1 Final"
}