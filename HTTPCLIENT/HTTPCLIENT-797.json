{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "Jonathan,\n\nActually there is no longer any reason why socket factories need to be implemented as singletons. This limitation of 3.x API is no longer relevant for 4.0. I updated the javadocs to not mention singleton anymore.\n\nMany thanks for reporting the problem.\n\nOleg  ",
            "date": "2008-09-24T21:00:51.260+0000",
            "id": 0
        }
    ],
    "component": "HttpClient (classic)",
    "description": "The class \"org.apache.http.conn.scheme.PlainSocketFactory\" has a factory method, getSocketFactory(), and clearly indicates in the Javadocs that it expects to be a Singleton; however, the presence of public constructors makes it quite possible that this is not the case.\n\nTo protect the Singleton status of the class, the constructors should be private, or, at the very least, default (package) access. This will force access to the single instance through the factory method.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-797",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "o.a.h.conn.scheme.PlainSocketFactory is not a true Singleton",
    "systemSpecification": true,
    "version": "4.0 Beta 1"
}