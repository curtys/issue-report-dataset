{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "In hindsight the decision to turn 'expect-continue' on per default was probably a mistake. There are several reports about various incompatibilities due to poor support of  'expect-continue' by some web servers / proxies. If I hear no objections, I will disable  'expect-continue' per default in 4.1\n\nOleg",
            "date": "2009-11-11T19:12:46.012+0000",
            "id": 0
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Yeah, for \"small\" request entities (such as form data) it doesn't make much of a difference. It's really only useful for\na) large request entities, such as image uploads over a low-bandwidth connection\nb) request entities that are not cached/repeatable, i.e. only producible once (such as streamed data)\n\nJudge for yourself if those are \"the common\" use case for HttpClient.\n\nMind you, reasons why a server would reject a request whose body it hasn't even seen are mainly:\n- not authenticated\n- not authorized\n- content too large\n- missing content-length information (chunked TE not supported/allowed)\n- content type not expected/supported",
            "date": "2009-11-11T20:24:34.308+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Fixed in SVN trunk.\n\nOleg",
            "date": "2009-11-24T20:52:50.705+0000",
            "id": 2
        }
    ],
    "component": "HttpClient (classic)",
    "description": "It seems the point of USE_EXPECT_CONTINUE is to improve performance when posting large data. \nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html says:\n\n<< The purpose of the 100 (Continue) status (see section 10.1.1) is to allow a client that is sending a request message with a request body to determine if the origin server is willing to accept the request (based on the request headers) before the client sends the request body. In some cases, it might either be inappropriate or highly inefficient for the client to send the body if the server will reject the message without looking at the body. >>\n\nThere's nothing wrong with HttpClient performing well by default, however, every other HTTP client library I've used does not behave like this (PHP curl, Perl LWP). The default is always to do one request, including the body. Maybe dumb, but simple.\n\nIt seems to me HttpClient's default behavior should the simplest, most compatible with all HTTP-speaking services out there. \"100 Continue\" is somewhat advanced, and may not be correctly implemented by all services. (That's of course how I found out about it -- my server doesn't implement it.)\n\nIf USE_EXPECT_CONTINUE is used only for performance reasons, it seems like it would be simpler (and therefore maybe more \"correct\") to have it \"off\" by default. And only enable it when needed, when there is a good reason to.\n\nJust my thoughts. And a wish. Thanks! \n\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-889",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Should USE_EXPECT_CONTINUE be false by default?",
    "systemSpecification": true,
    "version": "4.0 Final"
}