{
    "comments": [
        {
            "author": "Paul Lindner",
            "body": "Updated with stacktrace and list of jars used.\n\n",
            "date": "2008-05-01T20:54:47.360+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Paul,\nWhat is it _exactly_ you are doing that triggers the exception? Can you put together a test case to reproduce the bug?\n\nOleg ",
            "date": "2008-05-01T22:32:29.762+0000",
            "id": 1
        },
        {
            "author": "Paul Lindner",
            "body": "This code is an implementation of a Fetcher interface as used in the Shindig project.  It's basically a proxy server, to a smallish set of backend servers ( < 50)\n\n netstat -an |grep ':80[ ]*ESTAB' |awk '{print $5}'|sort |uniq -c |sort -rn\n      3 75.126.76.168:80\n      3 74.53.174.114:80\n      3 70.42.240.21:80\n      2 74.200.66.167:80\n      2 72.249.66.221:80\n      2 168.143.164.40:80\n      1 72.249.66.208:80\n      1 67.228.130.71:80\n      1 216.69.179.28:80\n      1 208.76.70.58:80\n\n ",
            "date": "2008-05-01T22:40:33.666+0000",
            "id": 2
        },
        {
            "author": "Sebb",
            "body": "This might be because the RouteTracker#connected field is not synch or volatile.\n\nThere seem to be quite a few fields that are initialised in ctors that could benefit from being made final.\nEasy enough to do this when they are private, but some of them are protected: is that because subclasses need read-write access, or just read-access?",
            "date": "2008-05-02T00:37:05.043+0000",
            "id": 3
        },
        {
            "author": "Paul Lindner",
            "body": "One test case.\n\nOne host with about 10-20 req/sec, each response has Connection:close, so we should never reuse these connections -- yet we are.  About 10% of the time we get the error java.lang.IllegalStateException: Connection already open.\n\nMaybe something isn't getting cleaned up properly?\n",
            "date": "2008-05-02T01:05:06.178+0000",
            "id": 4
        },
        {
            "author": "Sam Berlin",
            "body": "We also just released a new beta with httpcore-4.0-beta2-20080408.115743-9 , httpcore-nio-4.0-beta2-20080408.115743-9, and httpclient-4.0-alpha4-20080427.214350-9, and are still getting these exceptions.  I'll spend some time looking into it again tomorrow, but another pair of eyes would be very helpful -- myself and a few others here have tried to track this down a few times, and have come up with nothing.  (Although we tend to get lost trying to comprehend how the connection management code works in practice -- it's very intricate.)",
            "date": "2008-05-02T01:32:13.515+0000",
            "id": 5
        },
        {
            "author": "Paul Lindner",
            "body": "Another data point.  I ran my requests through a single thread and found the same errors (just less often).  So I don't think it's a concurrency issue, I think it's an issue with cleanups not being done properly.\n",
            "date": "2008-05-02T06:11:04.505+0000",
            "id": 6
        },
        {
            "author": "Sebb",
            "body": "Unless cleanups are done by a separate embedded worker thread?\n\nStill worth fixing the obvious unsynch variables though.",
            "date": "2008-05-02T10:44:59.904+0000",
            "id": 7
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks,\n\nI managed to track down the cause of the problem. Paul was absolutely right. It is a problem with the cleanup code, not a concurrency issue. Anyways, the issue appears severe enough to block the release. I am waiting for the write access to the SVN to come back to commit the fix. \n\nSam,\n\nThe connection management code is so complex, it can easily cause a severe hair loss. The fact that Roland had a tendency to over-complicate things did not quite help. However, overall Roland did a great job on the connection management API. The code just needs some time to mature.\n\nAre you seeing other exceptions in the latest release of LimeWire or only this one? Is it okay to proceed with the release if this issue is fixed?\n\nSebastian,\n\nPlease go ahead and fix whatever sync issues as you see necessary. You have as many rights to shape HttpClient's code as any other committer on the project.\n\nOleg ",
            "date": "2008-05-02T19:21:34.334+0000",
            "id": 8
        },
        {
            "author": "Sam Berlin",
            "body": "That's great, Oleg!  As far as I can tell, that was the only httpcomponents-related bug we saw reported.  (You can check it out for yourself @ bugreports.limewire.com/bugs/home.jsp -- pretty nifty bug-watching system.)\n\nRe: connection management code -- I completely agree.  Roland did an absolutely fantastic job with it.  Adding in support for aborting connection requests was a breeze.  It's complicated, but not unnecessarily so.",
            "date": "2008-05-02T19:41:28.923+0000",
            "id": 9
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I committed the fix and uploaded the latest snapshot to the maven repository.\n\nPaul,\n\nCould you please test your application with the latest snapshot and confirm the fix?\n\nOleg",
            "date": "2008-05-02T23:14:44.978+0000",
            "id": 10
        },
        {
            "author": "Paul Lindner",
            "body": "Works in heavy production load.\n\nThere's a new behavior that results in a ConcurrentModificationException that I'll detail in a new bug.\n",
            "date": "2008-05-03T01:00:16.945+0000",
            "id": 11
        },
        {
            "author": "Sam Berlin",
            "body": "We're still seeing this bug (albiet much more rarely) against snapshot httpclient-4.0-alpha5-20080522.192134-5.jar.\n\nI'll spend a bit of time digging in to see what causes it.  The good news is that other than this very rare bug, HttpClient is working absolutely perfectly. :-)",
            "date": "2008-05-24T20:12:09.215+0000",
            "id": 12
        }
    ],
    "component": "HttpClient (classic)",
    "description": "I am seeing many of the same problems noted in HTTPCLIENT-741 using the latest builds from the maven repo.\n\njava.lang.IllegalStateException: Connection already open.\n        at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:150)\n        at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:119)\n        at org.apache.http.impl.client.DefaultClientRequestDirector.execute(DefaultClientRequestDirector.java:308)\n        at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:501)\n        at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:456)\n        at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:422)\n        at com.hi5.os.Hi5RemoteContentFetcher.fetch(Hi5RemoteContentFetcher.java:279)\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-769",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Critical",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "java.lang.IllegalStateException: Connection already open.",
    "systemSpecification": true,
    "version": "4.0 Alpha 4"
}