{
    "comments": [
        {
            "author": "Ryan Hoegg",
            "body": "Created an attachment (id=3356)\npatch to _readResponseBody to correct this.  Also a minor javadoc typo fix.\n",
            "date": "2002-10-05T00:05:11.000+0000",
            "id": 0
        }
    ],
    "component": "HttpClient (classic)",
    "description": "RFC2616, section 4.4 item 3 states:\n     If a Content-Length header field (section 14.13) is present, its\n     decimal value in OCTETs represents both the entity-length and the\n     transfer-length. The Content-Length header field MUST NOT be sent\n     if these two lengths are different (i.e., if a Transfer-Encoding\n     header field is present). If a message is received with both a\n     Transfer-Encoding header field and a Content-Length header field,\n     the latter MUST be ignored.\n\nThis is not handled correctly in the case that a noncompliant HTTP server\nreturns both a Transfer-Encoding header and a Content-Length header.\n\nI gave up on writing a TestCase for this as it would require a reliably\nnoncompliant HTTP Server.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-112",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "HttpClient incorrectly handles Transfer-Encoding header",
    "systemSpecification": false,
    "version": ""
}