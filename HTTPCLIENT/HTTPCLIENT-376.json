{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=12694)\nPatch (take 1)\n",
            "date": "2004-09-10T21:25:32.000+0000",
            "id": 0
        },
        {
            "author": "Michael Becke",
            "body": "Hi Oleg,\n\nI think we should leave DateParser.parseDate(String), and just have it use the default list of patterns.  \nOther than that it looks pretty good to me.  \n\nMike",
            "date": "2004-09-14T09:13:26.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Sorry. My oversight. It was not my intention to remove the\nDateParser#parseDate(String) method.\n\nNew patch restores the DateParser.parseDate(String) and cleans up the javadocs.\n\nIf there are no loud objections, I'll commit the patch around 21:00GMT today\n\nOleg",
            "date": "2004-09-14T15:50:41.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=12725)\nPatch (take 2)\n",
            "date": "2004-09-14T15:51:16.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed\n\nOleg",
            "date": "2004-09-15T03:13:58.000+0000",
            "id": 4
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Presently DateParser is tightly coupled with the DefaultHttpParams class. I find\nthis sub-optimal from the design standpoint. Moreover, I believe that date\npatterns should be specifiable at the method, host, and client levels, not only\nglobal one. Currently this is not the case, and out of sync with the rest of the\npreference framework, which can result in quite a bit of confusion.\n\nWhen refactoring the DateParser class I also realized that the cookie specs were\nshared by all the HttpMethod instances and as such had to be stateless. Even\nthough it is presently the case, technically there's nothing that prevents the\nuser from implementing a stateful cookie spec, plugging it into HttpClient, and\nby doing so potentially causing quite unpleasant concurrency issues. Therefore,\nI believe pluggable cookie specs MAY NOT be shared. There should be a cookie\nspec instance created per method invocation \n\nOleg",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-376",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "DateParser refactoring; Stateful cookie specs",
    "systemSpecification": true,
    "version": ""
}