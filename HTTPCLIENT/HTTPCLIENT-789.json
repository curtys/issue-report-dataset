{
    "comments": [
        {
            "author": "Bruno Harbulot",
            "body": "Here is a patch that adds a couple of constructors for passing an SSLContext.",
            "date": "2008-08-02T16:37:22.151+0000",
            "id": 0
        },
        {
            "author": "Bruno Harbulot",
            "body": "If one day HttpClient was made to require Java 6, it could be possible to use the default SSLContext when the constructor argument is null:\n\n        if (sslContext == null) {\n            this.sslContext = SSLContext.getDefault();\n        } else {\n            this.sslcontext = sslContext;\n        }",
            "date": "2008-08-02T17:06:19.787+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I'll commit the patch as soon as I am back from holidays\n\nOleg",
            "date": "2008-08-03T08:02:48.933+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in. Many thanks, Bruno\n\nOleg",
            "date": "2008-08-10T19:36:19.228+0000",
            "id": 3
        },
        {
            "author": "Alexey Serba",
            "body": "{quote}\nIf one day HttpClient was made to require Java 6, it could be possible to use the default SSLContext when the constructor argument is null:\n{code}\n        if (sslContext == null) {\n            this.sslContext = SSLContext.getDefault();\n        } else {\n            this.sslcontext = sslContext;\n        }\n{code}\n{quote}\n\nWhat about using reflection and using default SSL context on java 6? It would make configuring SSL for http client 4.x much easier. Thoughts?",
            "date": "2013-01-10T11:23:46.386+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Alexey\nThere are now factory methods provided by SSLSocketFactory to create instances of SSLContext in default and system (based on system properties) configurations. I do not see a very convincing reason for having to resort to reflection just to get an instance of SSLContext.\n\nOleg",
            "date": "2013-01-10T13:13:02.708+0000",
            "id": 5
        },
        {
            "author": "Alexey Serba",
            "body": "Oleg,\n\nI described my problem on the httpclient-user [mailing list|http://httpcomponents.10934.n7.nabble.com/http-client-and-SSLContext-getDefault-td18762.html]. Could you please elaborate how one can override default SSLContext (keystore, truststore) at runtime without touching/instrumenting every http client instance?\n\nThanks in advance,\nAlexey",
            "date": "2013-01-10T13:28:26.723+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Alexey, there should never be more than one instance of HttpClient per distinct HTTP service. You can override SSL settings globally by using system properties (that same way one would do for HttpUrlConnection).\n\nOleg",
            "date": "2013-01-10T13:37:20.680+0000",
            "id": 7
        },
        {
            "author": "Alexey Serba",
            "body": "bq. You can override SSL settings globally by using system properties (that same way one would do for HttpUrlConnection).\nAre you suggesting to override SSL system properties at a runtime instead?\n\nAFAIK HttpUrlConnection uses SSLContext.getDefault(), and it seems it would be consistent if httpclient uses it too.",
            "date": "2013-01-10T13:47:12.292+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Given it is a Java 6 specific feature, the stock version of HttpClient cannot use it (due to Java 5 compatibility requirement). There is nothing, though, that prevents you from using a custom socket factory that makes use of this feature, if Java 6 is the lowest platform version supported by your application.\n\nAs of version 4.3 one will also be able to provide a custom set of socket factories for individual requests through a local execution context.\n\nOleg ",
            "date": "2013-01-10T13:55:10.601+0000",
            "id": 9
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Would it be possible to use an existing instance of SSLContext to initialise an SSLSocketFactory? This would allow using SSLContexts configured with more options, such as CRLs.\n\n(This follows the thread of the httpclient-commons-dev list: http://marc.info/?l=httpclient-commons-dev&m=121737017814116&w=2 ).",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-789",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Support for passing an SSLContext to the SSLSocketFactory of HttpClient",
    "systemSpecification": true,
    "version": ""
}