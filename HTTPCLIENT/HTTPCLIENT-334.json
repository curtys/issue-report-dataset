{
    "comments": [
        {
            "author": "Sam Berlin",
            "body": "Created an attachment (id=11253)\nexample diff from a modified 2.0rc2\n",
            "date": "2004-04-16T05:37:28.000+0000",
            "id": 0
        },
        {
            "author": "Sam Berlin",
            "body": "Credit for the previous diff goes to Sumeet Thadani, another developer on our team.",
            "date": "2004-04-16T05:39:02.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Somehow I can't help thinking that SOCKS parameters do not really belong to\nHostConfiguration. I would rather see them in HttpState or in the HttpParam\ncollection. I suggest we address this problem in the 3.0 (4.0, that is) timeframe.\n\nOleg",
            "date": "2004-04-24T21:39:11.000+0000",
            "id": 2
        },
        {
            "author": "Michael Becke",
            "body": "I agree that this probably won't make it in until the release after next (4.0).  In the mean time we could \nrefactor it into a stand-alone Socket factory and include it in contrib.  How does that sound?\n\nMike",
            "date": "2004-04-26T05:06:56.000+0000",
            "id": 3
        },
        {
            "author": "Sam Berlin",
            "body": "Whatever's easiest for you folks is fine for us.  We're going to continue using \na customized version of HttpClient for the indefinite future, so it doesn't \nmuch matter where it goes in the official version.\n\nStoring the SOCKS info in HostConfiguration was more because we consider a \nSOCKS proxy to be on the same footing as an HTTP Proxy (in the sense that \nthey're both proxies), and HTTP proxy was stored in HostConfig.",
            "date": "2004-04-26T05:19:48.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "That's the point. I can't help thinking that proxy settings do not really belong\nto HostConfiguration at all, as one would very rarely need to change proxy on a\nper host basis. In the overwhelming majority of cases there's only one proxy the\nuser would want to deal with. So, I'd rather see proxy settings moved to\nHttpParams, but that would be too radical for 3.0. \n\nOleg",
            "date": "2004-04-26T05:43:45.000+0000",
            "id": 5
        },
        {
            "author": "Dennis Cook",
            "body": "Just one comment, please keep in mind those of us that use multi-homed hosts.  \nThere can be times where traffic on one NIC will require use a a proxy where \ntraffic directed through another will not.",
            "date": "2004-04-27T01:20:55.000+0000",
            "id": 6
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Oleg,\n\nProxy settings are 'manual routing' on the application layer of the protocol\nstack. Therefore proxy settings must remain a per host property in any case.\nEven if most proxy users will only use one proxy setting for all their\nconnections, we must not restrict HttpClient to this most common case. I think\nit is an essential flexibility to be able to use a specific proxy per connection.\n\nAt our company for instance, we have access to the intranets of some of our\nclients. It makes sense to set up one proxy server for each of those\nconnections. With HttpClient I can then access any host in those intranets\ndepending on the proxy setting.\nAlso, if we ever want to implement PAC (auto config) we need to be able to use\none setting per host.",
            "date": "2004-04-27T14:11:37.000+0000",
            "id": 7
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Odi, All I am saying is that HttpParams _might_ be a better place for proxy\nsettings, as HostConfiguration is getting a little too messy IMO. I am not\ntrying to say that we should not support multiple proxies and different proxy\ntypes. Let's just consider leveraging HttpParams as it has been specifically\ndesigned to  allow parameter settings at client | method | connection level\n\nOleg",
            "date": "2004-04-27T16:29:38.000+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "*** HTTPCLIENT-448 has been marked as a duplicate of this bug. ***",
            "date": "2005-04-15T06:12:52.000+0000",
            "id": 9
        },
        {
            "author": "Roland Weber",
            "body": "ClientConnectionOperator.openConnection has access to HttpParams and HttpContext.\nI think that's enough to address this requirement by plugging in a custom CCO.\n\nHttpRoute does not make provisions for representing socks proxies. They could be inserted into the route as a proxy with socks: protocol, to make the connection manager socks-aware. That would throw off a lot of the upper layers though.\nAnother way to represent the socks proxy in the route would be as the \"local address\". That should not cause problems in the upper layers, you just can't combine socks proxies and actual local addresses that way.\n\ncheers,\n  Roland",
            "date": "2007-09-01T15:55:53.667+0000",
            "id": 10
        }
    ],
    "component": "HttpClient (classic)",
    "description": "HttpClient requires a way of allowing a SOCKS proxy to be used on some\nconnections without requiring that all created Sockets go through the proxy.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-334",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Per socket SOCKS proxies",
    "systemSpecification": false,
    "version": ""
}