{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "Committed to the SVN trunk. Many thanks, Axel.\n\nOleg",
            "date": "2010-10-16T17:27:47.290+0000",
            "id": 0
        }
    ],
    "component": "HttpClient (classic)",
    "description": "InputStreamBody can not determine the content length, which in turn causes requests to be sent with a content length of 0, even though the content is there. .NET Servers have trouble dealing with this.\n\nByteArrayBody provides an alternative that alliviates this limitation.\n\nSource:\n \nimport java.io.IOException;\nimport java.io.OutputStream;\n\nimport org.apache.http.entity.mime.MIME;\nimport org.apache.http.entity.mime.content.AbstractContentBody;\n\n/**\n * Body part that is built using a byte array containing a file.\n * \n * @author Axel Fontaine\n */\npublic class ByteArrayBody extends AbstractContentBody {\n    /**\n     * The contents of the file contained in this part.\n     */\n    private byte[] data;\n\n    /**\n     * The name of the file contained in this part.\n     */\n    private String filename;\n    \n    /**\n     * Creates a new ByteArrayBody.\n     * \n     * @param data The contents of the file contained in this part.\n     * @param mimeType The mime type of the file contained in this part.\n     * @param filename The name of the file contained in this part.\n     */\n    public ByteArrayBody(final byte[] data, final String mimeType, final String filename) {\n        super(mimeType);\n        if (data == null) {\n            throw new IllegalArgumentException(\"byte[] may not be null\");\n        }\n        this.data = data;\n        this.filename = filename;\n    }\n\n    /**\n     * Creates a new ByteArrayBody.\n     * \n     * @param data The contents of the file contained in this part.\n     * @param filename The name of the file contained in this part.\n     */\n    public ByteArrayBody(final byte[] data, final String filename) {\n        this(data, \"application/octet-stream\", filename);\n    }\n\n    @Override\n    public String getFilename() {\n        return filename;\n    }\n\n    @Override\n    public void writeTo(OutputStream out) throws IOException {\n        out.write(data);\n    }\n\n    @Override\n    public String getCharset() {\n        return null;\n    }\n\n    @Override\n    public String getTransferEncoding() {\n        return MIME.ENC_BINARY;\n    }\n\n    @Override\n    public long getContentLength() {\n        return data.length;\n    }\n}\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-1014",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "ByteArrayBody as an alternative to InputStreamBody",
    "systemSpecification": true,
    "version": "4.1 Alpha2"
}