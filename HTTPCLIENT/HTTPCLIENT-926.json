{
    "comments": [
        {
            "author": "Jean-Philippe Steinmetz",
            "body": "Implementation of Amazon's spec. Verified working against HttpClient 4.0 and 4.1.alpha1.",
            "date": "2010-03-14T05:35:51.458+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Jean-Philippe\n\nI committed the code you contributed to the SVN repository. I made some minor changes to the exception handling code and also had to remove @author tags. Please review.\n\nhttp://svn.apache.org/viewvc?rev=934160&view=rev\n\nMany thanks for this contribution\n\nOleg",
            "date": "2010-04-14T20:00:38.862+0000",
            "id": 1
        },
        {
            "author": "Asankha C. Perera",
            "body": "Hi Jean-Philippe\n\nI was testing this and noticed that the Base64.encodeBase64String() inserts a CRLF even when the size is much less than 76 characters.. and thus causes problems (a connection reset from Amazon for a GET request in my test)\n\n// base64-encode the hmac\nresult = Base64.encodeBase64String(rawHmac);\n\nA simple replace as follows fixes this issue, but as I am not much familiar with the AWS/S3 API want to check this with you if this indeed is a simple oversight or if there could be other cases I am not aware of\n\n// base64-encode the hmac\nreturn Base64.encodeBase64URLSafeString(rawHmac);\n\ncheers\nasankha\n",
            "date": "2010-04-15T06:36:17.142+0000",
            "id": 2
        },
        {
            "author": "Asankha C. Perera",
            "body": "Seems like my earlier comment was written in a hurry.. I still have issues and will get back with my findings :)",
            "date": "2010-04-15T06:40:59.046+0000",
            "id": 3
        },
        {
            "author": "Asankha C. Perera",
            "body": "My earlier suggestion has been reporting a successful response, but with an error that the signature did not match which I did not notice .. \n\nA working solution is to just remove the trailing \\r\\n which otherwise can be interpreted as part of another [malformed] request. Since this is only at the end, this should not cause an issue - but if a \\r\\n indeed does occur within the header value due to some long signature etc, that could still cause problems..\n\nFor now, I've checked this into SVN\n\nString headerValue = NAME + \" \" + credentials.getUserPrincipal().getName() + \":\" + signature.trim();\n\ncheers\nasankha",
            "date": "2010-04-15T06:59:44.733+0000",
            "id": 4
        },
        {
            "author": "Jean-Philippe Steinmetz",
            "body": "Hi Asankha\n\nThanks for the feedback. I've found a similar issues with the code that I had to use some workarounds for. I'm continuing to investigate this and will take your considerations into account. I also discovered an issue with some S3 based servers required the Content-MD5 header to be set. I will be submitting an update to the code that hopefully addresses your issue plus the Content-MD5 issue.\n\nCheers,\nJean-Philippe",
            "date": "2010-04-15T07:49:33.496+0000",
            "id": 5
        }
    ],
    "component": "Contrib",
    "description": "Add support for the the Amazon S3 authentication scheme as defined by the online document: http://docs.amazonwebservices.com/AmazonS3/latest/index.html?RESTAuthentication.html",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-926",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Add Amazon S3 authentication support",
    "systemSpecification": true,
    "version": ""
}