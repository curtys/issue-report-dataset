{
    "comments": [
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=10195)\nPatch 1\n",
            "date": "2004-02-03T11:17:30.000+0000",
            "id": 0
        },
        {
            "author": "Michael Becke",
            "body": "This should do it I think.  Any comments.\n\nMike",
            "date": "2004-02-03T11:18:13.000+0000",
            "id": 1
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "I did not test it, but it looks trivial. Go for it.",
            "date": "2004-02-03T15:09:54.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Same here. Looks ok to me.\n\nOleg",
            "date": "2004-02-03T18:49:33.000+0000",
            "id": 3
        },
        {
            "author": "Michael Becke",
            "body": "Patch applied to 2.0.  \n\nThis problem is a little more difficult in HEAD.  The socket timeout is set in HttpConnection.open() and \nsetSoTimeout() is deprecated.  Any preference on how we should handle this?  Here are a few quick \nideas that come to mind:\n\n - un-deprecate setSoTimeout()\n - add a method for synchronizing an HttpConnection with its params\n - remove support for changing a connection once opened\n - something else...\n\nMike",
            "date": "2004-02-04T10:31:19.000+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=10228)\nPatch against HEAD (take 1)\n",
            "date": "2004-02-05T05:29:20.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike, I beleive that should do the trick\n\nOleg",
            "date": "2004-02-05T05:29:49.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed to CVS HEAD.\n\nOleg",
            "date": "2004-02-10T02:03:52.000+0000",
            "id": 7
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Reported by Teemu Tingander <Teemu.Tingander at tecnomen.fi> on The Jakarta\nCommons HttpClient Developer List:\n\n<snip>\nChanging read timeout ()wont affect after successful method execution using\nsame connection.. \n\nThis seems to be a bug in HttpClient class method\nexecuteMethod(HostConfiguration ...)..\n\nThe problematic section seems to be if section checking if connection is\nopen\n\t\n\t\tmethod.setStrictMode(strictMode);\n        \t\t        \n            if (!connection.isOpen()) {                \n                connection.setConnectionTimeout(connectionTimeout);\n-->\t\t    connection.setSoTimeout(soTimeout);\n                connection.open();\n                if (connection.isProxied() && connection.isSecure()) {\n                    method = new ConnectMethod(method);\n                }\n            }\n \nProblem can be solved by moving the line out of if section\n\n\t\tmethod.setStrictMode(strictMode);\n\n\t\tconnection.setSoTimeout(soTimeout);\t\n        \t\t        \n            if (!connection.isOpen()) {                \n                connection.setConnectionTimeout(connectionTimeout);\n                connection.open();\n                if (connection.isProxied() && connection.isSecure()) {\n                    method = new ConnectMethod(method);\n                }\n            }\n</snip>",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-314",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "New socket timeout value wont have effect if connection is reused",
    "systemSpecification": false,
    "version": ""
}