{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "I think we'll happily take this code for the cotrib package. Many thanks, Mark.\n\nOleg",
            "date": "2006-09-18T17:05:48.000+0000",
            "id": 0
        },
        {
            "author": "Roland Weber",
            "body": "I think so, too. Thanks Mark!\n",
            "date": "2006-09-18T18:50:22.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "File committed to the SVN trunk. Many thanks, Mark\n\nOleg",
            "date": "2006-10-01T18:58:04.000+0000",
            "id": 2
        }
    ],
    "component": "Contrib",
    "description": "As smartcards and SSL are becoming more and more prevelant, Java Web Start has started to become better equiped to handle these situations.  When running an app within webstart, it can access the browser's keystore, which (at least in our case) accessed the users smartcard to make the SSL connection.\n\nI wanted to start using HttpClient, but needed a way to do so while still mainaining access to the browser's keystore.\n\nMy initial tests show that getting the default socket factory from the java.net.HttpURLConnection and wrapping it in a class that implements org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory is sufficient.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-601",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "SecureProtocolFactoryWrapper class for using the socket factory created by Java Web Start",
    "systemSpecification": true,
    "version": "3.0.1"
}