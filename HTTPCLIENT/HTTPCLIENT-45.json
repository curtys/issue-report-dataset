{
    "comments": [
        {
            "author": "Jeff Dever",
            "body": "Created an attachment (id=6043)\nSimple httpstatus code lookup optimizations\n",
            "date": "2003-04-28T05:51:28.000+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Jandalf,\n\nOverall the patch looks fine to me. Of course, code has become less readable,\nbut quite often there is a trade-off between source code readability and machine\ncode efficiency\n\njava.util.Hashtable import can be removed, I think\n\n\nOleg ",
            "date": "2003-05-01T19:10:43.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I'll be working on this one.\n\nOleg",
            "date": "2003-07-21T20:26:56.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=7493)\nHTTP version patch (take 1)\n",
            "date": "2003-07-24T22:37:28.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "It's just a small step toward improving the HTTP protocol versioning in \nHttpClient. Folks, let me know what you think. \n\nOleg",
            "date": "2003-07-24T22:39:30.000+0000",
            "id": 4
        },
        {
            "author": "Michael Becke",
            "body": "Oleg,\n\nVery nice.  I think this is a clean solution to the problem.  I have a few comments:\n\n - HttpVersion.parse() no longer handles the http status of \"HTTP\". Though this\nis an obviously non-standard value it is something that we intentionally added\nsupport for.\n - HttpVersion should implement hashCode().\n - HttpVersion.equals(Object) does the following test:\n\n        if ((obj != null) && (obj instanceof HttpVersion))\n\n  Though this is not an error the test for null is not necessary as instanceof\nalready handles this case.\n\n\nMike\n",
            "date": "2003-07-25T20:33:34.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=7515)\nHTTP version patch (take 2)\n",
            "date": "2003-07-25T22:29:50.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I can hardly imagine that one would want to put instances of HttpVersion class \ninto a hash map, but, of course, I see no harm in having a hashCode() \nimplementation. What do you think it can be useful for?\n\nOleg",
            "date": "2003-07-25T22:36:02.000+0000",
            "id": 7
        },
        {
            "author": "Michael Becke",
            "body": "I don't know of a good reason to hash HttpVersions either. I think it is just\ngood practice to override equals() and hashCode() together.\n\nMike",
            "date": "2003-07-25T23:05:39.000+0000",
            "id": 8
        },
        {
            "author": "Laura Werner",
            "body": "This looks very good!  I have one (very) minor suggestion:  In\nEntityEnclosingMethod, change this:\n                 \"Chunked transfer encoding not allowed for HTTP/1.0\");\nto this:\n                 \"Chunked transfer encoding not allowed for \" +\n                 getHttpVersion());\n",
            "date": "2003-07-30T12:06:09.000+0000",
            "id": 9
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=7581)\nHTTP version patch (take 3)\n",
            "date": "2003-07-30T19:19:34.000+0000",
            "id": 10
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "If nobody complains loudly I'll commit this patch tonight.\n\nOleg",
            "date": "2003-07-31T02:29:25.000+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed.\n\nOleg",
            "date": "2003-07-31T04:14:30.000+0000",
            "id": 12
        }
    ],
    "component": "HttpClient (classic)",
    "description": "HTTP version tracking is currently oversimplified with a single http11 boolean. \nExtend this to handle any http version simply, and efficiently.\n\nPossible suggestion:\n> get rid of setHttp11() an isHttp11\n> void setHttpVersion(String version)\n> String getHttpVersion()\n> boolean isHttpVersion(String version)",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-45",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "HTTP Version configuration and tracking",
    "systemSpecification": true,
    "version": "2.0 Alpha 1"
}