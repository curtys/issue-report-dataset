{
    "comments": [
        {
            "author": "Roland Weber",
            "body": "please review",
            "date": "2007-07-27T18:55:30.583+0000",
            "id": 0
        },
        {
            "author": "Roland Weber",
            "body": "If I hear no complaints, I'll commit this patch this week-end.\n",
            "date": "2007-08-10T18:52:48.897+0000",
            "id": 1
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Hi folks,\n\nI might have found a bug in MTHCM. It has to do with removing HostConnectionPool instances that have no more connections in them. That was a fix for a memory leak we previously had. There are two cases where the pools get deleted. One is in handleLostConnection: (excerpt)\n  ...\n  if (hostPool.numConnections == 0) mapHosts.remove(config);\n  notifyWaitingThread(config);\n  ...\n\nCould this delete a pool in which there is still a thread waiting to get a connection? If so, the thread would remain in the global pool. But even if it is interrupted there, it would still use the old HostConnectionPool in which no connection will ever become available again.\n\nI suggest to change the removal check in both cases to:\n  if ((hostPool.numConnections < 1) && hostPool.waitingThreads.isEmpty)\n\nWhat do you think?",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-675",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "thread starving in MultiThreadedHttpConnectionManager",
    "systemSpecification": true,
    "version": "3.1 RC1"
}