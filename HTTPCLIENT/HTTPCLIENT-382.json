{
    "comments": [
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=12841)\nPatch 1\n",
            "date": "2004-09-23T09:50:04.000+0000",
            "id": 0
        },
        {
            "author": "Michael Becke",
            "body": "Here's a first stab this one.  This patch does the following:\n\n - Deprecates MultipartPostMethod in favor of MultipartRequestEntity + PostMethod\n - Adds isRepeatable() to Part\n - Moves the multipart boundary definition to a HttpMethod param\n - Adds support to SimpleHttpServerConnection for reading request bodies\n - Ports the old webapp-based multipart tests to the new SimpleHttpServer.  These tests are a little \nweak, perhaps we should consider making use of FileUpload for checking the multipart request.\n\nPlease have a look and let me know what you think.\n\nMike",
            "date": "2004-09-23T09:56:55.000+0000",
            "id": 1
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Mike,\n\nI like this redesign a lot. But it needs to be well-documented in the guide, so\nthat people understand how to use it.\nYou made the MIME boundary string a param. I have a strong feeling that we\nshould avoid that. The boundary string should not be a constant at all. It\nshould be randomly generated on each request. Multipart-MIME is an extremely\nhierarchical format that can be nested deeply. So there can be more than one\nboundary string and we must ensure they are all unique within the same request.\nI know we had a request when somebody wanted to control the boundary string. We\ncould still allow that by accepting an optional parameter in a Part constructor.",
            "date": "2004-09-23T14:46:24.000+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "*** HTTPCLIENT-164 has been marked as a duplicate of this bug. ***",
            "date": "2004-09-23T18:09:38.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Mike,\nI would like to echo Odi's comment on the boundary string. It does make sense \nto have it randomly generated when not explicitly defined. \n\nOne little comment I have is that the patch currently makes use of some \ndeprecated classes (HttpConstants). If that's not intentional, references to \nHttpConstants should be removed.\n\nOtherwise all looks cool\n\nOleg",
            "date": "2004-09-23T18:15:21.000+0000",
            "id": 4
        },
        {
            "author": "Michael Becke",
            "body": "Hi Odi, Oleg,\n\nThank you for looking over the patch.\n\nI'll change the boundary string to be randomly generated where it can be overridden by using a param.  \nThe use of HttpConstants is intentional as there doesn't seem to be a non-deprecated replacement.  Is \nthe default content charset statically available anywhere else?\n\nMike",
            "date": "2004-09-23T19:26:14.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "> Is the default content charset statically available anywhere else?\n\nIt's defined in the DefaultHttpParams these days. I would not like to see \nSimpleHttpServerConnection tightly coupled with DefaultHttpParams, though. In \nmy opinion the SimpleHttpServerConnection should define its own \nDEFAULT_CONTENT_CHAR static variable. HttpConstants should be let quietly go \naway in the next release.\n\nOleg\n\n",
            "date": "2004-09-23T19:44:54.000+0000",
            "id": 6
        },
        {
            "author": "Michael Becke",
            "body": "Created an attachment (id=12889)\npatch 2\n",
            "date": "2004-09-29T09:43:11.000+0000",
            "id": 7
        },
        {
            "author": "Michael Becke",
            "body": "Here's another take on this one.  The boundary is now randomly generated by default, but it can be \noverridden using a param.  The use of deprecated code has also been removed.  There is still a need for \nsome documentation/javadoc updates, but otherwise I think this works.  Please have a look and let me \nknow what you think.\n\nMike",
            "date": "2004-09-29T09:46:55.000+0000",
            "id": 8
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Very nice, Mike. You also spent a lot of work on test cases. I guess a random\nboundary thing is fair enough. If you are very paranoid you should include sort\nof a serial number however. Like 30 random characters + a static counter that is\nincreased with every call to a Part constructor. But as I said, that is paranoid.\n\nI browsed through the patch and the only thing that caught my watching eye was:\n\nprivate static byte[] MULTIPART_CHARS = (\"-_1234567890abcdefghijklmnopqrstuvwxyz\"\n        + \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").getBytes();\n\nMake sure to specify the encoding here or it won't work as intended on Z/OS\nwhere they use EBCDIC.\n\nhave a nice day",
            "date": "2004-09-29T14:15:37.000+0000",
            "id": 9
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Looks cool to me (system vs. ASCII charset issue aside)\n\nOleg",
            "date": "2004-09-30T03:49:49.000+0000",
            "id": 10
        },
        {
            "author": "Michael Becke",
            "body": "Thanks for the feedback Odi, Oleg.  I've applied this patch after fixing the encoding problem and \nadding a few docs.  The use of a serial number in the boundary has been left out for now, but can be \neasily added in the future.  Also, a multipart tutorial using the new entity still needs to be written.  I'll \nleave this bug open until those items are resolved.\n\nMike",
            "date": "2004-10-06T10:45:10.000+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I think we should close this one. Multipart tutorial would be nice but we can\nlive without it\n\nOleg",
            "date": "2005-10-20T06:09:31.000+0000",
            "id": 12
        },
        {
            "author": "Michael Becke",
            "body": "I agree.  It's certainly not a release blocker.\n\nMike",
            "date": "2005-10-20T06:16:21.000+0000",
            "id": 13
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Multipart posts are currently handled via a separate post method, the MultipartPostMethod.  This \nseparate method is unnecessary given the new RequestEntity mechanism.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-382",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Move multipart request to a new RequestEntity type",
    "systemSpecification": true,
    "version": "3.0 Alpha 2"
}