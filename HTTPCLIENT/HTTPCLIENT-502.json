{
    "comments": [
        {
            "author": "Jean-Marie White",
            "body": "Created an attachment (id=16506)\npatch\n",
            "date": "2005-09-24T08:15:30.000+0000",
            "id": 0
        },
        {
            "author": "Roland Weber",
            "body": "An individual connection is not designed to be thread safe. The\nMultiThreadedConnectionManager is a thread safe way to get a\nconnection, but the connection is only used by a single thread\nuntil it is returned to the connection manager. But since we have\na simple fix, I don't see why we shouldn't include it.\n\ncheers,\n  Roland",
            "date": "2005-09-24T14:52:06.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "(In reply to comment #2)\n> An individual connection is not designed to be thread safe. The\n> MultiThreadedConnectionManager is a thread safe way to get a\n> connection, but the connection is only used by a single thread\n> until it is returned to the connection manager. \n\nTrue. There's one exception to this rule, though. HttpConnection#close() is\ncalled by HttpMethod#abort(), which in its turn can be called from a different\nthread. \n\nThe fix looks reasonable to me\n\nOleg",
            "date": "2005-09-24T17:54:35.000+0000",
            "id": 2
        },
        {
            "author": "Michael Becke",
            "body": "Fine with me.\n\nMike",
            "date": "2005-09-24T23:08:35.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch checked in\n\nOleg",
            "date": "2005-09-27T02:48:17.000+0000",
            "id": 4
        }
    ],
    "component": "HttpClient (classic)",
    "description": "The HttpConnection.java class contains an isOpen boolean used to track the state\nof the connection (opened or closed).  The problem is that in the\ncloseSocketAndStreams(), the flag is only flipped at the end of the\nunsynchronized method (after resources have been released) which causes a\nconcurrency issue in flushRequestOutputStream() where the flag is checked first\nand the the outputStream is accessed.\n\nI'm providing a patch for this problem.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-502",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "HttpConnection isOpen flag concurrency problem",
    "systemSpecification": true,
    "version": "3.0 RC3"
}