{
    "comments": [
        {
            "author": "Xiaowei Jiang",
            "body": "The reason is a typo in the code:\n\nHttpMethodBase line 526\n\nif(location.getValue().startsWith(\"/\"))\n\nshould be replaced by \n\nif(!location.getValue().startsWith(\"/\"))\n\nThe handling of relative v.s. absolute URL are completely messed up here.\n",
            "date": "2002-02-22T10:19:08.000+0000",
            "id": 0
        },
        {
            "author": "rwaldhof",
            "body": "\n\n*** This bug has been marked as a duplicate of 5870 ***",
            "date": "2002-02-25T23:16:51.000+0000",
            "id": 1
        },
        {
            "author": "rwaldhof",
            "body": "The indicated behavior is accurate according to the HTTP specification, \nbut many browsers (including Netscape, Mozilla and MSIE) will do the obvious \nand allow such relative headers.  At least some builds of the Lynx browser will \nalso complain in these cases, and probably other browsers as well, so you may \nwant to consider addressing the problem within the web app/server.\n\nBut since following relative redirects is a fairly common behavior, and the \nappropriate action to take is pretty clear, we should probably just add (at \nleast conditional) support for this to either HTTP Client.\n\nFixed in rev. 1.24 of HttpMethodBase.  Nightly builds \non/after 15 Jan should follow relative Location headers in the reasonable way.",
            "date": "2002-02-25T23:19:10.000+0000",
            "id": 2
        },
        {
            "author": "rwaldhof",
            "body": "(The other bug is the duplicate.)",
            "date": "2002-02-25T23:23:19.000+0000",
            "id": 3
        },
        {
            "author": "rwaldhof",
            "body": "*** HTTPCLIENT-6 has been marked as a duplicate of this bug. ***",
            "date": "2002-02-25T23:24:41.000+0000",
            "id": 4
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Http redirect is not handled correctly if the location header doesn't have a \nprotocol, e.g.:\n\nLocation: web/tbghome.nsf/pages/index\n\na java.net.MalformedURLException is throw in this case. The correct behavior is \nto inherit the protocol from current URL.\n\nThe relevant code is in HttpMethodBase.execute()",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-15",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Critical",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "redirect not handled correctly if location header doesn't have a protocol",
    "systemSpecification": true,
    "version": ""
}