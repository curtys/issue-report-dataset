{
    "comments": [
        {
            "author": "Bin Chen",
            "body": "Created an attachment (id=5952)\nChanged SSLProtocolSocketFactory.java\n",
            "date": "2003-04-22T22:15:14.000+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "This is not quite correct. Please refer to the following sample for \ninstructions on how to provide a custom SSL socket factory\n\nhttp://cvs.apache.org/viewcvs/jakarta-\ncommons/httpclient/src/contrib/org/apache/commons/httpclient/contrib/ssl/\n\nOleg",
            "date": "2003-04-22T22:20:20.000+0000",
            "id": 1
        },
        {
            "author": "Ralf Hauser",
            "body": "see also HTTPCLIENT-498",
            "date": "2005-09-14T04:21:01.000+0000",
            "id": 2
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Oleg, I don't see what you mean in Comment #2. Please review this again.",
            "date": "2005-09-14T04:58:31.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "(In reply to comment #4)\n> Oleg, I don't see what you mean in Comment #2. Please review this again.\n\nOdi, my point was (and still is) that if one needs to customize any of the SSL\ncontext parameters, one should simply implement a custom\nSecureProtocolSocketFactory. There's no need to change the default\nSSLProtocolSocketFactory class.\n\nOleg",
            "date": "2005-09-14T05:20:11.000+0000",
            "id": 4
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "If it helps to avoid code duplication (comment #3) I would consider this issue.\nIt boils down to the question on which level to implement SSL security:\n * javax.net.ssl.SSLSocketFactory\n * org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory\n\nThe classes in contrib suggest to use our API. Ralf Hauser has shown that it is\npossible on the JDK API as well. I think it would be best to rewrite the\ncontributed code on top of the JDK API and build just a simple adapter layer for\nour API. That would encourage reuse.\n\nI know we are not actively supporting the contrib code. Maybe Ralf would like to\nwork on it?",
            "date": "2005-09-14T05:46:45.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Code contributions are always welcome and can be submitted by opening a new\nticket. I still hold this particular bug is invalid and should be marked as such\n\nOleg",
            "date": "2005-09-20T05:30:28.000+0000",
            "id": 6
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Description:\n\nThe SSLProtocolSocketFactory class had hard-\ncoded \"javax.net.ssl.SSLSocketFactory\" as the socket factory.  It does not \nsupport installation of other socket factory.\n\nProposed Fix:\n\nWe added a setDefaultSSLSocketFactory method to the SSLProtocolSocketFactory \nand modified the code to use the factory it it is set.  The code falls back on \nusing \"javax.net.ssl.SSLSocketFactory\" if a default is not set.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-194",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "httpClient does not support installation of different SSLSocketFactory",
    "systemSpecification": true,
    "version": "2.0 Beta 2"
}