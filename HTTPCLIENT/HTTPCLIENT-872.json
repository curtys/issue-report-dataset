{
    "comments": [
        {
            "author": "Gerald Turner",
            "body": "Patch which implements preemptive authentication",
            "date": "2009-09-03T20:54:34.912+0000",
            "id": 0
        },
        {
            "author": "Gerald Turner",
            "body": "Patch has a few caveats.\n\nI tried following the project style as best I could, but there were a few arbitrary decisions:\n\n\u2022 New parameter is AuthPNames.PREEMPTIVE_AUTHENTICATION with accessors in AuthParams and AuthParamBean.  I could have chosen ClientPNames since that's where HANDLE_AUTHENTICATION lives.\n\n\u2022 New PreemptiveAuth HttpRequestInterceptor class is in org.apache.http.impl.auth package.  It only works with BasicAuthScheme.  I don't believe there is any validity with trying to implement preemptive authentication for Digest and NTLM types since they include server generated 'nonce' values as part of the challenge.\n\n\u2022 Since the request interceptors are initialized by DefaultHttpClient.createHttpProcessor patch changes the code like so:\n\n    @Override\n    protected BasicHttpProcessor createHttpProcessor() {\n        BasicHttpProcessor httpproc = new BasicHttpProcessor();\n        httpproc.addInterceptor(new RequestDefaultHeaders());\n        // Required protocol interceptors\n        httpproc.addInterceptor(new RequestContent());\n        httpproc.addInterceptor(new RequestTargetHost());\n        // Recommended protocol interceptors\n        httpproc.addInterceptor(new RequestClientConnControl());\n        httpproc.addInterceptor(new RequestUserAgent());\n        httpproc.addInterceptor(new RequestExpectContinue());\n        // HTTP state management interceptors\n        httpproc.addInterceptor(new RequestAddCookies());\n        httpproc.addInterceptor(new ResponseProcessCookies());\n        // HTTP authentication interceptors\n        if (AuthParams.getPreemptiveAuthentication(getParams()))\n            httpproc.addInterceptor(new PreemptiveAuth());\n        httpproc.addInterceptor(new RequestTargetAuthentication());\n        httpproc.addInterceptor(new RequestProxyAuthentication());\n        return httpproc;\n    }\n\n...there is only one other method createXXX method which peeks at getParams(), createClientConnectionManager, so it appears to follow the same style.\n\n\u2022 I added a testPreemptiveAuthentication case to TestClientAuthentication.",
            "date": "2009-09-03T21:07:06.736+0000",
            "id": 1
        },
        {
            "author": "Gerald Turner",
            "body": "Hey Oleg, before you commit this patch, please note that I put an incorrect \"@since 4.0 + 1\" in the javadoc for PreemptiveAuth, probably should be \"@since 4.1.0\", eh?",
            "date": "2009-09-03T21:20:35.108+0000",
            "id": 2
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Gerald,\n\nThis one is going to be a difficult one. I think we should approach the problem in several incremental steps. Can we start off by implementing interceptors for caching Basic and Digest auth states in order to avoid having to re-authenticate subsequent requests that share the same execution context? Something along the line of this example:\n\nhttp://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/httpclient/src/examples/org/apache/http/examples/client/ClientPreemptiveDigestAuthentication.java\n\nOnce we have that, we can think about adding a mechanism for preemtive initialization of the Basic scheme.\n\nCheers\n\nOleg ",
            "date": "2009-09-03T21:55:33.323+0000",
            "id": 3
        },
        {
            "author": "Gerald Turner",
            "body": "I see what you mean \u2014 ran some tests and it's apparent that reused connections keep repeating the authentication handshake, need to cache the Authorization header, worthy of a separate JIRA, yeah?  Digest is more complicated since it'll need to increment the \"nc\" value and generate a new \"cnonce\" each subsequent request.  I have no idea about NTLM.\n\nWith preemptive authentication, do you believe that the \"nonce\" can be pre-seeded?  Maybe some servers can be tricked, but that doesn't seem like the way the protocol was intended.",
            "date": "2009-09-04T00:46:58.479+0000",
            "id": 4
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "> need to cache the Authorization header, worthy of a separate JIRA, yeah?\n\nI think it might as easy as just caching AuthScheme instance. This looks like a related issue to me, but feel free to open a separate JIRA for it.\n\n> With preemptive authentication, do you believe that the \"nonce\" can be pre-seeded? Maybe some servers can be tricked, but that doesn't \n> seem like the way the protocol was intended.\n\nIt is certainly feasible, though a bad idea from the security standpoint. However, some people did express interest in having such a possibility. Anyways, reusing the \"nonce\" between requests within a session does seem reasonable.\n\nOleg\n\n",
            "date": "2009-09-04T08:59:59.103+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "* HttpClient can now persist authentication data between request executions as long as they share the same execution context. \n* It has also become much easier to make HttpClient authenticate preemptively by pre-populating authentication data cache\n\nCompare old code (4.0):\nhttp://svn.apache.org/repos/asf/httpcomponents/httpclient/branches/4.0.x/httpclient/src/examples/org/apache/http/examples/client/ClientPreemptiveBasicAuthentication.java\nhttp://svn.apache.org/repos/asf/httpcomponents/httpclient/branches/4.0.x/httpclient/src/examples/org/apache/http/examples/client/ClientPreemptiveDigestAuthentication.java\n\nwith new one (4.1):\nhttp://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/httpclient/src/examples/org/apache/http/examples/client/ClientPreemptiveBasicAuthentication.java\nhttp://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk/httpclient/src/examples/org/apache/http/examples/client/ClientPreemptiveDigestAuthentication.java\n\nPlease review / test / give feedback",
            "date": "2009-11-18T21:15:50.554+0000",
            "id": 6
        },
        {
            "author": "Asankha C. Perera",
            "body": "This is excellent.. the new example looks very elegant and is much easier to use",
            "date": "2009-11-19T05:52:42.670+0000",
            "id": 7
        }
    ],
    "component": "HttpClient (classic)",
    "description": "Wishlist request for preemptive authentication to be included in the API, like HttpClient 3.x had.  There is an example ClientPreemptiveBasicAuthentication.java that uses HttpRequestInterceptor which I had adapted to my application and it works fine.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-872",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Add preemptive authentication",
    "systemSpecification": true,
    "version": "4.0 Final"
}