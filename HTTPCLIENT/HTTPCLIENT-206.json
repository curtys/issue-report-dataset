{
    "comments": [
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=7366)\nPatch (take 1)\n",
            "date": "2003-07-18T15:55:35.000+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I tried to be as little intrusive into Sing-Su's stuff as possible. Please let \nme know if there are any objections.\n\nOleg",
            "date": "2003-07-18T15:57:35.000+0000",
            "id": 1
        },
        {
            "author": "Michael Becke",
            "body": "I think these are good changes.  We should probably also change the URI(URI, String) constructor \nto boot.  I think we might also want to create some tests for parsing unescaped URIs.  I have no \nidea how well this functionality works.\n\nMike",
            "date": "2003-07-18T19:36:43.000+0000",
            "id": 2
        },
        {
            "author": "Michael Becke",
            "body": "Actually, I guess all of the constructors should be changed to add a boolean flag.\n\nMike",
            "date": "2003-07-18T19:38:28.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Good point. I'll revise the remaining URI constructors. \n\nAs to test cases, I am afraid I do not possess the required detailed knowledge \nof the URI spec. Sung-Gu does not do test cases for free. So, I really do not \nknow.\n\nOleg",
            "date": "2003-07-18T20:05:03.000+0000",
            "id": 4
        },
        {
            "author": "Michael Becke",
            "body": "I will put some more test cases on my todo list.\n\nMike",
            "date": "2003-07-18T20:36:35.000+0000",
            "id": 5
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=7374)\nPatch (take 2)\n",
            "date": "2003-07-18T22:13:45.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I guess it was bit more that I bargained for. I really have no idea whether \nthose 'component' URI constructors expect escaped or unescaped strings as \ninput. I tend to lean toward just letting them be for the moment.\n\nOleg",
            "date": "2003-07-18T22:14:18.000+0000",
            "id": 7
        },
        {
            "author": "Laura Werner",
            "body": "I'm not totally sure about deprecating all constructors without the boolean\nflag.  Should there be a plain old URI(String) constructor that mirrors the\nsemantics of java.net.URL's constructor?  It would add convenience but possibly\nalso add confusion.  I don't have a strong feeling one way or the other but\nthought I'd throw the idea out there.",
            "date": "2003-07-19T01:51:13.000+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I find that URI(String) constructor is too ambiguous. Should the URI character\nsequence be assumed to be escaped or per default or the other way around? I just\ndo not know. I do not mind leaving a plain URI(String) constructor undeprecated\nas long as we all agree on a reasonable default.\n\nOleg",
            "date": "2003-07-19T05:10:16.000+0000",
            "id": 9
        },
        {
            "author": "Laura Werner",
            "body": "I just looked up java.net.URL and java.net.URI (in JDK 1.4).  java.net.URI's\nsingle-String constructor expects the argument to be already-escaped.  The\nJavaDoc for java.net.URL isn't explicit on this, but I know that it doesn't do\nautomatic escaping for you.  So if we keep a single-argument constructor in\nHttpClient, I think it should expect an escaped string.\n\nThat's backwards from what I remembered before I looked it up, which shows how\nconfusing this is (or how tired I am today).",
            "date": "2003-07-19T05:32:28.000+0000",
            "id": 10
        },
        {
            "author": "Michael Becke",
            "body": "I agree with Laura on this one.  I see no reason to remove the String only constructors as long as \nthey are well documented.  They all currently assume the Strings are not escaped.  I think we \nshould keep this default behavior.\n\nMike",
            "date": "2003-07-19T05:33:34.000+0000",
            "id": 11
        },
        {
            "author": "Eric Johnson",
            "body": "Which just goes to show how confusing this is - Laura just said to assume they\nwere already escaped, and Mike just said they should act as they currently do -\nnot escaped.\n\nFor the same reason that String.getBytes() is dangerous, my vote would be to\nforce the caller to explicitly indicate which they want.  They would *expect* a\nconstructor that takes one String, so they won't look up which one it is until\nit bites them with an unexpected result.  I'd say lets make it easier for our\nusers by forcing them to indicate which it is.",
            "date": "2003-07-19T05:44:56.000+0000",
            "id": 12
        },
        {
            "author": "Laura Werner",
            "body": "Just to make things more confusing, here's what the JavaDoc for java.net.URI says:\n\n\"The single-argument constructor requires any illegal characters in its argument\nto be quoted and preserves any escaped octets and other characters that are present.\n\nThe multi-argument constructors quote illegal characters as required by the\ncomponents in which they appear. The percent character ('%') is always quoted by\nthese constructors. Any other characters are preserved.\"\n\nThat clears things up, doesn't it?  I suspect the single-argument behavior is\nthere for compatibility with java.net.URL.\n\nAt some point we're going to have to decide how (or whether) HttpClient\ninteroperates with java.net.URI.  (The APIs are fairly similar.)  Until then,\nI'm fine with whatever we do here.\n",
            "date": "2003-07-19T05:56:18.000+0000",
            "id": 13
        },
        {
            "author": "Michael Becke",
            "body": "Well, in the face of ambiguity I guess we should try to be as specific as possible.  Normally I would \nkeep the String constructor but this seems to be a special case.  Forcing a choice with the boolean \nis the safest way to go.\n\nMike",
            "date": "2003-07-19T06:25:13.000+0000",
            "id": 14
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I agree. I'll commit the patch for now. \n\nAnyways, we all know that URI class will require quite a bit of attention in the\nfuture. So, plain string constructor can always be reinstated, should we change\nour mind\n\nOleg",
            "date": "2003-07-19T16:42:57.000+0000",
            "id": 15
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed.\n\nOleg",
            "date": "2003-07-19T16:45:18.000+0000",
            "id": 16
        }
    ],
    "component": "HttpClient (classic)",
    "description": "1. Currently there's not way to pass an escaped string as a parameter to URI\nclass. As a result the url parameter in HttpMethodBase#HttpMethodBase(String)\nconstructor gets converted into an array of char just to be converted back to\nstring in URI contructor called in that method. \n\n2. The overall design of URI class contructors does not appear very coherent (at\nleast to me)",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-206",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "URI class constructors need revision, optimization",
    "systemSpecification": false,
    "version": "2.0 Alpha 3"
}