{
    "comments": [
        {
            "author": "sam",
            "body": "Doh, might want to limit maximum  size of stringValue \nthat would get displayed without being truncated.\n",
            "date": "2004-04-11T22:32:25.000+0000",
            "id": 0
        },
        {
            "author": "Daniel Naber",
            "body": "I agree that the output should be improved. Also, termVector is currently \nmissing. I attach a patch that moves away from the Text/UnStored/Keyword stuff \netc and explicitly prints indexed, stored, tokenized, termVector. \n ",
            "date": "2004-07-12T01:18:53.000+0000",
            "id": 1
        },
        {
            "author": "Daniel Naber",
            "body": "Created an attachment (id=12078)\npatch to improve toString()\n",
            "date": "2004-07-12T01:19:44.000+0000",
            "id": 2
        },
        {
            "author": "Daniel Naber",
            "body": "I just committed my patch. The information given by toString() is now more \nverbose and explicit, like \"indexed, tokenized\". ",
            "date": "2004-08-11T04:39:16.000+0000",
            "id": 3
        }
    ],
    "component": "core/index",
    "description": "org.apache.lucene.document.Field.toString defaults to using Object.toString\nfor some sensible fields. e.g. !isStored && isIndexed && !isTokenized\nfields. This makes debugging slightly more difficult than is really needed.\n\nPlease find pasted below possible alternative:\n\n /** Prints a Field for human consumption. */\n  public final String toString() {\n  \tStringBuffer result = new StringBuffer();\n  \tif (isStored) {\n  \t\tif (isIndexed) {\n  \t\t\tif (isTokenized) {\n  \t\t\t\tresult.append(\"Text\");\n  \t\t\t} else {\n  \t\t\t\tresult.append(\"Keyword\");\n  \t\t\t}\n  \t\t} else {\n\t\t\t// XXX warn on tokenized not indexed?\n  \t\t\tresult.append(\"Unindexed\");\n  \t\t}\n  \t} else {\n  \t\tif (isIndexed) {\n  \t\t\tif (isTokenized) {\n  \t\t\t\tresult.append(\"Unstored\");\n  \t\t\t} else {\n  \t\t\t\tresult.append(\"UnstoredUntokenized\");\n  \t\t\t}\n  \t\t} else {\n\t\t\tresult.append(\"Nonsense_UnstoredUnindexed\");\n  \t\t}\n  \t}\n  \t\n  \tresult.append('<');\n  \tresult.append(name);\n  \tresult.append(':');\n  \tif (readerValue != null) {\n  \t\tresult.append(readerValue.toString());\n  \t} else {\n  \t\tresult.append(stringValue);\n  \t}\n  \tresult.append('>');\n  \treturn result.toString();\n  }\n\n\nNB Im working against CVS HEAD",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-214",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] Field.toString could be more helpful",
    "systemSpecification": true,
    "version": ""
}