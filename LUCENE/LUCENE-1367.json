{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Makes sense, this is simple.  I'll commit shortly.",
            "date": "2008-08-28T11:36:04.563+0000",
            "id": 0
        },
        {
            "author": "Shalin Shekhar Mangar",
            "body": "Thanks Michael!",
            "date": "2008-08-28T11:39:19.057+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Thank you Shalin!",
            "date": "2008-08-28T11:53:57.507+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "I wish to add a IndexCommit.isDeleted() method.\n\nThe use-case is that Solr will now support configurable IndexDeletionPolicy (SOLR-617). For the new replication (SOLR-561) to work, we need access to a list of IndexCommit instances which haven't been deleted yet. I can wrap the user specified IndexDeletionPolicy but since the IndexCommit does not have a isDeleted method, I may store a reference to an IndexCommit on which delete() has been called by the deletion policy. I can wrap the IndexCommit objects too just for having a isDeleted() method so a workaround exists. Not a big pain but if it can be managed on the lucene side easily, I'll appreciate it. It would save me from writing some delegate code.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1367",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add a isDeleted method to IndexCommit",
    "systemSpecification": true,
    "version": "2.4"
}