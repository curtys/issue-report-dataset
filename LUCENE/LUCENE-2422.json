{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Mike - this patch is against an old revision? I'm up to the latest and IndexInput/Output don't include any field, just abstract methods. This seems to be relevant to 3.0.1 (and before?) If so, where does this need to be fixed post 3.0.1?",
            "date": "2010-04-30T04:23:47.769+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Mike - this patch is against an old revision? \n\nYes, sorry, the patch applies to 2.9.x.  I think we should fix it in 2.9.x (and all branches after -- 3.0, trunk).\n\nIn trunk these reused byte[] have been moved to DataInput/Output.",
            "date": "2010-04-30T09:30:39.619+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "IndexInput now holds a private \"byte[] bytes\", which it re-uses for reading strings.  Likewise, IndexOutput holds a UTF8Result (which holds \"byte[] bytes\"), re-used for writing strings.\n\nThese are both dangerous, since on reading or writing immense strings, we never free this storage.\n\nWe don't use read/writeString in very perf sensitive parts of the code, so, I think we should not reuse the byte[] at all.\n\nI think this is likely the cause of the recent \"IndexWriter and memory usage\" thread, started by Ross Woolf on java-user@.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2422",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "don't reuse byte[] in IndexInput/Output for read/writeString",
    "systemSpecification": true,
    "version": ""
}