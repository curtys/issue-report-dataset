{
    "comments": [
        {
            "author": "Andrew Duffy",
            "body": "Another problem with the simple fragmenters is that they can produce a very short fragment at the end of the stream. The attached diff from the trunk SimpleSpanFragmenter.java remembers how long the text being fragmented is and doesn't make a fragment break if the token is less than half a fragment away from the end of the text. SimpleFragmenter could easily be changed in the same way.",
            "date": "2008-09-17T13:03:41.522+0000",
            "id": 0
        },
        {
            "author": "Andrew Duffy",
            "body": "I've attached another diff, again from the trunk version. There is a slight optimisation - the span loop is broken early when a span is found at the current position.\n\nThe main change is to start(String), though. Previously, it set currentPosition to 0, meaning every position was off by one and spans were not matched. It now starts currentPosition at -1 so the first token position ends up 0 as it should.",
            "date": "2008-09-17T14:40:36.360+0000",
            "id": 1
        },
        {
            "author": "Mark Miller",
            "body": "Thanks Andrew!",
            "date": "2008-10-06T16:01:52.885+0000",
            "id": 2
        },
        {
            "author": "Mark Miller",
            "body": "Thanks Andrew.",
            "date": "2008-11-13T00:02:21.773+0000",
            "id": 3
        }
    ],
    "component": "modules/highlighter",
    "description": "Line 74 of SimpleSpanFragmenter returns true when the current token is the start of a hit on a span or phrase, thus starting a new fragment. Two problems occur:\n\n- The previous fragment may be very short, but if it contains a hit it will be combined with the new fragment later so this disappears.\n- If the token is close to a natural fragment boundary the new fragment will end up very short; possibly even as short as just the span or phrase itself. This is the result of creating a new fragment without incrementing currentNumFrags.\n\nTo fix, remove or comment out line 74. The result is that fragments average to the fragment size unless a span or phrase hit is towards the end of the fragment - that fragment is made larger and the following fragment shorter to accommodate the hit.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1389",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "SimpleSpanFragmenter can create very short fragments",
    "systemSpecification": true,
    "version": "2.3.2"
}