{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch.\n\nI changed CMS.sync to .join() to any still-alive threads, and changed MergeThread to not remove itself from mergeThreads but rather updateMergeThread to prune any dead threads.",
            "date": "2010-12-18T21:58:27.028+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "This is causing deadlock in some tests!",
            "date": "2010-12-19T17:07:10.035+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Take 2!",
            "date": "2010-12-20T10:41:18.720+0000",
            "id": 2
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:49:52.196+0000",
            "id": 3
        }
    ],
    "component": "",
    "description": "When you close IW, it waits for (or aborts and then waits for) all running merges.\n\nHowever, it's wait criteria is wrong -- it waits for the threads to be done w/ their merges, not for the threads to actually die.\n\nCMS already has a sync() method, to wait for running threads, which we can call from CMS.close.  However it has a thread hazard because a MergeThread removes itself from mergeThreads before it actually exits.  So sync() is able to return even while a merge thread is still running.\n\nThis was uncovered by LUCENE-2819 on the test case TestCustomScoreQuery.testCustomExternalQuery, though I expect other test cases would show it.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2820",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "CMS fails to cleanly stop threads",
    "systemSpecification": true,
    "version": ""
}