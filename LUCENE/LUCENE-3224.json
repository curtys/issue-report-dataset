{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "also i think we want to assert all bounds checks in here, maybe have a checkBounds(int limit) called only from assert that throws \"read past EOF\".\n\nthis way we don't rely upon AIOOBE, we could be reading from slices and miss bugs in tests.\n",
            "date": "2011-06-21T17:05:25.910+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch.",
            "date": "2011-06-21T17:19:21.689+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "+1",
            "date": "2011-06-21T17:23:26.031+0000",
            "id": 2
        }
    ],
    "component": "",
    "description": "ByteArrayDataInput has a byte[] ctor, but it doesn't actually work (some things like readVint will work, others will fail due to asserts).\n\nThe problem is it doesnt set things like limit in the ctor... I think the ctor should call reset()\nMost code using this passes null to the ctor to initialize it, then uses reset(), instead they could just call ByteArrayInput(BytesRef.EMPTY_BYTES) if they want to do that.\nfinally, reset()'s limit looks like it should be offset + len",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3224",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "bugs in ByteArrayDataInput",
    "systemSpecification": true,
    "version": ""
}