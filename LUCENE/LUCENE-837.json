{
    "comments": [
        {
            "author": "Grant Ingersoll",
            "body": "The patch I have is slightly broader than just QueryMaker, as it also refactors some common code in the Search*TravTask.\n",
            "date": "2007-03-20T03:06:03.769+0000",
            "id": 0
        },
        {
            "author": "Grant Ingersoll",
            "body": "See changes.txt in contrib/benchmark.\n\nPatch applies in contrib/benchmark, NOT Lucene root!\n\nDoes some refactoring of QueryMaker implementations to share some common code and introduces AbstractQueryMaker as parent class.\n\nSearchTravRetTask now extends SearchTravTask.\n\nReadTask now implements traversalSize() method to allow us to specify number of hits to traverse (SearchTravTask now supports a command parameter).  This will allow us to simulate user scenario of traversing 10 docs at a time.\n\nAdded new FileBasedQueryMaker which allows for the specification of a file or resource containing a list of queries that can be parsed by the QP, assuming one per line.",
            "date": "2007-03-20T03:11:05.104+0000",
            "id": 1
        },
        {
            "author": "Doron Cohen",
            "body": "The changes looks good. \nI integrated in my changes:\n\n- Modified query-maker generation for read related tasks to make further read tasks addition simpler and safer.\n- Changed Taks' setParams() to throw UnsupportedOperationException if that task does not suppot command line param.\n- Improved javadoc to specify all properties command line params currently supported.\n- Refactored ReportTasks so that it is easy/possible now to create new report tasks.\n\nIf you feel comfortable with committng them together, that would be great. Or, if you prefer to commit yours first, I'll reintegrate mine later. The changes are supposed to allow you now to easily add new report tasks. \n\nI also modified the micro-standard.alg to use the new traverse params.\n(I didn't try the new file based query makers.)\n\nAttached file (benchmark-more-updates.patch) contains the changes from benchmark-updates.patch.",
            "date": "2007-03-20T10:09:16.220+0000",
            "id": 2
        },
        {
            "author": "Grant Ingersoll",
            "body": "committed revision 520890",
            "date": "2007-03-21T13:53:24.911+0000",
            "id": 3
        },
        {
            "author": "Grant Ingersoll",
            "body": "more updates coming shortly.  I will attach patch, but am also going to commit.",
            "date": "2007-03-23T03:42:19.424+0000",
            "id": 4
        },
        {
            "author": "Grant Ingersoll",
            "body": "Here's my changes.  Am going to commit shortly",
            "date": "2007-03-23T03:45:27.215+0000",
            "id": 5
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed field-selector-bench.patch on revision 521569",
            "date": "2007-03-23T03:49:01.979+0000",
            "id": 6
        },
        {
            "author": "Doron Cohen",
            "body": "Hi, I like the new field selector stuff.\n\nFew comments:\n- copyright notice missing in the new ***Selector class\n- The bytes storing in BasicDocMaker - perhaps better to extract the bytes in \n   BasicDocMaker, - just before the closing '}' of \n      if (docData.body!=null && docData.body.length()>0) {\n  just taking bdy.getBytes(\"UTF-8\").\n  This way this too would respect the doc size limitation parameter.\n  This would actually allow all doc makers to support this, and you can undo the changes to DocData and to ReutersDocMaker.\n  Hope I got it right?\n- Would you like to add the new task to list in TestPerfTasksParse, with no parameters and with some parameters?\n  (it should be anyhow parse-tested now automatically, but with no params.)\n- the meaning of the new reuters.doc.maker.store.bytes property is: also store the \n  entire doc content as a raw bytes field, right? (It was not clear to from the javadoc.)\n\nRegards,\nDoron",
            "date": "2007-03-23T05:43:57.486+0000",
            "id": 7
        },
        {
            "author": "Grant Ingersoll",
            "body": "Thanks.  Making the changes now.  I moved the bytes storage up to BasicDocMaker.java.  Added the copyright and am adding a test.\n\nWe may eventually want to store arbitrary bytes, too, but no need to now.\n\nI changed the property to be\ndoc.store.body.bytes which means to store the bytes of the body as a field.\n\nThe testing has already paid off.  I wasn't setting the params var correctly.\n\nCommitted",
            "date": "2007-03-23T13:14:07.010+0000",
            "id": 8
        },
        {
            "author": "Doron Cohen",
            "body": "I updated the docs to be clearer abut the records counting, and also list the new task and property in the package docs.\nCommitted.",
            "date": "2007-03-23T18:02:29.870+0000",
            "id": 9
        }
    ],
    "component": "modules/benchmark",
    "description": "Introduce an abstract QueryMaker implementation that shares much of the common code between the various QueryMaker implementations.\n\nAdd in a new QueryMaker for reading queries from a file that is specified in the properties.\n\nPatch shortly, and if no concerns, will commit tomorrow or Wed.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-837",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "contrib/benchmark QueryMaker and Task Refactorings",
    "systemSpecification": true,
    "version": ""
}