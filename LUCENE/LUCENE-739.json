{
    "comments": [
        {
            "author": "Yonik Seeley",
            "body": "+1, looks great Michael!",
            "date": "2006-12-07T18:13:18.000+0000",
            "id": 0
        },
        {
            "author": "Michael Busch",
            "body": "Thanks Yonik! Well then, let's commit it? ;-)",
            "date": "2006-12-08T00:41:59.000+0000",
            "id": 1
        },
        {
            "author": "Yonik Seeley",
            "body": "Thanks Michael, I just committed this.",
            "date": "2006-12-11T02:43:20.000+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "This patch makes two improvements to SegmentMerger.mergeNorms():\n\n1) When the SegmentMerger merges the norm values it allocates a new byte array to buffer the values for every field of every segment. The size of such an array equals the size of the corresponding segment, so if large segments are being merged, those arrays become very large, too.\nWe can easily reduce the number of array allocations by reusing a byte array to buffer the norm values that only grows, if a segment is larger than the previous one.\n\n2) Before a norm value is written it is checked if the corresponding document is deleted. If not, the norm is written using IndexOutput.writeByte(byte[]). This patch introduces an optimized case for segments that do not have any deleted docs. In this case the frequent call of IndexReader.isDeleted(int) can be avoided and the more efficient method IndexOutput.writeBytes(byte[], int) can be used.\n\n\nThis patch only changes the method SegmentMerger.mergeNorms(). All unit tests pass.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-739",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Performance improvement for SegmentMerger.mergeNorms()",
    "systemSpecification": true,
    "version": ""
}