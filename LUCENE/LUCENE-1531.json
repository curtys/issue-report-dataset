{
    "comments": [
        {
            "author": "Karl Wettin",
            "body": "Previous patch was messed up from cloning SpanTerm..",
            "date": "2009-01-30T01:51:12.347+0000",
            "id": 0
        },
        {
            "author": "Karl Wettin",
            "body": "Any objections to this patch? If not I'll pop in the trunk in a few days from now.",
            "date": "2009-02-04T05:09:00.491+0000",
            "id": 1
        },
        {
            "author": "Mark Harwood",
            "body": "Looks good to me. The only thing I would be tempted to add is a very brief description of the BoostingTermQuery in the DTD (i.e. explaining it's dependency on payloads as a differentiator). \nI know this duplicates some of the Javadocs but I have developers who refer to the generated XML syntax docs solely as an abstraction away from the underlying Java classes and on first-read it is not obvious that this tag requires at the least special index support.\n\nI will re-generate the HTML docs using DTDDoc later once I've added support for the new Trie-based queries/filters (Uwe, if you're reading this let me know if you think the Trie API has stabilised).\n\n",
            "date": "2009-02-04T15:12:56.840+0000",
            "id": 2
        },
        {
            "author": "Karl Wettin",
            "body": "Committed revision 742411",
            "date": "2009-02-09T11:51:06.163+0000",
            "id": 3
        }
    ],
    "component": "modules/other",
    "description": "I'm not 100% on this patch. \n\nBooleanTermQuery is a part of the spans family, but I generally use that class as a replacement for TermQuery.  Thus in the DTD I have stated that it can be a part of the root queries as well as a part of a span. \n\nHowever, SpanFooQueries xml elements are named <SpanFoo/> rather than <SpanFooQuery/>, I have however chosen to call it <BoostingTermQuery/>. It would be possible to set it up so it would be parsed as <SpanBoostingTerm/> when inside of a <SpanSomething>, but I just find that confusing.\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1531",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "contrib/xml-query-parser, BoostingTermQuery support",
    "systemSpecification": true,
    "version": "2.4"
}