{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Thanks Hardy for reporting that.\n\nBut I think this works exactly as documented? Note that the javadocs of advance() state \"*beyond* the current whose document number is *greater than or equal* to target\". Also, there's a note in the javadocs:\n\n{noformat}\n   * <b>NOTE:</b> when <code> target &le; current</code> implementations may opt \n   * not to advance beyond their current {@link #docID()}.\n{noformat}\n\nI think that the word 'beyond' is confusing here. Perhaps we can modify the javadocs to:\n\n\"Advances to the first document whose number is greater than or equal to target\"\n\nIf there are no objections, or better wording, I'll commit this later today, but only to 3.2/4.0 and not 3.0.2",
            "date": "2011-05-17T03:32:16.235+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "Patch with Javadocs fixes. I will commit it later today.",
            "date": "2011-05-17T03:57:54.238+0000",
            "id": 1
        },
        {
            "author": "Doron Cohen",
            "body": "Shai, with the modified text the NOTE on \"implementations freedom to not advance beyond in some situations\" becomes strange... I think that the original text stress the fact the \"real intended\" behavior is to do advance beyond current, just that for performance reasons the decision whether to advance beyond in some situations is left for implementation decision, and so, if caller provides a target which is not greater than current, it should be aware of this possibility. \n\nSo I think it is perhaps better to either not modify this at all, or at most, to add \"(see NOTE below)\" just after \"beyond\":\n\n{noformat}\n-   * Advances to the first beyond the current whose document number is greater\n+   * Advances to the first beyond (see NOTE below) the current whose document number is greater\n{noformat}\n\nThis would prevent the confusion I think?",
            "date": "2011-05-17T07:46:42.973+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Thanks Doron - I changed the javadocs as you suggest.\n\nCommitted revision 1104159 (3x).\nCommitted revision 1104167 (trunk).\n\nThanks Hardy for reporting that !",
            "date": "2011-05-17T11:36:48.896+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:11.331+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "Implementations of {{DocIdSetIterator}} behave differently when advanced is called. Taking the following test for {{OpenBitSet}}, {{DocIdBitSet}} and {{SortedVIntList}} only {{SortedVIntList}} passes the test:\n{code:title=org.apache.lucene.search.TestDocIdSet.java|borderStyle=solid}\n...\n\tpublic void testAdvanceWithOpenBitSet() throws IOException {\n\t\tDocIdSet idSet = new OpenBitSet( new long[] { 1121 }, 1 );  // bits 0, 5, 6, 10\n\t\tassertAdvance( idSet );\n\t}\n\n\tpublic void testAdvanceDocIdBitSet() throws IOException {\n\t\tBitSet bitSet = new BitSet();\n\t\tbitSet.set( 0 );\n\t\tbitSet.set( 5 );\n\t\tbitSet.set( 6 );\n\t\tbitSet.set( 10 );\n\t\tDocIdSet idSet = new DocIdBitSet(bitSet);\n\t\tassertAdvance( idSet );\n\t}\n\n\tpublic void testAdvanceWithSortedVIntList() throws IOException {\n\t\tDocIdSet idSet = new SortedVIntList( 0, 5, 6, 10 );\n\t\tassertAdvance( idSet );\n\t}\t\n\n\tprivate void assertAdvance(DocIdSet idSet) throws IOException {\n\t\tDocIdSetIterator iter = idSet.iterator();\n\t\tint docId = iter.nextDoc();\n\t\tassertEquals( \"First doc id should be 0\", 0, docId );\n\n\t\tdocId = iter.nextDoc();\n\t\tassertEquals( \"Second doc id should be 5\", 5, docId );\n\n\t\tdocId = iter.advance( 5 );\n\t\tassertEquals( \"Advancing iterator should return the next doc id\", 6, docId );\n\t}\n{code}\n\nThe javadoc for {{advance}} says:\n{quote}\nAdvances to the first *beyond* the current whose document number is greater than or equal to _target_.\n{quote}\nThis seems to indicate that {{SortedVIntList}} behaves correctly, whereas the other two don't. \nJust looking at the {{DocIdBitSet}} implementation advance is implemented as:\n{code}\nbitSet.nextSetBit(target);\n{code}\nwhere the docs of {{nextSetBit}} say:\n{quote}\nReturns the index of the first bit that is set to true that occurs *on or after* the specified starting index\n{quote}\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2736",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Wrong implementation of DocIdSetIterator.advance ",
    "systemSpecification": true,
    "version": "3.2, 4.0-ALPHA"
}