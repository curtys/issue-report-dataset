{
    "comments": [
        {
            "author": "Otis Gospodnetic",
            "body": "Changed in CVS, thanks.\nI don't have an environment multi-threaded environment suitable for testing this\nchange, to ensure it doesn't break when multiple-threads access FieldInfos. \nMaybe somebody else does?\nRegardless, it looks like there should be no threading issues, since the only\nusers of FieldInfos are classes that themselves ought to be thread-safe.",
            "date": "2004-07-13T21:22:32.000+0000",
            "id": 0
        },
        {
            "author": "Daniel Naber",
            "body": "*** Bug 31368 has been marked as a duplicate of this bug. ***",
            "date": "2004-09-23T02:29:44.000+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "I noticed that the class org.apache.lucene.index.FieldInfos uses private class\nmembers Vector byNumber and Hashtable byName, both of which are synchronized\nobjects, thus resulting in unessesary locks. \n\nBy changing the Vector byNumber to ArrayList byNumber, and Hashtable byName to\nHashMap byName, both are not synchronized objects, I was able to get 110%\nimprovement in performance (number of searches per second).\n\n\nHere is a sample of blocked thread\n\"Thread-32\" daemon prio=1 tid=0x082334c0 nid=0xa66 waiting for monitor entry\n[4f385000..4f38687c]\n        at java.util.Vector.elementAt(Vector.java:430)\n        - waiting to lock <0x452b93a8> (a java.util.Vector)\n        at org.apache.lucene.index.FieldInfos.fieldInfo(FieldInfos.java:155)\n        at org.apache.lucene.index.FieldInfos.fieldName(FieldInfos.java:151)\n        at\norg.apache.lucene.index.SegmentTermEnum.readTerm(SegmentTermEnum.java:149)\n        at org.apache.lucene.index.SegmentTermEnum.next(SegmentTermEnum.java:115)\n        at\norg.apache.lucene.index.TermInfosReader.scanEnum(TermInfosReader.java:143)\n        at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:137)\n        at org.apache.lucene.index.SegmentTermDocs.seek(SegmentTermDocs.java:51)\n        at org.apache.lucene.index.IndexReader.termDocs(IndexReader.java:364)\n        at org.apache.lucene.search.TermQuery$TermWeight.scorer(TermQuery.java:59)\n        at\norg.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:165)\n        at\norg.apache.lucene.search.BooleanQuery$BooleanWeight.scorer(BooleanQuery.java:165)\n        at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:154)\n        at\ngov.gsa.search.SearcherByPageAndSortedField.search(SearcherByPageAndSortedField.java:317)\n        at\ngov.gsa.search.SearcherByPageAndSortedField.search(SearcherByPageAndSortedField.java:203)\n        at\ngov.gsa.search.grants.SearchGrants.searchByPageAndSortedField(SearchGrants.java:308)\n        at\ngov.gsa.search.grants.SearchServlet.searchByIndex(SearchServlet.java:1541)\n        at gov.gsa.search.grants.SearchServlet.getResults(SearchServlet.java:1325)\n        at gov.gsa.search.grants.SearchServlet.doGet(SearchServlet.java:500)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)\n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)\n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:256)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardContext.invoke(StandardContext.java:2415)\n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:171)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:172)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)\n        at\norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)\n        at\norg.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:223)\n        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:261)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:360)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:604)\n        at\norg.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:562)\n        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:679)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:619)\n        at java.lang.Thread.run(Thread.java:534)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-242",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Lucene Search has poor cpu utilization on a 4-CPU machine",
    "systemSpecification": true,
    "version": "1.4"
}