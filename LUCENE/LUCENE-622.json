{
    "comments": [
        {
            "author": "Otis Gospodnetic",
            "body": "Here is the POM for Maven boys and girls who want lucene-core.\n\nStephen:\nWhat would the contrib POM look like?\nI don't think we'd have 1 POM, because each project in Lucene contrib is a separate project and a separate jar with its own dependencies.  But maybe one can construct a single POM for the whole Lucene contrib - I haven't touched Maven in a few years.\n",
            "date": "2007-04-04T22:53:31.241+0000",
            "id": 0
        },
        {
            "author": "Stephen Duncan Jr",
            "body": "Because they are separate projects & jars, they would each have their own POM. ",
            "date": "2007-04-04T23:18:54.724+0000",
            "id": 1
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Right, that's what I was trying to say.\nCan you provide POMs for contrib projects, or maybe just the ones that you use/need?\n",
            "date": "2007-04-04T23:23:20.917+0000",
            "id": 2
        },
        {
            "author": "Stephen Duncan Jr",
            "body": "I'm no longer doing any work with Lucene, and I'm not even sure which contrib project I wanted at the time I filed this request.  While I'm sure that having poms for the contrib releases would be helpful to many people using Maven, this is no longer something that's a priority for me.",
            "date": "2007-04-04T23:32:16.463+0000",
            "id": 3
        },
        {
            "author": "J\u00f6rg Hohwiller",
            "body": "pom for lucene-highlighter",
            "date": "2007-04-05T12:57:13.137+0000",
            "id": 4
        },
        {
            "author": "J\u00f6rg Hohwiller",
            "body": "patch for partial mavenization of lucene",
            "date": "2007-04-05T15:40:01.799+0000",
            "id": 5
        },
        {
            "author": "J\u00f6rg Hohwiller",
            "body": "If you apply this patch to svn (http://svn.apache.org/repos/asf/lucene/java/trunk), you can easily use maven for building and deploying artifacts for the maven repository.\nI did NOT modify your structure in any way because it seems the majority of the lucene community is not interested in maven and wants to keep going with ant. So all the patch does is adding some pom.xml files. Further I only added POMs for toplevel, core, demo and highlighter.\nFrom the highlighter POM you can easily create the POMs for the other contribs via cut&past and add them to the toplevel pom (contrib/pom.xml).\nIf you need further assistance do NOT hesitate to ask me.\n\nSomehow the tests do NOT work, when I build with maven. Maybe they are currently broken. If you want to build (package), install or deploy anyways call maven (mvn) with the option \"-Dmaven.test.skip=true\". E.g.:\nmvn install -Dmaven.test.skip=true\n\nI did not spent the time to dig into the problem with the tests. If you are loading resources from the classpath please consider this:\nhttp://jira.codehaus.org/browse/SUREFIRE-106",
            "date": "2007-04-05T15:51:18.438+0000",
            "id": 6
        },
        {
            "author": "Larry Hamel",
            "body": "Please update maven repo for 2.1",
            "date": "2007-04-06T18:40:38.162+0000",
            "id": 7
        },
        {
            "author": "Sami Siren",
            "body": "Attached is a patch to existing ant based build system to generate directory tree of maven artifacts to be deployed to maven2 repository. poms are organized inside one dir instead of polluting source tree and they poms contain only minimal amount of information so they can not actually be used to build lucene-java.\n\nartifacts still need to be signed by hand before pushing them to repository, md5 and sha1 checksums are calculated.\n",
            "date": "2007-06-02T10:30:53.270+0000",
            "id": 8
        },
        {
            "author": "Sami Siren",
            "body": "I here by grant license to ASF for inclusion in ASF works (as per the Apache Software License \u00a75) \n(a.k.a doh! forgot to check the box) ",
            "date": "2007-06-02T10:33:27.961+0000",
            "id": 9
        },
        {
            "author": "Karl Wettin",
            "body": "This is my attempt on Mavifying Lucene:\n\ntar xvfz lucene-maven.tar.gz\ncd lucene-maven\nfind ./ -type d -name \\.svn -execdir svn update {}  \\;\nmvn install\n\nA top level POM, and one project per contrib-module. There are two or three that is commented out due to not finding public repositories for the dependencies. There are comments in pom.xml:s\n\nDue to some dependency cross references (at least I think so) I ended up with seperating tests to a project by it self:\n\nlucene-core\nlucene-demo, depends on core\nlucene-tests, depends on demo and core\n\nExcept for that, I think it's all pretty much clear.\n\nI have not spent any time with extensive ant-script convertion. This is for building, testing and deploying, not running benchmarker from CLI, et c.",
            "date": "2007-06-03T04:09:46.387+0000",
            "id": 10
        },
        {
            "author": "Hoss Man",
            "body": "i just skimmed Sami's patch (did not test it) ... i can't help but think that the enumerated list of all contribs in the \"generate-maven-artifacts\" task seems like it will easily become just as hard to maintain as the related list in the javadocs macro.  it seems like a more maintainable approach would be to...\n  1) put the maven files for each contrib in the respective contrib dirs.\n  2) put this new m2-deploy macro in common-build.xml\n  3) add a \"dist-maven\" task to contrib/contrib-build.xml where it can be inherited by each contrib\n      and calls m2-deploy using hte project name as the artifactId\n  4) change generate-maven-artifacts to use contrib-crawl to take care of the pom's for the contribs.\n \nsome other questions: \n  a) it doesn't seem like all contribs are accounted for ... were some excluded intentionally?\n  b) if we're going to start officially releasing \"POMs\" for lucene and the contribs, we should probably have a way of validating they are correct ... is there an easy mechanism for doing that?  (my worry is that overtime a contrib changes, it's POM doesn't get updated, and we have a \"release\" in which the maven artifacts are incorrect (which in my opinion is worse then not having any maven artifacts at all)\n\nfinal minor note: using <copy> immediately followed by a <replace> on the file that was just copied can be done more cleanly using a <filterset> on the <copy>\n\n\n",
            "date": "2007-06-04T02:08:48.936+0000",
            "id": 11
        },
        {
            "author": "Grant Ingersoll",
            "body": "How does Karl's patch compare to Sami's?  I haven't looked in-depth at either yet. I will try to at some point.  Karl seems to be saying it has poms for each of the contribs, etc. which is probably easier to maintain.  This whole bolting on of Maven to ANT just seems a little weird to me.\n\nFYI, Hoss, the way to validate the POM is by using Maven!  :-)  It does it for you.\n\nI am beginning to think we should try having a parallel build for a little bit in order for people to test out the different approaches.  I think the committers doing releases will see the biggest win from Maven, but I am not 100% sure.  If Karl's patch achieves this, then I think we could use it as the basis for doing the evaluation.",
            "date": "2007-06-04T15:05:16.600+0000",
            "id": 12
        },
        {
            "author": "Hoss Man",
            "body": "I didn't review Karl's attachemnt (the nice thing about patch's is that you can read them easily in a web browser, tgz files need to be downloaded and uncompressed)\n\n\"This whole bolting on of Maven to ANT just seems a little weird to me\" ... that's kind of funny Grant, it was your suggestion that prompted the approach in Sami's patch...\n\nhttp://www.nabble.com/Maven-artifacts-for-Lucene.*-tf3551707.html#a9941458\n  \"Couldn't we just add various ANT targets that package the jars per\n    the Maven way, and even copy them to the appropriate places?  I\n    wonder how hard it would be to have ANT output the POM and \n    create Maven Jars.\"\n\nPersonally I'm much more in favor of baby steps (add an ant task to prepare the maven artifacts) then completely throwing out the build system and starting over from scratch with maven.  ... if we have maven artifacts and people really start using them, then it might make sense to revist the \"migrate to maven\" issue ... for now though it seems like everyone is comfortable with ant, and not every one knows/understands maven.",
            "date": "2007-06-04T18:20:56.398+0000",
            "id": 13
        },
        {
            "author": "Sami Siren",
            "body": "thanks Hoss for the feedback in general. I am now a bit confused - is there a consensus how to proceed with this (in other words should I change things as suggested or are we going to take the maven approach to this?)\n\n> some other questions:\n>  a) it doesn't seem like all contribs are accounted for ... were some excluded intentionally?\n\nSome were excluded intentionally as their dependencies are not available in public repos (gdata, db), some were just excluded(javascript, lucli, ant)\n\n> (my worry is that overtime a contrib\n> changes, it's POM doesn't get updated, and we have a \"release\" in which the maven artifacts are incorrect (which\n> in my opinion is worse then not having any maven artifacts at all)\n\nfor 1.9.1 the jar itself was faulty http://jira.codehaus.org/browse/MEV-449\n",
            "date": "2007-06-04T19:32:18.976+0000",
            "id": 14
        },
        {
            "author": "Michael Busch",
            "body": "> Personally I'm much more in favor of baby steps (add an ant task to prepare \n> the maven artifacts) then completely throwing out the build system and starting \n> over from scratch with maven.\n\nI agree with Hoss here. I *strongly* discourage from switching from ant to maven\nnow before 2.2 is out. I would like to keep the ant build for now and add a target\nthat generates the pom files for the maven upload.\n\nAfter 2.2 is out though we should discuss again whether is makes sense to switch \nto maven. Then we would have enough time to thoroughly test the new build system\nbefore the next release.",
            "date": "2007-06-04T19:45:42.544+0000",
            "id": 15
        },
        {
            "author": "Karl Wettin",
            "body": "Grant Ingersoll - [04/Jun/07 08:05 AM ]\n> How does Karl's patch compare to Sami's?\n\nI didn't look in to Samis, I just cleaned up mine and poped it in here as an alternative when I saw the action.\n\nHis deploys jars built by Ant to a Maven repository. Mine is a bunch of POM skeletons that gathers the code from the Ant-structured SVN trunk so that one can use Maven to build, test and deploy (and itegrate with my development environment and all the other things it does for me).\n\nThere are most probably some problem with some test. Mavens test plugin require a bit of configuration to avoid all automagic things it does. The lucene-tests/pom.xml contains comments on that.\n\nlucene-demo shoudl probably be worked a bit more, it really only contains the source code that some other things depends on (tests mostly). Perhaps someone that knows webthings could fix the resource dir and all so it could build a deployable war-file or something. I don't know.\n\nThe only thing I can think of that can be a major pain is to apply a trunk patch that span multiple projects. Never had to do that though.\n\nIt is running smooth over here. \n\n",
            "date": "2007-06-05T14:01:53.965+0000",
            "id": 16
        },
        {
            "author": "Michael Busch",
            "body": "Sami,\n\nI applied your patch to my local checkout and uploaded the directory tree with the generated \nartifacts to http://people.apache.org/~buschmi/staging_area/lucene/.\n\n(I admitted already that I'm a maven newbie, so the following question hopefully won't be\ntoo embarrassing ;) ) How do we test if the generated artifacts are ok?",
            "date": "2007-06-09T02:36:42.149+0000",
            "id": 17
        },
        {
            "author": "Hoss Man",
            "body": "Seeing Michael's update to this issue reminded me that a few days ago when looking in the archives to see some of the discussion that happened during the 2.1 release I was realized that was when the last really big discussion about using maven came up, and one of the ideas put forth was to use the \"maven antlib\" (some custom ant tasks provided by the maven project) to deal with fetching remote dependencies for contribs (that have them) and publishing our jars (and their pom files) to the main maven repository.  thinking about it more now, this also solves our \"how do we communicate contrib dependencies to people who download binary distributions?\" problem -- we can inlcude the pom.xml files in the release, and people can easily read them even if they don't use maven.\n\nbetween Sami's patch and Karl's tarball it seems like we already have some good pom files for all of the projects, the hard parts are making sure they stay up to date with reality as contribs evolve, and publishing them to the maven repository correctly.  it seems maven't ant tasks can trivially solve the second problem, and easily solve the first if we make some changes to use it for fetching dependencies....\n\nhttp://www.nabble.com/-VOTE--release-Lucene-2.1-tf3228536.html#a9014632\nhttp://maven.apache.org/ant-tasks.html\n\nthoughts?\n\n",
            "date": "2007-06-09T05:07:31.897+0000",
            "id": 18
        },
        {
            "author": "Sami Siren",
            "body": "The file attached contains a very simple maven2 project that uses few of the artifacts that Michael put on staging area. (for showing the obvious way how to test them)\n\nOn the root dir just enter \"mvn test\" to see dependencies get fetched, project compiled and junit tests run.\n",
            "date": "2007-06-09T05:39:58.492+0000",
            "id": 19
        },
        {
            "author": "Michael Busch",
            "body": "This new patch combines the pom.xml files from Sami and Karl with some modifications\nto make them consistent, as well as Hoss' recommendations regarding the maven ant \ntasks.\n\nDetails:\n- We now have pom.xml files for all contribs except javascript (which has no\n  build.xml) and gdata.\n- I added the following four poms to the root directory: \"lucene-contrib-pom.xml\", \n  \"lucene-core-pom.xml\", \"lucene-demos-pom.xml\" and \"lucene-parent-pom.xml\".\n  Each contrib directory contains a file \"pom.xml\". \n- Added the \"m2-deploy\" macro to common-build.xml. It now uses the maven ant tasks\n  to deploy the pom and jar files to a local repository located in dist/maven.\n- Added a new target \"dist-maven\" to contrib-build.xml that is only executed if\n  a pom.xml is present in the contrib dir. \n- Added the target \"generate-maven-artifacts\" to build.xml which calls \"m2-deploy\"\n  for the parent, core, demos, and contrib poms. Then it does a contrib crawl\n  with target \"dist-maven\".\n  \nThis works quite well. However there are probably some things that can be \nsimplified or improved:\n- I copy the pom.xml to the build dir first so that I can replace the @version@\n  placeholder with the actual value. There's probably a way to do this with\n  the maven ant tasks without having to copy the file first.\n- This might be a hack but I couldn't figure out a way to do this differently\n  yet: In the \"dist-maven\" target I read the parent, core and contrib pom.xml\n  using the <artifact:pom> task. I don't actually need to load those poms\n  but if I don't do it the build fails, because the contrib artifacts have the\n  \"lucene-contrib\" artifact as parent. Even if I specify the local repository\n  where those artifacts are located or if I add them as dependencies it doesn't\n  work. A hint here is appreciated.\n- The new lucene-checksum macro is not used yet for md5 computation of the \n  artifact files.\n\n\nI will spend more time on this patch during the next days for testing. Some feedback\nand help with testing is highly appreciated. It would also be helpful if the contrib\nowners could take a look at the particular pom.xml files.\n\nFor testing purposes I uploaded the artifacts generated by this patch to \nhttp://people.apache.org/~buschmi/staging_area/lucene",
            "date": "2007-06-13T07:04:04.577+0000",
            "id": 20
        },
        {
            "author": "Sami Siren",
            "body": "Michael, thank you very much for pushing this further. I briefly tested building some stuff against the artifacts you have deployed on staging area and everything worked as expected.\n",
            "date": "2007-06-14T17:31:48.102+0000",
            "id": 21
        },
        {
            "author": "Michael Busch",
            "body": "Sami, thanks for your testing efforts!\nI also ran some tests and all artifacts seem to be fine except \"lucene-bdb\".\nIt has \"sleepycat je 1.7\" as a dependency, but actually it needs the \n\"http://downloads.osafoundation.org/db/db-4.3.29.jar\" to compile. Couldn't\nfind that one in a maven repository though.",
            "date": "2007-06-15T07:41:42.056+0000",
            "id": 22
        },
        {
            "author": "Karl Wettin",
            "body": "Michael Busch - [15/Jun/07 12:41 AM ]\n> It has \"sleepycat je 1.7\" as a dependency, but actually it needs the\n> \"http://downloads.osafoundation.org/db/db-4.3.29.jar\" to compile. Couldn't\n> find that one in a maven repository though. \n\nI don't know what the Apache foundations thinks about it, but hosting a maven\nrepo is a peice of cake. Also, I would not mind at all if the Hudson or something\nwould publish a nightly snapshot of the Lucene projects to that repo.\n\n",
            "date": "2007-06-15T16:00:21.817+0000",
            "id": 23
        },
        {
            "author": "Michael Busch",
            "body": "> Also, I would not mind at all if the Hudson or something\n> would publish a nightly snapshot of the Lucene projects to that repo.\n\nYes, we could think about doing that in the future.\n\nFor now I'm planning to commit this patch shortly for 2.2 unless there\nare objections.",
            "date": "2007-06-15T17:44:04.992+0000",
            "id": 24
        },
        {
            "author": "Michael Busch",
            "body": "Committed to trunk & 2.2 branch with a little change:\nI removed the \"sleepycat je 1.7\" dependency from the \npom.xml of \"lucene-bdb\".\n\nPhew!",
            "date": "2007-06-16T04:50:33.267+0000",
            "id": 25
        }
    ],
    "component": "",
    "description": "Please provide javadoc & source jars for lucene-core.  Also, please provide the rest of lucene (the jars inside of \"contrib\" in the download bundle) if possible.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-622",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Provide More of Lucene For Maven",
    "systemSpecification": true,
    "version": "2.0.0"
}