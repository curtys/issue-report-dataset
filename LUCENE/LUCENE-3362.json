{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Wait, this can't affect 3.3.0.\n\nI didnt add this assert until a couple weeks ago: https://issues.apache.org/jira/secure/attachment/12487642/SOLR-2673_randomize_methods.patch",
            "date": "2011-08-05T15:43:34.014+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "the only good solution given the different workflows these different testrunners do, is for the runner to have its own seed.\n\nthe problem is that any other solution either gives us non-reproducibility of tests, or we must give up the shuffling of test methods... I don't want to do either.\n\npatch changes them to hex so the seed values are about as long as they are now (nobody cares whats in them, and its all copy-paste anyway).\n",
            "date": "2011-08-05T16:15:48.429+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "Thanks for reporting this G\u00e9rald!",
            "date": "2011-08-08T11:38:14.088+0000",
            "id": 2
        }
    ],
    "component": "general/test",
    "description": "I'm currently developping a new component for Solr. And in my Netbeans project, I have created two Test classes for this component: one class for simple unit tests (derived from  SolrTestCaseJ4 class) and a second one for tests with sharding (derived from  BaseDistributedSearchTestCase).\nWhen I launch a test with these two classes, I have an error in the initialization of the second class of tests (no matter the class is, this is always the second executed class which fails). The error comes from an \"assert\" which failed in the begining of the function \"initRandom()\" of LuceneTestCase class :\n\nassert !random.initialized;\n\nBut, if I launch each test class separatly, all the tests succeed!\n\nAfter a discussion with Mr. Muir, the problems seems to be related to the incompatibility of the class LuceneTestCase with the functioning of Maven projects in IDEs.\n\nAccording to mister Muir:\n\n\"\nThe problem is that via ant, tests work like this (e.g. for 3 test classes):\ncomputeTestMethods\nbeforeClass\nafterClass\ncomputeTestMethods\nbeforeClass\nAfterClass\ncomputeTestMethods\nbeforeClass\nafterClass\n\nbut via an IDE, if you run it from a folder like you did, then it does this:\ncomputeTestMethods\ncomputeTestMethods\ncomputeTestMethods\nbeforeClass\nafterClass\nbeforeClass\nafterClass\nbeforeClass\nafterClass \n\"",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3362",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Initialization error of Junit tests with solr-test-framework with IDEs and Maven",
    "systemSpecification": true,
    "version": "3.4"
}