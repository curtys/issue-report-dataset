{
    "comments": [
        {
            "author": "Reece (YT)",
            "body": "Created an attachment (id=15247)\nTest case that demonstrates the SpanTermQuery issue\n",
            "date": "2005-06-02T01:41:38.000+0000",
            "id": 0
        },
        {
            "author": "Reece (YT)",
            "body": "The test case also fails with Lucene 1.4.3 on Windows.",
            "date": "2005-06-02T02:00:22.000+0000",
            "id": 1
        },
        {
            "author": "Paul Elschot",
            "body": "Created an attachment (id=15251)\nThe same test case using a RAMDirectory\n\nI think a SpanTermQuery is not intended to be used directly in a BooleanQuery,\nand only SpanNearQuery, SpanNotQuery or SpanFirstQuery should be used\nas subqueries of BooleanQuery.\n\nNevertheless, with the current javadocs, I think one would expect this\nto work.\n\nThe attachment is in package org.apache.lucene.search.spans and it's adapted\nto use a RAMDirectory, unchanged for the rest.\n\nRegards,\nPaul Elschot.",
            "date": "2005-06-02T03:48:32.000+0000",
            "id": 2
        },
        {
            "author": "Reece (YT)",
            "body": "I think I'm on the right track but could use some advice from someone who \nunderstands the ConjuctionScorer better than I.\n\nThe ConjuctionScorer.doNext() method calls skipTo(lastDocId) which makes the \nSpanScorer skip to the last span.  This means that the middle spans are \nskipped and so those spans are incorrectly omitted from the results.  \n\nDoes anyone know why this scorer is trying to skip to the last document?  I \npresume its necessary but am not sure why.\n",
            "date": "2005-06-02T07:18:50.000+0000",
            "id": 3
        },
        {
            "author": "Reece (YT)",
            "body": "(In reply to comment #4)\n> I think I'm on the right track but could use some advice from someone who \n> understands the ConjuctionScorer better than I.\n> The ConjuctionScorer.doNext() method calls skipTo(lastDocId) which makes the \n> SpanScorer skip to the last span.  This means that the middle spans are \n> skipped and so those spans are incorrectly omitted from the results.  \n> Does anyone know why this scorer is trying to skip to the last document?  I \n> presume its necessary but am not sure why.\n\nIgnore this.  I figured it out and am working on a fix.",
            "date": "2005-06-02T07:33:56.000+0000",
            "id": 4
        },
        {
            "author": "Reece (YT)",
            "body": "Created an attachment (id=15273)\nProposed patch to fix problem\n\nHere is the patch that fixes the problem.",
            "date": "2005-06-03T06:58:11.000+0000",
            "id": 5
        },
        {
            "author": "Reece (YT)",
            "body": "Created an attachment (id=15274)\nSimple test case that demonstrates failure.\n",
            "date": "2005-06-03T06:59:37.000+0000",
            "id": 6
        },
        {
            "author": "Reece (YT)",
            "body": "Created an attachment (id=15275)\nExpanded test case to make sure other SpanTermQuery functionality isn't broken.\n",
            "date": "2005-06-03T07:00:31.000+0000",
            "id": 7
        },
        {
            "author": "Reece (YT)",
            "body": "This patch stops spans from being skipped.  A simple test in the skipTo method \nsolves the problem.\n\nThe first test case shows the problem and proves that this patch solves it.  \nThe second test case contains several other tests to see if this change \naffects other features of the SpanTermQuery.  The tests that in here all pass \nwith the patch.",
            "date": "2005-06-03T07:05:37.000+0000",
            "id": 8
        },
        {
            "author": "Erik Hatcher",
            "body": "Applied patch and tests.  Thanks!",
            "date": "2005-06-03T11:26:13.000+0000",
            "id": 9
        }
    ],
    "component": "core/search",
    "description": "When a SpanTermQuery is added to a BooleanQuery, incorrect results are \nreturned.\n\nI am running Lucene 1.9 RC1 on Windows XP.  I have a test case which has \nseveral tests.  It has an index with 4 identical documents in it.\n\nWhen two TermQuerys are used in a BooleanQuery, the score looks like this:\n  4 hits for search: two term queries\n    ID:1 (score:0.54932046)\n    ID:2 (score:0.54932046)\n    ID:3 (score:0.54932046)\n    ID:4 (score:0.54932046)\n\nNotice how it is correctly setting the score to be the same for each document.\n\nWhen two SpanQuerys are used in a BooleanQuery, the score looks like this:\n  2 hits for search: two span queries\n    ID:1 (score:0.3884282)\n    ID:4 (score:0.1942141)\n\nNotice how it only returned two documents instead of four.  And the two it did \nreturn have differing scores.\n\nI believe that there is an error in the scoring algorithm that is making the \nother two documents not show up.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-393",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Inconsistent scoring with SpanTermQuery in BooleanQuery",
    "systemSpecification": true,
    "version": ""
}