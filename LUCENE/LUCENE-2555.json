{
    "comments": [
        {
            "author": "Michael Busch",
            "body": "What shall we do about index backward-compatibility?\n\nI guess 4.0 has to be able to read shared doc stores?  So a lot of that code we can't remove? :(",
            "date": "2010-07-23T00:10:33.021+0000",
            "id": 0
        },
        {
            "author": "Jason Rutherglen",
            "body": "Maybe we should break backwards-compatibility for the RT branch?  Or just ship an RT specific JAR to keep things simple?",
            "date": "2010-07-23T00:33:07.181+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "The reading side of shared doc stores is quite trivial; I think we should keep it (keep back compat).",
            "date": "2010-07-23T00:51:47.438+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "What are the performance implications of removing shared doc stores? From what I understand, if several segments share the same doc store, then when they are merged, the doc stores aren't merged. Which is a great benefit, especially if you intend to store large fields.\n\nI understand (mostly from the discussion on the PTDW) that with the move to a per-thread approach, the doc stores cannot be shared between segments created by different threads, but what about segments created by the same thread? Are we losing that functionality?",
            "date": "2010-07-23T11:08:53.310+0000",
            "id": 3
        },
        {
            "author": "Jason Rutherglen",
            "body": "Shai, I think Mike has outlined the pros and cons in other\npostings see:\n\nhttps://issues.apache.org/jira/browse/LUCENE-2324?focusedCommentId=12891256&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acommenttabpanel#action_12891256 \n\nBasically when going to DWPTs we're losing shared doc stores\ncompletely, and sharing between threads probably doesn't make\nsense. However we can keep the reading of shared doc stores for\nback compat. I think the confusing part in the code is the\nwriting of shared doc stores, and I'm glad that's going away. In\naddition the DWPT code completely streamlines some of the most\nconfusing parts of the IndexWriter class tree (the wait notify,\nand per thread logic in particular). Overall this will help\nfuture folks when they're trying to customize IndexWriter, and\nin addition, remove a layer of complexity, as we add yet another\nlayer of complexity with the RT code.\n",
            "date": "2010-07-23T16:16:52.203+0000",
            "id": 4
        },
        {
            "author": "Michael Busch",
            "body": "{quote}\nI understand (mostly from the discussion on the PTDW) that with the move to a per-thread approach, the doc stores cannot be shared between segments created by different threads, but what about segments created by the same thread? Are we losing that functionality?\n{quote}\n\nWe discussed that in LUCENE-2324 (close to the bottom).  The problem is that doc stores only help you if you merge segments that all share the same store.  With DWPT that's extremely unlikely.  \n\n\n{quote}\nWhat are the performance implications of removing shared doc stores? \n{quote}\n\nI agree we have to test this when this patch is complete.  My hope is that we save in other places (removing the interleaving step of the per-thread postings, no wait queue that serializes writing to doc stores) so that overall we won't be slower.",
            "date": "2010-07-23T16:17:31.749+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "{quote}\n\nbq. What are the performance implications of removing shared doc stores?\n\nI agree we have to test this when this patch is complete. My hope is that we save in other places (removing the interleaving step of the per-thread postings, no wait queue that serializes writing to doc stores) so that overall we won't be slower.\n{quote}\n\nAlso, remember that shared doc stores is not as good an opto as it used to be, because we are now able to bulk-copy both stored fields and term vectors during merging.\n\nHowever, bulk merging only happens if the field name -> number mapping is congruent, b/w the merged segment and the one segment being merged.\n\nUnfortunately, you can easily unexpectedly break this (see LUCENE-1737) but eg adding diff't fields to your docs, or adding same fields just in a different order.",
            "date": "2010-07-23T16:24:49.202+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "Thanks for the explanation. Let's remember though that not all apps are multi-threaded, but I think most are, so designing for the most is better than making the other few more performing. I'm generally ok with that, just wanted to better understand the reasons.",
            "date": "2010-07-23T16:52:22.430+0000",
            "id": 7
        },
        {
            "author": "Michael Busch",
            "body": "Checkpointing what I have so far:\n\n- Removed writing part of shared doc stores\n- Reading part is kept for backwards compatibility.  TestBackwardsCompatibility passes.\n- Removed DocumentsWriterPerThread.DocWriter and all its subclasses\n\nSome testcases fail still.  Next I will look into removing PerDocBuffer, exception handling,\nand then fix the failing tests.",
            "date": "2010-07-23T16:53:58.264+0000",
            "id": 8
        },
        {
            "author": "Jason Rutherglen",
            "body": "Michael, nice!  A lot is cleaned up.  ",
            "date": "2010-07-23T18:25:06.565+0000",
            "id": 9
        },
        {
            "author": "Michael Busch",
            "body": "Changed the patch to also remove PerDocBuffer.  It changes StoredFieldsWriter and TermVectorsTermsWriter to write the data directly to the final IndexOutput, without buffering it in a temporary PerDocBuffer.\n\nSeveral tests still fail due to exception handling or thread-safety problems (which is expected - haven't tried very hard to fix them yet).  I will commit this patch to the realtime branch and work on fixing the tests with a separate issue.",
            "date": "2010-07-24T06:03:17.631+0000",
            "id": 10
        },
        {
            "author": "Michael Busch",
            "body": "Committed revision 978805.",
            "date": "2010-07-24T06:05:21.141+0000",
            "id": 11
        }
    ],
    "component": "core/index",
    "description": "With per-thread DocumentsWriters sharing doc stores across segments doesn't make much sense anymore.\n\nSee also LUCENE-2324.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2555",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Remove shared doc stores",
    "systemSpecification": true,
    "version": ""
}