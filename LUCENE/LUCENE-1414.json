{
    "comments": [],
    "component": "general/build",
    "description": "We have some unit tests that require a fair amount of RAM.  But, sometimes the JRE does not give itself a very large max heap size, by default.  EG on a Mac Pro with 6 GB physical RAM, I see JRE 1.6.0 defaulting to max 80 GB and it always then hits this exception during testing:\n\n    [junit] Testcase: testHugeFile(org.apache.lucene.store.TestHugeRamFile):\tCaused an ERROR\n    [junit] Java heap space\n    [junit] java.lang.OutOfMemoryError: Java heap space\n    [junit] \tat java.util.Arrays.copyOf(Arrays.java:2760)\n    [junit] \tat java.util.Arrays.copyOf(Arrays.java:2734)\n    [junit] \tat java.util.ArrayList.ensureCapacity(ArrayList.java:167)\n    [junit] \tat java.util.ArrayList.add(ArrayList.java:351)\n    [junit] \tat org.apache.lucene.store.RAMFile.addBuffer(RAMFile.java:69)\n    [junit] \tat org.apache.lucene.store.RAMOutputStream.switchCurrentBuffer(RAMOutputStream.java:129)\n    [junit] \tat org.apache.lucene.store.RAMOutputStream.writeBytes(RAMOutputStream.java:115)\n    [junit] \tat org.apache.lucene.store.TestHugeRamFile.testHugeFile(TestHugeRamFile.java:68)\n\nThe fix is simple: add maxmemory=512M into common-build.xml.  I'll commit shortly.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1414",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "increase maxmemory for unit tests",
    "systemSpecification": true,
    "version": "2.4, 2.9"
}