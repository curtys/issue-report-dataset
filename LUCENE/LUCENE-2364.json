{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "This would also make MTQ's rewrite mode internal collectors better, as they convert BytesRef terms from the enums to String Terms, passing to TermQuery and inside TermScorer convert back. Whith real binary terms (numerics are not yet real binary, they are UTF-8 conform ascii bytes), this would break.",
            "date": "2010-04-05T08:10:51.753+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Also FieldCacheRangeFilter.newStringRange, but for this we need FieldCache to load as BytesRef (I'll open a separate issue).",
            "date": "2010-04-07T16:13:18.708+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Once we fix Term to take a BytesRef, we should remove the newly added IndexReader.docFreq(String field, BytesRef term), and just use the existing one that takes a Term.",
            "date": "2010-04-07T21:27:47.698+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Maybe we should simply deprecate Term?  It's used in very few places, now.  And then require you pass in separate String field, BytesRef text (eg to TermQuery).",
            "date": "2010-04-09T10:51:49.410+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "+1\n\nTerm is still used at a lot of places in internal code, but that can be changed easily. One of those places is MTQ :-)",
            "date": "2010-04-09T11:54:54.244+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Term now stores BytesRef internally...",
            "date": "2012-03-20T15:34:57.321+0000",
            "id": 5
        }
    ],
    "component": "core/search",
    "description": "It would be good to directly allow BytesRefs in TermQuery and TermRangeQuery (as both queries convert the strings to BytesRef internally). For NumericRange support in Solr it will be needed to support numerics as ByteRef in single-term queries.\n\nWhen this will be added, don't forget to change TestNumericRangeQueryXX to use the BytesRef ctor of TRQ.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-2364",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add support for terms in BytesRef format to Term, TermQuery, TermRangeQuery & Co.",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}