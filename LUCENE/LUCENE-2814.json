{
    "comments": [
        {
            "author": "Earwin Burrfoot",
            "body": "I'll take this. I think.",
            "date": "2010-12-13T22:30:17.723+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "This is great Mike. Does this mean we will be able to merge non consecutive segments?",
            "date": "2010-12-14T04:12:15.310+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "bq.  Does this mean we will be able to merge non consecutive segments?\n\nWell... it's rather decoupled from this issue.  Meaning, we were always free to allow non-contiguous merges, and segment would simply have forced the merge of the doc stores in that case.\n\nBut, yes, because of the same reasons above, such a merge policy is much lower perf hit than it used to be.  And so now it is again compelling to explore this.... we just have to go and do LUCENE-1076.  I think it should not be hard; we just have to relax the merge methods in IW that check that the segments are contiguous.\n\nThis added freedom for the merge policy would be compelling, ie, it can then do a much better job cherry picking similarly sized segments for merging.  I think it'd also simplify merge policies like BalancedSegMP, eg (I think?) no longer requiring a viterbi search to pick the best merges.",
            "date": "2010-12-14T11:27:41.642+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Earwin :)\n\nWe should verify the back-compat test has at least one index w/ shared doc stores.\n\nDocumentsWriter should get simpler, ie its closeDocStores is now private, and, it should no longer need to call writer.checkpoint() since it will no longer alter the SIS (and no longer build a cfx file) on closing the doc stores.\n\nIt would be nice to remove the closeDocStore methods from the full indexing chain, since now each component should do that itself, privately, on flush, but maybe we should do that as a 2nd step?",
            "date": "2010-12-14T11:54:17.366+0000",
            "id": 3
        },
        {
            "author": "Earwin Burrfoot",
            "body": "bq. We should verify the back-compat test has at least one index w/ shared doc stores.\nI believe I've seen some back-compat failures with my quick'n'dirty patch that removed both reading and writing shared docstores.\nSo it should be ok.",
            "date": "2010-12-14T12:20:51.707+0000",
            "id": 4
        },
        {
            "author": "Earwin Burrfoot",
            "body": "First iteration.\n\nPasses all tests except TestNRTThreads. Something to do with numDocsInStore and numDocsInRam merged together?\nLots of non-critical nocommits (just markers for places I'd like to recheck).\nDW.docStoreEnabled and *.closeDocStore() have to go, before committing",
            "date": "2010-12-16T12:15:42.707+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "Same as Earwin's patch just sync'd w/ current trunk.",
            "date": "2010-12-16T16:53:47.179+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "OK I dug here... the reason why TestNRTThreads fails is because you moved the numDocsInRAM++ out of DW.getThreadState into WaitQueue.writeDocument.\n\nWhen we buffer del terms in DW.deleteTerm/Terms/Query/Queries, we grab the current numDocsInRAM as the \"docID upto\", to record when it comes time to apply the delete which docID we must stop at.\n\nBut with your change, this value is now an undercount, since numDocsInRAM is now acting like numDocsInStore.\n\nOne way to fix this would be to change the delete methods to use nextDocID instead of numDocsInRAM?\n\nBut I think I'd prefer to put back numDocsInRAM++ in getThreadState...",
            "date": "2010-12-16T18:18:59.444+0000",
            "id": 7
        },
        {
            "author": "Michael Busch",
            "body": "The shared doc stores are actually already completely removed in the realtime branch (part of LUCENE-2324).\n\nDoes someone want to help with the merge, then we can land the realtime branch (which is pretty much only DWPT and removing doc stores) in trunk sometime soon?",
            "date": "2010-12-16T21:52:40.935+0000",
            "id": 8
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Ugh.\nOn first glance @ realtime branch, my patch is not a strict subset. But most stuff, including things I'm struggling with now, is definetly in.\nSo, I guess, I'll stop wasting effort.\n\nWhat is the state for realtime branch? Is it stable? How soon is \"sometime soon\"? :)",
            "date": "2010-12-16T22:38:40.298+0000",
            "id": 9
        },
        {
            "author": "Michael Busch",
            "body": "Well I need to merge with the recent changes in trunk (especially LUCENE-2680).\nThe merge is pretty hard, but I'm planning to spend most of my weekend on it. \n\nIf I can get most tests to pass again (most were passing before the merge), then I think the only outstanding thing is LUCENE-2573 before we could land it in trunk.\n\n",
            "date": "2010-12-16T22:54:52.674+0000",
            "id": 10
        },
        {
            "author": "Michael McCandless",
            "body": "I think taking things one step at a time would be good here?\n\nIe remove doc stores from trunk, let that bake on trunk for a while, then merge to RT?  So that what then remains on RT is DWPT / tiered flushing?  Else RT is a monster change?",
            "date": "2010-12-16T23:22:45.302+0000",
            "id": 11
        },
        {
            "author": "Michael Busch",
            "body": "bq. I think taking things one step at a time would be good here?\n\nProbably still a smaller change than flex indexing ;)\n\nBut yeah in general I agree that we should do things more incrementally.  I think that's a mistake I've made with the RT branch so far.  In this particular case it's just a bit sad to redo all this work now, because I think I got the removal of doc stores right in RT and all related tests to pass.",
            "date": "2010-12-16T23:31:12.776+0000",
            "id": 12
        },
        {
            "author": "Earwin Burrfoot",
            "body": "So, what's the plan?",
            "date": "2010-12-16T23:48:45.002+0000",
            "id": 13
        },
        {
            "author": "Michael Busch",
            "body": "bq. So, what's the plan?\n\nI can't really work on this much before Saturday.  But during the weekend I can work on the RT merge and maybe try to pull out the docstore removal changes and create a separate patch.  Have to see how hard that is.  If it's not too difficult I'll post a separate patch, otherwise I'll commit the merge to RT and maybe convince you guys to help a bit with getting the RT branch ready for landing in trunk? :)\n",
            "date": "2010-12-17T00:03:15.530+0000",
            "id": 14
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Instead of you pulling out docstore removal, I can finish that patch. But then merging's gonna be even greater bitch. Probably. But maybe not.\nDo you do IRC? It can be faster to discuss in realtime, and you could also tell what help you need with the branch.",
            "date": "2010-12-17T00:39:08.617+0000",
            "id": 15
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Patch updated to trunk, no nocommits, no *.closeDocStore(), tests pass.\n\nSegmentWriteState vs DocumentsWriter bother me.\nWe track flushed files in both, we inconsistently get current segment from both of them.\n",
            "date": "2010-12-17T03:28:39.156+0000",
            "id": 16
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Probably still a smaller change than flex indexing\n\nYes, true!\n\nbq. But yeah in general I agree that we should do things more incrementally. I think that's a mistake I've made with the RT branch so far.\n\nWell, not a mistake... this was unavoidable given that trunk was so far from what DWPT needs.  But with per-seg deletes (LUCENE-2680) done, and no more doc stores (this issue), I think we've got DWPT down to about as bite sized as it can be (it's still gonna be big!).\n\nI can help merge too!  I think coordinating on IRC #lucene is a good idea?  It seems like LUCENE-2573 needs to be incorporated into IW's new FlushControl class (which is already coordinating flush-due-to-deletes and flush-due-to-added-docs-of-one-DWPT).",
            "date": "2010-12-17T09:45:03.075+0000",
            "id": 17
        },
        {
            "author": "Jason Rutherglen",
            "body": "bq. I think we've got DWPT down to about as bite sized as it can be (it's still gonna be big!)\n\nIndeed!\n\nbq. I think coordinating on IRC #lucene is a good idea? \n\nIt'd be nice if there were a log of IRC #lucene, otherwise I prefer Jira. \n\nbq. It seems like LUCENE-2573 needs to be incorporated into IW's new FlushControl class \n\nRight, into the DWPT branch.\n\n",
            "date": "2010-12-17T15:58:39.135+0000",
            "id": 18
        },
        {
            "author": "Steve Rowe",
            "body": "{quote}\nbq. I think coordinating on IRC #lucene is a good idea?\n\nIt'd be nice if there were a log of IRC #lucene, otherwise I prefer Jira. \n{quote}\n\n#lucene-dev is logged.",
            "date": "2010-12-17T16:26:37.370+0000",
            "id": 19
        },
        {
            "author": "Jason Rutherglen",
            "body": "Steven, is that on a wiki page?\n\nThe usage seems a little slim?  http://colabti.org/irclogger/irclogger_log/lucene-dev?date=2010-12-17;raw=on",
            "date": "2010-12-17T16:35:10.586+0000",
            "id": 20
        },
        {
            "author": "Steve Rowe",
            "body": "bq. Steven, is that on a wiki page?\n\nI don't know, I never put it anywhere, just discussed on dev@l.a.o.  Feel free to do so if you like.\n\nbq. The usage seems a little slim? http://colabti.org/irclogger/irclogger_log/lucene-dev?date=2010-12-17;raw=on\n\nYeah, it's very rarely used.  \n\nSeveral Lucene people who use #lucene are strongly against logging, so I set up #lucene-dev as a place to host on-the-record Lucene conversations.  I mentioned it because this is what you want.",
            "date": "2010-12-17T16:48:14.726+0000",
            "id": 21
        },
        {
            "author": "Earwin Burrfoot",
            "body": "New patch. Now with even more lines removed!\n\nDocStore-related index chain components used to track open/closed files through DocumentsWriter.\nClosed files list was unused, and is silently gone.\nOpen files list was used to:\n* prevent not-yet-flushed shared docstores from being deleted by IndexFileDeleter.\n** no shared docstores, no need + IFD no longer requires a reference to DW\n* delete already opened docstore files, when aborting.\n** index chain now handles this on its own + has cleaner error handling code.",
            "date": "2010-12-18T00:27:50.681+0000",
            "id": 22
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks great!  Nice work Earwin.  I think it's ready to commit.\n\nExcept, can you resync to trunk?  I hit failures applying one hunk to\nDW.java.\n\nAlso, on the nocommit on exc in DW.addDocument, yes I think that\n(IFD.deleteNewFiles, not checkpoint) is still needed because DW can\norphan the store files on abort?\n\nOr: we could fix DW.abort to directly call Dir.deleteFile (instead of\nrelying on IFD.deleteNewFiles).  Ie, w/ no shared doc stores, these\nfiles should never have been registered w/ IFD so they can be\nprivately managed by DW.\n\nBut, if we end up leaving the delete up above, we should put the\ndocWriter null check back so silly apps that close IW while still\nindexing don't get NPEs.\n\nI'm not looking forward to the 3.x back port!!\n",
            "date": "2010-12-18T10:13:37.508+0000",
            "id": 23
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Synced to trunk.\n\nbq. Also, on the nocommit on exc in DW.addDocument, yes I think that (IFD.deleteNewFiles, not checkpoint) is still needed because DW can orphan the store files on abort?\nOrphaned files are deleted directly in StoredFieldsWriter.abort() and TermVectorsTermsWriter.abort(). As I said - all the open files tracking is now gone.\nTurns out checkpoint() is also no longer needed.\n\nI have no other lingering cleanup urges, this is ready to be committed. I think.",
            "date": "2010-12-18T10:51:44.794+0000",
            "id": 24
        },
        {
            "author": "Michael McCandless",
            "body": "OK I committed to trunk.  I'll let this bake for a while on trunk before backporting to 3.x...\n\nThanks Earwin!",
            "date": "2010-12-18T18:05:45.292+0000",
            "id": 25
        },
        {
            "author": "Jason Rutherglen",
            "body": "bq. backporting to 3.x... \n\nOut of curiosity, why are we backporting to 3.x or are we planning on also backporting the DWPT branch?",
            "date": "2010-12-18T18:45:47.290+0000",
            "id": 26
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Out of curiosity, why are we backporting to 3.x or are we planning on also backporting the DWPT branch?\n\nWell, 3.x is eligible for any new features that don't break back\ncompat.  It's a feature branch not a bug-fix branch.\n\nI'd like to see removing shared doc stores backported in particular\nbecause it's a good simplification of the code, ie, it can prevent\nsneaky bugs.\n\nAnd I think we should backport DWPT?  But first things first, we gotta\nland it on trunk :)  And let it bake some... then backport.\n",
            "date": "2010-12-19T10:38:25.848+0000",
            "id": 27
        },
        {
            "author": "Jason Rutherglen",
            "body": "bq. And I think we should backport DWPT?\n\nReally?  It's a fairly large restructuring.  \n\nAlso, I realized that LUCENE-2312 should be implementable in the single DW case, which perhaps could be backported as well.",
            "date": "2010-12-19T17:42:56.916+0000",
            "id": 28
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Really? It's a fairly large restructuring.\n\nIt is, but it's all under-the-hood.\n\nbq. Also, I realized that LUCENE-2312 should be implementable in the single DW case, which perhaps could be backported as well.\n\nRight!",
            "date": "2010-12-19T23:03:32.406+0000",
            "id": 29
        },
        {
            "author": "Michael Busch",
            "body": "{quote}\nOK I committed to trunk. I'll let this bake for a while on trunk before backporting to 3.x...\nThanks Earwin!\n{quote}\n\nMan, you guys really ruined my Sunday with this commit :)\n\nI got so many merge conflicts, that I decided to merge first only up to rev 1050655 (the rev before this commit) and up to HEAD in a second merge.\n\nI'm down to 64 compile errors (from 800), hopefully I can finish the merge tomorrow.  Just wanted you to know that I'm making progress here with the DWPTs.",
            "date": "2010-12-20T08:07:16.210+0000",
            "id": 30
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Man, you guys really ruined my Sunday with this commit\n\nSorry :(\n\nIs there any way I can help?",
            "date": "2010-12-20T18:41:51.612+0000",
            "id": 31
        },
        {
            "author": "Michael Busch",
            "body": "bq.  Sorry\n\nNo worries - I'm being overly dramatic :)\n\n\nbq.  Is there any way I can help?\n\nLet me try to get it to compile, and then I'll commit.  I'm sure a bunch of tests will fail, help would be great then.  Also a general review of my changes to IndexWriter/DocumentsWriter/DWPT would be great.  I should be able to commit my merge by end of today. \n",
            "date": "2010-12-20T19:12:44.237+0000",
            "id": 32
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:10.128+0000",
            "id": 33
        }
    ],
    "component": "core/index",
    "description": "Shared doc stores enables the files for stored fields and term vectors to be shared across multiple segments.  We've had this optimization since 2.1 I think.\n\nIt works best against a new index, where you open an IW, add lots of docs, and then close it.  In that case all of the written segments will reference slices a single shared doc store segment.\n\nThis was a good optimization because it means we never need to merge these files.  But, when you open another IW on that index, it writes a new set of doc stores, and then whenever merges take place across doc stores, they must now be merged.\n\nHowever, since we switched to shared doc stores, there have been two optimizations for merging the stores.  First, we now bulk-copy the bytes in these files if the field name/number assignment is \"congruent\".  Second, we now force congruent field name/number mapping in IndexWriter.  This means this optimization is much less potent than it used to be.\n\nFurthermore, the optimization adds *a lot* of hair to IndexWriter/DocumentsWriter; this has been the source of sneaky bugs over time, and causes odd behavior like a merge possibly forcing a flush when it starts.  Finally, with DWPT (LUCENE-2324), which gets us truly concurrent flushing, we can no longer share doc stores.\n\nSo, I think we should turn off the write-side of shared doc stores to pave the path for DWPT to land on trunk and simplify IW/DW.  We still must support reading them (until 5.0), but the read side is far less hairy.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2814",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "stop writing shared doc stores across segments",
    "systemSpecification": true,
    "version": "3.1, 4.0-ALPHA"
}