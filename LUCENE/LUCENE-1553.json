{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Good catch, thanks Scott!  I'll commit shortly.\n\nThis is only used by unit tests, to ensure that a test fails whenever ConcurrentMergeScheduler hits an unhandled exception.",
            "date": "2009-03-05T09:53:59.341+0000",
            "id": 0
        }
    ],
    "component": "",
    "description": "This method has the wrong index for the 'size' variable, I think it should b allInstances.size.\n\n{code:java}\nprivate void addMyself() {\n    synchronized(allInstances) {\n      final int size=0;\n      int upto = 0;\n      for(int i=0;i<size;i++) {\n        final ConcurrentMergeScheduler other = (ConcurrentMergeScheduler) allInstances.get(i);\n        if (!(other.closed && 0 == other.mergeThreadCount()))\n          // Keep this one for now: it still has threads or\n          // may spawn new threads\n          allInstances.set(upto++, other);\n      }\n      allInstances.subList(upto, allInstances.size()).clear();\n      allInstances.add(this);\n    }\n  }\n{code}",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1553",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "ConcurrentScheduleManager.addMyself() has wrong inted",
    "systemSpecification": true,
    "version": "2.4"
}