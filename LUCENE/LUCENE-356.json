{
    "comments": [
        {
            "author": "Daniel Naber",
            "body": "Could you please either check if the problem persists with the latest version \nfrom subversion or submit a small test case that makes this easy to reproduce? ",
            "date": "2005-03-10T03:35:09.000+0000",
            "id": 0
        },
        {
            "author": "John Wang",
            "body": "Created an attachment (id=15035)\nAdded a nullcheck for Query instances before adding to the multi clause.\n\nI wrote a unit test to try to recreate this issue with the latest trunk code. I\nsee that the ArrayIndexOutofBounds issue is gone. However, I do see null\nQueries are added to resulting Query when switching from the deprecated method\nby using the non-static parse method. After a little investigation, I see that\nit is missing some null checks.\n\nHere is the unit test and attached is the modified source of\nMultiFieldQueryParser.java.\n\npublic static void main(String[] args) throws Exception{\n\n\t\tString[] fields=new String[]{\"f1\",\"f2\",\"f3\",\"f4\",\"f5\"};\n\t\t\n\t\tMultiFieldQueryParser parser=new\nMultiFieldQueryParser(fields,new TestAnalyzer(fields));\n\t\tString qString=\"bla AND blo\";\n\t\n\t\tQuery q=parser.parse(qString);\n\t\t\n\t\tSystem.out.println(q);\n\t}\n\n\tstatic class TestAnalyzer extends Analyzer{\n\t\tString[] _defaultFields;\n\t\tStandardAnalyzer _std;\n\t\tpublic TestAnalyzer(String[] defaultFields){\n\t\t\t_defaultFields=defaultFields;\n\t\t\t_std=new StandardAnalyzer();\n\t\t}\n\t\tpublic TokenStream tokenStream(String fieldName, Reader reader)\n{\n\t\t\tif (\"f1\".equals(fieldName)){\n\t\t\t\treturn new EmptyTokenStream();\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn _std.tokenStream(fieldName, reader);\n\t\t\t}\n\t\t}\n\t\t\n\t\tprivate static class EmptyTokenStream extends TokenStream{\n\n\t\t\tpublic Token next() throws IOException {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}",
            "date": "2005-05-16T02:10:15.000+0000",
            "id": 1
        },
        {
            "author": "John Wang",
            "body": "Created an attachment (id=15036)\nmerged the two idential implementations of getFieldQuery methods\n\nThis attachment includes the changes in the previous patch: (15035)\n\nThe 2 getFieldQuery methods with different method signatures are implmented\nwith identical code in that the Analyzer parameter is ignored.\n\nThis attachment cleaned this up.",
            "date": "2005-05-16T02:28:16.000+0000",
            "id": 2
        },
        {
            "author": "Daniel Naber",
            "body": "John, thanks for your examples. I have adapted your patch and committed it. ",
            "date": "2005-06-29T06:46:00.000+0000",
            "id": 3
        }
    ],
    "component": "core/queryparser",
    "description": "We get the following exception:\n\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\n        at java.util.Vector.elementAt(Vector.java:434)\n        at org.apache.lucene.queryParser.QueryParser.addClause(QueryParser.java:181)\n        at org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:529)\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:108)\n        at org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:87)\n        at\norg.apache.lucene.queryParser.MultiFieldQueryParser.parse(MultiFieldQueryParser.java:77)\n        at idx.Mquery.main(Mquery.java:64)\n\n\nWe are using a query with 'AND' like 'bla AND blo' on 5 fields.\nOne of the fields has a Tokenizer which returns no token\nat all on this query, and this together with the AND\ntriggers the exception.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-356",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "ArrayIndexOutOfBoundsException when using MultiFieldQueryParser",
    "systemSpecification": true,
    "version": "1.4"
}