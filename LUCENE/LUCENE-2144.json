{
    "comments": [
        {
            "author": "Karl Wettin",
            "body": "BUILD SUCCESSFUL\nTotal time: 36 minutes 4 seconds\n",
            "date": "2009-12-10T20:28:17.974+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good; tests pass.  I'll commit shortly.\n\nThe core change is to just make it possible to override isDeleted logic in AllTermDocs.\n\nThe flex API makes this easier -- you must provided a Bits (new interface),  specifying the docs you want to skip, when you request the DocsEnum.\n\nWe should fix this on at least 3.0 as well right?",
            "date": "2009-12-10T21:33:28.208+0000",
            "id": 1
        },
        {
            "author": "Karl Wettin",
            "body": "bq. We should fix this on at least 3.0 as well right?\n\nWould be great if you had the bandwidth to fix that.",
            "date": "2009-12-10T21:46:49.527+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Hmm -- I did the svn merge back to 3.0, but I hit these test failures:\n\n{code}\n    [junit] Testcase: testLoadIndexReader(org.apache.lucene.store.instantiated.TestIndicesEquals):\tFAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testTermDocsSomeMore(TestIndicesEquals.java:226)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testEquals(TestIndicesEquals.java:363)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testEqualBehaviour(TestIndicesEquals.java:306)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testLoadIndexReader(TestIndicesEquals.java:77)\n    [junit] \n    [junit] \n    [junit] Testcase: testInstantiatedIndexWriter(org.apache.lucene.store.instantiated.TestIndicesEquals):\tFAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testTermDocsSomeMore(TestIndicesEquals.java:226)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testEquals(TestIndicesEquals.java:363)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testEqualBehaviour(TestIndicesEquals.java:306)\n    [junit] \tat org.apache.lucene.store.instantiated.TestIndicesEquals.testInstantiatedIndexWriter(TestIndicesEquals.java:106)\n    [junit] \n{code}\n\nAny ideas?",
            "date": "2009-12-10T21:58:11.366+0000",
            "id": 3
        },
        {
            "author": "Karl Wettin",
            "body": "bq. at org.apache.lucene.store.instantiated.TestIndicesEquals.testTermDocsSomeMore(TestIndicesEquals.java:226)\n\nI have no idea. How do I merge back locally so I can debug it?\n\n\n",
            "date": "2009-12-10T22:08:19.043+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Attached diffs from my merge back onto 3.0.",
            "date": "2009-12-10T22:13:02.301+0000",
            "id": 5
        },
        {
            "author": "Karl Wettin",
            "body": "Committed change to trunk.\n\nIn 3.0 comment out ~line 227 in TestIndicesEquals\n\n    // this is invalid use of the API,\n    // but if the response differs then it's an indication that something might have changed.\n    // in 2.9 and 3.0 the two TermDocs-implementations returned different values at this point.\n    assertEquals(\"Descripency during invalid use of the TermDocs API, see comments in test code for details.\",\n        aprioriTermDocs.next(), testTermDocs.next());\n",
            "date": "2009-12-10T23:28:24.145+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "I think we shouldn't test the invalid case?  EG trunk could change [again] sometime, which'd cause a false failure here?  Ie, we should just remove the test of the un-seek'd TermDocs.next() calls?",
            "date": "2009-12-11T00:28:12.242+0000",
            "id": 7
        },
        {
            "author": "Karl Wettin",
            "body": "I don't have any strong feelings about this line of code, but let me at least explain it.\n\nI like the idea that IIFoo behaves the same way a SegementFoo, even during incorrect/undocumented use of the API. \n\nThere are no real use cases for this in the Lucene distribution, there are however effects people might use even though caused by invalid use of the API and not recommened. E.g. a skipTo to a target greater than the greatest document associated with that term will position the enum at the greatest document number for that term. Even though I wouldn't do something like this others might. \n\nIn this case, where an immediate #next() on IR#termDocs() is called, it's might look silly to compare the behaviour of II and Segment as it's such blatantly erroneous use of the API, but even I have been known to come up with some rather strange solution now and then when nobody else is looking.\n\nOne alternative is that  #next would produce an InvalidStateException or something instead of just accepting the call, but then there is of course the small extra cost associated with checking if the enum has been seeked yet and #next is a rather commonly used method.",
            "date": "2009-12-11T11:26:02.640+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Karl -- I'll back port to 3.0 & commit.",
            "date": "2009-12-11T15:56:15.986+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Karl!",
            "date": "2009-12-11T16:31:57.287+0000",
            "id": 10
        },
        {
            "author": "Uwe Schindler",
            "body": "merge back also to 2.9.2",
            "date": "2010-02-13T12:52:03.679+0000",
            "id": 11
        }
    ],
    "component": "modules/other",
    "description": "This patch contains core changes so someone else needs to commit it.\n\nDue to the incompatible #termDocs(null) behaviour at least MatchAllDocsQuery, FieldCacheRangeFilter and ValueSourceQuery fails using II since 2.9.\n\nAllTermDocs now has a superclass, AbstractAllTermDocs that also InstantiatedAllTermDocs extend.\n\nAlso:\n\n * II-tests made less plausable to pass on future incompatible changes to TermDocs and TermEnum\n * IITermDocs#skipTo and #next mimics the behaviour of document posisioning from SegmentTermDocs#dito when returning false\n * II now uses BitVector rather than sets for deleted documents\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2144",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Critical",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "InstantiatedIndexReader does not handle #termDocs(null) correct (AllTermDocs)",
    "systemSpecification": true,
    "version": "2.9, 2.9.1, 3.0"
}