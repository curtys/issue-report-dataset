{
    "comments": [
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "Here is a patch against trunk.\n\nThe patch on common-build.xml allows the core or every contrib to package the jar as an OSGi bundle. When building, it just need a property \"bundle.manifest.file\" which is pointing to the template MANIFEST.MF to use. The patch on build.xml with the MANIFEST.MF makes lucene core jar an OSGi bundle.\n\nAlso in order to not have to maintain a third version scheme, I have added a /release target to compute the versions. So this doc should be updated :\nhttp://wiki.apache.org/lucene-java/ReleaseTodo\n{code}ant -Dversion=2.3.0-rc1 -Dspec.version=2.3.0 clean dist dist-src generate-maven-artifacts{code}\nshould be replaced by:\n{code}ant /release clean dist dist-src generate-maven-artifacts{code}\n\nThen about maintenance, the version in the MANIFEST.MF file is just usefull for people having the Lucene source in Eclipse and usin it as an OSGi bundle. The version is actually overridden while building the jar. And every new java package that is part of the Lucene API have to be added to the Export-Package header.\n\n",
            "date": "2008-07-23T18:16:31.847+0000",
            "id": 0
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "Updated patch, which fix the Bundle-RequiredExecutionEnvironment, and now the packages are exported with their version",
            "date": "2008-08-31T11:33:40.090+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Should we do this for 2.4?  Nicolas, there are quite a few changes to common-build.xml -- do you see any risks/downsides to these changes?",
            "date": "2008-08-31T11:48:22.412+0000",
            "id": 2
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "You are right to ask Michael, one part of the patch was risky, the part that was computing the version dynamically. I changed the way the properties were loaded and it made some mess with building the contrib during the release process.\nSo I removed it. So then instead of \n{noformat}\nant -Dversion=2.3.0-rc1 -Dspec.version=2.3.0 clean dist dist-src generate-maven-artifacts\n{noformat}\nthere should be\n{noformat}\nant -Dversion=2.3.0-rc1 -Dspec.version=2.3.0 -Dbundle.version=2.3.0.cr1 clean dist dist-src generate-maven-artifacts\n{noformat}\n\nNote that there is no spell mistake here. The OSGi specification expects that the qualifier part of the version (the last one) is incremented based on the lexical order. So 2.3.0 < 2.3.0.rc1. But 2.3.0.alpha1 < 2.3.0.beta1 < 2.3.0.beta2 < 2.3.0.cr1 < 2.3.0.final\n\nAbout the remaining patch, it is really just about adding additional fields into the manifest.mf, addition which is triggered by the existence of the bundle.manifest.file property. I attached the diff of the manifest of the core of a 2.4.0 release, between the trunk version and the patched one. And If I remove the property bundle.manifest.file from the build.xml, there is no diff at all (apart from the Implementation-Version because of the timestamp).\n\n",
            "date": "2008-08-31T13:54:06.067+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "\nNicolas, does this mean we need to maintain the new\nMETA-INF/MANIFEST.MF, manually?  Ie on each release go edit it & bump\nup the versions in there?  (We need to update the wiki to this effect\ntoo)\n\nThere are quite a few \"copies\" of version in there, and for example we\nhave Bundle-Version: 2.4.0.dev and then Specification-Version:\n2.4.0-dev -- is that right?  (Ie, one uses \".\" and the other uses\n\"-\").\n\nI was able to generate a release candidate using your command above.\nWhat command would be used to generate the actual release?  (Ie, what\nto specify for version, spec.version and bundle.version?).\n\n{quote}\nSo 2.3.0 < 2.3.0.rc1. But 2.3.0.alpha1 < 2.3.0.beta1 < 2.3.0.beta2 < 2.3.0.cr1 < 2.3.0.final\n{quote}\n\nOK I'm a little confused by this.  What does \"cr1\" mean?  And, while I\ncan see the lexicographic sort order, your first case (2.3.0 <\n2.3.0rc1) seems backwards because 2.3.0rc1 (\"release candidate 1\")\narrives before 2.3.0 (this is the released 2.3.0 right?) in time,\nwhereas in the 2nd case those releases are in time order.  I'm\nconfused.\n\nSorry for the silly questions -- I know very little about OSGi bundles!",
            "date": "2008-09-04T14:50:07.944+0000",
            "id": 4
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "\nbq. Nicolas, does this mean we need to maintain the new META-INF/MANIFEST.MF, manually? Ie on each release go edit it & bump up the versions in there? (We need to update the wiki to this effect too)\n\nin the META-INF/MANIFEST.MF, only the Export-Package header is important to maintain. The other headers will never change or will be overrided by the build system. The other headers are also there for the users (aka me) that have imported the Lucene source in Eclipse and are willing to use it as an OSGi bundle.\n\nbq. There are quite a few \"copies\" of version in there, and for example we have Bundle-Version: 2.4.0.dev and then Specification-Version: 2.4.0-dev - is that right? (Ie, one uses \".\" and the other uses \"-\").\n\nAbout the different version schemes, yep, this is yet another one to maintain. The version number taken into account in a OSGI environment is \"Bundle-Version\", I don't know what the header \"Specification-Version\" is used for. I tried to refactor a little bit in the build system to generate the version numbers, but I failed, a more bigger patch would be needed (I am willing to do some if needed).\n\nbq. I was able to generate a release candidate using your command above. What command would be used to generate the actual release? (Ie, what to specify for version, spec.version and bundle.version?).\n\nIt will be just about adding the OSGi version to the current used command line:\n\n{noformat}\nant -Dversion=2.3.0 -Dbundle.version=2.3.0.final clean dist dist-src generate-maven-artifacts\n{noformat}\n\nbq. OK I'm a little confused by this. What does \"cr1\" mean?\n\nit would mean \"candidate release 1\". Not very english but it is the best we found when [discussing about it|http://mail-archives.apache.org/mod_mbox/ant-dev/200808.mbox/%3C635a05060808280848q6a4741bbx8014ae429cd518cf@mail.gmail.com%3E] for Ivy.\n\nbq. And, while I can see the lexicographic sort order, your first case (2.3.0 < 2.3.0rc1) seems backwards because 2.3.0rc1 (\"release candidate 1\") arrives before 2.3.0 (this is the released 2.3.0 right?) in time, whereas in the 2nd case those releases are in time order. I'm confused.\n\nThat was exactly my point. Due to the way OSGi orders the versions, if the release candicate version number is 2.3.0.rc1, and the final version is 2.3.0.final, then OSGi will understand that 2.3.0.final is previous to 2.3.0.rc1, which is wrong. In the second case, if the release candidate number is 2.3.0.cr1, then OSGI will be right and will order the different Lucene version as expected.\nYou could also choose 2.3.0.rc1 and 2.3.0.zfinal but then it is a question of taste :)\n\nbq. Sorry for the silly questions - I know very little about OSGi bundles!\n\nyour questions are welcomed Michael ;)\n",
            "date": "2008-09-04T16:16:49.905+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "\nThanks Nicolas.  I understand a bit more now :)\n\nOne problem: even though I was able to successfully run the above command, the resulting MANIFEST.MF in the Lucene core JAR (dist/maven/org/apache/lucene/lucene-core/2.3.0/lucene-core-2.3.0.jar) does not have any of your added lines (eg Export-Package) -- do you see this too?\n\n{quote}\nAbout the different version schemes, yep, this is yet another one to maintain. The version number taken into account in a OSGI environment is \"Bundle-Version\", I don't know what the header \"Specification-Version\" is used for. I tried to refactor a little bit in the build system to generate the version numbers, but I failed, a more bigger patch would be needed (I am willing to do some if needed).\n{quote}\nI think it's OK for now if we have to update the versions in META-INF/MANIFEST.MF manually as part of the release process?  (It sounds hard to get the build to autogen the versions).",
            "date": "2008-09-07T11:02:00.660+0000",
            "id": 6
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "About the missing header in the maven jar, this is weird because they exist in every other jar in the distrib but in the maven one. And this is a lot more strange to see that the manifest of the lucene core jar is in fact the manifest of the demo one... And I retested without the patch, everything works correctly. I don't see yet how it can happen.\n\nAnd the META-INF/MANIFEST.MF file doesn't have to be updated when releasing. The build process is overriding the header entries. The file is mainly a template. See the {{build-bundle-manifest}} macro in the patch.\nBut it will have to be updated after the release, just like the common-build.xml, to update the version number.",
            "date": "2008-09-10T20:37:42.199+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "{quote}\nAbout the missing header in the maven jar, this is weird because they exist in every other jar in the distrib but in the maven one. And this is a lot more strange to see that the manifest of the lucene core jar is in fact the manifest of the demo one... And I retested without the patch, everything works correctly. I don't see yet how it can happen. \n{quote}\nActually I can't find \"Export-Package\" header in any of the jars under dist/maven/* (at least, contrib/wordnet, contrib/highlighter and contrib/benchmark).\n\nI'll hold off committing until you figure this out :)",
            "date": "2008-09-12T11:46:30.951+0000",
            "id": 8
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "I would love to see bundle headers in the manifests. \n\nRE: {{{2.3.0 < 2.3.0.rc1}}} \nOne way to handle this problem is byI using a timestamp as qualifier when generating the version number. This ensures that each new build is of a higher version. At Eclipse we use a \".qualifier\" suffix which will be replaced with the actual CVS/SVN tag at build time. The CVS/SVN tag is actually a timestamp \"v20080916-1020\" or just an increasing number (eg., \"v1, v2, v3...\"). It depends on what a project favors. I could also imaging that this would be the SVN revision at build time.",
            "date": "2008-09-16T07:29:35.222+0000",
            "id": 9
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "This is a good idea as soon as you can be sure that you are building the different versions in the correct order. I think that in most use case, it will work. But it seems wrong to bind the versions order to the builds order.",
            "date": "2008-09-16T12:57:08.863+0000",
            "id": 10
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "{quote}\nBut it seems wrong to bind the versions order to the builds order. \n{quote}\n\nNot all the versions ... just those which appear to be of the *same* version (i.e., same tag or branch). If it's a different version, you would change the numbers before the qualifier. The qualifier really is just a build identifier. Giving it a meaning full name like {{.rc1}} is a nice thing to have. But in reality this is hard to manage with automatic provisioning/update systems. They usually handle automatic updates to a higher build of the same version or a different build of a higher version fine.",
            "date": "2008-09-16T13:23:31.187+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "Given the healthy discussion here, plus the fact that the current patch doesn't actually add Export-Package to the manifest, and this is the last bug holding up 2.4, I think we should take this off the plate for 2.4.",
            "date": "2008-09-17T12:34:16.721+0000",
            "id": 12
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Michael, when would be the last chance to submit a patch for inclusion into 2.4? I really, really need this because I'm about to embed Lucene into an OSGi based solution and this would really help.",
            "date": "2008-09-17T12:45:39.188+0000",
            "id": 13
        },
        {
            "author": "Michael McCandless",
            "body": "The current plan is to branch tomorrow, freeze the branch for ~10 days, and then release 2.4.  If we can get a patch that works here say in the next few days we might be able to get it into 2.4?\n\nIf/when we do 2.4.1 we could probably backport this into that as well (since it's a small change).",
            "date": "2008-09-17T14:18:46.908+0000",
            "id": 14
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Michael, attached is a patch which is less intrusive and mimics what Lucene does for Maven. It adds a new target to the {{build.xml}} called {{generate-osgi-bundles}}. This generated the OSGi bundles into {{dist/osgi}} (similar to maven). It uses Peter Kriens Bnd Tool to generate the bundle manifest. Thus, no additional work is involved for you guys.\n\nPlease review and comment. Feel free to commit meanwhile. I'll continue to work on OSGi-ifing the other JARs as well. However, this is a bit more tricky because it requires a correct classpath setup and I haven't fully got into how you build contrib jars.",
            "date": "2008-09-17T20:37:16.542+0000",
            "id": 15
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "This patch replaces the previous one and implements building OSGi JARS for all contribution. It follows the Maven build, i.e. an OSGi jar will only be created if an osgi.bnd.template file exists. I included one for the analyzers. Others can be contributed individually.",
            "date": "2008-09-18T09:17:57.148+0000",
            "id": 16
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Gunnar; I'll try this today.  What is the suggested ant command-line for building the dist now?",
            "date": "2008-09-18T10:12:56.778+0000",
            "id": 17
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "{{{\nant -Dversion=2.4.0 clean dist dist-src generate-maven-artifacts generate-osgi-artifacts\n}}}\n\nIt's important to note, that \"spec.version\" must always be {{major.minor.service}} (digits only). The qualifier is automatically computed based on the time stamp.",
            "date": "2008-09-18T10:24:27.823+0000",
            "id": 18
        },
        {
            "author": "Michael McCandless",
            "body": "Gunnar, when I apply the patch and run a toplevel \"ant clean\" followed by \"ant test\", I hit an error when trying to compile/test contrib/highlighter.  Are you seeing this too?\n\n{code}\ncompile-highlighter:\n     [echo] Building highlighter...\n\nbuild-memory:\n     [echo] Highlighter building dependency /lucene/lucene.osgi/build/contrib/memory/lucene-memory-2.4-dev.jar\n     [echo] Building memory...\n\njavacc-uptodate-check:\n\njavacc-notice:\n\njflex-uptodate-check:\n\njflex-notice:\n\ncommon.init:\n\nbuild-lucene:\n\ninit:\n\nclover.setup:\n\nclover.info:\n     [echo] \n     [echo]       Clover not found. Code coverage reports disabled.\n     [echo]   \t\n\nclover:\n\ncompile-core:\n    [mkdir] Created dir: /lucene/lucene.osgi/build/contrib/highlighter/classes/java\n    [javac] Compiling 22 source files to /lucene/lucene.osgi/build/contrib/highlighter/classes/java\n    [javac] /lucene/lucene.osgi/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.java\u02d8:35: package org.apache.lucene.index.memory does not exist\n    [javac] import org.apache.lucene.index.memory.MemoryIndex;\n    [javac]                                      ^\n    [javac] /lucene/lucene.osgi/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.java:312: cannot find symbol\n    [javac] symbol  : class MemoryIndex\n    [javac] location: class org.apache.lucene.search.highlight.WeightedSpanTermExtractor\n    [javac]       MemoryIndex indexer = new MemoryIndex();\n    [javac]       ^\n    [javac] /lucene/lucene.osgi/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.java:312: cannot find symbol\n    [javac] symbol  : class MemoryIndex\n    [javac] location: class org.apache.lucene.search.highlight.WeightedSpanTermExtractor\n    [javac]       MemoryIndex indexer = new MemoryIndex();\n    [javac]                                 ^\n    [javac] 3 errors\n\nBUILD FAILED\n/lucene/lucene.osgi/build.xml:562: The following error occurred while executing this line:\n/lucene/lucene.osgi/build.xml:552: The following error occurred while executing this line:\n/lucene/lucene.osgi/contrib/benchmark/build.xml:173: The following error occurred while executing this line:\n/lucene/lucene.osgi/contrib/highlighter/build.xml:41: The following error occurred while executing this line:\n/lucene/lucene.osgi/common-build.xml:229: The following error occurred while executing this line:\n/lucene/lucene.osgi/common-build.xml:505: Compile failed; see the compiler error output for details.\n{code}",
            "date": "2008-09-18T11:49:29.071+0000",
            "id": 19
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "I haven't tried this sequence but it looks like a general compile error.",
            "date": "2008-09-18T13:03:03.699+0000",
            "id": 20
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I haven't tried this sequence but it looks like a general compile error. \n\nRight, but a clean checkout runs fine, so it's something in the patch that somehow caused highlighter to no longer see the lucene-memory-2.4-dev.jar I think.",
            "date": "2008-09-18T13:39:52.947+0000",
            "id": 21
        },
        {
            "author": "Mark Miller",
            "body": "I think there is an unresolved issue with this anyway...I can't remember exactly, but I think one target that should work does not because it doesn't cooperate with the memory stuff (even though the overall build target does work). This may be another manifestation of that issue.",
            "date": "2008-09-18T13:45:33.754+0000",
            "id": 22
        },
        {
            "author": "Michael McCandless",
            "body": "Hmm -- if I revert this part of the patch:\n\n{code}\n@@ -218,7 +225,7 @@\n   <target name=\"compile-core\" depends=\"init, clover\"\n           description=\"Compiles core classes\">\n     <compile\n-      srcdir=\"src/java\"\n+      srcdir=\"${src.dir}\"\n       destdir=\"${build.dir}/classes/java\">\n       <classpath refid=\"classpath\"/>\n     </compile>\n{code}\n\nThen I'm able to \"ant clean\" and then \"ant test\" just fine.  I don't yet understand why that fixes it, though.",
            "date": "2008-09-18T14:23:05.542+0000",
            "id": 23
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Here is an updated patch which adds OSGi templates for highlighter and memory as well.\n\nI did a test using {{ant -Dversion=2.4.0 clean test dist dist-src generate-osgi-bundles}}. However, it fails because of some failing tests. I also noticed some OutOfMemoryErrors. \n\nIf I just run {{ant -Dversion=2.4.0 clean generate-osgi-bundles}} it doesn't compile and quits with the error you mentioned. However, that's in the build file area which I didn't touch.",
            "date": "2008-09-18T14:26:13.305+0000",
            "id": 24
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Ahh .. that makes sense. So it's caused by the patch. I changed it for consistency reasons but I guess it's better to revert that. It's related to how Ant resolves paths and overwrites/inherits properties.",
            "date": "2008-09-18T14:27:53.796+0000",
            "id": 25
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Here is the latest patch which reverts that. Now it compiles fine after a clean.",
            "date": "2008-09-18T14:29:48.183+0000",
            "id": 26
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Michael, I solved the issue with {{${src.dir}}}. \n\nThe property is initially set the following way:\n{{{\n<property name=\"src.dir\" location=\"src/java\"/>\n}}}\n\nThis resolves the path and sets the property to the actually path. It is then inherited to all sub ant calls. Thus, whenever you refer to {{${src.dir}}} it actually was already set to the outer most. Thus, when {{compile-core}} is invoked it actually compiles highlight instead of memory.\n\nIf the property is defined the following way, it will resolve at reference time and not at definition time.\n{{{\n<property name=\"src.dir\" value=\"src/java\"/>\n}}}",
            "date": "2008-09-18T15:45:19.206+0000",
            "id": 27
        },
        {
            "author": "Michael McCandless",
            "body": "Super, I'll make that change locally and test.",
            "date": "2008-09-18T16:00:15.509+0000",
            "id": 28
        },
        {
            "author": "Michael McCandless",
            "body": "OK I was able to generate the OSGI bundles. But, a few questions.\n\nUnder dist/osgi I see these files:\n\n{code}\n-rw-rw-rw-  1 mike  staff    5408 Sep 18 12:08 org.apache.lucene.core_2.4.0.200809181201.jar\n-rw-rw-rw-  1 mike  staff  770986 Sep 18 12:08 org.apache.lucene.core.source_2.4.0.200809181201.jar\n-rw-rw-rw-  1 mike  staff    5412 Sep 18 12:08 org.apache.lucene.analyzers_2.4.0.200809181208.jar\n-rw-rw-rw-  1 mike  staff  431926 Sep 18 12:08 org.apache.lucene.analyzers.source_2.4.0.200809181208.jar\n-rw-rw-rw-  1 mike  staff    5410 Sep 18 12:08 org.apache.lucene.memory_2.4.0.200809181208.jar\n-rw-rw-rw-  1 mike  staff   37197 Sep 18 12:08 org.apache.lucene.memory.source_2.4.0.200809181208.jar\n-rw-rw-rw-  1 mike  staff    5414 Sep 18 12:08 org.apache.lucene.highlighter_2.4.0.200809181208.jar\n-rw-rw-rw-  1 mike  staff   45676 Sep 18 12:08 org.apache.lucene.highlighter.source_2.4.0.200809181208.jar\n{code}\n\nShouldn't we make OSGI bundles for all contrib packages, and core & demo?\n\nThe source jar actually has .java sources, but the binary jars only have META-INF subdir, eg org.apache.lucene.core_2.4.0.200809181201.jar unzips to:\n\n{code}\nArchive:  dist/osgi/org.apache.lucene.core_2.4.0.200809181201.jar\n  inflating: META-INF/MANIFEST.MF    \n  inflating: META-INF/LICENSE.txt    \n  inflating: META-INF/NOTICE.txt     \n{code}\n\nIs that right?  Shouldn't this jar have the .class files?\n\nAt a higher level, can't we have the normal JARs produced by the build simply include the necessary OSGI headers in the manifest?  (Why make new JARs?).\n\nFinally, during the release process, what should we do with the OSGI bundles?  EG the Maven artifacts are copied to a distribution directory so that they are pushed to the central Maven repositories.\n",
            "date": "2008-09-18T16:21:00.387+0000",
            "id": 29
        },
        {
            "author": "Michael McCandless",
            "body": "One more confusion on my part.  The manifest for the core source jar (org.apache.lucene.core.source_2.4.0.200809181201.jar) is this:\n\n{code}\nManifest-Version: 1.0\nAnt-Version: Apache Ant 1.7.0\nCreated-By: 1.6.0_05-b13-52 (Apple Inc.)\nBundle-SymbolicName: org.apache.lucene.core.source\nBundle-ManifestVersion: 2\nBundle-Name: Lucene Search Engine: core source\nBundle-Version: 2.4.0.200809181201\nEclipse-SourceBundle: org.apache.lucene.core;version=\"2.4.0.2008091812\n 01\"\nBundle-Vendor: The Apache Software Foundation\nSpecification-Title: Lucene Search Engine: core\nSpecification-Version: 2.4.0\nSpecification-Vendor: The Apache Software Foundation\nImplementation-Title: org.apache.lucene\nImplementation-Version: 2.4.0 696661M - 2008-09-18 12:01:47\nImplementation-Vendor: The Apache Software Foundation\nX-Compile-Source-JDK: 1.4\nX-Compile-Target-JDK: 1.4\n{code}\n\n(Note the newline inside the timestamp on the Eclipse-SourceBundle -- is that OK?).\n\nWhereas the manifest for the binary jar (org.apache.lucene.core_2.4.0.200809181201.jar) is much smaller:\n\n{code}\nManifest-Version: 1.0\nBundle-Vendor: The Apache Software Foundation\nBundle-Version: 2.4.0.200809181201\nBundle-Name: Lucene Search Engine: core\nBundle-ManifestVersion: 2\nBundle-License: http://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: org.apache.lucene.core\nBundle-RequiredExecutionEnvironment: J2SE-1.5,J2SE-1.4\n{code}\n\nIs that expected?  And the manifest for the source jar is missing at least Bundle-License?",
            "date": "2008-09-18T16:23:39.586+0000",
            "id": 30
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "I have fixed my patch so the maven jar does contain the OSGi manifest, even if I don't understand really why the jar are generated twice.\nThis new patch contains improvements.\n* as suggested by Gunnar, the bundle version will be 2.9.0.$TIMESTAMP-dev.\n* the version of the export package in the header are now controlled by the ant task\n\n\nSo the command to build a rc version will be:\n{noformat}ant -Dspec.version=2.4.0 -Dqualifier.version=rc1 clean dist dist-src generate-maven-artifacts{noformat}\nwill generate:\n* a lucene-core-2.4.0-rc1.jar\n* a lucene-core-2.4.0-rc1.zip\n* a maven artifact in org/apache/lucene/lucene-core/2.4.0-rc1/lucene-core-2.4.0-rc1.jar\n* the jars will contain the bundle version: 2.4.0.20080918220130-rc1\n\n\nFor a final version:\n{noformat}ant -Dspec.version=2.4.0 -Dqualifier.version=final clean dist dist-src generate-maven-artifacts{noformat}\nwill generate:\n* a lucene-core-2.4.0-final.jar\n* a lucene-core-2.4.0-final.zip\n* a maven artifact in org/apache/lucene/lucene-core/2.4.0-final/lucene-core-2.4.0-final.jar\n* the jars will contain the bundle version: 2.4.0.20080918220130-final\n\n\nI know that Lucene distrib used to not add qualifier to the final release, it can still be done with:\n{noformat}ant -Dspec.version=2.4.0 -Dqualifier.version=final -Dversion=2.4.0 clean dist dist-src generate-maven-artifacts{noformat}\nwill generate:\n* a lucene-core-2.4.0.jar\n* a lucene-core-2.4.0.zip\n* a maven artifact in org/apache/lucene/lucene-core/2.4.0/lucene-core-2.4.0.jar\n* the jars will contain the bundle version: 2.4.0.20080918220130-final\n\n",
            "date": "2008-09-18T20:34:27.994+0000",
            "id": 31
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Michael, the attached patch adds the bundle license header for the source bundles. I also started to add descriptors for two more contrib jars (queries and xml parser). It gets a bit messy now because of split-packages, i.e. the queries jar exports the same package (org.apache.lucene.search) as Lucene core. This requires to add split packages headers to the manifests. Additional, the \"-\" (dash) is invalid so I had to override the default bundle symbolic name for the xml-query-parser jar. I use the package name.\n\nThe OSGi JARs don't need to be uploaded somewhere. It's enough to just put them on the FTP mirrors next to the regular distribution.\n\nNicholas, we generate different JARs for OSGi because I don't like to mix and match things. OSGi should be separated from Maven. They are different. For example, in OSGi it's a good practice to name the JAR like the bundle symbolic name and to include the version. Otherwise you'll run into problems because bundle repositories are usually not hierarchically organized like Maven repos.\n\nMichael, do we need a \"-final\" or \"-dev\" indicator on the JAR names and bundle versions?\n\n",
            "date": "2008-09-19T08:29:23.731+0000",
            "id": 32
        },
        {
            "author": "Nicolas Lalev\u00e9e",
            "body": "bq. Nicholas, we generate different JARs for OSGi because I don't like to mix and match things. OSGi should be separated from Maven.\n\nMaven is about building and resolving dependencies, OSGi is about a running environement. And they can be mixed with no worry, it even exists [a maven plugin|http://felix.apache.org/site/apache-felix-maven-osgi-plugin.html] to handle OSGi headers, and a [maven repository|http://www.springsource.com/repository] full of OSGi bundles.\n\nbq. They are different. For example, in OSGi it's a good practice to name the JAR like the bundle symbolic name and to include the version. Otherwise you'll run into problems because bundle repositories are usually not hierarchically organized like Maven repos.\n\nI don't think the purpose here is to make Lucene have its own OSGi repository. And nothing here prevents you to build a pure OSGi repository with those jars with the name convention you like.",
            "date": "2008-09-19T09:16:50.474+0000",
            "id": 33
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "I've updated the patch to include more descriptors for other contrib jars. Should be complete now (except for the ant libs, benchmarks and bdb which can be added later if necessary).\n\nIt's also possible to set the OSGi qualifier using property {{osgi.version.qualifier}}. The default is {{.yyyyMMddHHmm}}",
            "date": "2008-09-19T19:20:54.508+0000",
            "id": 34
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Gunnar.\n\nCan you and Nicolas work together to reconcile your two different patches here?  I really know very little about the specifics involved here and am involved more or less as a \"catalyst\" to try to move things along... thanks.",
            "date": "2008-09-19T20:33:50.709+0000",
            "id": 35
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "I'll collect feedback on the developers list on what way they prefer.",
            "date": "2008-09-19T21:10:22.135+0000",
            "id": 36
        },
        {
            "author": "Enrico Schnepel",
            "body": "Is there any progress on this issue?",
            "date": "2010-08-30T08:56:08.559+0000",
            "id": 37
        },
        {
            "author": "Kirby Bohling",
            "body": "Attaching a patch that generates a sibling jar file (hopefully it will replace the original Jar files before it is actually committed) that includes all of the OSGi Manifest requirements.  \n\nAll the regular unit tests appear to pass if I use the OSGi bundles instead of the standard jar files (by removing the <jar> task in the <jarify> macro defined in commons-build.xml, and modifying the <bnd> task to use output=\"@{destfile}\".  The backward compat tests appear to fail, but I haven't gotten to the bottom of that just yet.\n\nIt requires that the biz.aQute.bnd.jar be in the lib/ directory.\n\nFrom this site:\nhttp://www.aqute.biz/Bnd/Download\n\nI grabbed it off of this link:\nhttp://dl.dropbox.com/u/2590603/bnd/biz.aQute.bnd.jar\n\nThe bnd jar is a standard tool for generating valid and up-to-date OSGi headers with minimal problems.\n\nI downloaded the commons-math jar file to see the set of headers the commons projects added to their bundles.\n\nI have not tested any of the contrib bundles in an OSGi environment, but I am using the Lucene Core bundle generated by this.  It is also likely that the ${Name} value should be set in all of the sub-directories to generate better human consumable names for the bundles, currently they are all set to \"Lucene\".  Potentially a better description would be useful also.  I believe a couple will have problems (lucli being the most obvious because it isn't in the org.apache.lucene package structure).  I can do more testing and ensure as much as I can works if this patch would be applied.\n\nI can port and update this to the 4.0 branch if desirable, and it should be simple to modify to just generate the final Jar files.",
            "date": "2010-12-08T22:31:06.512+0000",
            "id": 38
        },
        {
            "author": "Luca Stancapiano",
            "body": "I'm interested to this feauture too. Is it committed?",
            "date": "2011-05-30T06:55:21.473+0000",
            "id": 39
        },
        {
            "author": "Ryan McKinley",
            "body": "I have not followed this patch and don't know how it works...  but this may be pretty easy to add to the (officially unsupported) maven build:\n{code}\n          <plugin>\n              <groupId>org.apache.felix</groupId>\n              <artifactId>maven-bundle-plugin</artifactId>\n              <version>1.4.0</version>\n              <extensions>true</extensions>\n              <configuration>\n                  <instructions>\n                      <Bundle-SymbolicName>${pom.groupId}.${pom.artifactId}</Bundle-SymbolicName>\n                      <Bundle-Name>${pom.name}</Bundle-Name>\n                      <Bundle-Version>${pom.version}</Bundle-Version>\n                      <Bundle-Activator>org.wso2.mbp.sample01.Activator</Bundle-Activator>\n                      <Private-Package>org.wso2.mbp.sample01</Private-Package>\n                  </instructions>\n              </configuration>\n          </plugin>\n{code}\n\nhttp://wso2.org/library/tutorials/develop-osgi-bundles-using-maven-bundle-plugin\n\n\n",
            "date": "2011-05-30T12:55:26.850+0000",
            "id": 40
        },
        {
            "author": "Daniele",
            "body": "The solution is almost that one, just a few corrections: \n\n<plugin>\n              <groupId>org.apache.felix</groupId>\n              <artifactId>maven-bundle-plugin</artifactId>\n              <version>2.3.4</version>\n              <extensions>true</extensions>\n              <configuration>\n                  <instructions>\n                      <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>\n                      <Bundle-Name>${project.name}</Bundle-Name>\n                      <Bundle-Version>${project.version}</Bundle-Version>\n                  </instructions>\n              </configuration>\n          </plugin>\n\nI'd also add a executions block (direct child of the plugin block)\n\n          <executions>\n            <execution>\n              <id>bundle-manifest</id>\n              <phase>process-classes</phase>\n              <goals>\n                <goal>manifest</goal>\n              </goals>\n            </execution>\n          </executions>\n\nso that is not needed to change the packaging type to bundle to make the MANIFEST information to be attached. ",
            "date": "2011-05-30T13:32:09.951+0000",
            "id": 41
        },
        {
            "author": "Ryan McKinley",
            "body": "Thanks Daniele -- can you make a patch for this?\n\nI don't use OSGi so I have no idea if the results are valid or not, but would happily commit changes to the maven poms if someone verifies the changes work.\n",
            "date": "2011-05-30T14:08:55.502+0000",
            "id": 42
        },
        {
            "author": "Luca Stancapiano",
            "body": "I don't see maven in the lucene sources. It is built with ant. The first solution seems ok....why it was not committed?",
            "date": "2011-05-30T14:39:54.210+0000",
            "id": 43
        },
        {
            "author": "Ryan McKinley",
            "body": "Hi Luca -- maven support is in the dev-tools folder:\nhttps://svn.apache.org/repos/asf/lucene/dev/trunk/dev-tools/maven\n\nMy understanding is that OSGi needs to know about the dependencies -- i don't know how (or if) our ant build can support that.  ",
            "date": "2011-05-30T16:23:03.069+0000",
            "id": 44
        },
        {
            "author": "Daniele",
            "body": "oh, well, the maven plugin just automatically generates the Manifest.mf information bases on the actual code base. It works nice but is not the only solution. \nYou can run http://bndtools.org/ against the jar to make a new jar with correct Manifest OSGi instructions, that's what I did to make the 3.1.0 release work on an OSGi environment. I think you can also integrate bnd with an ant script. \nOr you can just keep the source Manifest file up to date, but you have to keep exported packages (and version) aligned manually. \n\nIn the end is just a matter of releasing a jar with a few more meta information in the standard Manifest.MF file, nothing more.",
            "date": "2011-05-30T22:56:56.595+0000",
            "id": 45
        },
        {
            "author": "Ryan Hill",
            "body": "The bndtools approach works for me -- I believe that is that the Jackson (JSON) project does as well.",
            "date": "2011-05-30T23:29:36.222+0000",
            "id": 46
        },
        {
            "author": "Luca Stancapiano",
            "body": "Ok ....I created a patch according the pom configuration seen before. It creates osgi bundles for lucene-core and the other modules. I tested them inside felix and they are installed correctly. There are not mainteinance problems because the packages are generated dinamically by the maven-bundle-plugin configured in this patch",
            "date": "2011-06-01T11:13:10.490+0000",
            "id": 47
        },
        {
            "author": "Ryan McKinley",
            "body": "Thanks Luca!\n\nWhen you upload a patch, can you click the \"Grant license to ASF for inclusion in ASF works\" button?  It seems a little silly for this small patch, but that is ASF policy.\n\nthanks",
            "date": "2011-06-01T12:43:02.746+0000",
            "id": 48
        },
        {
            "author": "Ryan McKinley",
            "body": "This is the same patch, but moved to the lucene parent pom -- this way it applies to all artifacts rather then just the lucene core.jar\n\nThe output manifest now looks like:\n{code}\nManifest-Version: 1.0\nArchiver-Version: Plexus Archiver\nCreated-By: Apache Maven Bundle Plugin\nBuilt-By: ryan\nBuild-Jdk: 1.6.0_13\nImplementation-Vendor-Id: org.apache.lucene\nExtension-Name: org.apache.lucene\nImplementation-Title: org.apache.lucene\nImplementation-Vendor: The Apache Software Foundation\nImplementation-Version: 4.0-SNAPSHOT 1130132 - ryan - 2011-06-01 09:12\n :35\nSpecification-Title: Lucene Core\nSpecification-Vendor: The Apache Software Foundation\nSpecification-Version: 4.0.0.2011.06.01.09.12.35\nX-Compile-Source-JDK: 1.5\nX-Compile-Target-JDK: 1.5\nExport-Package: org.apache.lucene.analysis;uses:=\"org.apache.lucene.ut\n il,org.apache.lucene.store,org.apache.lucene.document,org.apache.luce\n ne.analysis.tokenattributes,org.apache.lucene.index\",org.apache.lucen\n e.analysis.tokenattributes;uses:=\"org.apache.lucene.util,org.apache.l\n ucene.index\",org.apache.lucene.document;uses:=\"org.apache.lucene.util\n ,org.apache.lucene.analysis\",org.apache.lucene.index;uses:=\"org.apach\n e.lucene.search,org.apache.lucene.util,org.apache.lucene.store,org.ap\n ache.lucene.document,org.apache.lucene.index.codecs,org.apache.lucene\n .analysis.tokenattributes,org.apache.lucene.analysis\",org.apache.luce\n ne.index.codecs;uses:=\"org.apache.lucene.index,org.apache.lucene.util\n ,org.apache.lucene.store,org.apache.lucene.index.codecs.standard,org.\n apache.lucene.index.codecs.pulsing,org.apache.lucene.index.codecs.sim\n pletext,org.apache.lucene.index.codecs.preflex,org.apache.lucene.util\n .packed,org.apache.lucene.util.fst\",org.apache.lucene.index.codecs.in\n tblock;uses:=\"org.apache.lucene.store,org.apache.lucene.index.codecs.\n sep,org.apache.lucene.util\",org.apache.lucene.index.codecs.preflex;us\n es:=\"org.apache.lucene.store,org.apache.lucene.index.codecs,org.apach\n e.lucene.index,org.apache.lucene.util,org.apache.lucene.index.codecs.\n standard\",org.apache.lucene.index.codecs.pulsing;uses:=\"org.apache.lu\n cene.index.codecs.standard,org.apache.lucene.util,org.apache.lucene.s\n tore,org.apache.lucene.index.codecs,org.apache.lucene.index\",org.apac\n he.lucene.index.codecs.sep;uses:=\"org.apache.lucene.store,org.apache.\n lucene.util,org.apache.lucene.index,org.apache.lucene.index.codecs\",o\n rg.apache.lucene.index.codecs.simpletext;uses:=\"org.apache.lucene.sto\n re,org.apache.lucene.index.codecs,org.apache.lucene.index,org.apache.\n lucene.util,org.apache.lucene.util.fst\",org.apache.lucene.index.codec\n s.standard;uses:=\"org.apache.lucene.store,org.apache.lucene.index.cod\n ecs,org.apache.lucene.index,org.apache.lucene.util\",org.apache.lucene\n ,org.apache.lucene.messages,org.apache.lucene.queryParser;uses:=\"org.\n apache.lucene.util,org.apache.lucene.search,org.apache.lucene.analysi\n s,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.docume\n nt,org.apache.lucene.index\",org.apache.lucene.search;uses:=\"org.apach\n e.lucene.util,org.apache.lucene.util.automaton,org.apache.lucene.inde\n x,org.apache.lucene.util.packed,org.apache.lucene.search.cache,org.ap\n ache.lucene.store,org.apache.lucene.document,org.apache.lucene.analys\n is.tokenattributes,org.apache.lucene.analysis,org.apache.lucene.searc\n h.spans\",org.apache.lucene.search.cache;uses:=\"org.apache.lucene.util\n ,org.apache.lucene.search,org.apache.lucene.index,org.apache.lucene.u\n til.packed\",org.apache.lucene.search.function;uses:=\"org.apache.lucen\n e.search,org.apache.lucene.index,org.apache.lucene.util\",org.apache.l\n ucene.search.payloads;uses:=\"org.apache.lucene.search,org.apache.luce\n ne.search.spans,org.apache.lucene.index,org.apache.lucene.util\",org.a\n pache.lucene.search.spans;uses:=\"org.apache.lucene.util,org.apache.lu\n cene.search,org.apache.lucene.index\",org.apache.lucene.store;uses:=\"o\n rg.apache.lucene.util\",org.apache.lucene.util;uses:=\"org.apache.lucen\n e.store,org.apache.lucene.index,org.apache.lucene,org.apache.lucene.s\n earch\",org.apache.lucene.util.automaton;uses:=\"org.apache.lucene.util\n \",org.apache.lucene.util.fst;uses:=\"org.apache.lucene.util,org.apache\n .lucene.store\",org.apache.lucene.util.packed;uses:=\"org.apache.lucene\n .util,org.apache.lucene.store\"\nTool: Bnd-1.15.0\nBundle-Name: Lucene Core\nBundle-Vendor: The Apache Software Foundation\nBundle-Version: 4.0.0.SNAPSHOT\nBnd-LastModified: 1306934011182\nBundle-ManifestVersion: 2\nBundle-License: http://www.apache.org/licenses/LICENSE-2.0.txt\nBundle-Description: Apache Lucene Java Core\nBundle-SymbolicName: org.apache.lucene.core\nBundle-DocURL: http://www.apache.org/\n{code}\n",
            "date": "2011-06-01T13:38:40.424+0000",
            "id": 49
        },
        {
            "author": "Ryan McKinley",
            "body": "committed to trunk in r1130150\n\nCan someone verify that this makes useful OSGi artifacts before I resolve the issue?",
            "date": "2011-06-01T13:42:03.609+0000",
            "id": 50
        },
        {
            "author": "Luca Stancapiano",
            "body": "Ryan.... the lucene core is the parent for all modules poms, so this fixing could be not important",
            "date": "2011-06-01T14:08:00.963+0000",
            "id": 51
        },
        {
            "author": "Ryan McKinley",
            "body": "bq. lucene core is the parent for all modules poms\n\nlucene yes, but not solr",
            "date": "2011-06-01T14:24:46.942+0000",
            "id": 52
        },
        {
            "author": "Luca Stancapiano",
            "body": "Ok....I tested....it's ok.... now Solr packages too are OSGI bundle",
            "date": "2011-06-01T14:46:29.529+0000",
            "id": 53
        },
        {
            "author": "Ryan McKinley",
            "body": "merged with 3.x in r1130173\n\nHowever this still does not have OSGi support in the official build.\n\nFor that, it seems like the right approach would be with bndtools.  I will resolve this issue, and we can make a new issue if someone wants to bite off integrating with the ant build.  The one thing i am against is somethign that needs manual maintance everytime something changes.\n",
            "date": "2011-06-01T15:02:28.363+0000",
            "id": 54
        },
        {
            "author": "Luca Stancapiano",
            "body": "Can you maintain two different binaries, one from ant and one from maven for each module? It would very useful for who don't develope with lucene/solr ",
            "date": "2011-06-01T15:11:33.515+0000",
            "id": 55
        },
        {
            "author": "Ryan McKinley",
            "body": "bq. Can you maintain two different binaries\n\nNot sure what that means... are you asking if Apache will release two versions of the same thing?  If so, no.\n\nThe maven integration is an officially unsupported developer build tool, so will not be part of the official release -- but it does let someone easily build OSGi bundles, so it is a good step forward.  If there is an ant way to do this, that could become part of the official release process.\n",
            "date": "2011-06-01T15:26:27.347+0000",
            "id": 56
        },
        {
            "author": "Luca Stancapiano",
            "body": "yes it is... so I open a new ticket",
            "date": "2011-06-01T15:34:32.825+0000",
            "id": 57
        },
        {
            "author": "Ryan McKinley",
            "body": "ok -- my assumption was that integrating with ant is difficult (and requires knowing all the dependencies) -- we can keep using this ticket if you want.  simply hit the 'reopen issue' button at the top",
            "date": "2011-06-01T15:37:40.731+0000",
            "id": 58
        },
        {
            "author": "Luca Stancapiano",
            "body": "I've just created:\n\nhttps://issues.apache.org/jira/browse/LUCENE-3167",
            "date": "2011-06-01T15:44:17.302+0000",
            "id": 59
        },
        {
            "author": "Gunnar Wagenknecht",
            "body": "Just curious, how did you solve the split packages issues and invalid symbolic names with some Lucene modules? I can't see it in the parent pom.",
            "date": "2011-06-05T17:46:25.066+0000",
            "id": 60
        },
        {
            "author": "Ryan McKinley",
            "body": "take a look at:\nhttps://issues.apache.org/jira/browse/LUCENE-3172\n\nI don't use OSGi so i can't verify it works, but i the descriptio seems relevant to your question",
            "date": "2011-06-05T17:49:08.449+0000",
            "id": 61
        },
        {
            "author": "Luca Stancapiano",
            "body": "The problem was resolved here:\n\nhttps://issues.apache.org/jira/browse/LUCENE-3172\n\nIt was enough to add the property in the maven-bundle-plugin in the pom.xml.template:\n\nExport-Package: *;-split-package:=merge-first",
            "date": "2011-06-12T14:48:36.970+0000",
            "id": 62
        },
        {
            "author": "Robert Muir",
            "body": "bulk close for 3.3",
            "date": "2011-07-02T02:40:18.078+0000",
            "id": 63
        },
        {
            "author": "Philipp Nanz",
            "body": "Can someone explain this to me: This issue is marked as resolved in 3.3, it's even listed in the changelog for 3.3, yet the lucene-core.jar file is clearly not OSGI-enabled... What's up with that?!",
            "date": "2011-07-03T13:28:08.846+0000",
            "id": 64
        },
        {
            "author": "Luca Stancapiano",
            "body": "This task resolves only the maven version of lucene. So you are forced to download the 3.3 lucene version and compile it with maven. The official release is compiled with Ant so the online binaries are not released for OSGI.\nActually there is a open task to create an OSGI bundle through ant. It is under work:\n\nhttps://issues.apache.org/jira/browse/LUCENE-3167",
            "date": "2011-07-03T15:14:10.336+0000",
            "id": 65
        },
        {
            "author": "Uwe Schindler",
            "body": "Reopening to change the fix status (\"Fixed\" is wrong)",
            "date": "2016-10-25T19:42:35.806+0000",
            "id": 66
        }
    ],
    "component": "general/build",
    "description": "In order to use Lucene in an OSGi environment, some additional headers are needed in the manifest of the jar. As Lucene has no dependency, it is pretty straight forward and it ill be easy to maintain I think.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1344",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Make the Lucene jar an OSGi bundle",
    "systemSpecification": true,
    "version": ""
}