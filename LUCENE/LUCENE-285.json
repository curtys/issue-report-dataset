{
    "comments": [
        {
            "author": "Nicolas Maisonneuve",
            "body": "Created an attachment (id=13009)\nthe source\n",
            "date": "2004-10-10T18:48:32.000+0000",
            "id": 0
        },
        {
            "author": "Otis Gospodnetic",
            "body": "It looks like this has actually been in CVS/SVN since 2004, so I'm closing this.  Thanks Nicolas.\n",
            "date": "2006-06-07T01:38:32.000+0000",
            "id": 1
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Done a while back.",
            "date": "2006-06-07T01:39:05.000+0000",
            "id": 2
        },
        {
            "author": "C\u00e9drik LIME",
            "body": "Not: not sure this is the right way of proceeding with JIRA. Should I open a new bug report instead of commenting?\n\nThis implementation (as of Lucene 1.9.1) uses an un-optimized implementation of\nthe Levenshtein Distance algorithm (it uses way too much memory). Please see Bug\n38911 (http://issues.apache.org/bugzilla/show_bug.cgi?id=38911) for more information and the new implementation.",
            "date": "2006-07-01T00:00:23.000+0000",
            "id": 3
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Hi C\u00e9drik.  Yes, please open a new issue and attach the patch if you have it.  It looks like this would create a commons-lang dependency, in which case the build script for the spell checker might need a small tweak, too.\n",
            "date": "2006-07-01T03:19:45.000+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "hy,\ni developed a SpellChecker based on the David Spencer code (DSc) but more flexible.\nthe structure of the index is inspired of the DSc (for a 3-4 gram):\nword:\ngram3:\ngram4:\n \n3start:\n4start:\n..\n3end:\n4end:\n..\ntransposition:\n \nThis index is a dictonary so there isn't the \"freq\" field like with DSc version.\nit's independant of the user index. So we can add words becoming to several\nfields of several index for example or, why not, to a file with a list of words.\nThe suggestSimilar method return a list of suggests word sorted by the\nLevenshtein distance and optionaly to the popularity of the word for a specific\nfield in a user index. More of that, this list can be restricted only to words\npresent in a specific field of a user index.\n \nSee the test case.\n \ni hope this code will be put in the lucene sandbox. \n \nNicolas Maisonneuve",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-285",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "David Spencer Spell Checker improved",
    "systemSpecification": true,
    "version": ""
}