{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Hi Drew, I agree this is a bug.\n\nI think it should simply do what the javadoc says:\n\n{noformat}\nif (keywordSet.contains(word))\n  keywordAtt.setKeyword(true);\n{noformat}\n",
            "date": "2011-01-30T18:00:25.631+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. If a token is already marked as a keyword (KeywordAttribute.isKeyword() == true), perhaps the KeywordMarkerFilterFactory should not re-set the state to false.\n\nhey Drew, I think I see you point here but I disagree that we should consider the previous state of the KeywordAttribute in this filter. IMO this filter is very clearly defined and extremely simple. If you want it to have different behavior eg. considering the attrs state you can simply write your own filter that. This one is more or less just a simple PoC how the KeywordAttribute works / should be used etc. \n\nI think if we change the behavior we will have JIRA issues that say \"KeywordMarkerFilter does not reset attribute state to false for tokens not in protwords.txt\"  - you know what I mean, this one is tricky and special use-cases should have their own kind of trivial impls.\n",
            "date": "2011-01-30T18:05:17.095+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "Simon, i think the key point here is that the code does this:\n{noformat}\nkeywordAtt.setKeyword(keywordSet.contains(word));\n{noformat}\n\nI am suggesting this be changed to:\n{noformat}\nif (keywordSet.contains(word))\n  keywordAtt.setKeyword(true);\n{noformat}\n\nThis is more consistent with what the javadoc says it does: it doesn't speak of unsetting any attributes.",
            "date": "2011-01-30T18:07:55.750+0000",
            "id": 2
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. Simon, i think the key point here is that the code does this:\n\nso lets not rush on this - As far as I can recall this has not been released right? so we might rather figure out what makes most sense, fixing code or fixing javadoc. if you have 4 filters A  < -- A_kw < -- B <--  B_kw <-- Tokenizer and the term is in B_kw but not in A_kw the current code does the right thing while the change you suggest doesn't IMO. So I wonder if we should rather fix the javadoc than the code. I mean if somebody needs this behavior this is super simple to implement. Or maybe we have an option to reset keyword or not?",
            "date": "2011-01-30T18:13:43.339+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Honestly I didnt know the filter did what drew reported, or i would have raised this bug myself.\n\nThe problem is this is inconsistent even with the other filters that use keyword attribute.\nIts more obvious with the decorator pattern that if you have:\n{noformat}\nKeywordFilter( { \"dogs\", \"birds\", \"trees\", \"houses\" })\n{noformat}\n\nThat this is equivalent to:\n{noformat}\nKeywordFilter( { \"dogs\", \"birds\" } )\nKeywordFilter( { \"trees\", \"houses\" })\n{noformat}\n\nThis is how all the other tokenstreams work, e.g. StopFilter etc.\n",
            "date": "2011-01-30T18:17:39.341+0000",
            "id": 4
        },
        {
            "author": "Simon Willnauer",
            "body": "{quote}\nif (keywordSet.contains(word))\n  keywordAtt.setKeyword(true);\n{quote}\nI just looked at the code and that change makes sense actually - it should really be consistent to StopFitler etc.\n\nsimon",
            "date": "2011-01-30T18:23:10.159+0000",
            "id": 5
        },
        {
            "author": "Drew Farris",
            "body": "Revised patch that implements:\n\n{code}\nif (keywordSet.contains(word))\n  keywordAtt.setKeyword(true);\n{code}\n\n",
            "date": "2011-01-30T18:44:15.420+0000",
            "id": 6
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1065621, 1065626 (branch_3x)\n\nThanks Drew... glad you caught this one!",
            "date": "2011-01-31T14:46:08.006+0000",
            "id": 7
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:32.243+0000",
            "id": 8
        }
    ],
    "component": "modules/analysis",
    "description": "KeywordMarkerFilter sets true or false for the KeywordAttribute on all tokens. This erases previous state established further up the filter chain, for example in the case where a custom filter wants to prevent a token from being stemmed. \n\nIf a token is already marked as a keyword (KeywordAttribute.isKeyword() == true), perhaps the KeywordMarkerFilterFactory should not re-set the state to false.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2901",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "KeywordMarkerFilter resets keyword attribute state to false for tokens not in protwords.txt",
    "systemSpecification": true,
    "version": "3.1"
}