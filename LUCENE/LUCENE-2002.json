{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Uwe I can take this if you want?  Have you started?",
            "date": "2009-10-21T15:55:24.542+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "Take it! I haven't started.",
            "date": "2009-10-21T15:58:06.238+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "During 1987, I also found a bug in Highlighter, which is also not able to handle the posIncr of stopwords correctly. Add another issue?",
            "date": "2009-10-21T16:06:53.795+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Add another issue?\n\n+1!",
            "date": "2009-10-21T16:14:57.494+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Issue created!",
            "date": "2009-10-21T19:56:49.776+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Attached patch, for 2.9..x\n\nI added required Version param to QueryParser, MultiFieldQueryParser\nand ComplexPhraseQueryParser (contrib), which enable position\nincrements when matchVersion >= LUCENE_19.\n\nFor the deprecated ctors it defaults to Version.LUCENE_24 for back\ncompat.\n\nUnfortunately, JavaCC generates two public ctors for QueryParser (one taking\nCharStream, another taking QueryParserTokenManager) that I don't know\nhow to override to take a Version param.",
            "date": "2009-10-21T20:57:08.878+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Mike, saw a couple of these and laughed a little :)\n\n@param matchVersion Lucene version to *patch*; this is passed through to QueryParser.\n",
            "date": "2009-10-21T21:09:42.204+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "Eek!  My fingers are doing the thinking, apparently :)  Been typing that word a bit too much!!  I'll fix.  Thanks.",
            "date": "2009-10-21T21:22:05.635+0000",
            "id": 7
        },
        {
            "author": "Mark Miller",
            "body": "I think we need more doc as well - stopfilter is not just tied to standardanalyzer - standardanalyzer just happens to use it. Many analyzers can use a stopfilter and one of the stopfilters params is to enable or disable this setting.",
            "date": "2009-10-22T15:18:22.163+0000",
            "id": 8
        },
        {
            "author": "Grant Ingersoll",
            "body": "{quote}Unfortunately, JavaCC generates two public ctors for QueryParser (one taking\nCharStream, another taking QueryParserTokenManager) that I don't know\nhow to override to take a Version param.\n{quote}\n\nThose two constructors are bad anyway b/c if anyone calls them, it won't set the Analyzer, etc.  Thus, I think, unfortunately, the answer just might be to edit the generated Java file by hand and make them be protected.  I've looked through the JavaCC docs and I don't see any other way.  Of course, the big down side to this is we now need to do this going forward. \n",
            "date": "2009-10-22T15:28:40.811+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Thus, I think, unfortunately, the answer just might be to edit the generated Java file by hand and make them be protected.\n\nOK I'll take that approach, and I guess make a unit test that peeks & confirms these methods are still protected (to catch us in the future).",
            "date": "2009-10-22T16:08:02.173+0000",
            "id": 10
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Many analyzers can use a stopfilter and one of the stopfilters params is to enable or disable this setting.\n\nIn fact, I think we may have to un-deprecate StopFilter.get/setEnablePositionIncrementsDefault for this reason?  Many analyzers do embed StopFilter without exposing control over this setting, and so the only way (up to & including 2.9) to change the setting is to set the static default with StopFilter.  If we remove that then we've taken that control away.\n\nOr, with this issue I could add Version to all contrib analyzers that embed StopFilter.  I think I like that solution better (we shouldn't be using static defaults).  I'll go forward w/ that shortly unless any objections come up... this'd also take care of analyzers that use StandardTokenizer (ie, we'll control fixing the acronym bug with Version as well).",
            "date": "2009-10-22T16:17:58.537+0000",
            "id": 11
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nOr, with this issue I could add Version to all contrib analyzers that embed StopFilter. I think I like that solution better (we shouldn't be using static defaults). I'll go forward w/ that shortly unless any objections come up... this'd also take care of analyzers that use StandardTokenizer (ie, we'll control fixing the acronym bug with Version as well).\n{quote}\n\nMichael, if you do this, can you mark LUCENE-1373 as resolved? :)",
            "date": "2009-10-22T16:21:52.279+0000",
            "id": 12
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Michael, if you do this, can you mark LUCENE-1373 as resolved?\n\nAhh yes indeed.  Is there a corresponding issue about not being able to control stop filter pos incr?  Can't keep track of all these issues anymore!",
            "date": "2009-10-22T16:26:21.685+0000",
            "id": 13
        },
        {
            "author": "Robert Muir",
            "body": "bq. Ahh yes indeed. Is there a corresponding issue about not being able to control stop filter pos incr? Can't keep track of all these issues anymore!\nMichael, what about LUCENE-1258?",
            "date": "2009-10-22T16:29:57.727+0000",
            "id": 14
        },
        {
            "author": "Michael McCandless",
            "body": "bq.  Michael, what about LUCENE-1258?\n\nOh yeah, and look who opened that one :)   I'll go resolve as a dup of this one.",
            "date": "2009-10-22T16:34:31.597+0000",
            "id": 15
        },
        {
            "author": "Grant Ingersoll",
            "body": "bq. OK I'll take that approach, and I guess make a unit test that peeks & confirms these methods are still protected (to catch us in the future).\n\nWe may want to see if it can be automated in the ANT task so that we don't have to remember to do it by hand each time.  ",
            "date": "2009-10-22T19:45:07.087+0000",
            "id": 16
        },
        {
            "author": "Michael McCandless",
            "body": "bq. We may want to see if it can be automated in the ANT task so that we don't have to remember to do it by hand each time.\n\nThat would be fabulous but is way beyond my ant skills :)  Any ant pros out there want to try?",
            "date": "2009-10-22T19:50:35.295+0000",
            "id": 17
        },
        {
            "author": "Uwe Schindler",
            "body": "Eric Hatcher :-)\n\nMaybe the search-replace with regex functionality can do it.\nsee: [http://ant.apache.org/manual/OptionalTasks/replaceregexp.html]",
            "date": "2009-10-22T19:54:40.440+0000",
            "id": 18
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Maybe the search-replace with regex functionality can do it.\n\nExcellent!  That worked like a charm.  I'll still leave the unit test in place to catch us if this fails...",
            "date": "2009-10-22T20:37:39.349+0000",
            "id": 19
        },
        {
            "author": "Uwe Schindler",
            "body": "Cool. Did you check the minimum ANT version needed for this? If the current BUILD.txt minimum does not fit, we shoudl update the build, docs. My problem: I didn't found the minimum version for replaceregexp in the docs.",
            "date": "2009-10-22T20:41:24.877+0000",
            "id": 20
        },
        {
            "author": "Michael McCandless",
            "body": "I think we are good: I just looked @ 1.6.3's javadocs (we specify ant 1.6.3 in BUILD.txt) and it's got the replaceregexp task.",
            "date": "2009-10-22T20:55:28.048+0000",
            "id": 21
        },
        {
            "author": "Michael McCandless",
            "body": "New patch attached.  All tests pass.  Changes:\n\n  * Fixed the \"patch\" -> \"match\" typo\n\n  * Fixed build.xml to make 2 autogen'd (by JavaCC) public QueryParser\n    ctors protected, and added unit test to assert this\n\n  * Added Version matchVersion param to all (I think!) contrib\n    analyzers that instantiate either StandardTokenizer (to manage\n    changing the \"fix invalid acronym\" setting across versions), or\n    StopFilter (to manage \"enable pos incr\" setting across versions),\n    or, both, and threaded it down to StandardTokenizer & StopFilter\n\nI didn't add Version to StopFilter nor StopAnalyzer; I think it's\nbetter to up-front require the \"enablePositionIncrements\" to their\nctors.\n",
            "date": "2009-10-22T20:57:42.820+0000",
            "id": 22
        },
        {
            "author": "Uwe Schindler",
            "body": "Looks good.\n\nbq. I didn't add Version to StopFilter nor StopAnalyzer; I think it's better to up-front require the \"enablePositionIncrements\" to their ctors.\n\nI would add it to StopAnalyzer, StopFilter is not so important (because low-level). But that's my opinion.",
            "date": "2009-10-22T21:09:41.536+0000",
            "id": 23
        },
        {
            "author": "Grant Ingersoll",
            "body": "I'm getting errors applying this, but they look like they are just in the javadoc comments..",
            "date": "2009-10-23T12:11:25.138+0000",
            "id": 24
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I'm getting errors applying this, but they look like they are just in the javadoc comments..\n\nAre the patch errors near the $Id$  tags?  (Which we've removed from trunk, for this reason).\n\nbq. I would add it to StopAnalyzer\n\nOK I'll add.",
            "date": "2009-10-23T12:27:06.218+0000",
            "id": 25
        },
        {
            "author": "Grant Ingersoll",
            "body": "Yes, they are near the $Id tags.  That's kind of an odd error, though. At any rate, I'm running the tests now.",
            "date": "2009-10-23T12:34:32.746+0000",
            "id": 26
        },
        {
            "author": "Uwe Schindler",
            "body": "They only appear with native patch. All higher-level svn related patch impls \"know\" this. I think bekause oth this they were removed in trunk.",
            "date": "2009-10-23T12:51:58.292+0000",
            "id": 27
        },
        {
            "author": "Grant Ingersoll",
            "body": "+1 on this patch.",
            "date": "2009-10-23T12:59:54.625+0000",
            "id": 28
        },
        {
            "author": "Uwe Schindler",
            "body": "I am happy to then use the merge operations in SVN tru apply this in trunk!\n\n+1 from my side!",
            "date": "2009-10-23T13:18:28.208+0000",
            "id": 29
        },
        {
            "author": "Michael McCandless",
            "body": "New patch, adding Version to StopAnalyzer as well.\n\nThanks for reviewing -- I'll commit in a bit!",
            "date": "2009-10-23T14:29:35.105+0000",
            "id": 30
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I am happy to then use the merge operations in SVN tru apply this in trunk!\n\nAre you offering to port this to trunk?  That'd be nice :)  I wasn't looking forward to that part!\n\nNote that on trunk it'll be fairly difference since we'll remove (not deprecate) the old methods, and, we have to go fix all usage of the deprecated APIs (eg in tests, contrib) which I haven't done (which I haven't done for 2.9).",
            "date": "2009-10-23T14:32:40.661+0000",
            "id": 31
        },
        {
            "author": "Uwe Schindler",
            "body": "I know this problem of trunk. But the first step is to merge the changes in and then remove the deprecated parts again. Then fixing of tests, which may be many as QueryParser is used almost everywhere. Maybe we can split contrib/core.",
            "date": "2009-10-23T14:39:28.643+0000",
            "id": 32
        },
        {
            "author": "Michael McCandless",
            "body": "Actually to port to trunk I was going svn merge, remove conflicts, remove merged in but deprecated methods, then fix all resulting compilation/test errors.  I'll try to do this myself... wish me luck ;)  I'm only using emacs over here!!",
            "date": "2009-10-23T17:04:46.565+0000",
            "id": 33
        },
        {
            "author": "Michael McCandless",
            "body": "Patch for trunk; I plan to commit soon...",
            "date": "2009-10-23T19:42:25.247+0000",
            "id": 34
        },
        {
            "author": "Uwe Schindler",
            "body": "A mega patch, one thing:\n\nThe highlighter testcase uses a separate constant for the version. My idea was to iterate over all version constants and run the test several times to test all combinations.\n\nSo the QueryParser ctors should also use the TEST_VERSION constant, so that it can be easily updated to do the testing for various versions.",
            "date": "2009-10-23T20:21:05.409+0000",
            "id": 35
        },
        {
            "author": "Michael McCandless",
            "body": "bq. So the QueryParser ctors should also use the TEST_VERSION constant, so that it can be easily updated to do the testing for various versions.\n\nGood idea -- I'll fix!",
            "date": "2009-10-23T20:28:28.894+0000",
            "id": 36
        },
        {
            "author": "Uwe Schindler",
            "body": "For Lucene 2.9, the deafult in StopFilter is not controlable, if you use the no-arg Analyzer ctor. There was the previous static setter in StopFilter which is now without any use.\n\nAttached patch fixes this, to return ENABLE_POSITION_INCREMENTS_DEFAULT in getEnablePositionIncrementsVersionDefault() for all versions<2.9",
            "date": "2009-10-29T10:08:15.887+0000",
            "id": 37
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good Uwe, thanks!",
            "date": "2009-10-29T10:34:09.613+0000",
            "id": 38
        },
        {
            "author": "Uwe Schindler",
            "body": "I reopened it -> I resolve it :-)\n\nAt revision: 830910",
            "date": "2009-10-29T12:17:29.077+0000",
            "id": 39
        },
        {
            "author": "Michael McCandless",
            "body": "Bulk close all 2.9.1 issues.",
            "date": "2009-11-07T14:57:30.868+0000",
            "id": 40
        }
    ],
    "component": "",
    "description": "This is a followup of LUCENE-1987:\n\nIf somebody uses StandardAnalyzer with Version.LUCENE_CURRENT and then uses QueryParser, phrase queries will not work, because the StopFilter enables position Increments for stop words, but QueryParser ignores them per default. The user has to explicitely enable them.\n\nThis issue would add a ctor taking the Version constant and automatically enable this setting. The same applies to the contrib queryparser. Eventually also StopAnalyzer should add this version ctor.\n\nTo be able to remove the default ctor for 3.0 (to remove a possible trap for users of QueryParser), it must be deprecated and the new one also added to 2.9.1.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2002",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add oal.util.Version ctor to QueryParser",
    "systemSpecification": true,
    "version": "2.9, 3.0"
}