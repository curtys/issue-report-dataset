{
    "comments": [
        {
            "author": "Michael Busch",
            "body": "Could you add a small junit that tests this (i.e. fails without the patch), Alex?",
            "date": "2009-08-19T00:56:34.946+0000",
            "id": 0
        },
        {
            "author": "Alex Vigdor",
            "body": "Actually a couple of the existing tests specifically check for the faulty behavior - the attached patch for SimpleFragmentsBuilderTest tests for the non-truncating behavior implemented in the patch.  For example, where the prior test looked for \"ssing <b>speed</b>\", it now looks for \" processing <b>speed</b>\".  While fixing the tests I noticed an off-by-1 error in the orginal patch, which I have updated.\n",
            "date": "2009-08-19T01:33:45.772+0000",
            "id": 1
        },
        {
            "author": "Michael Busch",
            "body": "ScoreOrderFragmentsBuilderTest.test3Frags() fails after applying your patches.",
            "date": "2009-08-19T03:55:13.091+0000",
            "id": 2
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Alex,\nI don't have much time to look into this patch but I understand the requirement.\nWhy I named *Simple* FragmentsBuilder because it simply makes fragments without concern for boundaries. I designed FragmentsBuilder can be pluggable, so that any other FragmentsBuilders can be written/contributed, e.g. WhitespaceFragmentsBuilder, SentenceAwareFragmentsBuilder, etc. I think adding new FragmentsBuilders (plus test cases) is better than modifying existing FragmentsBuilders. Don't forget that some languages (CJK) don't use period or whitespace for boundaries of words/sentences when you write new FragmentsBuilders.\n",
            "date": "2009-08-19T04:32:38.422+0000",
            "id": 3
        },
        {
            "author": "Michael Busch",
            "body": "I think we should exclude this from 2.9, as were getting very close to the code freeze.\n\nWith the current approach tests are failing, and I agree with Koji that new functionality like this can and should be added as a new FragmentBuilder.",
            "date": "2009-08-19T05:26:16.144+0000",
            "id": 4
        },
        {
            "author": "Alex Vigdor",
            "body": "The failing test was due to an extra whitespace character at the beginning of the output, which I think is insignificant.\n\nHowever, I appreciate that the whitespace approach will not work for CJK, so I have moved my modifications to a new WhitespaceFragmentBuilder class and associated test class.  The updated patch now contains just these two new classes and no modifications to other code.\n\nI don't want to hold up the release of 2.9, but anyone attempting to use the SimpleFragmentsBuilder with latin languages, or others that use whitespace to delimit words, will be dismayed by the rampant truncation!",
            "date": "2009-08-19T13:19:54.506+0000",
            "id": 5
        },
        {
            "author": "Jon Druse",
            "body": "Has this had any progress?  I'm dealing with the same issues.  Or is there a workaround?  Thanks!",
            "date": "2011-02-16T01:05:18.261+0000",
            "id": 6
        },
        {
            "author": "Mark Miller",
            "body": "This has 4 votes and 5 watchers - is it ready to go in?",
            "date": "2011-03-03T22:43:40.231+0000",
            "id": 7
        },
        {
            "author": "Robert Muir",
            "body": "just an idea: it seems like using a breakiterator would be the way to go here.\n",
            "date": "2011-03-03T22:59:24.973+0000",
            "id": 8
        },
        {
            "author": "Jahangir Anwari",
            "body": "Is there any chance of the patch being applied to the 3.x branch?",
            "date": "2011-06-28T11:48:14.103+0000",
            "id": 9
        },
        {
            "author": "Trey Hyde",
            "body": "As of 3.2 the standard highlighter will use vectors if present (as thus gain a nice speed boost)... I'm not sure the FastVectorHighlighter has any more value.   I'm \"unvoting\" this issue myself.",
            "date": "2011-06-28T16:41:49.442+0000",
            "id": 10
        },
        {
            "author": "Koji Sekiguchi",
            "body": "First draft. I introduced BoundaryScanner interface and two implementations of the interface, Simple and BreakIterator.\n\nSimpleBoundaryScanner uses the following default boundary chars:\n\n{code}\npublic static final Character[] DEFAULT_BOUNDARY_CHARS = {'.', ',', '!', '?', '(', '[', '{', '\\t', '\\n'};\n{code}\n\nAnd they are used by SimpleBoundaryScanner to find word/sentence boundary.\n\nBreakIteratorBoundaryScanner can also be used to find the break of char/word/sentence/line.\n\nI made BaseFragmentsBuilder boundary-aware, rather than creating a new FragmentsBuilder something like BoundaryAwareFragmentsBuilder. As a result, all FragmentsBuilder is now boundary-aware natively, as long as using an appropriate BoundaryScanner.\n\nI've not touched test yet. Because this patch changes fragments boundaries, the existing test should go fail!",
            "date": "2011-09-06T03:12:10.903+0000",
            "id": 11
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Forgot one comment. I've not taken care of Solr yet in the patch.",
            "date": "2011-09-06T03:51:57.620+0000",
            "id": 12
        },
        {
            "author": "Koji Sekiguchi",
            "body": "I added test cases for BoundaryScanner. Still need to modify FragmentsBuilderTests so that they can pass.",
            "date": "2011-09-07T01:54:20.671+0000",
            "id": 13
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Uh, I forgot to add testSentenceBoundary(), testLineBoundary() etc., rather than not only word boundary test. Will add in the next patch.",
            "date": "2011-09-07T03:05:02.954+0000",
            "id": 14
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Patch. I added test cases for sentence boundary and line boundary. Still needed to fix existing test.",
            "date": "2011-09-07T11:49:04.289+0000",
            "id": 15
        },
        {
            "author": "Robert Muir",
            "body": "Thanks for adding breakiterator implementations! \n\nthe implementation seems independent of what type of breakiterator it uses, so maybe its simpler for\nit to just be BreakIteratorBoundaryScanner(BreakIterator bi), and then the user can create the\nbreakiterator however they like (they could even pass in a custom subclass, for expert control) ?",
            "date": "2011-09-07T18:05:13.845+0000",
            "id": 16
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Good point. The simpler version is attached.\nStill working...",
            "date": "2011-09-07T22:03:13.518+0000",
            "id": 17
        },
        {
            "author": "Koji Sekiguchi",
            "body": "New patch. Now all tests pass. Will commit soon.\n\nFor Solr, I'll open a separate issue.",
            "date": "2011-09-08T01:41:46.844+0000",
            "id": 18
        },
        {
            "author": "Koji Sekiguchi",
            "body": "committed trunk and 3x.",
            "date": "2011-09-08T13:05:39.937+0000",
            "id": 19
        },
        {
            "author": "Uwe Schindler",
            "body": "Bulk close after release of 3.5",
            "date": "2011-11-27T12:29:35.410+0000",
            "id": 20
        }
    ],
    "component": "modules/highlighter",
    "description": "FastVectorHighlighter does not take word boundaries into consideration when building fragments, so that in most cases the first and last word of a fragment are truncated.  This makes the highlights less legible than they should be.  I will attach a patch to BaseFragmentBuilder that resolves this by expanding the start and end boundaries of the fragment to the first whitespace character on either side of the fragment, or the beginning or end of the source text, whichever comes first.  This significantly improves legibility, at the cost of returning a slightly larger number of characters than specified for the fragment size.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1824",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "FastVectorHighlighter truncates words at beginning and end of fragments",
    "systemSpecification": true,
    "version": ""
}