{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.  I plan to commit in a day or to to 2.3.x branch.",
            "date": "2008-09-12T10:39:35.947+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Committed revision 695483.",
            "date": "2008-09-15T14:26:38.661+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "Spinoff from here:\n\n    http://mail-archives.apache.org/mod_mbox/lucene-java-user/200809.mbox/%3Cba72f77f0809111418l29cf215dnd45bf679832d7d42%40mail.gmail.com%3E\n\nHere's my response on that thread:\n\nThe bug only happens when you call addIndexesNoOptimize, and one\nsimple workaround would be to use SerialMergeScheduler.\n\nI think this is already fixed in trunk (soonish to be 2.4) as a side\neffect of https://issues.apache.org/jira/browse/LUCENE-1335.\n\nIn 2.3, merges that involve external segments (which are segments\nfolded in by addIndexesNoOptimize) are not supposed to run in a BG\nthread.  This is to prevent addIndexesNoOptimize from returning until\nafter all external segments have been carried over (merged or copied)\ninto the index, so that if there is an exception (eg disk full),\naddIndexesNoOptimize is able to rollback to the index to the starting\npoint.\n\nThe primary merge() method of CMS indeed does not BG any external\nmerges, but the bug is that when a BG merge finishes it then selects a\nnew merge to kick off and that selection is happy to pick an external\nsegment.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1384",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "addIndexesNoOptimize intermittantly throws incorrect \"segment exists in external directory...\" exception",
    "systemSpecification": true,
    "version": "2.3, 2.3.1, 2.3.2"
}