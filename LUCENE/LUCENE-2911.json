{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "after applying the patch, you have to run 'ant jflex' from modules/analysis/common and 'ant genrbbi' from modules/analysis/icu to regenerate.",
            "date": "2011-02-08T12:59:22.618+0000",
            "id": 0
        },
        {
            "author": "Steve Rowe",
            "body": "The generated top-level domain macro file has a bunch of new entries when I run this, but these are not included in your patch, and I think we should keep this list up-to-date.\n\nThe patch is missing HangulSupp macro generation in modules/icu/src/tools/.../GenerateJFlexSupplementaryMacros.java, but since the Hangul macro is not used in the jflex grammar, this doesn't cause a problem.\n\nIt would be nice to remove the hard-coded ranges for the intersection of Hangul & ALetter, but when I tried to use JFlex negation and union to produce the equivalent, memory usage exploded and I couldn't get JFlex to generate, so I guess we'll have to wait on native JFlex supplementary character support before we can change it.\n",
            "date": "2011-02-08T15:50:03.247+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nThe generated top-level domain macro file has a bunch of new entries when I run this, but these are not included in your patch, and I think we should keep this list up-to-date.\n{quote}\n\nYeah, i would re-run it before committing? in general i didn't \"re-generate\" so you wouldnt see a lot of generated differences in the patch.\n\n{quote}\nThe patch is missing HangulSupp macro generation in modules/icu/src/tools/.../GenerateJFlexSupplementaryMacros.java, but since the Hangul macro is not used in the jflex grammar, this doesn't cause a problem.\n{quote}\n\nOh i did actually mean to include this, sorry I forgot... its a one liner though, I can include this easily.\n",
            "date": "2011-02-08T17:47:02.776+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "improved the patch by using a simpler demorgan expression Steven came up with.\n\nI think this one is ready to commit.",
            "date": "2011-02-09T11:56:14.984+0000",
            "id": 3
        },
        {
            "author": "Steve Rowe",
            "body": "bq. I think this one is ready to commit.\n\n+1 \n\nI applied the patch, jflex generates properly, tests pass",
            "date": "2011-02-09T15:28:01.146+0000",
            "id": 4
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1068979. Now backporting...",
            "date": "2011-02-09T17:08:16.297+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1068997 to branch_3x\n\nThanks Steven!",
            "date": "2011-02-09T17:48:01.591+0000",
            "id": 6
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:25.275+0000",
            "id": 7
        }
    ],
    "component": "modules/analysis",
    "description": "I'd like to do LUCENE-2906 (better cjk support for these tokenizers) for a future target such as 3.2\n\nBut, in 3.1 I would like to do a little cleanup first, and synchronize all these token types, etc.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2911",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "synchronize grammar/token types across StandardTokenizer, UAX29EmailURLTokenizer, ICUTokenizer, add CJK types.",
    "systemSpecification": true,
    "version": ""
}