{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "here is a patch that clones && commits the SIS while syncing on IW. All test pass including the TestStressNRT running2400 iterations",
            "date": "2011-08-09T12:46:32.904+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "fixed in 3.x ",
            "date": "2011-08-10T07:36:54.321+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Nice catch Simon!",
            "date": "2011-08-10T11:09:26.672+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "while backporting the testcase from LUCENE-3348 I ran into this thread hazard in the 3.x branch. We actually fixed this issue in LUCENE-3348 for Lucene 4.0 but since DWPT has a slightly different behavior when committing segments I create a new issue to track this down in 3.x. when we prepare a commit we sync on IW flush the DW and apply all deletes then release the lock, maybeMerge and start the commit (IW#startCommit(userdata)). Yet, a new segment could be flushed via getReader and sneak into the SegementInfos which are cloned in IW#startCommit instead of in prepareCommit right after the flush. ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3368",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "IndexWriter commits update documents without corresponding delete",
    "systemSpecification": true,
    "version": "3.0, 3.0.1, 3.0.2, 3.0.3, 3.1, 3.2, 3.3"
}