{
    "comments": [
        {
            "author": "Christian Kohlsch\u00fctter",
            "body": "The patch.\n",
            "date": "2008-02-22T10:26:37.970+0000",
            "id": 0
        },
        {
            "author": "Christian Kohlsch\u00fctter",
            "body": "The patch.",
            "date": "2008-02-22T10:56:55.153+0000",
            "id": 1
        },
        {
            "author": "Michael Busch",
            "body": "Committed. Thanks Christian!",
            "date": "2008-02-23T02:36:26.773+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "It seems that SegmentTermEnum#scanTo is a critical method which is called very often, especially whenever we iterate over a sequence of terms in an index.\n\nWhen that method is called, the first thing happens is that it checks whether a temporary TermBuffer \"scratch\" has already been initialized.\n\nIn fact, this is not necessary. We can simply declare and initialize the \"scratch\"-Buffer at the class-level (right now, the initial value is _null_). Java's lazy-loading capabilities allow this without adding any memory footprint for cases where we do not need that buffer.\n\nThe attached patch takes care of this. We now save one comparison per term.\nIn addition to that, the patch renames \"scratch\" to \"scanBuffer\", which aligns with the naming of the other two buffers that are declared in the class.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1185",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] Avoid checking for TermBuffer in SegmentTermEnum#scanTo",
    "systemSpecification": true,
    "version": "2.3, 2.3.1, 2.4"
}