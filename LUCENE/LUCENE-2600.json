{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch, removing the caching altogether.",
            "date": "2010-08-12T10:55:24.565+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Another iteration of the patch.\n\nThis one removes IndexReader.isDeleted, in favor of IndexReader.getDeletedDocs.  This then enabled removing ReadOnlySegment/DirReader classes, which is a nice simplificaton.\n\nI also fixed MultiFields.getDeletedDocs to re-ask the underlying readers for their .getDeletedDocs() when they previously returned null, to handle the non-readonly composite reader case.",
            "date": "2010-08-14T13:33:36.044+0000",
            "id": 1
        }
    ],
    "component": "",
    "description": "MultiFields.getDeletedDocs now builds up a MultiBits instance (so that one can check if a top-level docID is deleted), but it now stuffs it into a private cache on IndexReader.\n\nThis is invalid when the composite reader is read/write, and can result in a MultiReader falsely claiming a doc was not deleted.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2600",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "don't try to cache a composite reader's MultiBits deletedDocs",
    "systemSpecification": true,
    "version": ""
}