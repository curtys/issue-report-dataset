{
    "comments": [
        {
            "author": "Grant Ingersoll",
            "body": "Or the padding could be extended",
            "date": "2007-08-16T02:08:45.254+0000",
            "id": 0
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed with patch for 981",
            "date": "2007-08-18T12:25:29.248+0000",
            "id": 1
        }
    ],
    "component": "modules/benchmark",
    "description": "I am building a new Task, AnalyzerTask, that lets you change the Analyzer in the loop, thus allowing for the comparison of the same Analyzers over the set of documents.\n\nMy algorithm declaration looks like:\nNewAnalyzer(WhitespaceAnalyzer, SimpleAnalyzer, StopAnalyzer, standard.StandardAnalyzer)\n\nAnd it could be longer.\n\nThe exception is:\nError: cannot execute the algorithm! String index out of range: 85\njava.lang.StringIndexOutOfBoundsException: String index out of range: 85\n\tat java.lang.String.substring(String.java:1765)\n\tat org.apache.lucene.benchmark.byTask.utils.Format.format(Format.java:85)\n\tat org.apache.lucene.benchmark.byTask.tasks.ReportTask.tableTitle(ReportTask.java:85)\n\tat org.apache.lucene.benchmark.byTask.tasks.ReportTask.genPartialReport(ReportTask.java:140)\n\tat org.apache.lucene.benchmark.byTask.tasks.RepSumByNameTask.reportSumByName(RepSumByNameTask.java:77)\n\tat org.apache.lucene.benchmark.byTask.tasks.RepSumByNameTask.doLogic(RepSumByNameTask.java:39)\n\tat org.apache.lucene.benchmark.byTask.tasks.PerfTask.runAndMaybeStats(PerfTask.java:83)\n\tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doSerialTasks(TaskSequence.java:112)\n\tat org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic(TaskSequence.java:93)\n\tat org.apache.lucene.benchmark.byTask.utils.Algorithm.execute(Algorithm.java:228)\n\tat org.apache.lucene.benchmark.byTask.Benchmark.execute(Benchmark.java:73)\n\tat org.apache.lucene.benchmark.byTask.Benchmark.main(Benchmark.java:109)\n\nThe error seems to be caused by the fact that ReportTask uses the OP (operation) column for the String, but then uses the length of the algorithm declaration to index into the String, resulting in the index out of bounds exception.\n\nThe line in question is:\nreturn (s + padd).substring(0, col.length());\n\nAnd probably should be changed to something like:\n    String s1 = (s + padd);\n    return s1.substring(0, Math.min(col.length(), s1.length()));\n\nEither that or the column should be trimmed.  The workaround is to explicitly name the task.\n\nIf no objections, I will make the change, tomorrow.  ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-980",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Formatting error in ReportTask in contrib/benchmark",
    "systemSpecification": true,
    "version": "2.2"
}