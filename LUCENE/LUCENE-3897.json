{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "OK I committed the @Ignored test case to TestKuromojiTokenizer:\n\n{code}\n/** blast some random large strings through the analyzer */\n@Ignore(\"FIXME: see LUCENE-3897\")\npublic void testRandomHugeStrings() throws Exception {\n  checkRandomData(random, analyzer, 200*RANDOM_MULTIPLIER, 8192);\n  checkRandomData(random, analyzerNoPunct, 200*RANDOM_MULTIPLIER, 8192);\n}\n{code}",
            "date": "2012-03-21T02:55:16.190+0000",
            "id": 0
        },
        {
            "author": "Christian Moen",
            "body": "Thanks, Robert.\n\nI'll have a look.",
            "date": "2012-03-21T02:55:56.441+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "This is likely very difficult to debug at the moment given LUCENE-3895.\n\nI'm just trying to add large docs tests to all the tokenizers and opening issues where I can...\n\nIf I can get them all in I'll try to look at LUCENE-3895 and see if I can fix this random seed issue\nso we can actually work on these things!",
            "date": "2012-03-21T02:59:08.969+0000",
            "id": 2
        },
        {
            "author": "Christian Moen",
            "body": "Robert, your change to LUCENE-3895 is very useful.  Thanks again for this.\n\nI can reproduce a failing case on {{trunk}} on my system using\n\n{noformat}\nant test -Dtestcase=TestKuromojiTokenizer -Dtestmethod=testRandomHugeStrings -Dtests.seed=-42f0565412819c1e:75f7606c1595bc3f:-31754ca508d64340 -Dargs=\"-Dfile.encoding=MacRoman\"\n{noformat}\n\nand the output is as follows:\n\n{noformat}\n    [junit] Testsuite: org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 16.122 sec\n    [junit] \n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: Ignoring @nightly test method 'testBocchanBig'\n    [junit] \n    [junit] ===>\n    [junit] Uncaught exception by thread: Thread[Thread-4,5,main]\n    [junit] java.lang.AssertionError: backPos=3076 vs lastBackTracePos=4096\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.access$000(BaseTokenStreamTestCase.java:49)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:334)\n    [junit] <===\n    [junit] \n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestKuromojiTokenizer -Dtestmethod=null -Dtests.seed=-42f0565412819c1e:75f7606c1595bc3f:-31754ca508d64340 -Dargs=\"-Dfile.encoding=MacRoman\"\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testRandomHugeStrings(org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer):\tCaused an ERROR\n    [junit] Uncaught exception by thread: Thread[Thread-4,5,]\n    [junit] org.apache.lucene.util.UncaughtExceptionsRule$UncaughtExceptionsInBackgroundThread: Uncaught exception by thread: Thread[Thread-4,5,]\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:66)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:618)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:164)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:57)\n    [junit] \tat org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:21)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)\n    [junit] Caused by: java.lang.AssertionError: backPos=3076 vs lastBackTracePos=4096\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.access$000(BaseTokenStreamTestCase.java:49)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:334)\n    [junit] \n    [junit] \n    [junit] Test org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer FAILED\n{noformat}",
            "date": "2012-03-21T04:58:17.765+0000",
            "id": 3
        },
        {
            "author": "Christian Moen",
            "body": "The assertion suggests that backtracking for some reason wants to go past its previous position.\n\n\n\n",
            "date": "2012-03-21T10:40:28.953+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "I think the problem is when we force a backtrace (if it's >= 1024 chars since the last backtrace)... I think we are not correctly pruning all paths in this case.\n\nUnlike the natural backtrace, which happens whenever there is only 1 path (ie the parsing is unambiguous from that point backwards), the forced backtrace may have more than one live path.\n\nHave to mull how to fix...",
            "date": "2012-03-21T16:10:56.144+0000",
            "id": 5
        },
        {
            "author": "Christian Moen",
            "body": "I've been trying to make an even more isolated case that reproduces this problem.  I'm new to {{LuceneTestCaseRunner}} and {{checkRandomData}}, but I received very helpful advise on how to follow up on this.  Thanks, Robert!\n\nI'll look further into this tomorrow.  Mike, if you have any ideas on what the root cause of this could be, please feel free to chime in.  Many thanks.",
            "date": "2012-03-21T16:11:39.338+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "Christian and I discusses this on IRC... and it seems like the only real course of action when we must force the backtrace (for safety / prevent adversary) is to prune all but the least cost partial path.\n\nI implemented that approach (patch) and now this seed passes... I'll beast some more.",
            "date": "2012-03-21T17:54:50.975+0000",
            "id": 7
        },
        {
            "author": "Christian Moen",
            "body": "Thanks a lot, Mike.  +1!\n\nI've been doing pretty heavy testing on this and things look good.\n\nI'll commit to {{trunk}} and backport to {{branch_3x}} later today.",
            "date": "2012-03-22T05:10:52.245+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Christian!",
            "date": "2012-03-22T10:28:34.022+0000",
            "id": 9
        },
        {
            "author": "Christian Moen",
            "body": "Committed revision 1303739 on {{trunk}}.  Backporting to {{branch_3x}}. ",
            "date": "2012-03-22T11:43:04.084+0000",
            "id": 10
        },
        {
            "author": "Christian Moen",
            "body": "Committed revision 1303744 on {{branch_3x}}.",
            "date": "2012-03-22T12:17:27.619+0000",
            "id": 11
        },
        {
            "author": "Christian Moen",
            "body": "Thanks a lot, Mike and Robert!",
            "date": "2012-03-22T12:18:04.843+0000",
            "id": 12
        },
        {
            "author": "Robert Muir",
            "body": "Thanks guys! The last of the fallout from LUCENE-3894 I think :)\n\nI ran 'ant test -Dtests.nightly=true -Dtests.multiplier=5 -Dtests.iter=10' to simulate 10 nightly builds\nand (after 2 hours) everything looks ok :)\n",
            "date": "2012-03-22T12:31:10.594+0000",
            "id": 13
        }
    ],
    "component": "modules/analysis",
    "description": "just shoving largeish random docs triggers asserts like:\n\n{noformat}\n    [junit] Caused by: java.lang.AssertionError: backPos=4100 vs lastBackTracePos=5120\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)\n    [junit] \tat org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)\n{noformat}\n\nBut, you get no seed...\n\nI'll commit the test case and @Ignore it.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3897",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "KuromojiTokenizer fails with large docs",
    "systemSpecification": true,
    "version": ""
}