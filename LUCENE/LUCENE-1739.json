{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Good catch Robert!\n\nI'll fold this into the back compat test.",
            "date": "2009-07-10T11:44:54.429+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "OK indeed at some point in 2.9, FieldInfo.omitTFAP became hardwired to false if the field isn't indexed; whereas 2.4 simply preserved whatever the developer had set.\n\nI have a simple fix, which is to have FieldInfos.hasProx disregard the omitTFAP member when the field is not indexed.  And I added a test case to the back-compat test showing the problem & the fix.\n\nI'll commit shortly.",
            "date": "2009-07-10T12:30:22.129+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Robert!  Keep testing ;)",
            "date": "2009-07-10T12:31:29.593+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "Sorry for the lack of proper testcase.\n\nIn 2.4.1, if you created an index with the (stupid) options below, then it will not create a .prx file. 2.9 expects this file and will not open the index.\nThe reason i used these stupid options is because i changed the field from indexed=yes to indexed=no, but forgot to remove the .setOmitTf()\n\n{code}\npublic class Testcase {\n\tpublic static void main(String args[]) throws Exception {\n\t\t/* run this part with lucene 2.4.1 */\n\t\tIndexWriter iw = new IndexWriter(\"test\", new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n\t\tiw.setUseCompoundFile(false);\n\t\tDocument doc = new Document();\n\t\tField field1 = new Field(\"field1\", \"foo\", Field.Store.YES, Field.Index.NO);\n\t\tfield1.setOmitTf(true); // 2.9 will create a 0-byte .prx file, but 2.4.x will NOT. This is the problem. 2.9 expects this file!\n\t\tdoc.add(field1);\n\t\tiw.addDocument(doc);\n\t\tiw.close(); \n\t\t/* run this with lucene 2.9 */\n\t\tIndexReader ir = IndexReader.open(FSDirectory.getDirectory(\"test\"), true); \n\t}\n}\n{code}",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1739",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "2.4.x index cannot be opened with 2.9-dev",
    "systemSpecification": true,
    "version": ""
}