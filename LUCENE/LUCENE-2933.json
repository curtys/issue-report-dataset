{
    "comments": [
        {
            "author": "Dawid Weiss",
            "body": "I can't assign issues to myself, is that all right?",
            "date": "2011-02-21T08:51:20.247+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. I can't assign issues to myself, is that all right?\nsome jira admin needs to enable this. Grant has JIRA admin rights afaik.\n\nsimon",
            "date": "2011-02-21T08:57:06.604+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "Dawid: I added you as Committer to JIRA!",
            "date": "2011-02-21T09:02:19.680+0000",
            "id": 2
        },
        {
            "author": "Dawid Weiss",
            "body": "Thanks Uwe!",
            "date": "2011-02-21T09:24:49.701+0000",
            "id": 3
        },
        {
            "author": "Dawid Weiss",
            "body": "Implementation of node depth expansion into an array. This patch also piggybacks package-scope getBytes() so that other classes can access the internal representation (specifically, Util.toDot)",
            "date": "2011-02-21T13:50:15.055+0000",
            "id": 4
        },
        {
            "author": "Dawid Weiss",
            "body": "Patch and tests.",
            "date": "2011-02-21T17:49:19.847+0000",
            "id": 5
        },
        {
            "author": "Dawid Weiss",
            "body": "Guys, can you peek at this and review it? It's of minimal priority, but I checked and this change:\n\na) doesn't seem to degenerate FST compilation performance\nb) hurt traversal performance on real data (checked against the allterms-20110115),\nc) improves worst case behavior on degenerate input sequences.\n\nIf approved, I will commit it in.",
            "date": "2011-02-21T17:51:47.161+0000",
            "id": 6
        },
        {
            "author": "Dawid Weiss",
            "body": "A visual confirmation that this really works (other than JUnit tests).",
            "date": "2011-02-21T17:56:56.868+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks great Dawid!  I like the blue = expanded node dot coloring.\n\n+1 to commit!",
            "date": "2011-02-22T11:43:31.155+0000",
            "id": 8
        },
        {
            "author": "Dawid Weiss",
            "body": "In trunk.",
            "date": "2011-02-23T10:17:38.472+0000",
            "id": 9
        }
    ],
    "component": "core/index",
    "description": "In the current implementation FST states are expanded into a binary search on labels (from a vector of transitions) when the child count of a state exceeds a given predefined threshold (NUM_ARCS_FIXED_ARRAY). This threshold affects automaton size and traversal speed (as it turns out when benchmarked). For some degenerate (?) data sets, close-to-the-root nodes could have a small number of children (below the threshold) and yet be traversed on every single seek.\n\nA fix of this is to introduce two control thresholds: \n  EXPAND state if (distance-from-root <= MIN_DISTANCE || children-count >= NUM_ARCS_FIXED_ARRAY)\n\nMy plan is to create a data set that will prove this first and then to implement the workaround above.",
    "hasPatch": true,
    "hasScreenshot": true,
    "id": "LUCENE-2933",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Two-stage state expansion for the FST: distance-from-root and child-count criteria.",
    "systemSpecification": true,
    "version": ""
}