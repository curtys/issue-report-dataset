{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Patch supports -1 passed to IWC.setReaderTermIndexDivisor and randomly sets it in LuceneTestCase.newIndexWriterConfig() and RandomIndexWriter.\n\nMany tests fail with exceptions like this:\n{noformat}\n    [junit] java.lang.IllegalStateException: terms index was not loaded when this reader was createde=29178856,total=88990720\n    [junit]     at org.apache.lucene.index.TermInfosReader.ensureIndexIsRead(TermInfosReader.java:309)\n    [junit]     at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:215)\n    [junit]     at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:208)\n    [junit]     at org.apache.lucene.index.SegmentTermDocs.seek(SegmentTermDocs.java:57)        Caused an ERROR\n    [junit]     at org.apache.lucene.index.BufferedDeletes.applyDeletes(BufferedDeletes.java:301)\n    [junit]     at org.apache.lucene.index.BufferedDeletes.applyDeletes(BufferedDeletes.java:289)ted\n    [junit]     at org.apache.lucene.index.BufferedDeletes.applyDeletes(BufferedDeletes.java:191):309)\n{noformat}\n\nSo maybe IWC not supporting -1 is not a bug? I didn't see anywhere, even in IR.open() what are the consequences of not loading the terms index. Thought it just means slower term seeks, but apparently it's not supported?\n\nIf so, I think we should mention IR.open() what does it mean to not load the terms index.",
            "date": "2011-01-26T15:14:57.680+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "-1 means \"don't load terms index because I will never, ever seek-by-Term\".  As far as I know, it's only segment merging that does this...\n\nMaybe we shouldn't allow it for IR.open?  Though, eg if you want to pass the reader to addIndexes (say), opening with -1 should work...",
            "date": "2011-01-26T15:39:18.257+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "Removed the random setting in tests and added a test TestIndexWriterReader.testNoTermsIndex() which ensure IR.open(IW) and seek-by-term throws an exception when the setting is set to -1 on IWC.",
            "date": "2011-01-26T16:00:58.928+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "bq. -1 means \"don't load terms index because I will never, ever seek-by-Term\". As far as I know, it's only segment merging that does this...\n\nbut it allows next()'ing through all the terms only?\n\nI suggested the testing because I had seen some code for -1 but I didn't know how tested it is,\nits a tad confusing in the javadoc which just says \"Set this to -1 to skip loading the terms index entirely.\"\n\nThis makes me think (based on the language \"skip loading\"), that if you do this everything will still work, \nbut seek() will just be brute-force or something aweful...\n",
            "date": "2011-01-26T18:03:50.492+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "bq. but it allows next()'ing through all the terms only?\n\nRight.\n\n{quote}\nI suggested the testing because I had seen some code for -1 but I didn't know how tested it is,\n{quote}\n\nIt's tested inside IW -- for merging, it opens all SRs w/ -1.\n\nbq. its a tad confusing in the javadoc which just says \"Set this to -1 to skip loading the terms index entirely.\"\n\nI agree -- I think we should sharpen the jdocs to state that this is only useful in very narrow situations, ie when you are certain you just need to next() through all terms.  (And probably mark this value as @lucene.experimental... maybe internal?).",
            "date": "2011-01-26T22:05:59.682+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Did you guys review my latest patch, which includes a clarification in the jdocs?",
            "date": "2011-01-27T07:00:34.988+0000",
            "id": 5
        },
        {
            "author": "Shai Erera",
            "body": "Patch fixes javadocs and renames term infos to terms index. I plan to commit this later today or tomorrow morning.",
            "date": "2011-01-27T14:39:43.015+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "Fixed issue subject (replaced termInfos with terms index)",
            "date": "2011-01-27T19:03:29.618+0000",
            "id": 7
        },
        {
            "author": "Shai Erera",
            "body": "Committed revision 1064255 (3x).\nCommitted revision 1064285 (trunk).\n\nMerge to trunk was not so easy. testNoTermsIndex had to use different API than in 3x (which is ok), but the it turns out few Codecs don't honor the -1 setting, like PreFlex and SimpleText. Surprisingly, MockRandom also fails. I put all of them into an illegalCodecs Set and if that's what the test draws, the test does not continue and succeeds.\n\nI'll open a separate issue to check why MockRandomCodec fails the test (i.e., why doesn't it honor the -1 setting).",
            "date": "2011-01-27T20:10:32.376+0000",
            "id": 8
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:15.688+0000",
            "id": 9
        }
    ],
    "component": "core/index",
    "description": "While you can pass -1 to IR.open(), and it's documented, you cannot do the same for IndexWriter's readers (b/c IWC blocks it). Need to allow this setting as well as add support for it in our tests, e.g. we should randomly set it to -1. Robert also suggested RandomIW use -1 randomly when it opens readers.\n\nI'll work on a patch",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2891",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "IndexWriterConfig does not allow readerTermsIndexDivisor to be -1, while the latest indicates the terms index should not be loaded",
    "systemSpecification": true,
    "version": ""
}