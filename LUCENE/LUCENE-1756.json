{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "improved unit test for this analyzer",
            "date": "2009-10-11T22:42:14.307+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "I think this test was complex because it was trying to be a both a test and a benchmark.\n\nI think removing the benchmark stuff is ok, because we can use the benchmark package for that purpose instead?",
            "date": "2009-10-11T22:50:03.140+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "assigning this one to myself, if there aren't any objections to the fix I would like to commit it soon.",
            "date": "2009-10-13T18:41:29.821+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 825112.",
            "date": "2009-10-14T12:33:48.966+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "I am reopening (not setting as blocker since its just a test issue, but it did cause tests to fail when reviewing the release).\n\nworst case, after the release, i think it would be good to backport the new test to the 2.9.x branch.\n",
            "date": "2010-11-28T16:05:31.944+0000",
            "id": 4
        },
        {
            "author": "Uwe Schindler",
            "body": "Backported to 2.9.4",
            "date": "2010-11-28T16:28:41.142+0000",
            "id": 5
        }
    ],
    "component": "modules/other",
    "description": "while working on something else i was started getting consistent IllegalStateExceptions from PatternAnalyzerTest -- but only when running the test from the top level.\n\nDigging into the test, i've found numerous things that are very scary...\n* instead of using assertions to test that tokens streams match, it throws an IllegalStateExceptions when they don't, and then logs a bunch of info about the token streams to System.out -- having assertion messages that tell you *exactly* what doens't match would make a lot more sense.\n* it builds up a list of files to analyze using patsh thta it evaluates relative to the current working directory -- which means you get different files depending on wether you run the tests fro mthe contrib level, or from the top level build file\n* the list of files it looks for include: \"../../*.txt\", \"../../*.html\", \"../../*.xml\" ... so not only do you get different results when you run the tests in the contrib vs at the top level, but different people runing the tests via the top level build file will get different results depending on what types of text, html, and xml files they happen to have two directories above where they checked out lucene.\n* the test comments indicates that it's purpose is to show that PatternAnalyzer produces the same tokens as other analyzers - but points out this will fail for WhitespaceAnalyzer because of the 255 character token limit WhitespaceTokenizer imposes -- the test then proceeds to compare PaternAnalyzer to WhitespaceTokenizer, garunteeing a test failure for anyone who happens to have a text file containing more then 255 characters of non-whitespace in a row somewhere in \"../../\" (in my case: my bookmarks.html file, and the hex encoded favicon.gif images)\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1756",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "contrib/memory: PatternAnalyzerTest is a very, very, VERY, bad unit test",
    "systemSpecification": true,
    "version": ""
}