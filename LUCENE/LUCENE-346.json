{
    "comments": [
        {
            "author": "cutting@apache.org",
            "body": "Created an attachment (id=14232)\npatch to disable coord scoring in most generated boolean queries\n",
            "date": "2005-02-10T02:32:49.000+0000",
            "id": 0
        },
        {
            "author": "cutting@apache.org",
            "body": "Note that this does not yet fix MultiFieldQueryParser.  That should probably be\nmodified to generate something like, for the query \"t1 t2\" over fields f1, and\nf2, a query like:\n\n  (f1:t1 f2:t1) (f1:t2 f2:t2)\n\nin this case the innner queries should have coord disabled while the outer query\nshould not.  I think the best approach for MultiFieldQueryParser is to\nre-implement it as a subclass of QueryParser which overrides query creation\nmethods.  But that's a separate patch...",
            "date": "2005-02-10T02:39:44.000+0000",
            "id": 1
        },
        {
            "author": "Daniel Naber",
            "body": "\"(f1:t1 f2:t1) (f1:t2 f2:t2)\" -- that's what MFQP in SVN does already, unless \nyou use the deprecated calls. Or am I missing something? \n ",
            "date": "2005-02-10T03:55:13.000+0000",
            "id": 2
        },
        {
            "author": "cutting@apache.org",
            "body": "Created an attachment (id=14236)\nnew version of patch\n\nYou're right.  I guess I was looking at the deprecated parse() method.\tSorry.\n\nI've updated the patch to include MFQP.\n\nShould we commit something like this?",
            "date": "2005-02-10T06:39:42.000+0000",
            "id": 3
        },
        {
            "author": "Paul Elschot",
            "body": "The BooleanScorer2 can be simplified heavily when there is \nno coordination needed. Basically all makeCountingSumScorer.. \nmethods could be renamed to makeSumScorer.. and the \nprivate Coordinator class is unnecessary in that case. \nI'll start working on a non coordinating version, perhaps \nas a superclass of BooleanScorer2. \nMeanwhile the 'flat' coord method in Similarity will do fine. \n \nRegards, \nPaul Elschot \n ",
            "date": "2005-03-21T01:28:29.000+0000",
            "id": 4
        },
        {
            "author": "Daniel Naber",
            "body": "Seems this has been applied, so I'm closing this bug report.  \n  ",
            "date": "2005-07-17T04:40:50.000+0000",
            "id": 5
        }
    ],
    "component": "core/search",
    "description": "Here's a patch that disables Similiarty.coord() in the scoring of most\nautomatically generated boolean queries.  The coord() score factor is\nappropriate when clauses are independently specified by a user, but is usually\nnot appropriate when clauses are generated automatically, e.g., by a fuzzy,\nwildcard or range query.  Matches on such automatically generated queries are\ncurrently penalized for not matching all terms.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-346",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] disable coord for generated BooleanQueries",
    "systemSpecification": true,
    "version": ""
}