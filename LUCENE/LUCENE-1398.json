{
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "body": "Patch attached. The patch includes a new constructor of PrefixQuery:\n\n{code:java}\npublic PrefixQuery(Term prefix, boolean reverse) {\n  if(reverse){\n    String s = prefix.text();\n    int len = s.length();\n    if( len <= 1 ){\n      this.prefix = prefix;\n      return;\n    }\n    StringBuffer sb = new StringBuffer(len);\n    for( int i = 0; i < len; i++ ){\n      sb.append( s.charAt( len - i - 1 ) );\n    }\n    this.prefix = new Term(prefix.field(),sb.toString());\n  }\n  else\n    this.prefix = prefix;\n  }\n{code}\n\nso that you can extend PrefixQuery to have SuffixQuery:\n\n{code:java}\nclass SuffixQuery extends PrefixQuery {\n  public SuffixQuery( Term term ){\n    super( term, true );\n  }\n}\n{code}\n",
            "date": "2008-09-22T06:35:00.102+0000",
            "id": 0
        },
        {
            "author": "Mark Miller",
            "body": "I like the idea of adding this, but I almost think it might best live in contrib. Thats slightly at odds with the prefix query addition - but I'm not sure that really helps you to integrate the solution generally into the query language anyway - it just reverses the term. I think it might be better to leave that to the user, as its likely to remain a special case anyway. I'd rather even do something like a util reverse method.\n\nSo I'll hold out for a wiser opinion, but my initial thought would be to not add to prefixquery, and put the the analyzer in contrib",
            "date": "2009-02-03T19:48:13.222+0000",
            "id": 1
        },
        {
            "author": "Koji Sekiguchi",
            "body": "Thanks Mark for the comment and sorry for late reply. Move it to contrib.",
            "date": "2009-02-19T03:17:06.106+0000",
            "id": 2
        },
        {
            "author": "Yonik Seeley",
            "body": "I don't know how others feel, but I'd personally like to stop the practice of making more Analyzer classes whenever a new TokenFilter is added.\n\nThis patch looks like it could/should be a single class (other than test of course): ReverseTokenFilter.  The static reverse() methods could be put directly on that filter.\n",
            "date": "2009-02-19T16:03:27.737+0000",
            "id": 3
        },
        {
            "author": "Koji Sekiguchi",
            "body": "{quote}\nI don't know how others feel, but I'd personally like to stop the practice of making more Analyzer classes whenever a new TokenFilter is added.\n\nThis patch looks like it could/should be a single class (other than test of course): ReverseTokenFilter. The static reverse() methods could be put directly on that filter.\n{quote}\n\nNo problem for me. :) Done.",
            "date": "2009-02-25T13:08:50.877+0000",
            "id": 4
        },
        {
            "author": "Yonik Seeley",
            "body": "Thanks, I just committed this.",
            "date": "2009-02-25T20:44:42.301+0000",
            "id": 5
        }
    ],
    "component": "modules/analysis",
    "description": "add ReverseStringFilter and ReverseStringAnalyzer that can be used for backword much. For Example, \"*ry\", \"*ing\", \"*ber\".",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1398",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add ReverseStringFilter",
    "systemSpecification": true,
    "version": ""
}