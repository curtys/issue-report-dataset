{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Woops, thanks Renaud -- I just committed this.",
            "date": "2009-05-28T15:39:04.529+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "Mike, you were a little bit too fast :-)\n\nI worked out a better solution (the problem also ocurred on tests, when no manifest file was available, because it is only in the JAR file, not in the classpath during tests).\nThe attached patch does not use such \"hacks\" like opening the manifest directly. It just uses LucenePackage to get the implementation information. If it is NULL (because no manifest), it uses the same algorithm for resolving like you proposed.",
            "date": "2009-05-28T15:58:18.387+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "Oh forget the \"-dev\" thing... Attached is fixed patch.",
            "date": "2009-05-28T16:02:21.365+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Much simpler, thanks Uwe!\n\nBut, shouldn't we protect for null return from LucenePackage.get()?  Googling, it seems there are some occasions where .getPackage() might return null (seems to be w/ custom classloaders).\n\nAnd.... are there any situations where .getPackage() would fail but the current way would work (and vice/versa)?  (This is all voodoo magic to me!).",
            "date": "2009-05-28T16:31:15.753+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "I think the check should be simply if getPackage() returns null do the same as with no implementation version. I see no case why the JAR/META-INF part should work better. It fails more often with custom classloaders, because the JAR file may not be directly available using jar:-URL because of security restrictionsin web containers.\n\nAttached is a patch that handles the null of get()",
            "date": "2009-05-28T16:53:48.806+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Excellent -- I just committed this.  Thanks Renaud & Uwe!",
            "date": "2009-05-28T17:28:20.186+0000",
            "id": 5
        }
    ],
    "component": "core/other",
    "description": "If the MANIFEST.MF file does not contain the metadata IMPLEMENTATION_VERSION, a null value is returned, causing NullPointerException during commit:\n\nException in thread \"main\" java.lang.NullPointerException\n\tat org.apache.lucene.store.IndexOutput.writeString(IndexOutput.java:109)\n\tat org.apache.lucene.store.IndexOutput.writeStringStringMap(IndexOutput.java:229)\n\tat org.apache.lucene.index.SegmentInfo.write(SegmentInfo.java:558)\n\tat org.apache.lucene.index.SegmentInfos.write(SegmentInfos.java:337)\n\tat org.apache.lucene.index.SegmentInfos.prepareCommit(SegmentInfos.java:808)\n\tat org.apache.lucene.index.IndexWriter.startCommit(IndexWriter.java:5319)\n\tat org.apache.lucene.index.IndexWriter.prepareCommit(IndexWriter.java:3895)\n\tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3956)\n\nThis happened after having build a jar assembly using Maven, the original MANIFEST.MF of lucene jar has been overwritten, and didn't contain anynore the implementation version metadata.\n\nPath attached.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1666",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Constants causing NullPointerException when fetching metadata \"Implementation Version\" in MANIFEST",
    "systemSpecification": true,
    "version": ""
}