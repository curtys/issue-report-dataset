{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Duh, make that LUCENE-2802.",
            "date": "2010-12-07T00:53:05.325+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Attached first cut patch, just moving the .version++ responsibility into DirReader/IW.\n\nBut I haven't verified if it fixes the case in LUCENE-2802.",
            "date": "2010-12-07T00:53:49.406+0000",
            "id": 1
        },
        {
            "author": "Simon Willnauer",
            "body": "this should be fixed together with LUCENE-2802 ",
            "date": "2010-12-07T03:45:38.385+0000",
            "id": 2
        },
        {
            "author": "Simon Willnauer",
            "body": "here is a slightly updated patch that removes the blind increment from DefaultSegmentInfosWriter, adds #changed() calles to contrib classes and adds a missing #changed() call to IW#deleteAll() \n\ntest pass also for LUCENE-2802",
            "date": "2010-12-07T04:21:51.680+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Nice catches on all the other places Simon!   Patch looks good.\n\nExcept I think we can now simplify IW.nrtIsCurrent to this?\n{code}\n  synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    return segmentInfos.version == infos.version && !docWriter.anyChanges();\n  }\n{code}\n",
            "date": "2010-12-07T09:17:18.407+0000",
            "id": 4
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. Except I think we can now simplify IW.nrtIsCurrent to this?\nYay, this make the nrtIsCurrent check simpler too. Lemme see if anything breaks, I think that could cause a test to fail since we compared the seg infos though.",
            "date": "2010-12-07T13:00:57.882+0000",
            "id": 5
        },
        {
            "author": "Simon Willnauer",
            "body": "next iteration - I simplified nrtIsCurrent which is nice and all tests pass. Yet, I couldn't get any test failing with this version\n{code}\nsynchronized boolean nrtIsCurrent(SegmentInfos infos) {\n    return segmentInfos.version == infos.version;\n  }\n{code}\n\nso I added another test that crashes immediately if we don't check the docWriter for changes. I also added a changes entry to runtime behavior section since the version number are different to previos versions.\n\nI also had to update an assert in TestIndexWriterReader#testAddIndexes since we now don't increment the version on a commit if there are no changes but generation might have been changed though.\n\nI think we are good to go.",
            "date": "2010-12-07T13:54:44.385+0000",
            "id": 6
        },
        {
            "author": "Simon Willnauer",
            "body": "Committed revision 1043148.\n\nI will backport later today",
            "date": "2010-12-07T17:57:56.098+0000",
            "id": 7
        },
        {
            "author": "Simon Willnauer",
            "body": "here is a patch against 3.x. I needed to change an assert in the backwards tests so that is potentially a bw break and I am not 100% sure how we handle this right now. Is changing the bw test ok in this case? If its really a bw break I guess we should also list it in the BW section in CHANGES.txt",
            "date": "2010-12-08T02:51:38.174+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "bq.  needed to change an assert in the backwards tests so that is potentially a bw break and I am not 100% sure how we handle this right now. Is changing the bw test ok in this case? If its really a bw break I guess we should also list it in the BW section in CHANGES.txt\n\nIt's fine to change the test -- and the CHANGES entry already explains this?  (Though maybe fix the CHANGES to explain that this now means some readers will in fact return \"true\" from isCurrent when then before incorrectly returned \"false\"?).",
            "date": "2010-12-08T09:18:35.220+0000",
            "id": 9
        },
        {
            "author": "Simon Willnauer",
            "body": "Backported in  revision 1043406.\n",
            "date": "2010-12-08T13:27:01.968+0000",
            "id": 10
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:21.562+0000",
            "id": 11
        }
    ],
    "component": "core/index",
    "description": "SegmentInfos currently increments version on the assumption that there are always changes.\n\nBut, both DirReader and IW are more careful about tracking whether there are changes.  DirReader has hasChanges and IW has changeCount.  I think these classes should notify the SIS when there are in fact changes; this will fix the case Simon hit on fixing LUCENE-2082 when the NRT reader thought there were changes, but in fact there weren't because IW simply committed the exact SIS it already had.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2805",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "SegmentInfos shouldn't blindly increment version on commit",
    "systemSpecification": true,
    "version": ""
}