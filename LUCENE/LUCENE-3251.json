{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "attached a fix",
            "date": "2011-06-28T08:08:22.875+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "patch looks good.",
            "date": "2011-06-28T08:45:41.208+0000",
            "id": 1
        },
        {
            "author": "Simon Willnauer",
            "body": "committed to trunk and backported to 3.x ",
            "date": "2011-06-28T09:51:57.527+0000",
            "id": 2
        }
    ],
    "component": "core/store",
    "description": "Directory#copy doesn't close the target directories output stream if sourceDir.openInput(srcFile) throws an Exception. Before LUCENE-3218 Directory#copy wasn't used extensively so this wasn't likely to happen during tests. Today we had a failure on the 3.x branch that is likely caused by this bug:\n\n{noformat}\n[junit] Testsuite: org.apache.lucene.index.TestAddIndexes\n    [junit] Testcase: testAddIndexesWithRollback(org.apache.lucene.index.TestAddIndexes):\tCaused an ERROR\n    [junit] MockDirectoryWrapper: cannot close: there are still open files: {_co.cfs=1}\n    [junit] java.lang.RuntimeException: MockDirectoryWrapper: cannot close: there are still open files: {_co.cfs=1}\n    [junit] \tat org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:483)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes$RunAddIndexesThreads.closeDir(TestAddIndexes.java:693)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes.testAddIndexesWithRollback(TestAddIndexes.java:924)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1277)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1195)\n    [junit] Caused by: java.lang.RuntimeException: unclosed IndexOutput: _co.cfs\n    [junit] \tat org.apache.lucene.store.MockDirectoryWrapper.addFileHandle(MockDirectoryWrapper.java:410)\n    [junit] \tat org.apache.lucene.store.MockCompoundFileDirectoryWrapper.<init>(MockCompoundFileDirectoryWrapper.java:39)\n    [junit] \tat org.apache.lucene.store.MockDirectoryWrapper.createCompoundOutput(MockDirectoryWrapper.java:439)\n    [junit] \tat org.apache.lucene.index.SegmentMerger.createCompoundFile(SegmentMerger.java:128)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.java:3101)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes$CommitAndAddIndexes3.doBody(TestAddIndexes.java:839)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes$RunAddIndexesThreads$1.run(TestAddIndexes.java:667)\n    [junit] \n    [junit] \n    [junit] Tests run: 18, Failures: 0, Errors: 1, Time elapsed: 9.034 sec\n    [junit] \n    [junit] ------------- Standard Output ---------------\n    [junit] java.lang.IllegalStateException: CFS has pending open files\n    [junit] \tat org.apache.lucene.store.CompoundFileWriter.close(CompoundFileWriter.java:143)\n    [junit] \tat org.apache.lucene.store.CompoundFileDirectory.close(CompoundFileDirectory.java:181)\n    [junit] \tat org.apache.lucene.store.DefaultCompoundFileDirectory.close(DefaultCompoundFileDirectory.java:58)\n    [junit] \tat org.apache.lucene.store.MockCompoundFileDirectoryWrapper.close(MockCompoundFileDirectoryWrapper.java:55)\n    [junit] \tat org.apache.lucene.index.SegmentMerger.createCompoundFile(SegmentMerger.java:139)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.java:3101)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes$CommitAndAddIndexes3.doBody(TestAddIndexes.java:839)\n    [junit] \tat org.apache.lucene.index.TestAddIndexes$RunAddIndexesThreads$1.run(TestAddIndexes.java:667)\n{noformat}",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3251",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Directory#copy leaks file handles",
    "systemSpecification": true,
    "version": "3.0, 3.1, 3.2, 3.3, 3.4, 4.0-ALPHA"
}