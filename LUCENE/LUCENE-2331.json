{
    "comments": [
        {
            "author": "Earwin Burrfoot",
            "body": "NoMergesPolicy - that's exactly what it is, a policy of no merges",
            "date": "2010-03-18T14:23:52.447+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "I like NoMergesPolicy ... perhaps, like NoLockFactory, we can call it NoMergePolicy? so MP is preserved in the name (not that it's critical)?",
            "date": "2010-03-18T17:00:05.560+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "+1 for NoMergePolicy",
            "date": "2010-03-18T17:46:18.246+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "In the process, I'll also add a NoMergeScheduler which will have empty implementations of MS. That's kind of redundant if one uses NoMP, however for symmetry it's nice to have it, as well as for not running any unnecessary code, like CMS and its threads, just to discover MP returned nothing.",
            "date": "2010-03-18T20:09:16.749+0000",
            "id": 3
        },
        {
            "author": "Shai Erera",
            "body": "Patch includes:\n* NoMergePolicy + TestNoMergePolicy\n* NoMergeScheduler + TestNoMergeScheduler\n* MergeScheduler - methods changed to public\n* CHANGES entry (New Features)",
            "date": "2010-03-19T23:10:26.765+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good Shai!\n\nBut, can you normalize the white space (2 space indent)?\n\nAlso... do you think we should allow instantiation of NoMergePolicy, allowing you to control if it uses CFS or not?",
            "date": "2010-03-22T10:34:11.712+0000",
            "id": 5
        },
        {
            "author": "Shai Erera",
            "body": "Sorry - new eclipse and project settings :). Should be ok now.",
            "date": "2010-03-22T12:53:00.770+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "bq. do you think we should allow instantiation of NoMergePolicy, allowing you to control if it uses CFS or not?\n\nYou ask because of the useCompound* methods? I wanted NMP to be a singleton really, and I don't think those two really matter? Meaning, if you are using it, I guess you don't really care if it uses a cmpnd file or not?\n\nBut if you think it's important, I can create 3 singletons: NO_COMPOUND_FILES_AND_STORE, COMPOUND_FILES, COMPOUND_FILES_AND_STORE (I really hate the long names though). We can settle w/ just two - (NO)COMPOUND_FILES ...",
            "date": "2010-03-22T12:56:54.093+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "bq. You ask because of the useCompound* methods?\n\nYes, because these methods (unexpectedly -- not good) also affect whether newly flushed segments are CFS or not.\n\nI think just the two is OK?  One can always make their own class if they really need diff't settings for the stores vs non-stores.",
            "date": "2010-03-22T15:13:29.483+0000",
            "id": 8
        },
        {
            "author": "Shai Erera",
            "body": "Patch includes NoMergePolicy.NO_COMPOUND_FILES and COMPOUND_FILES singletons.",
            "date": "2010-03-22T15:49:12.774+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "In the jdocs for NoMergeScheduler you say this:\n\n{noformat}\nNote that you can achieve the same thing by using {@link NoMergePolicy}, however with {@link NoMergeScheduler}\nyou also ensure that no unnecessary code of any {@link MergeScheduler} implementation is ever executed. \n{noformat}\n\nShould that {@link MergeScheduler} be {@link MergePolicy} instead?  I can fix...",
            "date": "2010-03-22T16:21:50.015+0000",
            "id": 10
        },
        {
            "author": "Shai Erera",
            "body": "I think it's correct. The idea is to say that even w/ NMP, if you use NMS you ensure that no MS code is ever run (e.g. if you use NMP only, then CMS code [default] will always run but won't do anything).",
            "date": "2010-03-22T16:26:48.307+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "OK, then I'll leave it.\n\nPatch looks good -- these are simple additions -- I'll commit shortly.  Thanks Shai!",
            "date": "2010-03-22T16:28:13.946+0000",
            "id": 12
        },
        {
            "author": "Michael McCandless",
            "body": "Committed on newtrunk.",
            "date": "2010-03-22T19:52:06.499+0000",
            "id": 13
        }
    ],
    "component": "core/index",
    "description": "I'd like to add a simple and useful MP implementation which does .... nothing ! :). I've came across many places where either the following is documented or implemented: \"if you want to prevent merges, set mergeFactor to a high enough value\". I think a NoOpMergePolicy is just as good, and can REALLY allow you disable merges (except for maybe set mergeFactor to Int.MAX_VAL).\n\nAs such, NoOpMergePolicy will be introduced as a singleton, and can be used for convenience purposes only. Also, for Parallel Index it's important, because I'd like the slices to never do any merges, unless ParallelWriter decides so. So they should be set w/ that MP.\n\nI have a patch ready. Waiting for LUCENE-2320 to go in, so that I don't need to change it afterwards.\n\nAbout the name - I like the name, but suggestions are welcome. I thought of a NullMergePolicy, but I don't like 'Null' used for a NoOp.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2331",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add NoOpMergePolicy",
    "systemSpecification": true,
    "version": ""
}