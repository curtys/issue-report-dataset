{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "Patch. Tests mostly pass, there is still some insane FieldCache in some tests (thats unrelated to this change, but can be made appearing more often by remving rarely() from  the maybeWrapReader method. Mostly affected is insane field cache in TestExplanations and QueryUtils that check explanations.\n\nThe attached patch simply implement the vertical index splitter in test-framework. If there is interest in this FilterAtomicReader, we can move it e.g. to core.",
            "date": "2012-02-26T17:48:36.373+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "New patch that fixes the insanity and also removes the hack in QueryUtils added y Robert.\n\nThe problem causing insanity was the wrapping by MultiReader which is detected by FC checker as insanity if it is wrapped by Slow and the checker can walk down to a SegmentReader [e.g., SlowMultiReaderWrapper(MultiReader(StandardDirectoryReader()))]. The trick was to make the returned fake reader have an own cache key, so FC checker does not recognize the \"insanity\".\n\nThis patch also fixes the getTermVectors method in the FieldFilterAtomicReader to return null, if none of the remaining fields have TVs.",
            "date": "2012-02-26T19:05:17.646+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "Fix also TestDuellingCodecs to no longer rely on order of stored fields (see comment by Mike/Robert).\n\nAll tests pass now, will commit this later.",
            "date": "2012-02-26T22:26:36.167+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "Committed trunk revision: 1293965",
            "date": "2012-02-26T23:38:16.610+0000",
            "id": 3
        }
    ],
    "component": "core/index, general/test",
    "description": "In addition to the filters in contrib/misc for horizontally filtering (by doc-id) AtomicReader, it would be good to have the same vertically (by field). For now I will add this implementation to test-framework, as it cannot stay in contrib/misc, because LTC will need it for maybeWrapReader.\n\nLTC will use this FilterAtomicReader to construct a ParallelAtomicReader out of two (or maybe more) FieldFilterAtomicReaders.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3823",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add a field-filtering FilterAtomicReader to 4.0 so ParallelReaders can be better tested (in LTC.maybeWrapReader)",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}