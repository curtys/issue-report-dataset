{
    "comments": [
        {
            "author": "Christian Kohlsch\u00fctter",
            "body": "Testcase and bugfixes for trunk (should also be applicable to 2.4.1)\n",
            "date": "2009-09-17T21:25:00.836+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good!  Thanks Christian.  Good catches!\n\nI made minor changes to it -- added CHANGES entry, fixed indentaiton, switched the test over to MockRAMDir (and closed them) and added checkIndex calls.\n",
            "date": "2009-09-18T09:34:49.325+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Mark, I think we should commit this for 2.9?",
            "date": "2009-09-18T09:35:09.694+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "I have no problem with this. I think we need a new RC for sure because of LUCENE-1919, which is very tricky and it should be tested by public, who have for sure lot of old-styled TokenStreams.",
            "date": "2009-09-18T10:28:33.355+0000",
            "id": 3
        },
        {
            "author": "Mark Miller",
            "body": "Agreed - we are now stuck with a new rc it sounds, so let's fix what we can. ",
            "date": "2009-09-18T11:48:21.242+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Christian!",
            "date": "2009-09-18T12:34:06.143+0000",
            "id": 5
        }
    ],
    "component": "core/index",
    "description": "Hi,\nI recently stumbled upon this:\n\nIt is possible (and perfectly legal) to add empty indexes (IndexReaders) to an IndexWriter. However, when using ParallelReaders in this context, in two situations RuntimeExceptions may occur for no good reason.\n\nCondition 1:\nThe indexes within the ParallelReader are just empty.\n\nWhen adding them to the IndexWriter, we get a java.util.NoSuchElementException triggered by ParallelTermEnum's constructor. The reason for that is the TreeMap#firstKey() method which was assumed to return null if there is no entry (which is not true, apparently -- it only returns null if the first key in the Map is null).\n\n\nCondition 2 (Assuming the aforementioned bug is fixed):\nThe indexes within the ParallelReader originally contained one or more fields with TermVectors, but all documents have been marked as deleted.\n\nWhen adding the indexes to the IndexWriter, we get a java.lang.ArrayIndexOutOfBoundsException triggered by TermVectorsWriter#addAllDocVectors. The reason here is that TermVectorsWriter assumes that if the index is marked to have TermVectors, at least one field actually exists for that. This unfortunately is not true, either.\n\nPatches and a testcase demonstrating the two bugs are provided.\n\nCheers,\nChristian",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1918",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Adding empty ParallelReader indexes to an IndexWriter may cause ArrayIndexOutOfBoundsException or NoSuchElementException",
    "systemSpecification": true,
    "version": "2.4.1, 2.9"
}