{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Dammit, sorry guys: this was bug in the test.\n\nStill chasing down this hudson bug... but I've fixed this test and will commit it.",
            "date": "2012-03-21T01:44:59.639+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "Hmm might not be over yet... I have a seed!\n\n{noformat}\nant test -Dtestcase=TestAnalyzers -Dtestmethod=testRandomStrings -Dtests.seed=-7f6a719106dd5c8:-63eef3f2749f16d4:706a2a70bcc9d7ac -Dtests.multiplier=3 -Dargs=\"-Dfile.encoding=UTF-8\"\n{noformat}\n\nThis is the random test for WhitespaceAnalyzer.\n\n{noformat}\n    [junit] Testcase: testRandomStrings(org.apache.lucene.analysis.core.TestAnalyzers):\tCaused an ERROR\n    [junit] term 0 expected:<\ud804\udc9b[]\ud804\udc91\ud804\udcb6\ud804\udcc1\ud804\udccc\ud804\udcaa\ud804\udcb2\ud804\udcae\ud804\udccb\ud804\udccd\ud804\udc93> but was:<\ud804\udc9b[?]\ud804\udc91\ud804\udcb6\ud804\udcc1\ud804\udccc\ud804\udcaa\ud804\udcb2\ud804\udcae\ud804\udccb\ud804\udccd\ud804\udc93>\n    [junit] org.junit.ComparisonFailure: term 0 expected:<\ud804\udc9b[]\ud804\udc91\ud804\udcb6\ud804\udcc1\ud804\udccc\ud804\udcaa\ud804\udcb2\ud804\udcae\ud804\udccb\ud804\udccd\ud804\udc93> but was:<\ud804\udc9b[?]\ud804\udc91\ud804\udcb6\ud804\udcc1\ud804\udccc\ud804\udcaa\ud804\udcb2\ud804\udcae\ud804\udccb\ud804\udccd\ud804\udc93>\n    [junit] \tat org.junit.Assert.assertEquals(Assert.java:125)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:144)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:546)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:337)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:306)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:298)\n    [junit] \tat org.apache.lucene.analysis.core.TestAnalyzers.testRandomStrings(TestAnalyzers.java:213)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:597)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:729)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:645)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:556)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:51)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:618)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:164)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:51)\n    [junit] \tat org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:21)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:768)\n    [junit] \n    [junit] \n    [junit] Test org.apache.lucene.analysis.core.TestAnalyzers FAILED\n{noformat}",
            "date": "2012-03-21T01:59:53.462+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "Here's a patch, but we should not commit it.\n\nI think this patch only shoves the bug under the rug: by reading fully it makes it less likely to happen that there is some off-by-one here.",
            "date": "2012-03-21T02:17:56.965+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "OK I think the problem here was the spoon-feeder would feed 1 character, and that 1 character is a high-surrogate.  In that case, CharacterUtils.fill was returning 0, but I think should re-attempt the read to pull more chars?\n\nAttached patch seems to fix it... not sure we can do it cleaner though.",
            "date": "2012-03-21T11:02:18.089+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "+1",
            "date": "2012-03-21T12:47:39.374+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Improved the patch a bit; \"ant test\" in modules/analysis passes (at least once!).\n\nI think it's ready...",
            "date": "2012-03-21T12:47:41.519+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Mike: I backported your commit to 3.x to start making progress on these hudson fails.",
            "date": "2012-03-21T14:31:01.309+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Rob!",
            "date": "2012-03-21T14:58:43.263+0000",
            "id": 7
        }
    ],
    "component": "modules/analysis",
    "description": "Initially found by hudson from additional testing added in LUCENE-3894, but \ncurrently not reproducable (see LUCENE-3895).\n\nBut its easy to reproduce for a simple single-threaded case in TestDuelingAnalyzers.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3896",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Blocker",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "CharTokenizer has bugs for large documents.",
    "systemSpecification": true,
    "version": ""
}