{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "+1, there is a lot of crazy code around this area, consumers catching the exception from reusableTokenStream() and falling back to tokenStream() and other silly things.",
            "date": "2011-09-25T05:24:42.547+0000",
            "id": 0
        },
        {
            "author": "Chris Male",
            "body": "Patch which converts all test consumers over to using reusableTokenStream.\n\nIncluded is a fix for PatternAnalyzer, where I had missed re-creating the Matcher which prevented reuse.\n\nI'm going to commit this shortly and then attack production code.",
            "date": "2011-09-25T06:01:22.869+0000",
            "id": 1
        },
        {
            "author": "Chris Male",
            "body": "Fixed some failing tests.  Now everything is passing.\n\nCommitting shortly.",
            "date": "2011-09-25T13:36:07.036+0000",
            "id": 2
        },
        {
            "author": "Chris Male",
            "body": "Committed revision 1175670.",
            "date": "2011-09-26T04:59:02.491+0000",
            "id": 3
        },
        {
            "author": "Chris Male",
            "body": "Patch which converts the last consumers over to using reusableTokenStream().\n\nCouple of changes to the classic QP included in this.  Rather than silently returning null on an IOException, a ParseException is now thrown.  Equally, where before the IOException was simply ignored, an Exception is thrown.\n\nGoing to commit this shortly and then change reusableTokenStream() to tokenStream().",
            "date": "2011-09-26T05:27:24.461+0000",
            "id": 4
        },
        {
            "author": "Chris Male",
            "body": "Committed revision 1176191.",
            "date": "2011-09-27T04:08:53.559+0000",
            "id": 5
        }
    ],
    "component": "modules/analysis",
    "description": "With Analyzer now using TokenStreamComponents, theres no reason for Analysis consumers to use tokenStream() (it just gives bad performance).  Consequently all consumers will be moved over to using reusableTokenStream().  The only challenge here is that reusableTokenStream throws an IOException which many consumers are not rigged to deal with.\n\nOnce all consumers have been moved, we can rename reusableTokenStream() back to tokenStream().",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3455",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "All Analysis Consumers should use reusableTokenStream",
    "systemSpecification": true,
    "version": ""
}