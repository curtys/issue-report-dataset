{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.  I'll commit in 1 or 2 days.",
            "date": "2007-12-03T15:35:12.482+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "I just committed this!",
            "date": "2007-12-04T22:19:44.324+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "Spinoff from this thread:\n\n  http://www.gossamer-threads.com/lists/lucene/java-dev/55391\n\nOn reviewing the code I found one case where an aborted merge (from\ncalling close(false)) could write to files that a newly opened\nIndexWriter would also try to write to.\n\nI strengthened an existing test case in TestConcurrentMergeScheduler\nto tickle this case, and also modified MockRAMDirectory to throw an\nIOException if ever a file besides segments.gen is overwritten.\n\nHowever, strangely, I can't get an unhandled exception to occur during\nthe test and I'm not sure why.  Still I think this is a good defensive\ncheck so we should commit it.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1075",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Possible thread hazard in IndexWriter.close(false)",
    "systemSpecification": true,
    "version": "2.3"
}