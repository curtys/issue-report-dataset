{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "I will solve this together with LUCENE-1877.\n\nTo test, if lock is obtained, you have to try locking and release the lock after that (if the lock was obtained):\n\n{code}\n  public synchronized boolean isLocked() {\n    // the test for is isLocked is not directly possible with native file locks:\n    \n    // if we have a lock instance in this class, it is for sure locked:\n    if (lockExists()) return true;\n    \n    // else try to obtain and release (if was locked) the lock to test\n    try {\n      boolean obtained = obtain();\n      if (obtained) release();\n      return !obtained;\n    } catch (IOException ioe) {\n      return false;\n    }    \n  }\n{code}\n\nThe method lockExists contains the same like isLocked contained before and is used instead to check if a local lock instance is available (as quick break-out).\n\nThere is no patch as it is included in my work for 1877 and hard to unwire.",
            "date": "2009-09-02T17:04:39.624+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Nice catch Uwe!",
            "date": "2009-09-02T18:27:42.146+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "Thanks!\n\nIt was not so hard. After changing the default lock factory, a lot of tests were failing because of this.",
            "date": "2009-09-02T18:52:48.916+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "The new patch in LUCENE-1877 changes the isLocked() method to shortcut, if no lock file is present. In this case, without a lockfile, it cannot be not locked. This prevent NativeFSLock for creating the lock short time without really using it.\n",
            "date": "2009-09-03T06:16:30.482+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Committed revision: 811157",
            "date": "2009-09-03T22:18:24.101+0000",
            "id": 4
        }
    ],
    "component": "",
    "description": "IndexWriter.isLocked() or IndexReader.isLocked() do not work with NativeFSLockFactory.\n\nThe problem is, that the method NativeFSLock.isLocked() just checks if the same lock instance was locked before (lock != null). If the LockFactory created a new lock instance, this always returns false, even if its locked.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1885",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Blocker",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "NativeFSLockFactory.makeLock(...).isLocked() does not work",
    "systemSpecification": true,
    "version": ""
}