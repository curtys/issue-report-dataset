{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "+1",
            "date": "2011-05-24T14:41:01.401+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "Perhaps we should also fail the test if that happens? Was there reason why only the stacktrace printed, but tests were considered successful?",
            "date": "2011-05-24T14:49:08.843+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "some tests are still problematic, at least on windows... I think perhaps some of the crazier ones like DiskFull, TestCrash, anything that has to disable MockDirectoryWrappers's checks because they must create corrupt indexes or other scary things.\n",
            "date": "2011-05-24T14:54:53.876+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Patch adds registerTempFile to LTC plus prints stack information if rmDir fails.\n\nI think we should also fail the test if that happens?",
            "date": "2011-05-24T14:55:23.207+0000",
            "id": 3
        },
        {
            "author": "Shai Erera",
            "body": "bq. some tests are still problematic, at least on windows... \n\nOk, I didn't notice your comment when posted the patch. So let's keep it as-is.\n\nI think it's ready to commit",
            "date": "2011-05-24T14:56:47.449+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Patch applies the same changes to backwards' LTC.",
            "date": "2011-05-24T15:22:23.569+0000",
            "id": 5
        },
        {
            "author": "Shai Erera",
            "body": "When I run 'ant test-backwards' I see these exceptions:\n\n{noformat}\n   [junit] ------------- Standard Error -----------------\n   [junit] java.io.IOException: could not delete D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\1\\test4293913517498927234tmp\\_1.fdt\n   [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)\n   [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)\n   [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n   [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n   [junit]     at java.lang.reflect.Method.invoke(Method.java:611)\n   [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n   [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n   [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n   [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)\n   [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n   [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n   [junit] path D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\1\\test4293913517498927234tmp allocated from\n   [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)\n   [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)\n   [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)\n   [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)\n   [junit] org.apache.lucene.index.TestIndexWriterWithThreads._testMultipleThreadsFailure(TestIndexWriterWithThreads.java:212)\n   [junit] org.apache.lucene.index.TestIndexWriterWithThreads.testIOExceptionDuringWriteSegmentWithThreads(TestIndexWriterWithThreads.java:381)\n{noformat}\n\nand\n\n{noformat}\n    [junit] ------------- Standard Error -----------------\n    [junit] java.io.IOException: could not delete D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\5\\test6976265647485126574tmp\\write.lock\n    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit] path D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\5\\test6976265647485126574tmp allocated from\n    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)\n    [junit] org.apache.lucene.index.TestIndexReader.testReopenChangeReadonly(TestIndexReader.java:1622)\n{noformat}\n\nand\n\n{noformat}\n    [junit] ------------- Standard Error -----------------\n    [junit] java.io.IOException: could not delete D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\5\\test7434165808901493103tmp\\write.lock\n    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit] path D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\5\\test7434165808901493103tmp allocated from\n    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)\n    [junit] org.apache.lucene.index.TestPersistentSnapshotDeletionPolicy.getDeletionPolicy(TestPersistentSnapshotDeletionPolicy.java:53)\n    [junit] org.apache.lucene.index.TestSnapshotDeletionPolicy.testReleaseSnapshot(TestSnapshotDeletionPolicy.java:336)\n{noformat}\n\nand\n\n{noformat}\n    [junit] ------------- Standard Error -----------------\n    [junit] java.io.IOException: could not delete D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\7\\test4762963085363551376tmp\\_a.fnm\n    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit] path D:\\dev\\lucene\\lucene-3x\\lucene\\build\\backwards\\test\\7\\test4762963085363551376tmp allocated from\n    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)\n    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)\n    [junit] org.apache.lucene.TestMergeSchedulerExternal.testSubclassConcurrentMergeScheduler(TestMergeSchedulerExternal.java:85)\n{noformat}\n\nIt's weird - even simple classes fail ... maybe the random dir name we make up for the test is not random enough on my machine? (It is known for its ability to pick really interesting seeds for Lucene tests :)).\n\nPerhaps we should have the test method in the dirname, in addition to Random?\n\nI see _TestUtil.getTempDir does this:\n\n{code}\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n{code}\n\nThat's bad no? Shouldn't it use LTC.random? And then we could add that seed to the print in LTC.afterClass ...?",
            "date": "2011-05-24T15:26:46.484+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "I think I've found the problem - MockIndexOutputWrapper did not close delegate if dir.maybeThrowEx actually threw an exception. Here's a patch that fixes it:\n\n{code}\nIndex: lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java\n===================================================================\n--- lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java       (revision 1127062)\n+++ lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java       (working copy)\n@@ -45,20 +45,23 @@\n\n   @Override\n   public void close() throws IOException {\n-    dir.maybeThrowDeterministicException();\n-    delegate.close();\n-    if (dir.trackDiskUsage) {\n-      // Now compute actual disk usage & track the maxUsedSize\n-      // in the MockDirectoryWrapper:\n-      long size = dir.getRecomputedActualSizeInBytes();\n-      if (size > dir.maxUsedSize) {\n-        dir.maxUsedSize = size;\n+    try {\n+      dir.maybeThrowDeterministicException();\n+    } finally {\n+      delegate.close();\n+      if (dir.trackDiskUsage) {\n+        // Now compute actual disk usage & track the maxUsedSize\n+        // in the MockDirectoryWrapper:\n+        long size = dir.getRecomputedActualSizeInBytes();\n+        if (size > dir.maxUsedSize) {\n+          dir.maxUsedSize = size;\n+        }\n       }\n+      synchronized(dir) {\n+        dir.openFileHandles.remove(this);\n+        dir.openFilesForWrite.remove(name);\n+      }\n     }\n-    synchronized(dir) {\n-      dir.openFileHandles.remove(this);\n-      dir.openFilesForWrite.remove(name);\n-    }\n   }\n\n   @Override\n{code}\n\nMaybe we solve it by moving delegate.close() before dir.maybeThrow, instead of the try-finally?",
            "date": "2011-05-25T04:01:28.777+0000",
            "id": 7
        },
        {
            "author": "Shai Erera",
            "body": "Patch fixes MockIndexOutputWrapper to always call delegate.close().\n\nOn the way, I fixed TestPersistentSnapshotDeletionPolicy to always close the PSDP, as well as fixed a \"leak\" in PSDP itself.\n\nI will commit this one. There are still tests that fail to delete directories, but I think we should iterate on them separately, as all seem to be related to how MockIOWrapper handles those maybeThrowDeterminsticEx. I'll send a separate mail.\n\nThis issue is about fixing LTC so that it outputs more information about directories that fail to delete. You can simulate failures, on Windows, by running tests w/ -Dtests.directory=FSDirectory, then track the stacktraces that are printed.",
            "date": "2011-05-25T07:57:13.683+0000",
            "id": 8
        },
        {
            "author": "Shai Erera",
            "body": "Committed revision 1127470 (trunk).\nCommitted revision 1127471 (3x).\n\nLTC now verbose whatever we need to pursue rmDir failures.",
            "date": "2011-05-25T10:47:36.863+0000",
            "id": 9
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:11.933+0000",
            "id": 10
        }
    ],
    "component": "general/test",
    "description": "I've hit an exception from LTC.afterClass when _TestUtil.rmDir failed (on write.lock, as if some test did not release resources). However, I had no idea which test caused that (i.e. opened the temp directory and did not release resources).\n\nI think we should do the following:\n* Track in LTC a map from dirName -> StackTraceElement\n* In afterClass if _TestUtil.rmDir fails, print the STE of that particular dir, so we know where was this directory created from\n* Make tempDirs private and create accessor method, so that we control the inserts to this map (today the Set is updated by LTC, _TestUtils and TestBackwards !)",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3139",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "LuceneTestCase.afterClass does not print enough information if a temp-test-dir fails to delete",
    "systemSpecification": true,
    "version": ""
}