{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch.",
            "date": "2011-10-15T14:41:36.785+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "mike, I just had a quick look but is this intentionally?\n{code}\n-      return IndexReader.openIfChanged(oldReader, writer, applyDeletes);\n+      return IndexReader.openIfChanged(oldReader, applyDeletes);\n{code}\n\nseems like you are not opening a NRT reader there anymore?",
            "date": "2011-10-15T14:50:24.732+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Simon.\n\nIt should still be opening an NRT reader: if you have an NRT reader (which we do here) and pass that to IR.openIfChanged, you'll always get back a new NRT reader (this is the contract of IR.openIfChanged).\n\nSo I believe passing writer here wasn't necessary?",
            "date": "2011-10-15T16:05:28.011+0000",
            "id": 2
        },
        {
            "author": "Yonik Seeley",
            "body": "Steve just took a stack trace (and aborted the build) of a test run started yesterday.\nI noticed \"SearchManager\" in one of the traces.  Maybe this issue fixes?\n\nhttps://builds.apache.org/job/Lucene-Solr-tests-only-trunk/10840/console\n",
            "date": "2011-10-15T21:24:44.688+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "bq.It should still be opening an NRT reader: if you have an NRT reader (which we do here) and pass that to IR.openIfChanged, you'll always get back a new NRT reader (this is the contract of IR.openIfChanged).\n\nhmm, however the signature of openIfChanged(IR, boolean) actually referes to openIfChanged(IndexReader oldReader, boolean readonly) which seems confusing when you pass applyDeletes to it, no?",
            "date": "2011-10-15T21:55:29.027+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I noticed \"SearchManager\" in one of the traces. Maybe this issue fixes?\n\nIndeed I think this fixes it; I just committed that test-only fix.",
            "date": "2011-10-15T22:45:37.948+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "bq. hmm, however the signature of openIfChanged(IR, boolean) actually referes to openIfChanged(IndexReader oldReader, boolean readonly) which seems confusing when you pass applyDeletes to it, no?\n\nUgh, you're right!\n\nIn fact we don't need to pass applyDeletes either; this too is inherited from the prior reader.  So I'll just reduce it to IR.openIfChanged(oldReader).  Hmm then we can simplify SearcherManager some.  I'll work out a new patch.",
            "date": "2011-10-15T22:50:02.873+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "New patch; I was able to simplify SearcherManager since both cases (open-from-writer (= NRT case) and open-from-dir (= non-NRT case)) now call the same IR.openIfChanged(oldReader).",
            "date": "2011-10-15T23:13:28.506+0000",
            "id": 7
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. New patch; I was able to simplify SearcherManager since both cases (open-from-writer (= NRT case) and open-from-dir (= non-NRT case)) now call the same IR.openIfChanged(oldReader).\n\nyeah nice! looks good mike!",
            "date": "2011-10-16T11:01:16.312+0000",
            "id": 8
        },
        {
            "author": "Uwe Schindler",
            "body": "Bulk close after release of 3.5",
            "date": "2011-11-27T12:29:31.043+0000",
            "id": 9
        }
    ],
    "component": "core/index",
    "description": "I hit a failure in TestSearcherManager (NOTE: doesn't always fail):\n\n{noformat}\n  ant test -Dtestcase=TestSearcherManager -Dtestmethod=testSearcherManager -Dtests.seed=459ac99a4256789c:-29b8a7f52497c3b4:145ae632ae9e1ecf\n{noformat}\n\nIt was tripping the assert inside SearcherLifetimeManager.record,\nbecause two different IndexSearcher instances had different IR\ninstances sharing the same version.  This was happening because\nIW.getReader always returns a new reader even when there are no\nchanges.  I think we should fix that...\n\nSeparately I found a deadlock in\nTestSearcherManager.testIntermediateClose, if the test gets\nSerialMergeScheduler and needs to merge during the second commit.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3520",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "If the NRT reader hasn't changed then IndexReader.openIfChanged should return null",
    "systemSpecification": true,
    "version": ""
}