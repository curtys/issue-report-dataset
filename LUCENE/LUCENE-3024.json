{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch.\n\nThis differs a bit from the patch I posted to the dev list -- there was also an assert that was illegally casting to int.",
            "date": "2011-04-12T14:51:41.284+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Fixed in 3.2, 4.0.\n\nI'm leaving this open in case we ever release 3.1.1.",
            "date": "2011-04-12T19:36:39.029+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "bulk move 3.2 -> 3.3",
            "date": "2011-06-03T16:40:45.362+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Resolving; we can reopen if we ever want to backport to 3.1.1.",
            "date": "2011-06-04T15:57:12.056+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "bulk close for 3.3",
            "date": "2011-07-02T02:40:12.811+0000",
            "id": 4
        }
    ],
    "component": "",
    "description": "Tom hit a new long/int overflow case: http://markmail.org/thread/toyl2ujcl4suqvf3\n\nThis is a regression, in 3.1, introduced with LUCENE-2075.\n\nWorse, our Test2BTerms failed to catch this, so I've fixed that test to show the failure.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3024",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "If index has more than Integer.MAX_VALUE terms, seeking can it AIOOBE due to long/int overflow",
    "systemSpecification": true,
    "version": ""
}