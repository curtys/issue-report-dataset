{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "here is a first (almost guess) at a patch. many of the changes to these tests are likely wrong.\nat least I think i identified some good candidates... \n\nin general sometimes its hard to tell where the multiplier should be applied anyway.\n\nwe should also try to improve:\n* TestAtomicUpdate\n* FlexUtil.testRandomSkips\n* TestIW.testDiverseDocs\n* TestLazyBug\n* TestBufferedIndexInput\n\nto try it out, run ant test -Drandom.multiplier=7\n(this cranks the random tests approximately \"times 7\")\n",
            "date": "2010-05-06T16:59:15.255+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Great!\n\nI fixed a couple failing tests -- they now pass for me w/ multiplier 3.",
            "date": "2010-05-06T17:15:11.149+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "I ran the patch with -Drandom.multiplier=23\nThe tests spun and spun (i finally killed it), but i produced a few failures. Hopefully they are all just bugs I introduced into the tests!\n\nAfter 2 minutes, TestIW failed here:\n{noformat}\n    [junit] Testsuite: org.apache.lucene.index.TestIndexWriter\n    [junit] Testcase: testTermUTF16SortOrder(org.apache.lucene.index.TestIndexWriter):  FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.MultiTermsEnum.seek(MultiTermsEnum.java:143)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.TestIndexWriter.checkTermsOrder(TestIndexWriter.java:4717)\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testTermUTF16SortOrder(TestIndexWriter.java:4789)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)\n    [junit]\n    [junit]\n    [junit] Tests run: 112, Failures: 1, Errors: 0, Time elapsed: 143.461 sec\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testTermUTF16SortOrder' was: 1356727775332805472\n{noformat}\n\nAll NRQ tests failed, i must have screwed up the tests really bad\n{noformat}\n    [junit] Testsuite: org.apache.lucene.search.TestMultiValuedNumericRangeQuery\n    [junit] Testcase: testMultiValuedNRQ(org.apache.lucene.search.TestMultiValuedNumericRangeQuery):    FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)\n    [junit]     at org.apache.lucene.search.TestMultiValuedNumericRangeQuery.testMultiValuedNRQ(TestMultiValuedNumericRangeQuery.java:72)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)\n    [junit]\n    [junit]\n    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 74.553 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testMultiValuedNRQ' was: 6379316497871210234\n    [junit] ------------- ---------------- ---------------\n\n    [junit] Testsuite: org.apache.lucene.search.TestNumericRangeQuery64\n    [junit] Testcase: testRandomTrieAndClassicRangeQuery_6bit(org.apache.lucene.search.TestNumericRangeQuery64):FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testRandomTrieAndClassicRangeQuery(TestNumericRangeQuery64.java:364)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testRandomTrieAndClassicRangeQuery_6bit(TestNumericRangeQuery64.java:410)\n    [junit]\n    [junit]\n    [junit] Testcase: testSorting_6bit(org.apache.lucene.search.TestNumericRangeQuery64):       FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testSorting(TestNumericRangeQuery64.java:525)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testSorting_6bit(TestNumericRangeQuery64.java:545)\n    [junit]\n    [junit]\n    [junit] Tests run: 34, Failures: 2, Errors: 0, Time elapsed: 544.22 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testRandomTrieAndClassicRangeQuery_6bit' was: 3692414376588312592\n    [junit] NOTE: random seed of testcase 'testSorting_6bit' was: -5115416782250700412\n    [junit] ------------- ---------------- ---------------\n\n    [junit] Testsuite: org.apache.lucene.search.TestNumericRangeQuery32\n    [junit] Testcase: testRandomTrieAndClassicRangeQuery_4bit(org.apache.lucene.search.TestNumericRangeQuery32):FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRandomTrieAndClassicRangeQuery(TestNumericRangeQuery32.java:346)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRandomTrieAndClassicRangeQuery_4bit(TestNumericRangeQuery32.java:392)\n    [junit]\n    [junit]\n    [junit] Testcase: testRangeSplit_8bit(org.apache.lucene.search.TestNumericRangeQuery32):    FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit(TestNumericRangeQuery32.java:421)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit_8bit(TestNumericRangeQuery32.java:436)\n    [junit]\n    [junit]\n    [junit] Testcase: testRangeSplit_2bit(org.apache.lucene.search.TestNumericRangeQuery32):    FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit(TestNumericRangeQuery32.java:417)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit_2bit(TestNumericRangeQuery32.java:446)\n    [junit]\n    [junit]\n    [junit] Testcase: testSorting_8bit(org.apache.lucene.search.TestNumericRangeQuery32):       FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting(TestNumericRangeQuery32.java:492)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting_8bit(TestNumericRangeQuery32.java:507)\n    [junit]\n    [junit]\n    [junit] Testcase: testSorting_4bit(org.apache.lucene.search.TestNumericRangeQuery32):       FAILED\n    [junit] null\n    [junit] junit.framework.AssertionFailedError\n    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)\n    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)\n    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)\n    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)\n    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)\n    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)\n    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)\n    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)\n    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)\n    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)\n    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting(TestNumericRangeQuery32.java:492)\n    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting_4bit(TestNumericRangeQuery32.java:512)\n    [junit]\n    [junit]\n    [junit] Tests run: 27, Failures: 5, Errors: 0, Time elapsed: 332.621 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testRandomTrieAndClassicRangeQuery_4bit' was: -2669854942242274524\n    [junit] NOTE: random seed of testcase 'testRangeSplit_8bit' was: 5368342330535968370\n    [junit] NOTE: random seed of testcase 'testRangeSplit_2bit' was: 4707437135047159199\n    [junit] NOTE: random seed of testcase 'testSorting_8bit' was: 4999254898192507629\n    [junit] NOTE: random seed of testcase 'testSorting_4bit' was: 3362223988444615041\n    [junit] ------------- ---------------- ---------------\n\n{noformat}\n\nTestRegexpRandom2 failed\n\n{noformat}\n    [junit] Testsuite: org.apache.lucene.search.TestRegexpRandom2\n    [junit] Testcase: testRegexps(org.apache.lucene.search.TestRegexpRandom2):  FAILED\n    [junit] for re:. expected:<2808> but was:<2801>\n    [junit] junit.framework.AssertionFailedError: for re:. expected:<2808> but was:<2801>\n    [junit]     at org.apache.lucene.search.TestRegexpRandom2.assertSame(TestRegexpRandom2.java:138)\n    [junit]     at org.apache.lucene.search.TestRegexpRandom2.testRegexps(TestRegexpRandom2.java:117)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)\n    [junit]\n    [junit]\n    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 125.146 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testRegexps' was: 8221008363438780882\n    [junit] ------------- ---------------- ---------------\n{noformat}\n\nThe automaton convertor failed, probably some illegal surrogate case\n\n{noformat}\n    [junit] Testsuite: org.apache.lucene.util.automaton.TestUTF32ToUTF8\n    [junit] Testcase: testRandomRegexes(org.apache.lucene.util.automaton.TestUTF32ToUTF8):      Caused an ERROR\n    [junit] 2361\n    [junit] java.lang.ArrayIndexOutOfBoundsException: 2361\n    [junit]     at java.lang.Character.toSurrogates(Character.java:2596)\n    [junit]     at java.lang.String.<init>(String.java:275)\n    [junit]     at org.apache.lucene.util.automaton.TestUTF32ToUTF8.assertAutomaton(TestUTF32ToUTF8.java:186)\n    [junit]     at org.apache.lucene.util.automaton.TestUTF32ToUTF8.testRandomRegexes(TestUTF32ToUTF8.java:170)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)\n    [junit]\n    [junit]\n    [junit] Tests run: 5, Failures: 0, Errors: 1, Time elapsed: 14.099 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testRandomRegexes' was: -6824078967033722523\n    [junit] ------------- ---------------- ---------------\n{noformat}\n\nfor TestDeterminizeLexicon, it just ran out of memory (we should probably put a Math.min on lexicon size, no matter the multiplier)\n\n{noformat}\n    [junit] Testsuite: org.apache.lucene.util.automaton.TestDeterminizeLexicon\n    [junit] Testcase: testLexicon(org.apache.lucene.util.automaton.TestDeterminizeLexicon):     Caused an ERROR\n    [junit] Java heap space\n    [junit] java.lang.OutOfMemoryError: Java heap space\n    [junit]     at org.apache.lucene.util.automaton.UTF32ToUTF8.newUTF8State(UTF32ToUTF8.java:302)\n    [junit]     at org.apache.lucene.util.automaton.UTF32ToUTF8.convert(UTF32ToUTF8.java:285)\n    [junit]     at org.apache.lucene.util.automaton.ByteRunAutomaton.<init>(ByteRunAutomaton.java:23)\n    [junit]     at org.apache.lucene.util.automaton.TestDeterminizeLexicon.assertLexicon(TestDeterminizeLexicon.java:63)\n    [junit]     at org.apache.lucene.util.automaton.TestDeterminizeLexicon.testLexicon(TestDeterminizeLexicon.java:51)\n    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)\n    [junit]\n    [junit]\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 33.064 sec\n    [junit]\n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: random seed of testcase 'testLexicon' was: 2016020851907753137\n    [junit] ------------- ---------------- ---------------\n{noformat}\n",
            "date": "2010-05-06T17:43:07.563+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Many of the failures are caused by a devious bug in DoubleBarrelLRUCache.  The bug is when it promotes an entry from secondary -> primary on lookup; it uses the incoming key argument to store the entry in the primary.  The problem is this key may be volatile (eg by StandardTermsDictReader) which then messes up the ConcurrentHashMap and can lead to invalid cache hits.\n\nBut the AIOOBE bug is caused by a JRE bug!!  http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6588260  We've worked around it by not using the String ctor that takes int[] code points.\n\nWe gotta do more of this random testing!",
            "date": "2010-05-06T23:55:16.962+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Patched attached -- fixes the two issues.  But it'd be nice to have a cleaner way to have DBLRUCache be able to clone its key (or, better, use the key/entry from the secondary map which is already \"safe\" (not volatile), but I couldn't see an API that'd let me do this)... clone is protected in java's base Object, so I made a silly CloneableKey class.",
            "date": "2010-05-07T00:20:35.683+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "New patch -- last one was missing a couple files.",
            "date": "2010-05-07T00:36:27.046+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "+1, while the fixes may not be perfect for now in our eyes, its the lesser of two evils.\n\nFor example the String bug, the jvm itself got wrong \nso I'm personally scared to change the correct version from ICU, even\nthough I really do not like how it is implemented.\n\nThe cache bug, it will remain a mystery how you tracked this one still! \nBut after the generics policeman comes out of 'the other ICU' from his \nheart attack after seeing it, I bet he will have ideas.\n",
            "date": "2010-05-07T18:57:51.566+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "I didn't quite fix this correctly -- left out the clone() in DBLRU when promoting the entry!",
            "date": "2010-05-13T14:41:17.270+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Patch for trunk & 3x, doing the cloning correctly.",
            "date": "2010-05-13T15:45:57.282+0000",
            "id": 8
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:22.520+0000",
            "id": 9
        }
    ],
    "component": "general/build",
    "description": "We have quite a few random tests, but there's no way to \"crank\" them.\n\nThe idea here is to add a multiplier which can be increased by a sysprop. For example, we could set this to something higher than 1 for hudson.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2449",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Improve random testing",
    "systemSpecification": true,
    "version": ""
}