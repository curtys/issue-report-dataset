{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Simple test that overflows posinc.\n\nOutput is:\n{noformat}\njunit-sequential:\n    [junit] Testsuite: org.apache.lucene.index.TestIndexWriterExceptions\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0.239 sec\n    [junit] \n    [junit] ------------- Standard Output ---------------\n    [junit] CheckIndex failed\n    [junit] Segments file=segments_1 numSegments=1 version=4.0 format=FORMAT_4_0 [Lucene 4.0]\n    [junit]   1 of 1: name=_0 docCount=1\n    [junit]     codec=SimpleText\n    [junit]     compound=false\n    [junit]     hasProx=true\n    [junit]     numFiles=4\n    [junit]     size (MB)=0\n    [junit]     diagnostics = {os.version=3.0.0-14-generic, os=Linux, lucene.version=4.0-SNAPSHOT, source=flush, os.arch=amd64, java.version=1.6.0_24, java.vendor=Sun Microsystems Inc.}\n    [junit]     has deletions [delGen=-1]\n    [junit]     test: open reader.........OK\n    [junit]     test: fields..............OK [1 fields]\n    [junit]     test: field norms.........OK [1 fields]\n    [junit]     test: terms, freq, prox...ERROR: java.lang.RuntimeException: term [66 6f 6f]: doc 0: pos -2 is out of bounds\n    [junit] java.lang.RuntimeException: term [66 6f 6f]: doc 0: pos -2 is out of bounds\n    [junit] \tat org.apache.lucene.index.CheckIndex.testPostings(CheckIndex.java:860)\n...\n{noformat}",
            "date": "2012-03-15T17:55:45.478+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "3.x too: just s/TextField/Field to port the test",
            "date": "2012-03-15T18:08:06.154+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "first cut at a patch, throws IllegalArgumentException and aborts the doc (ensuring fieldState never sees the overflow since i dont trust what happens to it after this!)",
            "date": "2012-03-15T18:28:33.317+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "+1\n\nCrazy we don't catch this already...",
            "date": "2012-03-15T18:32:03.581+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "+8",
            "date": "2012-03-15T22:57:24.459+0000",
            "id": 4
        },
        {
            "author": "Simon Willnauer",
            "body": "see my comment on LUCENE-3876 - this triggers reproducible failures on trunk. ",
            "date": "2012-03-16T09:59:36.248+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "The solution here is 100% correct, we don't need to reopen it because its test found a separate, unrelated bug.\n\nany shit that limits your values to smaller than integer.max_value needs its own checks to fit, throwing UOE because its choosing not to support totally legitimate values from the analyzer.",
            "date": "2012-03-16T11:24:11.709+0000",
            "id": 6
        }
    ],
    "component": "",
    "description": "Its pretty common that positionIncrement can overflow, this happens really easily \nif people write analyzers that don't clearAttributes().\n\nIt used to be the case that if this happened (and perhaps still is in 3.x, i didnt check),\nthat IW would throw an exception.\n\nBut i couldnt find the code checking this, I wrote a test and it makes a corrumpt index...",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3874",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "bogus positions create a corrumpt index",
    "systemSpecification": true,
    "version": "3.6, 4.0-ALPHA"
}