{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "Here a first preview patch.\n\nNumericUtils still contains lots of unused String-based methods, I think we should remove them, the class is expert-only and also experimental. Backwards compatibility is broken even with those backwards layers (as the split functions were changed to use BytesRefs. Also these backwards methods are simply slow now (as the byte[] is copied to char[] and vice-versa).\n\nThe new NumericTokenStream now uses a special NumericTermAttribute, so possibly Filters coming later have access to shift value and so on. This attribute also implements the TermToBytesRefAttribute for the indexer. Please note: This attribute is a hack and does not support copyTo/clone/...., so you cannot put away tokens (which is not needed), but its still possible to add further attributes to numeric tokens (which is why the attribute is there).\n\nThe NumericTokenStream backwards test was removed, because the new stream does no longer contain a TermAttribute, so the test always fails.\n\nTODO: A better inline-hashCode generation for the numeric-to-BytesRef transformation",
            "date": "2010-03-28T15:04:57.846+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "bq. NumericUtils still contains lots of unused String-based methods, I think we should remove them\n\n+1\n\nPatch looks good!\n\nNumericFields are the first thing to index terms directly as byte[]\n(ie not first going through char[]) in flex.  But the encoding is\nunchanged right?  (Ie only using 7 bits per byte, same as trunk).\n\nAnd you cutover to BytesRef TermsEnum API too -- great.  Presumably\nsearch perf would improve but only a tiny bit since NRQ visits so few\nterms?\n",
            "date": "2010-03-29T17:12:44.997+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "bq. But the encoding is unchanged right? (Ie only using 7 bits per byte, same as trunk).\n\nYes. And i think we should keep it for now using 7 bit. Problems start when the sort order of terms is needed (which is the case for NRQ). As default in flex is the UTF-8 term comparator, it would not sort correctly for numeric fields with full 8 bits?\n\nBy the way, the recently added backwards test checks that an old index with NumericField behaves as before! This is why I added a new zip file to TestBackwardCompatibility.\n\nbq. And you cutover to BytesRef TermsEnum API too - great. Presumably search perf would improve but only a tiny bit since NRQ visits so few terms?\n\nI dont think you will notice a difference. A standard int range contains maybe 10 to 20 sub-ranges (at maximum), so converting between string and TermRef should not count. But the new implementation is more clean. In principle we could remove the whole char[]/String based API in NumericUtils - I only have to rewrite the tests and remove the NumericUtils test in backwards (as no longer applies then, too).",
            "date": "2010-03-29T17:22:31.015+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "Will work here the next days and rewrite the tests.\n\nOne problem: Solr at the moment uses the deprecated string api for building a TermQuery. This should be replaced by a NRQ with upper==lower(inclusive), as this disables scoring, which is wrong for Numeric fields.",
            "date": "2010-03-30T21:15:56.767+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Here updated patch with cleaned up NumericUtils (no String methods anymore). For now I just commented them out, if we want to reactivate parts of them. Before release the methods should be removed.\n\nI changed all tests (and deactivated tests in backwards) using those String methods. Also rewrote the CartesianShapeFilter in contrib/spatial to use flex API (optimized for the one-term-case without OpenBitSet allocation). Also changed spatial tests to use NumericField.",
            "date": "2010-04-04T17:09:40.228+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good Uwe!",
            "date": "2010-04-04T20:07:18.632+0000",
            "id": 5
        },
        {
            "author": "Uwe Schindler",
            "body": "Updated patch with lots of javadocs cleanups and new getPrefixCodedXxxShift() methods. Also optimized some methods.\n\nI will commit this tomorrow!",
            "date": "2010-04-04T23:16:44.122+0000",
            "id": 6
        },
        {
            "author": "Uwe Schindler",
            "body": "Committed revision: 930821",
            "date": "2010-04-05T08:07:58.859+0000",
            "id": 7
        }
    ],
    "component": "",
    "description": "After LUCENE-2302, we should use TermToBytesRefAttribute to index using NumericTokenStream. This also should convert the whole NumericUtils to use BytesRef when converting numerics.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2354",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Convert NumericUtils and NumericTokenStream to use BytesRef instead of Strings/char[]",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}