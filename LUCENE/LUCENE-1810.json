{
    "comments": [
        {
            "author": "Grant Ingersoll",
            "body": "Patch would be great.",
            "date": "2009-08-14T22:12:35.838+0000",
            "id": 0
        },
        {
            "author": "Tim Smith",
            "body": "Attaching patch to provide FieldSelectorResult.LATENT\n\nthis patch hooks in to add a \"cacheResult\" flag to LazyField\n\nLOAD_LAZY sets this flag to true\nLATENT sets this flag to false\n\nadded test that verifies stringValue() returned from LAZY_LOAD is always the same, and stringValue() returned from LATENT is always different (reloaded each time)",
            "date": "2009-08-17T17:37:29.934+0000",
            "id": 1
        },
        {
            "author": "Grant Ingersoll",
            "body": "Updates to trunk.  I intend to commit today or tomorrow.",
            "date": "2010-07-01T13:36:38.672+0000",
            "id": 2
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed revision 959657 on trunk.\n\nCommitted revision 959674 on 3.x",
            "date": "2010-07-01T14:10:25.636+0000",
            "id": 3
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:21.387+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "I propose adding LATENT FieldSelectorResult\n\nthis would be similar to LAZY_LOAD except that it would NEVER cache the stored value\n\nThis will be useful for very large fields that should always go direct to disk (because they will take so much memory)\nwhen caching Documents returned from a Searcher, the large field may be initially requested as LAZY_LOAD, however once someone reads this field, it will then get locked into memory. if this Document (and others like it) are cached, it can start to use a very large amount of memory for these fields\n\nContract for FieldSelectorResult.LATENT should be that it will always be pulled direct from the IndexInput and never be persisted in memory as part of a Fieldable\n\nI could prepare a patch if desired\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1810",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add a LATENT FieldSelectorResult",
    "systemSpecification": true,
    "version": "2.4"
}