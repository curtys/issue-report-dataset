{
    "comments": [
        {
            "author": "Jim Regan",
            "body": "Patch adding Irish analysis",
            "date": "2012-03-19T16:13:53.383+0000",
            "id": 0
        },
        {
            "author": "Jim Regan",
            "body": "Patch, redone from top level of svn.",
            "date": "2012-03-19T16:17:55.956+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "Thanks Jim! This looks really nicely done... \n\nOut of curiousity could you share your snowball rules (the .sbl) with us?\n",
            "date": "2012-03-19T16:22:08.905+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "Hi,\n\nvery funny lowercase filter! :-) One thing: It does not actually ArrayIndexOutOfBoundsEx in the filter because of the way how CharTermAttributeImpl is implemented internally, but theoretically there is a length check missing. The nUpper/tUpper stuff can get out of bounds if the length of term in 0 or 1 (which are valid length). But thats only a minor complaint about the code. Otherwise looks great. Just appearing from no irish support at all! really needed! :-)\n\nUwe",
            "date": "2012-03-19T16:33:27.221+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "By the way I created LUCENE-3884 to move the ElisionFilter out of the french package\ninto a more general .util package. That doesnt need to hold up this issue: it just\nreminded me we should move it because its not really french-specific.\n",
            "date": "2012-03-19T16:36:40.790+0000",
            "id": 4
        },
        {
            "author": "Jim Regan",
            "body": "Irish snowball script",
            "date": "2012-03-19T16:38:58.056+0000",
            "id": 5
        },
        {
            "author": "Jim Regan",
            "body": "Yeah, it's quite an odd thing (Scots Gaelic has a similar phenomenon, but they consistently keep the hyphen), but it does help with the stemmer in those cases to know that the t or n at the start of the word is due only to mutation.",
            "date": "2012-03-19T16:41:35.064+0000",
            "id": 6
        },
        {
            "author": "Jim Regan",
            "body": "I'm not sure if I actually needed to use the ElisionFilter, because the stemmer handles those - because of the initial mutation in Irish, trimming the start of the word is more important than trimming the end. I was copying the Catalan analyser, and using ElisionFilter seemed like The Thing To Do.",
            "date": "2012-03-19T16:56:48.927+0000",
            "id": 7
        },
        {
            "author": "Jim Regan",
            "body": "New version of patch, also checking that chLen (array length) > 1",
            "date": "2012-03-19T17:20:14.187+0000",
            "id": 8
        },
        {
            "author": "Robert Muir",
            "body": "Thanks for updating the patch Jim!\n\none concern doing some very very rudimentary testing:\n\nwe have special lowercasing for situations like nAthair -> n-athair,\n\nwhich the snowball rules then strip:\n\n{noformat}\ndefine initial_morph as (\n  [substring] among (\n    'h-' 'n-' 't-' //nAthair -> n-athair, but alone are problematic\n    (delete)\n{noformat}\n\nThe problem is if the input initially comes as n-athair, Unicode break rules\nwill split this up on the hyphen into two tokens {n, athair}. You can visualize this at http://unicode.org/cldr/utility/breaks.jsp\n\nThis means we can add many spurious 'n' tokens in the index...\n\nSo we have two potential solutions to this:\n# we can simply add 'n', 'h', 't', etc to the stopwords list. This is the simplest solution. Would this be too aggressive?\n# we can add a CharFilter for IrishAnalyzer to prevent this splitting from happening. This is more complex.\n",
            "date": "2012-03-20T03:26:06.602+0000",
            "id": 9
        },
        {
            "author": "Robert Muir",
            "body": "Hmm another downside of #1 is that with a simple stopfilter approach, position increments won't line up\nif we have a phrase query of \"n-athair\" with indexed nAthair.\n\nSo I start to lean towards #2 since it would be a better solution... but I'm going to think about it\nand see if I come up with any other ideas.\n\nSeparately, what about h- when succeeded by a vowel? Is there actually usually a hyphen here?\n(Wikipedia says no, playing around with GaelSpell seems to agree, but I don't know anything about this language!)\nWould this case be too aggressive to handle?",
            "date": "2012-03-20T03:38:15.533+0000",
            "id": 10
        },
        {
            "author": "Robert Muir",
            "body": "To make matters worse: this exact example of splitting on hyphen for this Irish case is \nactually mentioned on http://en.wikipedia.org/wiki/Hyphen#In_computing\n\nFrom there it seems like the right thing to do is heuristically convert to \nU+2011 (non-breaking hyphen) but this only affects Unicode line-break rules,\nnot word break rules :(\n\nSo it seems like the least hackish workaround would be for a charfilter to \nconvert n-athair -> nAthair (to prevent the tokenizer from splitting it up),\nsince the IrishLowerCaseFilter will convert it back and stem it anyway.\n\nI'll see if i can hack something up.",
            "date": "2012-03-20T04:13:26.431+0000",
            "id": 11
        },
        {
            "author": "Robert Muir",
            "body": "updated patch, with a simple solution to the hyphen-phrasequery-problem:\n\nI added a special stopset just for these:\n{code}\n  /**\n   * When StandardTokenizer splits t\u2011athair into {t, athair}, we don't\n   * want to cause a position increment, otherwise there will be problems\n   * with phrase queries versus tAthair (which would not have a gap).\n   */\n  private static final CharArraySet HYPHENATIONS = CharArraySet.unmodifiableSet(\n      new CharArraySet(Version.LUCENE_CURRENT,\n          Arrays.asList(\n              \"h\", \"n\", \"t\"\n          ), true));\n{code}\n\nThis is used with enablePositionIncrements=false to ensure no gap is added... I also added a simple test for this.",
            "date": "2012-03-20T04:28:19.745+0000",
            "id": 12
        },
        {
            "author": "Jim Regan",
            "body": "Wow! Thanks Robert!\n\nThere isn't usually a hyphen with 'h' before a vowel, but I've started to see it recently -- there are no native Irish words beginning with 'h', so it used to be relatively unambiguous that a 'h' was a mutation, but with an increase of scientific literature in Irish, there are more Greek and Latin loan words being added which do begin with 'h', so it's no longer clear.",
            "date": "2012-03-20T15:01:30.310+0000",
            "id": 13
        },
        {
            "author": "Robert Muir",
            "body": "Thanks Jim. Personally I think this patch is ready to be committed. \n\nI'm just going to wait a bit in case you get any feedback from Martin or other snowball developers,\nbut I won't wait too long :) ",
            "date": "2012-03-20T15:07:34.188+0000",
            "id": 14
        },
        {
            "author": "Jim Regan",
            "body": "Great :)\n\nRegarding the initial 'h', I asked Kevin Scannell (among other feathers in his cap, he created the dictionary used in GaelSpell, and ran an Irish-language search engine), who said: \n\"I looked carefully at how often initial h is a prefix vs not a while ago.  I can send you those data - non-prefixes might be more common than you'd think in running text bc of proper names, English mixed in, etc.  So upshot is it's a bad idea to strip all initial h's with no hyphen following. \n  As far as h- (with hyphen) goes, it's non-standard but common enough that I'd leave it in the stemmer.   Not like there would be false positives in that case if the hyphen is there.'",
            "date": "2012-03-20T17:31:10.730+0000",
            "id": 15
        },
        {
            "author": "Robert Muir",
            "body": "This makes sense to me, I agree with the conservative approach here!\n",
            "date": "2012-03-20T17:33:42.402+0000",
            "id": 16
        },
        {
            "author": "David Smiley",
            "body": "How ironic this issue is created nearly on St. Patrick's Day.",
            "date": "2012-03-20T17:53:29.029+0000",
            "id": 17
        },
        {
            "author": "Jim Regan",
            "body": "It was on my mind, a little :) I made the stemmer on the 15th, on the 17th I made ICU transliteration rules for Irish->IPA, but that's not quite relevant here.",
            "date": "2012-03-20T18:01:47.648+0000",
            "id": 18
        },
        {
            "author": "Robert Muir",
            "body": "Same patch but with the solr pieces too (factory/test for the lowercasefilter, text_ga fieldtype, resources synced, etc).\n",
            "date": "2012-03-22T14:27:53.234+0000",
            "id": 19
        },
        {
            "author": "Robert Muir",
            "body": "Thank you very much Jim! I just committed this.\n",
            "date": "2012-03-24T16:22:45.152+0000",
            "id": 20
        },
        {
            "author": "Jim Regan",
            "body": "Yay! Thanks for all your help!",
            "date": "2012-03-24T16:38:52.216+0000",
            "id": 21
        },
        {
            "author": "Jim Regan",
            "body": "Just to follow up, the Irish stemmer is now available from the Snowball site: http://snowball.tartarus.org/otherapps/oregan/intro.html",
            "date": "2012-05-09T20:42:05.774+0000",
            "id": 22
        },
        {
            "author": "Robert Muir",
            "body": "Thanks Jim! I already removed our local copy of the irish.sbl as its now available on\nthe snowball site.\n\nI have to investigate the Czech implementation, I think we should make it available\nas well, since it also supports stemming of derivational endings: Dawid opened\nLUCENE-4042 for that.\n\nThanks for contributing these to snowball.",
            "date": "2012-05-09T20:47:05.594+0000",
            "id": 23
        },
        {
            "author": "Jim Regan",
            "body": "I wouldn't recommend the aggressive mode, and I regret that I left it uncommented. If you really think an alternative would be welcome, it would be quite easy to get the best of both (in fact, I spent roughly half the time on that trying to beat Snowball into overstemming to match the original).",
            "date": "2012-05-09T21:32:02.378+0000",
            "id": 24
        }
    ],
    "component": "modules/analysis",
    "description": "Adds analysis for Irish.\n\nThe stemmer is generated from a snowball stemmer. I've sent it to Martin Porter, who says it will be added during the week.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3883",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Analysis for Irish",
    "systemSpecification": true,
    "version": ""
}