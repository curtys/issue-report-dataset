{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "attached is a patch, but I'm not sure I like the API on indexsearcher, i think it looks confusing.\n\nI disabled testIntermediateClose in TestSearcherManager, the concurrency is un-understandable and the test seems to rely upon how we warm today (which I changed in the patch)",
            "date": "2011-12-11T13:09:29.640+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "I want to try another patch where we make SearcherManager non-final, and have newSearcher()\nor similar. this way we can compare, doesn't seem like these classes really need to be final.\n",
            "date": "2011-12-11T13:19:44.930+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "We can make these classes sub-classable, by making most of their methods final, except for newSearcher() and the like.\n\nAnother option is to pass an IndexSearcherFactory which returns an IS given an IR.",
            "date": "2011-12-11T13:32:09.890+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nAnother option is to pass an IndexSearcherFactory which returns an IS given an IR.\n{quote}\n\nThat might be the only way to go... so we can safely handle the first searcher in the ctor this way too.",
            "date": "2011-12-11T13:33:53.228+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "trying Shai's idea... i like it, it simplifies the APIs.",
            "date": "2011-12-11T13:56:47.916+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "I got TestSM.testIntermediateClose to work -- had to modify the newSearcher method to only wait if reopen was tried.",
            "date": "2011-12-11T14:11:29.336+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "+1 this approach is nice!\n\nSo now it's caller's job to install a merged segment warmer on IW.",
            "date": "2011-12-11T14:12:44.978+0000",
            "id": 6
        },
        {
            "author": "Robert Muir",
            "body": "Thanks for fixing the test!\n\n{quote}\nSo now it's caller's job to install a merged segment warmer on IW.\n{quote}\n\nYes, i should fix the javadocs to recommend this too. In general i think the javadocs need cleanup (I didnt test that there were no warnings yet).",
            "date": "2011-12-11T14:15:56.506+0000",
            "id": 7
        },
        {
            "author": "Robert Muir",
            "body": "Setting 3.5 and 4.0... really we should be able to backport this to 3.6 too, we just have to make \ndecisions about whether we should break or add lots of deprecated ctors :)",
            "date": "2011-12-11T14:33:40.188+0000",
            "id": 8
        },
        {
            "author": "Shai Erera",
            "body": "Phew, that does clean up a lot of code ! :)\n\nCan we make SearcherFactory its own class? Since SearcherManager and NRTManager both depend on it (and I can already see how I will depend on it as well !), I think it can be its own top-level class.\n\n{quote}\nreally we should be able to backport this to 3.6 too, we just have to make\ndecisions about whether we should break or add lots of deprecated ctors\n{quote}\n\n+1 for breaking. This API is new, experimental. We ought to be able to break it, and it's not like a very hard break.",
            "date": "2011-12-11T14:50:54.792+0000",
            "id": 9
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nCan we make SearcherFactory its own class? Since SearcherManager and NRTManager both depend on it (and I can already see how I will depend on it as well !), I think it can be its own top-level class.\n{quote}\n\nYes, we don't have to put it inside SearcherManager.",
            "date": "2011-12-11T16:03:48.032+0000",
            "id": 10
        },
        {
            "author": "Robert Muir",
            "body": "updated patch with the factory top-level, javadocs and VERBOSE cleanup.",
            "date": "2011-12-11T16:42:56.693+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "+1 looks nice!",
            "date": "2011-12-11T16:46:38.605+0000",
            "id": 12
        },
        {
            "author": "Robert Muir",
            "body": "Thanks for the help Shai and Mike!",
            "date": "2011-12-11T17:18:04.120+0000",
            "id": 13
        }
    ],
    "component": "",
    "description": "LUCENE-3555 added explicit stats methods to indexsearcher, but you must\nsubclass to override this (e.g. populate with distributed stats).\n\nIts also impossible to then do this with SearcherManager.\n\nOne idea is make this a factory method (or similar) on IndexSearcher instead,\nso you don't need to subclass it to override.\n\nThen you can initialize this in a SearcherWarmer, except there is currently\na lot of hair in what this warming should be. This is a prime example where\nSearcher has different meaning from Reader, we should clean this up.\n\nOtherwise, lets make NRT/SearcherManager subclassable in such a way that \nyou can return a custom indexsearcher.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3636",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "OTHER",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "make it possible to use searchermanager with distributed stats",
    "systemSpecification": true,
    "version": "3.5, 4.0-ALPHA"
}