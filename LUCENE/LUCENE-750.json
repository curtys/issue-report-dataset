{
    "comments": [
        {
            "author": "Yonik Seeley",
            "body": "Changes:\n - moved finalizer to the resource that actually needs it... the Descriptor (subclass of RandomAccessFile).  The Descriptor does not get cloned, so we eliminate the extra finalizer per IndexInput clone.\n - Descriptor is now the class that keeps track of if it has been closed or not.\n - made Descriptor static... it didn't need to be a normal inner class.",
            "date": "2006-12-15T16:20:38.000+0000",
            "id": 0
        },
        {
            "author": "Yonik Seeley",
            "body": "Forgot to remove the finalizer from FSIndexInput in the first patch.\nNote that I also removed the finalizer from FSIndexOutput because IndexWriter already has a finalizer, and finalization for writers doesn't really make much sense.\n\nCan anyone think of a reason we should keep the FSIndexOutput finalizer?",
            "date": "2006-12-16T15:37:05.000+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "\nFor FSIndexOutput ... assuming we are quite certain that nowhere in\nLucene do we fail to close an IndexOutput using a try/finally (oh, I\nsee one, due to lockless commits: I will fix that case), then I think\nfinalize() in FSIndexOutput buys us absolutely nothing?  Because, all\nuses of FSIndexOutput are \"transient\" (open, write stuff now, close).\n\nFor FSIndexInput ... assuming we are also quite certain that we close\nall IndexInputs we had opened for transient purposes (eg while merging\nsegments, reading fields/norms, etc.) then the only thing finalize()\nbuys for us is protection from user failing to close an IndexReader,\ndue either to a bug in their code or I guess handling Exception cases,\nright?\n\nHonestly it's even tempting to not keep this finalize (due risk of\ndegraded GC perf, JVM bugs, etc.)  Though, hmmm, I guess removing this\nfinalize could be seen as a regression if indeed people are relying on\nGC to close their readers.  So I guess we should keep this one (like\nyou have).\n",
            "date": "2006-12-19T15:22:56.000+0000",
            "id": 2
        },
        {
            "author": "Yonik Seeley",
            "body": "committed.",
            "date": "2006-12-19T21:49:39.000+0000",
            "id": 3
        }
    ],
    "component": "core/search",
    "description": "finalizers are expensive, and we should avoid using them where possible.\nIt looks like this helped to tickle some kind of bug (looks like a JVM bug?)\nhttp://www.nabble.com/15-minute-hang-in-IndexInput.clone%28%29-involving-finalizers-tf2826906.html#a7891015",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-750",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "don't use finalizers for FSIndexInput clones",
    "systemSpecification": true,
    "version": "2.1"
}