{
    "comments": [
        {
            "author": "Grant Ingersoll",
            "body": "Created an attachment (id=11590)\nCreate the temp dir if it doesn't exist\n",
            "date": "2004-05-18T20:06:06.000+0000",
            "id": 0
        },
        {
            "author": "Grant Ingersoll",
            "body": "Creates the temp dir if it doesn't exist.  If it can't create the directory, \nit throws an IOException.",
            "date": "2004-05-18T20:06:56.000+0000",
            "id": 1
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Thanks, in CVS.",
            "date": "2004-05-18T20:43:55.000+0000",
            "id": 2
        },
        {
            "author": "Eric Isakson",
            "body": "Shouldn't we be honoring java.io.tmpdir even if it happens to be non-absolute?\n\nPerhaps this should be fixed by removing the \".\" from the LOCK_DIR \ninitialization then if LOCK_DIR is null, set lockDir in the constructor to \ndirectory and only do the lockDir.mkdirs during makeLock in the Lock.obtain \nmethod?\n\nI can supply a patch if you want one. Also, in your patch for this, you changed \na message in FSDirectory.create to include the word \"lock\" but it should just \nbe \"Cannot create directory\" in that case since we aren't creating the lock \ndirectory there, we are creating the index directory.",
            "date": "2004-05-18T21:27:50.000+0000",
            "id": 3
        },
        {
            "author": "cutting@apache.org",
            "body": "I think if java.io.tmpdir is relative, then we should probably use something\nrelative to the PWD of the JVM.\n\nIf org.apache.lucene.lockdir is relative, then should it be relative to the PWD\nor to the index directory?  For consistency with java.io.tmpdir, perhaps this\nshould also be relative to PWD.\n\nBut, when both are null, then the lock directory should be the index directory.\n Right now we're attempting to handle this case by using a relative pathname of\n\".\", but perhaps we should handle it more explicitly.  Perhaps we should, when\nLOCK_DIR is null, explicitly use the index directory as the lock dir.\n\nDoes that sound right?",
            "date": "2004-05-18T23:27:51.000+0000",
            "id": 4
        },
        {
            "author": "Eric Isakson",
            "body": "Created an attachment (id=11592)\nnew fix that removes the isAbsolute checking\n",
            "date": "2004-05-19T01:44:24.000+0000",
            "id": 5
        },
        {
            "author": "Eric Isakson",
            "body": "I added an attachment that uses the directory explicitly if the system \nproperties are null and if the LOCK_DIR is relative, the lockDir will be based \non the PWD.",
            "date": "2004-05-19T01:46:31.000+0000",
            "id": 6
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Looks good.\nEither the specified dir is used (or temp), or if they are both null we use the\nindex dir, and the relative vs. absolute discussion is discarded, ja?",
            "date": "2004-05-19T22:46:37.000+0000",
            "id": 7
        }
    ],
    "component": "core/store",
    "description": "In org.apache.lucene.store.FSDirectory from Lucene-1.3-final, on line 170-171:\n\nFile tmpdir = new File(System.getProperty(\"java.io.tmpdir\"));\nfiles = tmpdir.list();\n\nif the directory specified by the property \"java.io.tmpdir\" does not exist, a\nnull pointer exception is thrown.  Perhaps a check to see if the directory\nexists is in order, and if it doesn't, use a directory you know exists (e.g. a\n/temp directory in the directory created earlier in the create() method).",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-207",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] npe if java.io.tmpdir does not exist",
    "systemSpecification": true,
    "version": ""
}