{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Makes sense!",
            "date": "2010-01-16T18:38:56.889+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Actually the patch isn't quite right, I think?  First, it just calls ArrayUtil.getNextSize w/o passing that to resizeBytes?\n\nSecond, it needs to pass lastBytePos + MAX_BYTES_PER_INT as the arg to ArrayUtil.getNextSize (ie, that's the \"min target size\")?",
            "date": "2010-01-16T18:47:59.615+0000",
            "id": 1
        },
        {
            "author": "Paul Elschot",
            "body": "Indeed, the patch isn't quite right. I'll fix that and provide another patch. All test cases pass though, so I'll also try and\nadd a test case that fails when an allocation larger than the current initial size is needed.\n\nThe MAX_BYTE_PER_INT has disappeared into an added comment that states a minimum initial size.\nThe underlying problem is that ArrayUtils.getNextSize() does not have an argument for a minimum increase.\nWould it make sense to add that, too? The code there has some strange constants  (3, 6 and 9) that could\nperhaps be dropped when an extra argument for a minimum increase is added.\nLooking at the comment there for the growth pattern, shouldn't the second number (after 0) be 3 instead of 4?\n",
            "date": "2010-01-16T23:17:53.104+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "bq.  I'll also try and add a test case that fails when an allocation larger than the current initial size is needed\n\nThat would be much appreciated ;)  (I hit that too!).\n\nbq. The underlying problem is that ArrayUtils.getNextSize() does not have an argument for a minimum increase.  Would it make sense to add that, too?\n\nWell... the arg to getNextSize is already the minimum size that must be returned, so, can't you just pass in lastBytePos + MAX_BYTES_PER_INT?\n\n{quote}\nThe code there has some strange constants (3, 6 and 9) that could\nperhaps be dropped when an extra argument for a minimum increase is added.\nLooking at the comment there for the growth pattern, shouldn't the second number (after 0) be 3 instead of 4?\n{quote}\nWe're working on cleaning up this method, under LUCENE-2213.  The growth pattern in the comment is in fact correct, if you were to call getNextSize on 1+ the current size, ie this progression:\n\n{code}\ngetNextSize(1+getNextSize(1+getNextSize(1+....getNextSize(1+0)))))\n{code}\n",
            "date": "2010-01-17T09:57:45.167+0000",
            "id": 3
        },
        {
            "author": "Paul Elschot",
            "body": "Fixed the reallocation to be actually done and added a test case that fails the previous patch because of the missing reallocation.",
            "date": "2010-01-17T20:48:53.467+0000",
            "id": 4
        },
        {
            "author": "Paul Elschot",
            "body": "Btw. shouldn't IndexInput.bytes also be reallocated using ArrayUtils.getNextSize() ?\nThe growth factor there is a hardcoded 1.25 .",
            "date": "2010-01-19T20:12:58.329+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Btw. shouldn't IndexInput.bytes also be reallocated using ArrayUtils.getNextSize()\n\n+1  Wanna fold it into this patch?  (And any others you find..?).",
            "date": "2010-01-19T20:26:54.832+0000",
            "id": 6
        },
        {
            "author": "Paul Elschot",
            "body": "Well, it's not that I'm searching, but I'll provide another patch that includes IndexInput for this.\n\nWould you have any idea about testcases for that?\n:)\n\n",
            "date": "2010-01-19T22:32:25.396+0000",
            "id": 7
        },
        {
            "author": "Paul Elschot",
            "body": "Patch of 20 Jan also includes use of ArrayUtil.getNextSize() for allocation in IndexInput.",
            "date": "2010-01-20T11:45:33.069+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Small tweaks on the last patch, also adding ArrayUtil.getNextSize when allocating the char[] in IndexInput.",
            "date": "2010-01-20T13:33:54.258+0000",
            "id": 9
        },
        {
            "author": "Paul Elschot",
            "body": "Since I missed the second one in IndexInput I used this regex to search the java files in trunk/src/java: {noformat} new .*\\[.*\\] {noformat}\nand found that these are still suspicious:\n\nPorterStemmer 85, 485\nStandardTokenizerImpl  447\nByteBlockPool 86\nCharBlockPool 45\nMultipleTermPositions 86\nTermInfosWriter 210\nTermsHashPerField 527 (maybe)\nTermVectorsReader 463, 472\nFastCharStream 58\nBufferedIndexInput 61, 157\nUnicodeUtil, 7 times or more.\n\n\n",
            "date": "2010-01-20T14:38:21.566+0000",
            "id": 10
        },
        {
            "author": "Michael McCandless",
            "body": "I agree we should cutover these additional places -- wanna work into the patch?",
            "date": "2010-01-21T11:35:08.916+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "Paul, I just committed LUCENE-2213, which changes name & signature of ArrayUtil.getNextSize.... so be sure to update & merge before taking the patch further!",
            "date": "2010-01-21T11:58:06.054+0000",
            "id": 12
        },
        {
            "author": "Paul Elschot",
            "body": "That was expected.\n\nThe next patch will be about 5 times bigger, so I'll need some more time.",
            "date": "2010-01-21T17:31:08.645+0000",
            "id": 13
        },
        {
            "author": "Paul Elschot",
            "body": "Patch of 21 Jan is as anticipated, except for the following:\n\nUnicodeUtil.java last reallocation at line 332 unchanged.\n\nFastCharStream.java change might affect speed, not included in patch.\n\nTermsHashPerField unchanged.\n\nBufferedIndexInput unchanged, only used by clone() in MultiLevelSkipListReader.\n",
            "date": "2010-01-21T22:54:48.780+0000",
            "id": 14
        },
        {
            "author": "Michael McCandless",
            "body": "New iteration of patch attached:\n\n  * Recovered the fixes in my first patch\n\n  * Cutover some ArrayUtil.oversize -> ArrayUtil.grow\n\n  * We can't change StandardTokenizerImpl.java -- it's autogen'd from\n    JFlex\n",
            "date": "2010-01-25T15:57:05.841+0000",
            "id": 15
        },
        {
            "author": "Paul Elschot",
            "body": "Patch looks good, all tests pass. Thanks for simplifying the added testcase.\nAfter this I'll post a clean patch at LUCENE-2232 .",
            "date": "2010-01-25T20:27:02.249+0000",
            "id": 16
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Paul!",
            "date": "2010-01-28T11:40:31.039+0000",
            "id": 17
        }
    ],
    "component": "core/other",
    "description": "See recent discussion on ArrayUtils.getNextSize().",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2217",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Remaining reallocation should use ArrayUtil.getNextSize()",
    "systemSpecification": true,
    "version": ""
}