{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.  All tests pass, including a new one that showed the deadlock.\n\nI also found & fixed a case where IndexWriter would hang during close (thinking a BG merge was still running when it wasn't) if the InterruptedException arrived at the right time.\n\nI'll commit in a day or two.",
            "date": "2009-03-26T19:39:35.496+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Jeremy.",
            "date": "2009-03-28T19:11:20.847+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "Spinoff from here:\n\n    http://www.nabble.com/Deadlock-with-concurrent-merges-and-IndexWriter--Lucene-2.4--to22714290.html\n\nWhen a Thread is interrupt()'d while inside Lucene, there is a risk currently that it will cause a spinloop and starve BG merges from completing.\n\nInstead, when possible, we should allow interruption.  But unfortunately for back-compat, we will need to wrap the exception in an unchecked version.  In 3.0 we can change that to simply throw InterruptedException.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1573",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "IndexWriter does not do the right thing when a Thread is interrupt()'d",
    "systemSpecification": true,
    "version": "1.9, 2.0.0, 2.1, 2.2, 2.3, 2.3.1, 2.3.2, 2.4, 2.4.1"
}