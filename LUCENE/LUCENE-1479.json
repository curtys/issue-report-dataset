{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Patch to fix the bug",
            "date": "2008-12-05T14:41:04.479+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Please remember to include the trunk release (2.9, in this case) in the fix version when you set fix version to a point release on a branch (2.4.1, in this case).",
            "date": "2008-12-06T10:34:20.494+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Shai, it seems like a doc that has no \"Date: XXX\" would leave dateStr as null and would then cause an NPE when parseDate is later called?  Or am I missing something?\n\nAlso I'm getting a compilation error:\n\n{code}\n[javac] Compiling 1 source file to /tango/mike/src/lucene.trecdocmaker/build/contrib/benchmark/classes/java\n[javac] /tango/mike/src/lucene.trecdocmaker/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocMaker.java:190: variable name might not have been initialized\n[javac]     String name = sb.substring(DOCNO.length(), name.indexOf(TERM_DOCNO, DOCNO.length()));\n[javac]                                                ^\n[javac] 1 error\n{code}",
            "date": "2009-01-08T19:21:38.653+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Thanks Mike, you're right. The compilation error is a result of a refactoring I did to that line, by using a single substring call instead of two. I forgot to use 'sb' in the second indexOf call, and hence the compilation error.\n\nRegarding dateStr - I fixed that. Thanks for noticing it",
            "date": "2009-01-09T07:11:01.845+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Ahh the last minute \"trivial\" code fix... gets you every time ;)\n\nWith the new patch, a document missing a date is assigned the current Date, right?  Can we instead leave it as unset (null)?  (Does DocData allow a null Date)?\n\nCan you add a test case exposing the bug & showing the fix?\n",
            "date": "2009-01-09T11:49:18.225+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "The reason why this patch does not include a test case is because it requires the TREC data set. Is it valid to add a test case which will fail if the TREC data is missing? If not, can you suggest how can I simulate it?\nI can create several documents in the TREC format and feed the TrecDocMaker with those files.\nOr ... I'll look into extending TrecDocMaker and instead of feeding it with File(s), I'll feed it with some mock documents (String), which simulate the bug. Not sure if that's doable right-away - might need to change a method to protected.\n\nAlso, I'm not near the code now, so I can't tell if DocData allows for a null Date. But I guess it's just easier to assign the current date, for simplicity (you never know if at some point date becomes a *must* ...).\nI kept that logic from TrecDocMaker w/o the patch ...\n\nShai",
            "date": "2009-01-09T18:02:50.790+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "{quote}\n> I'll feed it with some mock documents (String), which simulate the bug.\n{quote}\nRight, either that or make a mocked set of docs in a .gz file and just use TrecDocMaker directly.\n\n{quote}\n> Also, I'm not near the code now, so I can't tell if DocData allows for a null Date. \n{quote}\nI think DocData ought to be able to handle a null Date, especially since the real data (GOV2 in your OP) has real documents lacking a Date.\n\nTo pretend the document did have a Date that happens to be today's date doesn't seem good (I don't know of anything in contrib/benchmark that depends on accurate dates now, but we may have something in the future where shifting dates could confuse things).",
            "date": "2009-01-09T18:38:34.435+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "This patch includes TrecDocMakerTest as well as removing the assignment of new Date() in case \"Date:\" is missing.\nThe test includes several test cases, including the missing date one.\nI checked and null date is considered when building a Document object, and therefore it's safe to assign a null date.",
            "date": "2009-01-11T08:38:59.908+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks great Shai!  I'll commit shortly.",
            "date": "2009-01-12T11:35:48.451+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Committed revision 733697.\n\nThanks Shai!",
            "date": "2009-01-12T11:37:38.436+0000",
            "id": 9
        }
    ],
    "component": "modules/benchmark",
    "description": "TrecDocMaker skips over Trec documents if they do not have a \"Date\" line. When such a document is encountered, the code may skip over several documents until the next tag that is searched for is found.\nThe result is, instead of reading ~25M documents from the GOV2 collection, the code reads only ~23M (don't remember the actual numbers).\n\nThe fix adds a terminatingTag to read() such that the code looks for prefix, but only until terminatingTag is found. Appropriate changes were made in getNextDocData().\n\nPatch to follow",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1479",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "TrecDocMaker skips over documents when \"Date\" is missing from documents",
    "systemSpecification": true,
    "version": ""
}