{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "bq. in general the class should be final at all\n\nHow can AttributeSource be final? We want people to develop their own AttributeSources no? Can you please list the methods that you want to make final? I want to check that none of our AttributeSources override them.",
            "date": "2010-03-13T12:57:26.305+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "bq. How can AttributeSource be final?\n\nThis was just a comment about the class, but its not possible because it is extended by TokenStreams or similar classes - but the implementation of methods should not be alterable. So *all* methods should be final, at least all methods that access/modify the private maps.\n\nA correct plan for \"own implementations of AttributeSource\" would be to create an abstract AttributeSource base class that defines the behaviour and all impls in the current AttributeSource are final. Because there may be other implementations that work without maps or have a hardcoded number of attributes with optimized implementations.",
            "date": "2010-03-13T13:30:45.395+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "Ok I see. I think that instead of creating another class to introduce new users to, we can stick w/ AS and make all the methods that no one shouldn't have any reason to ever extend final. We can keep the methods that define the 'behavior' not final, though I don't see any at the moment. Maybe getAttributeImplsIterator.\n\nBut if will make sense to factor out just these methods to a separate class, so that custom AS don't need to be a sub-class of AS for just that purpose, then I think it'll also be ok.",
            "date": "2010-03-13T14:17:16.423+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "This issue was solved by other commits to trunk (e.g. reflection of AttributeSource), the last methods were made final in revision: 1075065",
            "date": "2011-02-27T14:42:21.409+0000",
            "id": 3
        }
    ],
    "component": "modules/analysis",
    "description": "The methods that operate and modify the internal maps of AttributeSource should be final, which is a backwards break. But anybody that overrides such methods simply creates a buggy AS either case.\n\nI want to makeall impls final (in general the class should be final at all, but it is made for extension in TokenStream). So its important that the implementations are final!",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-2315",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "AttributeSource's methods for accessing attributes should be final, else its easy to corrupt the internal states",
    "systemSpecification": true,
    "version": "2.9, 2.9.1, 2.9.2, 3.0, 3.0.1"
}