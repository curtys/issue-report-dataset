{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Clearing 2.9 fix version.",
            "date": "2009-07-09T18:48:04.856+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "This turned out to be very simply -- a tiny patch!",
            "date": "2010-11-27T22:12:11.601+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "I realized we should fix a few more cases here to use bulk-copy more often.  First, on opening a pre-4.0 index, we should sweep all segments to union the FieldInfos so newly written segments are congruent with all past segments as much as possible.  Second, when merging we should start from the current FieldInfos.\n\nEven with this, if you addIndexes(Directory[]), which simply copies in new segments, if the fields name->number assignment on those incoming indices doesn't match the current index, then when those segments are merged they can't be bulk copied.",
            "date": "2010-12-14T18:51:03.299+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "The fixes above can only be done once we always merge doc stores on merging segments, which will be done in LUCENE-2814.",
            "date": "2010-12-14T18:52:21.567+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Patch.\n\nIt has one nocommit which we can remove once LUCENE-2814 is in.",
            "date": "2010-12-14T18:55:51.705+0000",
            "id": 4
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:19.370+0000",
            "id": 5
        }
    ],
    "component": "core/index",
    "description": "Lucene has nice optimizations in place during merging of stored fields\n(LUCENE-1043) and term vectors (LUCENE-1120) whereby the bytes are\nbulk copied to the new segmetn.  This is much faster than decoding &\nrewriting one document at a time.\n\nHowever the optimization is rather brittle: it relies on the mapping\nof field name to number to be the same (\"congruent\") for the segment\nbeing merged.\n\nUnfortunately, the field mapping will be congruent only if the app\nadds the same fields in precisely the same order to each document.\n\nI think we should fix IndexWriter to assign the same field number for\na given field that has been assigned in the past.  Ie, when writing a\nnew segment, we pre-seed the field numbers based on past segments.\nAll other aspects of FieldInfo would remain fully dynamic.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1737",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Always use bulk-copy when merging stored fields and term vectors",
    "systemSpecification": true,
    "version": ""
}