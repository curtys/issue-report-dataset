{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "{noformat}\n[junit] 2011-07-25 01:41:48\n    [junit] Full thread dump OpenJDK 64-Bit Server VM (20.0-b11 mixed mode):\n    [junit] \n    [junit] \"Thread-120\" daemon prio=5 tid=0x0000000801cd8800 nid=0x19492 in Object.wait() [0x00007ffffdfe2000]\n    [junit]    java.lang.Thread.State: WAITING (on object monitor)\n    [junit] \tat java.lang.Object.wait(Native Method)\n    [junit] \t- waiting on <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat java.lang.Object.wait(Object.java:502)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.waitForWaitQueue(DocumentsWriter.java:1064)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.updateDocuments(DocumentsWriter.java:882)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.IndexWriter.updateDocuments(IndexWriter.java:2164)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2122)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2106)\n    [junit] \tat org.apache.lucene.index.TestNRTThreads$2.run(TestNRTThreads.java:205)\n    [junit] \n    [junit] \"Thread-119\" daemon prio=5 tid=0x0000000801cd9000 nid=0x19410 in Object.wait() [0x00007ffffe0e3000]\n    [junit]    java.lang.Thread.State: WAITING (on object monitor)\n    [junit] \tat java.lang.Object.wait(Native Method)\n    [junit] \t- waiting on <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat java.lang.Object.wait(Object.java:502)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.waitForWaitQueue(DocumentsWriter.java:1064)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.updateDocuments(DocumentsWriter.java:882)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.IndexWriter.updateDocuments(IndexWriter.java:2164)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2122)\n    [junit] \tat org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2106)\n    [junit] \tat org.apache.lucene.index.TestNRTThreads$2.run(TestNRTThreads.java:205)\n    [junit] \n    [junit] \"Low Memory Detector\" daemon prio=5 tid=0x0000000801cea800 nid=0x18c7a runnable [0x0000000000000000]\n    [junit]    java.lang.Thread.State: RUNNABLE\n    [junit] \n    [junit] \"C2 CompilerThread1\" daemon prio=5 tid=0x0000000801ceb000 nid=0x18c6d waiting on condition [0x0000000000000000]\n    [junit]    java.lang.Thread.State: RUNNABLE\n    [junit] \n    [junit] \"C2 CompilerThread0\" daemon prio=5 tid=0x0000000801cec000 nid=0x18c67 waiting on condition [0x0000000000000000]\n    [junit]    java.lang.Thread.State: RUNNABLE\n    [junit] \n    [junit] \"Signal Dispatcher\" daemon prio=5 tid=0x0000000801cec800 nid=0x18c65 waiting on condition [0x0000000000000000]\n    [junit]    java.lang.Thread.State: RUNNABLE\n    [junit] \n    [junit] \"Finalizer\" daemon prio=5 tid=0x0000000801ced800 nid=0x18c63 in Object.wait() [0x00007ffffebee000]\n    [junit]    java.lang.Thread.State: WAITING (on object monitor)\n    [junit] \tat java.lang.Object.wait(Native Method)\n    [junit] \t- waiting on <0x000000080a3602c0> (a java.lang.ref.ReferenceQueue$Lock)\n    [junit] \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)\n    [junit] \t- locked <0x000000080a3602c0> (a java.lang.ref.ReferenceQueue$Lock)\n    [junit] \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:149)\n    [junit] \tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:177)\n    [junit] \n    [junit] \"Reference Handler\" daemon prio=5 tid=0x0000000801cef000 nid=0x18c60 in Object.wait() [0x00007ffffecef000]\n    [junit]    java.lang.Thread.State: WAITING (on object monitor)\n    [junit] \tat java.lang.Object.wait(Native Method)\n    [junit] \t- waiting on <0x000000080a360360> (a java.lang.ref.Reference$Lock)\n    [junit] \tat java.lang.Object.wait(Object.java:502)\n    [junit] \tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n    [junit] \t- locked <0x000000080a360360> (a java.lang.ref.Reference$Lock)\n    [junit] \n    [junit] \"main\" prio=5 tid=0x0000000801cef800 nid=0x18bfa in Object.wait() [0x00007fffffbfd000]\n    [junit]    java.lang.Thread.State: WAITING (on object monitor)\n    [junit] \tat java.lang.Object.wait(Native Method)\n    [junit] \t- waiting on <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat java.lang.Object.wait(Object.java:502)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.waitIdle(DocumentsWriter.java:987)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.DocumentsWriter.flush(DocumentsWriter.java:525)\n    [junit] \t- locked <0x000000080a5ccea8> (a org.apache.lucene.index.DocumentsWriter)\n    [junit] \tat org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:3547)\n    [junit] \t- locked <0x000000080a5ccf38> (a org.apache.lucene.index.IndexWriter)\n    [junit] \tat org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:3512)\n    [junit] \tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:459)\n    [junit] \t- locked <0x000000080a5ccf38> (a org.apache.lucene.index.IndexWriter)\n    [junit] \tat org.apache.lucene.index.IndexWriter.getReader(IndexWriter.java:408)\n    [junit] \tat org.apache.lucene.index.IndexReader.open(IndexReader.java:304)\n    [junit] \tat org.apache.lucene.index.TestNRTThreads.testNRTThreads(TestNRTThreads.java:339)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:616)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1316)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1221)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit] \n    [junit] \"VM Thread\" prio=5 tid=0x0000000801d27000 nid=0x18c52 runnable \n    [junit] \n    [junit] \"GC task thread#0 (ParallelGC)\" prio=5 tid=0x0000000801d30000 nid=0x18c0a runnable \n    [junit] \n    [junit] \"GC task thread#1 (ParallelGC)\" prio=5 tid=0x0000000801d2f000 nid=0x18c11 runnable \n    [junit] \n    [junit] \"GC task thread#2 (ParallelGC)\" prio=5 tid=0x0000000801d2e800 nid=0x18c16 runnable \n    [junit] \n    [junit] \"GC task thread#3 (ParallelGC)\" prio=5 tid=0x0000000801d2e000 nid=0x18c18 runnable \n    [junit] \n    [junit] \"GC task thread#4 (ParallelGC)\" prio=5 tid=0x0000000801d2d800 nid=0x18c19 runnable \n    [junit] \n    [junit] \"GC task thread#5 (ParallelGC)\" prio=5 tid=0x0000000801d2c800 nid=0x18c1a runnable \n    [junit] \n    [junit] \"GC task thread#6 (ParallelGC)\" prio=5 tid=0x0000000801d2c000 nid=0x18c20 runnable \n    [junit] \n    [junit] \"GC task thread#7 (ParallelGC)\" prio=5 tid=0x0000000801d2b800 nid=0x18c23 runnable \n    [junit] \n    [junit] \"GC task thread#8 (ParallelGC)\" prio=5 tid=0x0000000801d2a800 nid=0x18c25 runnable \n    [junit] \n    [junit] \"GC task thread#9 (ParallelGC)\" prio=5 tid=0x0000000801d2a000 nid=0x18c3b runnable \n    [junit] \n    [junit] \"GC task thread#10 (ParallelGC)\" prio=5 tid=0x0000000801d29800 nid=0x18c3c runnable \n    [junit] \n    [junit] \"GC task thread#11 (ParallelGC)\" prio=5 tid=0x0000000801d29000 nid=0x18c40 runnable \n    [junit] \n    [junit] \"GC task thread#12 (ParallelGC)\" prio=5 tid=0x0000000801d28000 nid=0x18c42 runnable \n    [junit] \n    [junit] \"VM Periodic Task Thread\" prio=5 tid=0x0000000801d26800 nid=0x18c81 waiting on condition \n    [junit] \n    [junit] JNI global references: 1449\n    [junit] \n    [junit] Heap\n    [junit]  PSYoungGen      total 163712K, used 31923K [0x000000081f8c0000, 0x000000082a2e0000, 0x000000082a360000)\n    [junit]   eden space 154112K, 17% used [0x000000081f8c0000,0x00000008212d4cc8,0x0000000828f40000)\n    [junit]   from space 9600K, 54% used [0x0000000828f40000,0x00000008294581b8,0x00000008298a0000)\n    [junit]   to   space 9344K, 0% used [0x00000008299c0000,0x00000008299c0000,0x000000082a2e0000)\n    [junit]  PSOldGen        total 70336K, used 42498K [0x000000080a360000, 0x000000080e810000, 0x000000081f8c0000)\n    [junit]   object space 70336K, 60% used [0x000000080a360000,0x000000080cce0aa8,0x000000080e810000)\n    [junit]  PSPermGen       total 25216K, used 12189K [0x0000000805160000, 0x0000000806a00000, 0x000000080a360000)\n    [junit]   object space 25216K, 48% used [0x0000000805160000,0x0000000805d47768,0x0000000806a00000)\n{noformat}",
            "date": "2011-07-25T01:45:24.525+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch attached.\n\nI can't repro this locally, but I think I see the problem: the bulk-add (IW.add/updateDocuments) methods cannot pause for the wait queue until after all docs in the block are added.  Else, 2 threads could get only partway through their block and both would then pause and never resume.\n\nThis does not affect trunk because w/ DWPT we no longer have the waitQueue.\n\nThe fix is simple: move the pausing out of the loop.  I'll commit shortly.",
            "date": "2011-07-25T13:04:20.258+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Nightly build hung again...\n",
            "date": "2011-07-26T11:06:10.370+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "OK last fix wasn't quite right: we have to re-check whether or not to pause after the loop ends, and it must be inside sync block.\n\nI'll leave this open until we see that this no longer hangs in nightly build...",
            "date": "2011-07-26T13:02:38.831+0000",
            "id": 3
        },
        {
            "author": "Olve S\u00e6ther Hansen",
            "body": "I am testing Lucene for my project now, and it seems that I run into this (or something like this) in 3.3.0. I try to index three different sources concurrently and all three processes get stuck here.\n\nThe indexation happens as cause of a scheduled event, and at startup time I try to debug and since my breakpoints synchronize the events, they continue in perfect sync om my four cores. \nI do not see that issue when I startup with my breakpoints disabled.\n\nThe stacktrace for my three processes are exactly the same. Is there a workaround for this issue or do I have to wait for 3.5 (that is if it is the same problem)?\n{code}\nminokWorkerExecutor-1@5444, prio=5, in group 'main', status: 'waiting'\n  java.lang.Thread.State: WAITING\n\t  at java.lang.Object.wait(Object.java:-1)\n\t  at java.lang.Object.wait(Object.java:485)\n\t  at org.apache.lucene.index.DocumentsWriter.waitForWaitQueue(DocumentsWriter.java:1057)\n\t  at org.apache.lucene.index.DocumentsWriter.updateDocuments(DocumentsWriter.java:875)\n\t  at org.apache.lucene.index.IndexWriter.updateDocuments(IndexWriter.java:2163)\n\t  at org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2121)\n\t  at org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:2105)\n{code}",
            "date": "2011-10-25T09:21:33.528+0000",
            "id": 4
        },
        {
            "author": "Simon Willnauer",
            "body": "mike did we hang on 3.x since your last commit? can we close this?",
            "date": "2011-11-09T07:30:21.554+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "Olve, which version of Lucene are you seeing deadlock in?  This was fixed in 3.4.0.",
            "date": "2011-11-09T11:29:24.667+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "Simon, yes I think so; I believe this was fixed in 3.4.0.",
            "date": "2011-11-09T11:29:46.314+0000",
            "id": 7
        }
    ],
    "component": "",
    "description": "Maybe we have a problem, maybe its a bug in the test.\n\nBut its strange that lately the 3.x nightlies have been hanging here.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3339",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "TestNRTThreads hangs in nightly 3.x builds",
    "systemSpecification": true,
    "version": ""
}