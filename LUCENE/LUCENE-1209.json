{
    "comments": [
        {
            "author": "Doron Cohen",
            "body": "Config maintains properties by round, so this should do the trick: \n\n{code}\ndoc.term.vector=tvf:true:false\n{code}\n\nIt sets term-vectors to true in round 0, false in round 1, true in round 2, etc.\nAlso, a column is added to the reports with the value of this property ('tvf'). \n\nUnless you already tried this and it didn't work?\n",
            "date": "2008-03-08T21:16:50.667+0000",
            "id": 0
        },
        {
            "author": "Mark Miller",
            "body": "It seems to me that its not working right. Everything that is set in public void setConfig(Config config) is only set once for me, not per round. That is unless I apply the above patch. This means that I cannot seem to set tokenizing, storing, or termvectors per round.\n\nFrom what I can tell it is because setConfig is only called once, and so only the first value is every read for those properties. The patch above puts set config in the resetInputs method which does get called per round. Not sure if that is the best fix, but I know cannot currently set those per round and have anything but the first setting take effect.\n\n- Mark",
            "date": "2008-03-08T22:57:31.699+0000",
            "id": 1
        },
        {
            "author": "Doron Cohen",
            "body": "Mark you are right that setConfig is called just once, at start.\nAt least for setting properties by round this should be sufficient. \nI wonder why this doesn't work for you.\n\nI tried with this one:\n\n{code}\ncompound=true\n\nanalyzer=org.apache.lucene.analysis.standard.StandardAnalyzer\ndirectory=RamDirectory\n\ndoc.stored=true\ndoc.tokenized=true\ndoc.term.vector=termVec:false:true\ndoc.add.log.step=10\n\ndoc.maker=org.apache.lucene.benchmark.byTask.feeds.SimpleDocMaker\ntask.max.depth.log=1\n\n{\n\n    { \"Populate\"\n        CreateIndex\n        { AddDoc > : 50\n        Optimize\n        CloseIndex\n    >\n\n    ResetSystemErase\n    NewRound\n\n} : 2\n\nRepSumByName\nRepSelectByPref Populate\n{code}\n\nAnd got this output:\n{code}\n Working Directory: work\n Running algorithm from: conf\\termVecByRound.alg\n ------------> config properties:\n analyzer = org.apache.lucene.analysis.standard.StandardAnalyzer\n compound = true\n directory = RamDirectory\n doc.add.log.step = 10\n doc.maker = org.apache.lucene.benchmark.byTask.feeds.SimpleDocMaker\n doc.stored = true\n doc.term.vector = termVec:false:true\n doc.tokenized = true\n task.max.depth.log = 1\n work.dir = work\n -------------------------------\n ------------> algorithm:\n Seq {\n     Seq_2 {\n         Populate {\n             CreateIndex\n             Seq_50 {\n                 AddDoc\n             > * 50\n             Optimize\n             CloseIndex\n         >\n         ResetSystemErase\n         NewRound\n     } * 2\n     RepSumByName\n     RepSelectByPref Populate\n }\n \n ------------> starting task: Seq\n ------------> starting task: Seq_2\n --> 0.1 sec: main processed (add) 10 docs\n --> 0.1 sec: main processed (add) 20 docs\n --> 0.11 sec: main processed (add) 30 docs\n --> 0.11 sec: main processed (add) 40 docs\n --> 0.11 sec: main processed (add) 50 docs\n ------------> SimpleDocMaker statistics (0): \n num docs added since last inputs reset:                   50\n total bytes added since last inputs reset:             42,150\n \n \n \n --> Round 0-->1:   doc.term.vector:false-->true\n \n --> 0 sec: main processed (add) 60 docs\n --> 0 sec: main processed (add) 70 docs\n --> 0 sec: main processed (add) 80 docs\n --> 0 sec: main processed (add) 90 docs\n --> 0 sec: main processed (add) 100 docs\n ------------> SimpleDocMaker statistics (1): \n num docs added since last inputs reset:                   50\n total bytes added since last inputs reset:             42,150\n \n \n \n --> Round 1-->2:   doc.term.vector:true-->false\n \n \n ------------> Report Sum By (any) Name (2 about 3 out of 4)\n Operation   round termVec   runCnt   recsPerRun        rec/s  elapsedSec    avgUsedMem    avgTotalMem\n Seq_2           0   false        1          106        530.0        0.20       639,912      5,177,344\n Populate        -       -        2           53        706.7        0.15       839,552      5,177,344\n \n \n ------------> Report Select By Prefix (Populate) (2 about 2 out of 4)\n Operation   round termVec   runCnt   recsPerRun        rec/s  elapsedSec    avgUsedMem    avgTotalMem\n Populate        0   false        1           53        378.6        0.14       858,080      5,177,344\n Populate -  -   1 -  true -  -   1 -  -  -   53 -  - 5,300.0 -  -   0.01 -  -  821,024 -  - 5,177,344\n \n ####################\n ###  D O N E !!! ###\n ####################\n{code}\n\nNote in particular this line:\n{code}\n[java] --> Round 0-->1:   doc.term.vector:false-->true \n{code}\n\nNote that a *NewRound* command is required in order for the round number to change. \n{code}\n    NewRound\n{code}\n\nA possible cause for error is that the property definition parsing requires a property name prefix for multi-valued properties.\nSo this would not work as expected:\n{code}\ndoc.term.vector=false:true\n{code}\n\nBut this will work:\n{code}\ndoc.term.vector=termVec:false:true\n{code}\n\nIf it still doesn't work for you, can you post here the algorithm?",
            "date": "2008-03-09T08:01:32.514+0000",
            "id": 2
        },
        {
            "author": "Mark Miller",
            "body": "My algorithm is below.\n\nI see \"Round 0-->1:   doc.term.vector:false-->true\" as well...however if I put a debug print on what is returned from public boolean get (String name, boolean dflt), it is only ever called once for \"doc.term.vector\" as well as the other guys in setConfig.\n\nMore importantly, lets say I set it to true:false....if I look at the work/index directory on the second run, there are certainly term vectors. Thats how I noticed this to begin with...I was looking at the index and saw the term vector files on every round. Its possible I have something messed up, but every time I run through everything again and it really does not seem to be working. If I set term vectors to false:true, they are never made in any round.\n\n>>Mark you are right that setConfig is called just once, at start.\n>>At least for setting properties by round this should be sufficient.\n>>I wonder why this doesn't work for you. \n\nI think this admits the problem right? The get property for everything in setConfig is only called once...that loads up the \"false:true\", returns false, and sets up \"true\" to be returned on the next call...the next time you call get on Config you will get the \"true\"...but there is no next time. Its only done once...so it shows up right in the output \"Round 0-->1:   doc.term.vector:false-->true\", but its only every called once and so only loads false.\n\n- Mark\n\n\n{code}\nram.flush.mb=flush:32:32\ncompound=false\n\nanalyzer=org.apache.lucene.analysis.standard.StandardAnalyzer\ndirectory=FSDirectory\n\ndoc.stored=true\ndoc.tokenized=tok:false:true\ndoc.term.vector=vec:true:false\ndoc.term.vector.offsets=tvo:false:true\ndoc.term.vector.positions=tvp:false:true\ndoc.add.log.step=2000\n\ndocs.dir=reuters-out\n\ndoc.maker=org.apache.lucene.benchmark.byTask.feeds.ReutersDocMaker\n\nquery.maker=org.apache.lucene.benchmark.byTask.feeds.ReutersQueryMaker\n\n# task at this depth or less would print when they start\ntask.max.depth.log=2\n\nlog.queries=true\n# -------------------------------------------------------------------------------------\n\n{ \"Rounds\"\n      \n    ResetSystemErase\n\n        CreateIndex\n        { \"MAddDocs\" AddDoc(60) } : 20000\n        Optimize\n        CloseIndex\n  \n    OpenReader\n      { \"SrchTrvRetNewRdr\" SearchTravRet(10) > : 1000\n    CloseReader\n    OpenReader\n      { \"SearchHlgtSameRdr\" SearchTravRetHighlight(size[20],highlight[20],mergeContiguous[true],maxFrags[0],fields[body]) > : 1000\n\n    CloseReader\n\n    RepSumByPref SearchHlgtSameRdr\n\n    NewRound\n\n} : 2\n\nRepSumByNameRound\nRepSumByName\nRepSumByPrefRound MAddDocs\n{code}",
            "date": "2008-03-09T13:43:49.531+0000",
            "id": 3
        },
        {
            "author": "Doron Cohen",
            "body": "Ok I can see it now, you're right. \nSo all doc maker per rounds settings were ignored - first round settings were used. \nI am updating TestPerfTasksLogic.testIndexWriterSettings() to catch this bug.\nThanks for catching this,\nDoron",
            "date": "2008-03-09T15:22:22.118+0000",
            "id": 4
        },
        {
            "author": "Doron Cohen",
            "body": "same fix + test case that fails without the fix.",
            "date": "2008-03-09T15:24:56.930+0000",
            "id": 5
        },
        {
            "author": "Doron Cohen",
            "body": "QualityTest fails with previous patch, exposing a related bug in ReutersDocMaker,\nof not reseting files list at call to setConfig(), Was not required before, but now since\nsetConfig is called more than once must clear the list of collected files.\nAttached file fixes this and all benchmark tests pass.",
            "date": "2008-03-09T16:31:33.623+0000",
            "id": 6
        },
        {
            "author": "Doron Cohen",
            "body": "Committed, thanks Mark!",
            "date": "2008-03-09T16:56:37.205+0000",
            "id": 7
        }
    ],
    "component": "modules/benchmark",
    "description": "I want to be able to run one benchmark that tests things using term vectors and not using term vectors.\n\nCurrently this is not easy because you cannot specify term vectors per round.\n\nWhile you do have to create a new index per round, this automation is preferable to me in comparison to running two separate tests.\n\nIf it doesn't affect anything else, it would be great to have setConfig(Config config) called in BasicDocMaker.resetInputs(). This would keep the term vector options up to date per round if you reset.\n\n- Mark",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1209",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "If setConfig(Config config) is called in resetInputs(), you can turn term vectors off and on by round",
    "systemSpecification": true,
    "version": "2.4"
}