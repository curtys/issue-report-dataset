{
    "comments": [
        {
            "author": "Andrzej Bialecki ",
            "body": "A patch to fix the issue.",
            "date": "2008-05-15T13:14:32.242+0000",
            "id": 0
        },
        {
            "author": "Mark Miller",
            "body": "Nice catch and the fix looks great.\n\nThanks Andrzej.",
            "date": "2008-05-15T13:32:34.674+0000",
            "id": 1
        },
        {
            "author": "Mark Miller",
            "body": "Test that exposes the problem. The posted patch makes the test pass.\n\n- Mark",
            "date": "2008-05-15T13:51:26.377+0000",
            "id": 2
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Mark, are you done with this/would you like to commit this?  Or should I?  (Asking because of SOLR-553)",
            "date": "2008-05-20T19:22:01.947+0000",
            "id": 3
        },
        {
            "author": "Mark Miller",
            "body": "Just had a go at committing this. Looks good to me.",
            "date": "2008-05-25T11:40:43.426+0000",
            "id": 4
        },
        {
            "author": "Otis Gospodnetic",
            "body": "It looks like Mark already committed this, but forgot resolve this issue, so I'm marking it as Fixed.\n",
            "date": "2008-05-27T16:10:26.265+0000",
            "id": 5
        }
    ],
    "component": "modules/highlighter",
    "description": "Given a BooleanQuery with multiple clauses, if a term occurs both in a Span / Phrase query, and in a TermQuery, the results of term extraction are unpredictable and depend on the order of clauses. Concequently, the result of highlighting are incorrect.\n\nExample text: t1 t2 t3 t4 t2\nExample query: t2 t3 \"t1 t2\"\nCurrent highlighting: [t1 t2] [t3] t4 t2\nCorrect highlighting: [t1 t2] [t3] t4 [t2]\n\nThe problem comes from the fact that we keep a Map<termText, WeightedSpanTerm>, and if the same term occurs in a Phrase or Span query the resulting WeightedSpanTerm will have a positionSensitive=true, whereas terms added from TermQuery have positionSensitive=false. The end result for this particular term will depend on the order in which the clauses are processed.\n\nMy fix is to use a subclass of Map, which on put() always sets the result to the most lax setting, i.e. if we already have a term with positionSensitive=true, and we try to put() a term with positionSensitive=false, we set the result positionSensitive=false, as it will match both cases.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1285",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "WeightedSpanTermExtractor incorrectly treats the same terms occurring in different query types",
    "systemSpecification": true,
    "version": "2.4"
}