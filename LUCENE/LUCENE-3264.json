{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Patch looks very good. All tests pass for me (I've applied on trunk only).\n\nFew things I've noticed:\n* Previously the tests took 1m20s to run, now they take 2m55s. I guess it's because previously we only created RAMDirs, while now newDirectory picks FSDir from time to time (10%?).\n\n* FacetTestUtils.close*() can be removed and calls replaced by IOUtils.closeSafely. This is not critical, just remove redundant code.\n\n* You added a TODO to CategoryListIteratorTest about the test failing if TieredMP is used. In general TieredMP is not good for the taxonomy index, which relies on Lucene doc IDs, and therefore segments must be merged in-order. LTW uses LMP specifically because of that. I will look into the test to understand why would it care about doc IDs, since it doesn't using the taxonomy index at all.\n\n* There are few places with code like: assertTrue(\"Would like to test this with deletions!\",indexReader.hasDeletions()), and assertTrue(\"Would like to test this with deletions!\",indexReader.numDeletedDocs() > 0) which you removed. Any reason?\n\n* You added a TODO to TestScoredDocIDsUtils (about reader is read-only) -- you're right, the comment can be deleted.\n\nWhile I reviewed, I was thinking that RandomIndexWriter is used to replace the IndexWriter for content indexing. While this is good, this does not cover the 'taxonomy' indexing. So I wonder if we should have under facet/test/o.a.l.utils a RandomTaxonomyWriter which opens RIW internally?\n\nThis is very impressive progress Robert, thanks for doing it !\n\nI am +1 to commit, after we resolve the tiny issues I raised above. We can add RandomTaxonomyWriter as a follow-on commit.",
            "date": "2011-06-30T08:11:17.859+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nPreviously the tests took 1m20s to run, now they take 2m55s. I guess it's because previously we only created RAMDirs, while now newDirectory picks FSDir from time to time (10%?).\n{quote}\n\nI don't think its from FSDir, this is now very very rarely picked. Anyway, as said in the issue summary, for a number of reasons, I don't want to address this on this issue, I want to address the coverage first.\n\n{quote}\nFacetTestUtils.close*() can be removed and calls replaced by IOUtils.closeSafely. This is not critical, just remove redundant code.\n{quote}\n\nah, you are right. let's change this.\n\n{quote}\nYou added a TODO to CategoryListIteratorTest about the test failing if TieredMP is used. In general TieredMP is not good for the taxonomy index, which relies on Lucene doc IDs, and therefore segments must be merged in-order. LTW uses LMP specifically because of that. I will look into the test to understand why would it care about doc IDs, since it doesn't using the taxonomy index at all.\n{quote}\n\nRight, as you said this is for the main index, not the taxonomy index. So I think the test just relies upon lucene doc ids, but I didnt want to just change the test without saying why.\n\n{quote}\nThere are few places with code like: assertTrue(\"Would like to test this with deletions!\",indexReader.hasDeletions()), and assertTrue(\"Would like to test this with deletions!\",indexReader.numDeletedDocs() > 0) which you removed. Any reason?\n{quote}\n\nMostly to prevent the tests from failing. RandomIndexWriter randomly optimizes some times, so occasionally there are no deletions. I think this is fine (actually better) as far as coverage... then the deleted docs is occasionally null, etc.\n\n{quote}\nYou added a TODO to TestScoredDocIDsUtils (about reader is read-only) \u2013 you're right, the comment can be deleted.\n{quote}\n\nOK, I'll nuke this.\n\n{quote}\nWe can add RandomTaxonomyWriter as a follow-on commit.\n{quote}\n\nYes, lets do this separate.\n",
            "date": "2011-06-30T12:30:14.526+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "bq. Anyway, as said in the issue summary, for a number of reasons, I don't want to address this on this issue, I want to address the coverage first.\n\nI don't understand. I thought that you said so regarding introducing atLeast and iterations, and I'm ok with that. I was just asking, since all you've done is move to use newDir, newIWC and RandomIW, how come the tests running time got that much longer? If it's not FSDir, do you have any idea what can cause that? Will RandomIW stall indexing randomly, or maybe it's newIWC which chooses to flush more often?\n\nOnly trying to understand the cause here.\n\nbq. RandomIndexWriter randomly optimizes some times, so occasionally there are no deletions\n\nOk, makes sense.\n\nbq. So I think the test just relies upon lucene doc ids, but I didnt want to just change the test without saying why.\n\nI'll dig why, but it shouldn't hold up the issue. If it needs to be changed, we can change it later.",
            "date": "2011-06-30T15:49:31.755+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nI don't understand. I thought that you said so regarding introducing atLeast and iterations, and I'm ok with that. I was just asking, since all you've done is move to use newDir, newIWC and RandomIW, how come the tests running time got that much longer? If it's not FSDir, do you have any idea what can cause that? Will RandomIW stall indexing randomly, or maybe it's newIWC which chooses to flush more often?\n{quote}\n\nI think the slowdown is basically linear (the tests run 2x or 3x as slow). Let me explain some of the reasons why you have this slowdown over just normal indexing without using randomiw/mockdirectorywrapper/etc:\n# we call checkIndex on every directory we create after its closed. I think this is the right thing to do always... it does slow down the tests a bit.\n# we do sometimes get crappy indexing params, crazy merge params, ridiculous IndexReader/Writer params (e.g. termIndexInterval=1). I think sometimes these non-optimal params slow things down.\n# occasionally we do things like randomly fully or partially optimize, yield(), etc.\n\nSo while Lucene's defaults are pretty good, we are testing a bunch of non-default parameters and doing a bunch of other crazy things... so these slow down the tests!\n\nThat being said, I'm working on the speed issue at least a little here, because I really want to get this test improvements in,  although I really didn't want to work on this here (I think 1 minute extra *temporarily* to the build is no big deal for the additional coverage).\n",
            "date": "2011-06-30T16:00:26.866+0000",
            "id": 3
        },
        {
            "author": "Shai Erera",
            "body": "Thanks Robert. This makes sense to me.\n\nbq. although I really didn't want to work on this here (I think 1 minute extra temporarily to the build is no big deal for the additional coverage)\n\nI apologize if that caused you to do that work here. I really only wanted to understand. By all means, commit the changes. The explanation makes sense and I'm ok with it. We can speed up things later.",
            "date": "2011-06-30T16:04:51.064+0000",
            "id": 4
        },
        {
            "author": "Robert Muir",
            "body": "attached is a patch with the improvements discussed, also just a couple test speedups (seems to shave off about a minute for me, setting me at 2minutes).\n\nNote I explicitly didnt change any of the ones that extend BaseTestTopK here... these tests are more complicated but I think we need to adjust this one to do more work on the nightly, and less work on regular builds (currently each test method in every class that extends this looks like it indexes up to 20000 * 4 = 80000 documents).\n\nI know these are the sluggish ones, but I'd really prefer to handle this separately because they are complicated.\n",
            "date": "2011-06-30T16:04:52.784+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "ok, committed and backported.\n\nI think we should open followup issue(s):\n* speed up the top-k sampling tests (but make sure they are thorough on nightly etc still)\n* make a RandomTaxonomyWriter\n* look at any hardcoded constants like #docs etc and see if we can in general add randomization.\n",
            "date": "2011-06-30T18:36:29.207+0000",
            "id": 6
        }
    ],
    "component": "modules/facet",
    "description": "The faceting module has a large set of good tests.\n\nlets switch them over to use all of our test infra (randomindexwriter, random iwconfig, mockanalyzer, newDirectory, ...)\nI don't want to address multipliers and atLeast() etc on this issue, I think we should follow up with that on a separate issue, that also looks at speed and making sure the nightly build is exhaustive.\n\nfor now, lets just get the coverage in, it will be good to do before any refactoring.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3264",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "crank up faceting module tests",
    "systemSpecification": true,
    "version": ""
}