{
    "comments": [
        {
            "author": "Doron Cohen",
            "body": "Patch implements this relaxation.\nIt is working for me conveniently.\nTo do:\n# add a test\n# update the package documentation about this property",
            "date": "2011-03-10T17:14:00.583+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "Big +1 !\n\nWhat a nice addition Doron. Now I can change my benchmark code to stop looking like I hack Lucene w/ those package names.\n\nAbout the patch, looks good. I have two questions:\n\n# Can you pass 'null' to config.get() and then just compare the 'alt' to null in the next line?\n# Maybe instead of this 'fallback' logic, you always create a packages[] array with the first package being that of PerfTask? Then you can loop over all packages until the first one succeeds. Since this is not a hotspot section (executed once when algorithm is parsed), I think perf-wise we should be ok. It will also mean looking up the alt package names in the config before this method is invoked ...\n# I'd add a comment to the javadocs that if someone uses the same task name by two packages, then whichever is found first is used.",
            "date": "2011-03-10T18:19:10.561+0000",
            "id": 1
        },
        {
            "author": "Doron Cohen",
            "body": "Thanks Shai for the review!\nFollowed all your suggestions, it indeed made the code simpler. \nAlso added a test case and a Changes entry,",
            "date": "2011-03-20T22:41:12.769+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Patch looks good and nice updates to package.html !\n\nIn Algorithm.taskClass, I see that you store the CNFE and later reference it in the thrown CNFE (if the class wasn't found in all package). I think it's redundant? Because if I specify 4 alt packages and the task is not in any of them, the referenced error will be of the last one, which is just confusing. The CNFE message that you pass is already descriptive enough, IMO.\n\nCan we put AltTestTask an inner public static member of AltPackageTaskTest?",
            "date": "2011-03-21T04:23:58.827+0000",
            "id": 3
        },
        {
            "author": "Doron Cohen",
            "body": "Thanks for reviewing.\n\nbq. The CNFE message that you pass is already descriptive enough, IMO.\n\nAgree, I'll change that.\n\nbq. put AltTestTask an inner public static member of AltPackageTaskTest\n\nThis makes sense - but is tricky, as the alg line should now look like this:\n\n{code}\nString altTask = \"{ AltPackageTaskTest$AltTest }\"; // inner class peculiarities - '$' as separator\n{code}\n\nWhich is rather not too nice (took me some time to figure why just *AltPackageTaskTest.AltTest* fails).\nBut in addition, *$* causes the Algorithm's tokenizer to break that into two task names, I am not sure it is worth to modify it for removing that test class, but I'll give it a few more minutes. ",
            "date": "2011-03-21T08:59:50.662+0000",
            "id": 4
        },
        {
            "author": "Doron Cohen",
            "body": "Apparently using '$' is safe in that it is always correct as this is the standard definition for inner class separator - see [Inner Classes Specification | http://www.retrologic.com/innerclasses.doc7.html].\n\nThe required change to the Benchmark Algorithm is to define '$' as a word part, by adding this to the Algorithm's tokenizer intialization:\n{code}\nstok.wordChars('$','$');\n{code}\n\nI am not sure about this.\nIt would allow easier creation of tasks as inner classes.\nBut this is mainly for tests I assume, because for real tasks one would want them to read nicely - without that '$' and to have their own class file. \nAnd making '$' a regular word char just for this test need, will prevent us from adding some semantics to it in the future, should the need arise,\n\nSo, I rather keep the additional class file in the test package.",
            "date": "2011-03-21T09:11:32.936+0000",
            "id": 5
        },
        {
            "author": "Doron Cohen",
            "body": "Updated patch, fixing per Shai suggestion on the exception. \nPlanning to commit shortly.",
            "date": "2011-03-21T09:37:54.233+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "bq. So, I rather keep the additional class file in the test package.\n\nI'm fine with it.",
            "date": "2011-03-21T09:57:31.408+0000",
            "id": 7
        },
        {
            "author": "Doron Cohen",
            "body": "Committed:\n- r1083726 - 3x\n- r1083731 - trunk\n\n(Hudson's Lucene-Solr-tests-only-trunk #6185 passed the new Benchmarks tests.)",
            "date": "2011-03-21T12:05:13.661+0000",
            "id": 8
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:17.481+0000",
            "id": 9
        }
    ],
    "component": "modules/benchmark",
    "description": "Relax current limitation of all tasks in same package - that of PerfTask.\nAdd a property \"alt.tasks.packages\" - its value are comma separated full package names.\nIf the task class is not found in the default package, an attempt is made to load it from the alternate packages specified in that property.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2964",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Allow benchmark tasks from alternative packages",
    "systemSpecification": true,
    "version": ""
}