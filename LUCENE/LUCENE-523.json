{
    "comments": [
        {
            "author": "Sascha Sadat-Guscheh",
            "body": "i run into this problem when using the jackrabbit jcr implementation. any ideas for a workaround?",
            "date": "2006-03-20T05:33:06.000+0000",
            "id": 0
        },
        {
            "author": "Jukka Zitting",
            "body": "The related Jackrabbit issue is http://issues.apache.org/jira/browse/JCR-352",
            "date": "2006-03-20T06:10:10.000+0000",
            "id": 1
        },
        {
            "author": "Daniel Naber",
            "body": "The issue at Jackrabbit is closed, so I guess this can be closed too? I'll do so unless someone objects.",
            "date": "2007-05-11T21:03:22.369+0000",
            "id": 2
        },
        {
            "author": "Jukka Zitting",
            "body": "We worked around the issue in Jackrabbit by using the new openInput method. I guess the underlying issue (FSDirectory.openFile throws an exception) is still there in Lucene, but I'm not sure if people are actually using that method.",
            "date": "2007-05-11T21:15:49.914+0000",
            "id": 3
        },
        {
            "author": "Daniel Naber",
            "body": "openFile had been deprecated in Lucene 1.9 and then later removed, so I'm closing this issue.",
            "date": "2007-05-12T09:14:20.476+0000",
            "id": 4
        }
    ],
    "component": "core/store",
    "description": "When you call FSDirectory.openFile(String) you get a ClassCastException since FSIndexInput is not an org.apache.lucene.store.InputStream\n\nThe workaround is to reimplement using openInput(String). I personally don't need this to be fixed but wanted to document it here in case anyone else runs into this for any reason.\n\nThe reason I'm calling this is that I have a requirement on my project to create read only indexes and name the index segments consistently from one build to the next. So, after creating and optimizing the index, I rename the files and rewrite the segments file. It would be nice if I had an API that would allow me to say \"I only want one segment and I want its name to be 'foo'\". For instance IndexWriter.optimize(String segmentName)",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-523",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "FSDirectory.openFile(String) causes ClassCastException",
    "systemSpecification": true,
    "version": "1.9, 2.0.0"
}