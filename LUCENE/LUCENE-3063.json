{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Committed revision 1098871.\n\nIf there are any problems with hudson i'll yank it... for now I'll open a followup issue to add the additional checks to MockTokenizer",
            "date": "2011-05-03T00:32:33.612+0000",
            "id": 0
        },
        {
            "author": "Neil Hooey",
            "body": "Now that CharTokenizer has been moved in to the analyzer module, the binary build has the CharTokenizer.class inside a jar file that's inside a war file.\n\nIt doesn't seem like you can build a Lucene or Solr plugin without manually extracting the jar in the war.\n\nIn the particular Solr binary distribution:\napache-solr-4.0-2011-11-03_08-39-12\n\nThe CharTokenizer.class file is here:\ndist/apache-solr-4.0-2011-11-03_08-39-12.war/WEB-INF/lib/lucene-analyzers-common-4.0-2011-11-03_08-39-12.jar/org/apache/lucene/analysis/util/CharTokenizer.class\n\nIs there any way to use Ant to build a plugin that uses CharTokenizer without first extracting the war file?\n\nIf not, could you consider having the lucene-analyzers-common-4.0-2011-11-03_08-39-12.jar file just in a directory instead of inside a war file?",
            "date": "2011-11-03T21:13:00.920+0000",
            "id": 1
        },
        {
            "author": "Steve Rowe",
            "body": "Hi Neil, \n\nYou can download a Lucene nightly build as a binary tarball at [https://builds.apache.org/job/Lucene-trunk/lastSuccessfulBuild/artifact/artifacts/].\n\nAlternatively, the individual nightly jars are available in Maven repository format here: [https://builds.apache.org/job/Lucene-Solr-Maven-trunk/lastSuccessfulBuild/artifact/maven_artifacts/org/apache/].  For example, the lucene analyzers common jar is here: [https://builds.apache.org/job/Lucene-Solr-Maven-trunk/lastSuccessfulBuild/artifact/maven_artifacts/org/apache/lucene/lucene-analyzers-common/4.0-SNAPSHOT/].  Note that this is a separate build, so the time stamps, and the time stamp format, will be different.",
            "date": "2011-11-03T21:24:25.834+0000",
            "id": 2
        }
    ],
    "component": "",
    "description": "Currently these analysis components are in the lucene core, but should really\nbe .util in the analyzers module.\n\nAlso, with MockTokenizer extending Tokenizer directly, we can add some additional\nchecks in the future to try to ensure our consumers are being good consumers (e.g. calling reset).\n\nThis is mentioned in http://wiki.apache.org/lucene-java/TestIdeas, I didn't implement it here yet,\nthis is just the factoring. I think we should try to do this before LUCENE-3040.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3063",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "OTHER",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "factor CharTokenizer/CharacterUtils into analyzers module",
    "systemSpecification": true,
    "version": ""
}