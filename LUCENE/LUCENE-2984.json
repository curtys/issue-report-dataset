{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "Attaching my current state.\nThis patch moves all responsibility for hasVectors / hasProx out of SI into FIs. I also added some transactional code to FI that resets the FI#storeTermVector for a field if the TermVectors creation for that FI in the current segment has not successful.\n",
            "date": "2011-05-10T18:18:04.898+0000",
            "id": 0
        },
        {
            "author": "selckin",
            "body": "http://www.selckin.be/trunk-2984-patched.txt",
            "date": "2011-05-10T20:20:33.122+0000",
            "id": 1
        },
        {
            "author": "Simon Willnauer",
            "body": "here is a new patch that should fix selckins failur. I added javadoc, some comments and TODOs to remove the hasProx hasVector flags once we don't need to support it anymore.\n\nI also added a testcase for the vector flags in the exception case.",
            "date": "2011-05-11T08:21:12.491+0000",
            "id": 2
        },
        {
            "author": "Simon Willnauer",
            "body": "new patch!\nI was running tests with the previous patch and tripped a very nifty exception.\n{noformat}\n [junit] Testsuite: org.apache.lucene.store.TestLockFactory\n    [junit] Testcase: testStressLocksNativeFSLockFactory(org.apache.lucene.store.TestLockFactory):\tFAILED\n    [junit] IndexWriter hit unexpected exceptions\n    [junit] junit.framework.AssertionFailedError: IndexWriter hit unexpected exceptions\n    [junit] \tat org.apache.lucene.store.TestLockFactory._testStressLocks(TestLockFactory.java:164)\n    [junit] \tat org.apache.lucene.store.TestLockFactory.testStressLocksNativeFSLockFactory(TestLockFactory.java:144)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1282)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1211)\n    [junit] \n    [junit] \n    [junit] Tests run: 11, Failures: 1, Errors: 0, Time elapsed: 7.092 sec\n    [junit] \n    [junit] ------------- Standard Output ---------------\n    [junit] Stress Test Index Writer: creation hit unexpected IOException: java.io.FileNotFoundException: _u.fnm\n    [junit] java.io.FileNotFoundException: _u.fnm\n    [junit] \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:386)\n    [junit] \tat org.apache.lucene.index.FieldInfos.<init>(FieldInfos.java:273)\n    [junit] \tat org.apache.lucene.index.SegmentInfo.loadFieldInfos(SegmentInfo.java:264)\n    [junit] \tat org.apache.lucene.index.SegmentInfo.getFieldInfos(SegmentInfo.java:315)\n    [junit] \tat org.apache.lucene.index.SegmentInfo.files(SegmentInfo.java:603)\n    [junit] \tat org.apache.lucene.index.SegmentInfos.files(SegmentInfos.java:873)\n    [junit] \tat org.apache.lucene.index.IndexFileDeleter$CommitPoint.<init>(IndexFileDeleter.java:625)\n    [junit] \tat org.apache.lucene.index.IndexFileDeleter.<init>(IndexFileDeleter.java:199)\n    [junit] \tat org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:830)\n    [junit] \tat org.apache.lucene.store.TestLockFactory$WriterThread.run(TestLockFactory.java:283)\n    [junit] Stress Test Index Writer: creation hit unexpected IOException: java.io.FileNotFoundException: _u.fnm\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestLockFactory -Dtestmethod=testStressLocksNativeFSLockFactory -Dtests.seed=9223296054268232625:-7758089421938554917\n    [junit] NOTE: test params are: codec=RandomCodecProvider: {content=MockFixedIntBlock(blockSize=1397)}, locale=ar_MA, timezone=Indian/Antananarivo\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestDateTools, Test2BTerms, TestAddIndexes, TestFilterIndexReader, TestIndexWriterExceptions, TestIndexWriterMerging, TestMaxTermFrequency, TestParallelReaderEmptyIndex, TestParallelTermEnum, TestPerSegmentDeletes, TestPersistentSnapshotDeletionPolicy, TestSegmentReader, TestStressAdvance, TestConstantScoreQuery, TestDateFilter, TestDateSort, TestDocIdSet, TestNot, TestPrefixQuery, TestSetNorm, TestTopScoreDocCollector, TestBasics, TestSpansAdvanced2, TestDirectory, TestLockFactory]\n    [junit] NOTE: Linux 2.6.37-gentoo amd64/Sun Microsystems Inc. 1.6.0_25 (64-bit)/cpus=8,threads=1,free=136724544,total=292618240\n{noformat}\n\nthat is caused by MockDirectoryWrapper behaving like Windows not deleting files if they are still open. So there might be a segments_x file around but the _x.fnm has already been deleted. That wasn't a problem before but since we now need FIs to decide if a segment is storing vectors or not this file is required. \n\nTo work around this I had to add some code to IndexFileDeleter which makes me worry a little. Now I drop a commit-point if either I can't load the SIS or I can not load one of the FIs from the loaded SI. I still try to delete all files of the \"broken\"?! segment though but the question is if there could be cases where I should rather throw an exception in such a case. Maybe some infoStream output would be helpful here to.\n\nAny comments largely appreciated.",
            "date": "2011-05-11T16:17:29.908+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "next iteration.\nSince we are iterating FieldInfos to find out if we store vectors printing mergingSegments in IW#registerMerge is not save anymore since a merge can update the segments FIs. I simplified that infostream output a little and made FieldInfos for new flushed segments readonly.\n\nI think we are close here so I will commit in a day or so if nobody objects",
            "date": "2011-05-12T10:33:13.775+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good Simon!  Maybe add a comment on the changes in IFD about why we also go and force-load the FIS for each segment?  It's sorta... spooky.",
            "date": "2011-05-12T16:43:24.027+0000",
            "id": 5
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. Patch looks good Simon! Maybe add a comment on the changes in IFD about why we also go and force-load the FIS for each segment? It's sorta... spooky.\nah yeah I already added a note to myself to do that - I will also add a infostream output for that.",
            "date": "2011-05-12T16:50:35.244+0000",
            "id": 6
        },
        {
            "author": "Simon Willnauer",
            "body": "committed in revision 1102476",
            "date": "2011-05-12T21:51:57.900+0000",
            "id": 7
        }
    ],
    "component": "core/index",
    "description": "Spin-off from LUCENE-2881 which had this change already but due to some random failures related to this change I remove this part of the patch to make it more isolated and easier to test. ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2984",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Move hasVectors() & hasProx() responsibility out of SegmentInfo to FieldInfos ",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}