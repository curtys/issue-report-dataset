{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "attached is a patch (really svn move of KeywordMarkerTokenFilter and its test will be done)",
            "date": "2010-03-30T21:26:00.752+0000",
            "id": 0
        },
        {
            "author": "Steve Rowe",
            "body": "Hi Robert,\n\nI'm working on a change to ShingleFilter to not output \"_\" filler token unigrams (or generally, filler-only ngrams, to cover the case where position increment gaps exceed n).  \n\nI needed to be able to mark cached tokens as being filler tokens (or not) - a boolean attribute.  After trying to write a new private-use attribute and failing (I didn't make both an interface and an implementation, I think - I should figure it out and improve the docs I guess), I found KeywordAttribute and have used it to mark whether or not a cached token is a filler token (keyword:yes => filler-token:yes).\n\nWould it make sense to have a generalized boolean attribute, specialized for keywords or (fill-in-the-blank)?  It's a small leap to say that \"iskeyword\" means true for whatever boolean attribute you want to carry, so this isn't really a big deal, but I thought I'd bring it up while you're thinking about naming this thing.\n\n(This may be a can of worms: if there  is a generic boolean attribute, should there be generic string/int/float/etc. attributes too?)\n\nSteve\n",
            "date": "2010-03-30T23:11:28.359+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nI needed to be able to mark cached tokens as being filler tokens (or not) - a boolean attribute. After trying to write a new private-use attribute and failing (I didn't make both an interface and an implementation, I think - I should figure it out and improve the docs I guess), I found KeywordAttribute and have used it to mark whether or not a cached token is a filler token (keyword:yes => filler-token:yes).\n{quote}\n\nI'm not really sure the KeywordAttribute is the best fit here, because its purpose is for the token \nto not be changed by some later filter. I'm not sure how your filter works (I would have to see the patch),\nbut I think using this attribute for this purpose could introduce some bugs?\n\nI guess the key is that its not a private-use attribute really, these things are visible by all tokenstreams.\nso stemmers etc will see your 'internal' attribute.\n\n{quote}\nWould it make sense to have a generalized boolean attribute, specialized for keywords or (fill-in-the-blank)? It's a small leap to say that \"iskeyword\" means true for whatever boolean attribute you want to carry, so this isn't really a big deal, but I thought I'd bring it up while you're thinking about naming this thing.\n\n(This may be a can of worms: if there is a generic boolean attribute, should there be generic string/int/float/etc. attributes too?)\n{quote}\n\nI don't really think so. Since there can only be one of any attribute in the tokenstream, you would have\nvarious TokenFilters clashing on how they interpret and use some generic boolean attribute!\n",
            "date": "2010-03-30T23:33:16.762+0000",
            "id": 2
        },
        {
            "author": "Steve Rowe",
            "body": "Sorry for cluttering this issue...\n\n{quote}\nI'm not really sure the KeywordAttribute is the best fit here, because its purpose is for the token\nto not be changed by some later filter. I'm not sure how your filter works (I would have to see the patch),\nbut I think using this attribute for this purpose could introduce some bugs?\n\nI guess the key is that its not a private-use attribute really, these things are visible by all tokenstreams.\nso stemmers etc will see your 'internal' attribute.\n{quote}\n\nYep, you're right, I hadn't thought it through that far.\n\n{quote}\nbq. Would it make sense to have a generalized boolean attribute [...]?\n\nI don't really think so. Since there can only be one of any attribute in the tokenstream, you would have\nvarious TokenFilters clashing on how they interpret and use some generic boolean attribute!\n{quote}\n\nUm, yes, I should have realized that...\n\n(Re-writing private FillerTokenAttribute! Hooray!)",
            "date": "2010-03-30T23:44:56.222+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 932856.",
            "date": "2010-04-11T09:15:41.118+0000",
            "id": 4
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:04.178+0000",
            "id": 5
        }
    ],
    "component": "modules/analysis",
    "description": "I would like to rename KeywordMarkerTokenFilter to KeywordMarkerFilter.\nWe havent released it yet, so its a good time to keep the name brief and consistent.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2358",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "OTHER",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "rename KeywordMarkerTokenFilter",
    "systemSpecification": true,
    "version": ""
}