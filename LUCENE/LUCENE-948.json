{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch & new 2.2.0 JAR that has this fix.",
            "date": "2007-07-03T11:52:56.004+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Another iteration, to just add more verbosity when infoStream is set.",
            "date": "2007-07-03T12:10:43.903+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "Fixed on trunk (2.3).",
            "date": "2007-08-03T18:49:19.250+0000",
            "id": 2
        }
    ],
    "component": "core/index",
    "description": "Issue spawned from this thread:\n\n  http://www.gossamer-threads.com/lists/lucene/java-user/50680\n\nWhen IndexFileDeleter lists the directory, looking for segments_X\nfiles to load, if it hits a FNFE on opening such a file it should\ncatch this and treat it as if the file does not exist.\n\nOn NFS (and possibly other file systems), a directory listing is not\nguaranteed to be \"current\"/coherent.  Specifically, if machine #1 has\njust removed file \"segments_n\" and shortly thereafer machine #2 does a\ndir listing, it's possible (likely?) that the dir listing will still\nshow that segments_n exists.\n\nI think the fix is simple: catch the FNFE and just handle it as if the\nsegments_n does not in fact exist.\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-948",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Writers on two machines over NFS can hit FNFE due to stale NFS client caching",
    "systemSpecification": true,
    "version": "2.1"
}