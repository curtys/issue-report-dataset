{
    "comments": [
        {
            "author": "Peter Keegan",
            "body": "Note that this patch requires java 1.5 or later (easily modified to run on 1.4)",
            "date": "2008-07-19T15:01:44.265+0000",
            "id": 0
        },
        {
            "author": "Peter Keegan",
            "body": "Here is version of patch for Java 1.4",
            "date": "2008-07-21T14:06:00.558+0000",
            "id": 1
        },
        {
            "author": "Grant Ingersoll",
            "body": "Some minor updates.  Makes the Near spans public and moves the BNQ to the payloads package.\n\nPeter, we need tests before this can be committed.",
            "date": "2008-07-31T13:28:15.297+0000",
            "id": 2
        },
        {
            "author": "Peter Keegan",
            "body": "Here is an updated patch for the 2.4 branch.\nIt's 6 months late because I missed Grant's e-mail requesting me to retest. I was just recently looking to see what became of the original patch.\n\nPeter\n",
            "date": "2009-02-11T18:00:02.555+0000",
            "id": 3
        },
        {
            "author": "Grant Ingersoll",
            "body": "Hi Peter,\n\nThis looks good, I think it just needs some unit tests and then it will be good.",
            "date": "2009-04-03T12:40:40.386+0000",
            "id": 4
        },
        {
            "author": "Peter Keegan",
            "body": "As I was debugging a unit test for BoostingNearQuery, I discovered that not all the payloads were getting read. The 'needToLoadPayload' flag on the termpos was getting reset on the last term in the span by NearSpansOrdered. Then I noticed that the term positions aren't even needed in BNQ because they were already collected by the Spans in 'matchPayload'. So, here is a newer, simpler implementation of BNQ along with some unit tests.\n\nPeter\n\n",
            "date": "2009-04-23T17:29:13.014+0000",
            "id": 5
        },
        {
            "author": "Grant Ingersoll",
            "body": "Peter, can you bring this up to date?  I think this could go into 2.9 if you can do so fairly quickly.",
            "date": "2009-08-05T12:43:49.140+0000",
            "id": 6
        },
        {
            "author": "Peter Keegan",
            "body": "New version that works with current trunk (8/5/09)",
            "date": "2009-08-05T19:37:50.532+0000",
            "id": 7
        },
        {
            "author": "Grant Ingersoll",
            "body": "Minor mods and some javadocs.  Looks pretty good.\n\nI made sumPayloads more generic and protected, so that one could override it and do other things besides sum.  ",
            "date": "2009-08-05T20:42:59.902+0000",
            "id": 8
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed revision 801667.  thanks Peter!",
            "date": "2009-08-06T15:14:53.501+0000",
            "id": 9
        }
    ],
    "component": "core/query/scoring",
    "description": "This patch implements term boosting for SpanNearQuery. Refer to: http://www.gossamer-threads.com/lists/lucene/java-user/62779\n\nThis patch works but probably needs more work. I don't like the use of 'instanceof', but I didn't want to touch Spans or TermSpans. Also, the payload code is mostly a copy of what's in BoostingTermQuery and could be common-sourced somewhere. Feel free to throw darts at it :)\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1341",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "BoostingNearQuery class (prototype)",
    "systemSpecification": true,
    "version": "2.3.1"
}