{
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "body": "The patch looks good! Thanks, Mark.\n\nI think the customer will test the patch with their data on uni-gram environment on Monday. I'll report back. Thanks again. :)",
            "date": "2009-07-17T14:02:45.346+0000",
            "id": 0
        },
        {
            "author": "Koji Sekiguchi",
            "body": "The patch was tested on their environment and the problem was solved. +1 for committing the patch. Thanks, Mark.",
            "date": "2009-07-21T15:25:41.453+0000",
            "id": 1
        },
        {
            "author": "Koji Sekiguchi",
            "body": "I'd like set 2.9. With the patch, highlighter works on our production environment perfectly.",
            "date": "2009-07-29T12:55:22.451+0000",
            "id": 2
        },
        {
            "author": "Mark Miller",
            "body": "Thanks Koji - I had forgotten about this one. I'll commit it in a bit.",
            "date": "2009-07-29T13:25:23.891+0000",
            "id": 3
        },
        {
            "author": "Mark Miller",
            "body": "Thanks Koji!",
            "date": "2009-07-29T16:47:23.310+0000",
            "id": 4
        }
    ],
    "component": "modules/highlighter",
    "description": "This problem was reported by my customer. They are using Solr 1.3 and uni-gram, but it can be reproduced with Lucene 2.9 and WhitespaceAnalyzer.\n\n{panel:title=Query}\n(f1:\"a b c d\" OR f2:\"a b c d\") AND (f1:\"b c g\" OR f2:\"b c g\")\n{panel}\n\nThe snippet we expected is:\n{panel}\nx y z <B>a</B> <B>b</B> <B>c</B> <B>d</B> e f g <B>b</B> <B>c</B> <B>g</B>\n{panel}\n\nbut we got:\n{panel}\nx y z <B>a</B> b c <B>d</B> e f g <B>b</B> <B>c</B> <B>g</B>\n{panel}\n\nProgram to reproduce the problem:\n{code}\npublic class TestHighlighter {\n\n  static final String CONTENT = \"x y z a b c d e f g b c g\";\n  static final String PH1 = \"\\\"a b c d\\\"\";\n  static final String PH2 = \"\\\"b c g\\\"\";\n  static final String F1 = \"f1\";\n  static final String F2 = \"f2\";\n  static final String F1C = F1 + \":\";\n  static final String F2C = F2 + \":\";\n  static final String QUERY_STRING =\n    \"(\" + F1C + PH1 + \" OR \" + F2C + PH1 + \") AND (\"\n    + F1C + PH2 + \" OR \" + F2C + PH2 + \")\";\n  static Analyzer analyzer = new WhitespaceAnalyzer();\n  \n  public static void main(String[] args) throws Exception {\n    QueryParser qp = new QueryParser( F1, analyzer );\n    Query query = qp.parse( QUERY_STRING );\n    CachingTokenFilter stream = new CachingTokenFilter( analyzer.tokenStream( F1, new StringReader( CONTENT ) ) );\n    Scorer scorer = new SpanScorer( query, F1, stream, false );\n    Highlighter h = new Highlighter( scorer );\n    System.out.println( \"query : \" + QUERY_STRING );\n    System.out.println( h.getBestFragment( analyzer, F1,  CONTENT ) );\n  }\n}\n{code}\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1752",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "incorrect snippet returned with SpanScorer",
    "systemSpecification": true,
    "version": "2.9"
}