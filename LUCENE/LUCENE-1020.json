{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.\n\nI created a first cut at this.  It takes the path to the index, opens\nit, and steps through all segments scanning terms, freq, prox, fields,\nnorms, stored fields and term vectors.  If it detects anything\ninconsistent, and you specified \"-fix\" on the command-line, it will\nwrite a new segments file that does not reference the bad segments.\n\nWARNING: this is all brand new code.  Be very careful when trying it.\nMake a full backup copy of your index first!\n\nIt also prints useful details about the index (eg \"roughly\" what\nversion of Lucene produced it) which can be used to gather diagnostics\nwhen trying to debug problems with an index.\n\nBelow is the output on a healthy index.  On an un-healthy index, the\ntool prints 'FAILED' for one or more of the segments and then prints\nthe full excpeption (reason).  But, nothing is done to the index\nunless you specify the '-fix' command-line option.\n\nHealthy index output:\n\n\nOpening index @ contrib/benchmark/work/index\n\nSegments file=segments_3 numSegments=6 version=FORMAT_SHARED_DOC_STORE [Lucene 2.3]\n  1 of 6: name=_l docCount=9039\n    compound=false\n    numFiles=11\n    size (MB)=44.276\n    docStoreOffset=0\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [391050 terms; 6573991 terms/docs pairs; 20476680 tokens]\n    test: stored fields.......OK [27117 total field count; avg 3 fields per doc]\n    test: term vectors........OK [18078 total vector count; avg 2 term/freq vector fields per doc]\n\n  2 of 6: name=_16 docCount=9193\n    compound=false\n    numFiles=11\n    size (MB)=44.743\n    docStoreOffset=9039\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [391013 terms; 6619615 terms/docs pairs; 20746479 tokens]\n    test: stored fields.......OK [27579 total field count; avg 3 fields per doc]\n    test: term vectors........OK [18386 total vector count; avg 2 term/freq vector fields per doc]\n\n  3 of 6: name=_1a docCount=3686\n    compound=false\n    numFiles=11\n    size (MB)=11.797\n    docStoreOffset=18232\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [164885 terms; 1866591 terms/docs pairs; 5047412 tokens]\n    test: stored fields.......OK [11058 total field count; avg 3 fields per doc]\n    test: term vectors........OK [5953 total vector count; avg 1.615 term/freq vector fields per doc]\n\n  4 of 6: name=_1f docCount=3987\n    compound=false\n    numFiles=11\n    size (MB)=11.851\n    docStoreOffset=21918\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [159546 terms; 1804415 terms/docs pairs; 5199299 tokens]\n    test: stored fields.......OK [11961 total field count; avg 3 fields per doc]\n    test: term vectors........OK [7547 total vector count; avg 1.893 term/freq vector fields per doc]\n\n  5 of 6: name=_1l docCount=838\n    compound=false\n    numFiles=11\n    size (MB)=3.143\n    docStoreOffset=28712\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [68824 terms; 436884 terms/docs pairs; 1281678 tokens]\n    test: stored fields.......OK [2514 total field count; avg 3 fields per doc]\n    test: term vectors........OK [1617 total vector count; avg 1.93 term/freq vector fields per doc]\n\n  6 of 6: name=_1m docCount=450\n    compound=false\n    numFiles=11\n    size (MB)=2.165\n    docStoreOffset=29550\n    docStoreSeEgment=_0\n    no deletions\n    test: open reader.........OK\n    test: fields, norms.......OK [3 fields]\n    test: terms, freq, prox...OK [53147 terms; 278659 terms/docs pairs; 877940 tokens]\n    test: stored fields.......OK [1350 total field count; avg 3 fields per doc]\n    test: term vectors........OK [895 total vector count; avg 1.989 term/freq vector fields per doc]\n\nNo problems were detected with this index.\n",
            "date": "2007-10-05T11:39:44.139+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Attached patch: another rev of this tool, with a few minor additions.\n\nI plan to commit in a day or two.\n",
            "date": "2007-10-19T13:12:17.419+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "This has been requested a number of times on the mailing lists.  Most\nrecently here:\n\n  http://www.gossamer-threads.com/lists/lucene/java-user/53474\n\nI think we should provide a basic tool out of the box.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1020",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "RFE",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Basic tool for checking & repairing an index",
    "systemSpecification": true,
    "version": "2.3"
}