{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch showing the failure....\n\nIt happens on input \" Secretary)</br> [[M\", in case anyone can see something obviously interesting :)\n\nI have no idea where the bug is...",
            "date": "2012-03-24T14:31:19.198+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "I forgot to say: patch is against 3.x.\n",
            "date": "2012-03-24T14:33:20.370+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "I like the refactored method: though I think we should also call it from\nHTMLStripCharFilterTest.testRandomBrokenHTML?\nCurrently this only does:\n{code}\nwhile (reader.read() != -1);\n{code}",
            "date": "2012-03-24T14:37:20.992+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Good idea!  I'll fix that test case.\n\nHere's the failure output:\n\n{noformat}\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=HTMLStripCharFilterTest -Dtestmethod=testOddHTMLString -Dtests.seed=-fe5cdb1aeca4e37:583f6a844412e138:70dc861e8567bea3 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: reproduce with: ant test -Dtestcase=HTMLStripCharFilterTest -Dtestmethod=null -Dtests.seed=-fe5cdb1aeca4e37:583f6a844412e138:70dc861e8567bea3 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: test params are: locale=zh_SG, timezone=Europe/Minsk\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [HTMLStripCharFilterTest]\n    [junit] NOTE: Linux 2.6.33.6-147.fc13.x86_64 amd64/Sun Microsystems Inc. 1.6.0_21 (64-bit)/cpus=24,threads=1,free=163214064,total=189988864\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testOddHTMLString(org.apache.lucene.analysis.charfilter.HTMLStripCharFilterTest):\tFAILED\n    [junit] finalOffset  expected:<20> but was:<19>\n    [junit] junit.framework.AssertionFailedError: finalOffset  expected:<20> but was:<19>\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner$3.addError(JUnitTestRunner.java:975)\n    [junit] \tat junit.framework.TestResult.addError(TestResult.java:38)\n    [junit] \tat junit.framework.JUnit4TestAdapterCache$1.testFailure(JUnit4TestAdapterCache.java:51)\n    [junit] \tat org.junit.runner.notification.RunNotifier$4.notifyListener(RunNotifier.java:100)\n    [junit] \tat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:41)\n    [junit] \tat org.junit.runner.notification.RunNotifier.fireTestFailure(RunNotifier.java:97)\n    [junit] \tat org.junit.internal.runners.model.EachTestNotifier.addFailure(EachTestNotifier.java:26)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:267)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:146)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:74)\n    [junit] \tat org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:36)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:67)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:768)\n    [junit] Caused by: java.lang.AssertionError: finalOffset  expected:<20> but was:<19>\n    [junit] \tat org.junit.Assert.fail(Assert.java:93)\n    [junit] \tat org.junit.Assert.failNotEquals(Assert.java:647)\n    [junit] \tat org.junit.Assert.assertEquals(Assert.java:128)\n    [junit] \tat org.junit.Assert.assertEquals(Assert.java:472)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:182)\n    [junit] \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkAnalysisConsistency(BaseTokenStreamTestCase.java:574)\n    [junit] \tat org.apache.lucene.analysis.charfilter.HTMLStripCharFilterTest.testOddHTMLString(HTMLStripCharFilterTest.java:550)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:597)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:636)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:542)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:67)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:458)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:74)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:516)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    [junit] \t... 19 more\n    [junit] \n{noformat}\n\nNote that instead of -Dtests.testmethod=null you should pass -Dtests.testmethod=testOddHTMLString.",
            "date": "2012-03-24T14:48:29.745+0000",
            "id": 3
        },
        {
            "author": "Steve Rowe",
            "body": "I can reproduce - I'm digging.",
            "date": "2012-03-24T14:56:26.534+0000",
            "id": 4
        },
        {
            "author": "Steve Rowe",
            "body": "Minimal test failure trigger appears to be \"x</br>\", where \"x\" can be any non-whitespace character, and \"</br>\" must be \"</br>\".  (No problems with \"x<br>\", \"x</a>\", etc.)\n\n<br> and </br> are handled specially, so this should narrow it down.",
            "date": "2012-03-24T15:19:08.881+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Since we know those are special, a good idea for the future could be to add both\nthose elements to randomHtmlishString",
            "date": "2012-03-24T15:23:32.745+0000",
            "id": 6
        },
        {
            "author": "Steve Rowe",
            "body": "bq. Since we know those are special, a good idea for the future could be to add both those elements to randomHtmlishString\n\n+1",
            "date": "2012-03-24T15:30:06.528+0000",
            "id": 7
        },
        {
            "author": "Steve Rowe",
            "body": "Patch, a superset of Mike's:\n\n* fixes the identified problem: {{</br>}} offset was improperly calculated.  (Added comments describing the offset calculations everywhere they're performed in the .jflex source.)\n* adds a new case emitting {{<\\s*(/\\s*)?(br|script|style)>?}} to {{_TestUtil.randomHtmlishString()}}, because <br>, <script>, and <style> are handled specially in HTMLStripCharFilter.\n* adds a new method {{_TestUtil.randomlyRecaseCodePoints()}}, used by the above-mentioned new {{randomHtmlishString()}} case, to produce things like {{<Br>}}, {{</sCriPT>}}, etc.\n* switches {{HTMLStripCharFilterTest.testRandomBrokenHTML()}} to use Mike's new {{BaseTokenStreamTestCase.checkAnalysisConsistency()}}.\n* fixes the Jenkins test failure of {{HTMLStripCharFilterTest.testRandomHugeStrings()}} at [https://builds.apache.org/job/Lucene-Solr-tests-only-3.x/12863/]:\n\n{noformat}\nant test -Dtestcase=HTMLStripCharFilterTest -Dtestmethod=null -Dtests.seed=48bbf57c15b7aa2d:5bb640584c81078d:-7e916259eafd7e54 -Dtests.multiplier=5 -Dargs=\"-Dfile.encoding=ISO8859-1\"\n{noformat}\n\nCommitting shortly.",
            "date": "2012-03-24T20:00:42.553+0000",
            "id": 8
        },
        {
            "author": "Steve Rowe",
            "body": "bq. ant test -Dtestcase=HTMLStripCharFilterTest -Dtestmethod=null ...\n\nActually, I ran it without {{-Dtestmethod=null}}.",
            "date": "2012-03-24T20:06:35.841+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "Awesome, thanks Steve!",
            "date": "2012-03-24T20:08:27.120+0000",
            "id": 10
        },
        {
            "author": "Robert Muir",
            "body": "Thank you!\n\nI think the toUpperCase/toLowerCase in recaseCodePoints should take Locale.ENGLISH?\n\nOtherwise you will find this gives interesting things for <script> in the Turkish Locale :)",
            "date": "2012-03-24T20:21:37.213+0000",
            "id": 11
        },
        {
            "author": "Steve Rowe",
            "body": "bq. I think the toUpperCase/toLowerCase in recaseCodePoints should take Locale.ENGLISH?\n\nYeah, I had that in at first, but then I thought it might be useful to use the randomized locale to trigger \"interesting things\".  That's what we want, right?",
            "date": "2012-03-24T20:24:08.593+0000",
            "id": 12
        },
        {
            "author": "Steve Rowe",
            "body": "Committed to branch_3x and trunk.\n\nThanks Mike and Robert!",
            "date": "2012-03-24T21:00:38.257+0000",
            "id": 13
        },
        {
            "author": "Robert Muir",
            "body": "I don't think it will be interesting,\ninstead just make seeds less reproducible \nacross java 6 and 7 or other jre impls\nwith different # of locales",
            "date": "2012-03-24T21:18:16.834+0000",
            "id": 14
        },
        {
            "author": "Steve Rowe",
            "body": "bq. I don't think it will be interesting, instead just make seeds less reproducible across java 6 and 7 or other jre impls with different # of locales\n\nHmm, I didn't think of the reproducibility angle.  I'll fix.",
            "date": "2012-03-24T21:22:46.569+0000",
            "id": 15
        },
        {
            "author": "Steve Rowe",
            "body": "{quote}\nbq. I don't think it will be interesting, instead just make seeds less reproducible across java 6 and 7 or other jre impls with different # of locales\n\nHmm, I didn't think of the reproducibility angle. I'll fix.\n{quote}\n\nCommitted to trunk and branch_3x.\n\nThanks again Robert!",
            "date": "2012-03-24T21:27:36.894+0000",
            "id": 16
        },
        {
            "author": "Robert Muir",
            "body": "thanks! let's just hope mike doesn't notice :)\n\n-reproducibility policeman",
            "date": "2012-03-24T21:35:43.355+0000",
            "id": 17
        }
    ],
    "component": "",
    "description": "Nightly build found this... I boiled it down to a small test case that doesn't require the big line file docs.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3913",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "HTMLStripCharFilter produces invalid final offset",
    "systemSpecification": true,
    "version": ""
}