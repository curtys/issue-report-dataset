{
    "comments": [
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15886)\nMyQueryParser.java\n\nAttached java class.",
            "date": "2005-08-04T18:58:24.000+0000",
            "id": 0
        },
        {
            "author": "Daniel Naber",
            "body": "Thanks! The following issues need to be fixed if this should become part of \nLucene's core: \n \n-it doesn't work yet for fuzzy and range queries \n-it needs test cases (a real life test case that shows how this solves your \noriginal problem would be nice) \n-a better name is needed, maybe \"AnalyzingQueryParser\". But I'm not sure \nanyway whether it really should be a subclass or if it should be integrated \ninto QueryParser. \n-the \"we should never get here\" should probably throw a runtime exception for \neasier debugging \n \nIf you'd like to work on these issues that would be nice. \n ",
            "date": "2005-08-05T05:44:18.000+0000",
            "id": 1
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15903)\nAnalyzingQueryParser.java\n\nRenamed class, added methods getRangeQuery and getFuzzyQuery and made a few\nfixes to getWildcardQuery.\n",
            "date": "2005-08-06T00:13:45.000+0000",
            "id": 2
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15907)\nTestAnalyzingQueryParser.java\n\nA query parser which utilises an analyzer is usable when you have multi-lingual\ncontent in one context, for example a web portal application. Analyzing is\n*not* recommended when using a stemmer, since a stemmer usually truncates\nterms.\n\nFor multi-lingual content, I have used a custom analyzer which \"normalises\"\numlauts and diacritics to their closest ascii equivalent (see attachment\nbelow).\nDoing tests with StandardAnalyzer would not make much sense, so this test case\nrequires the custom analyzer as well.",
            "date": "2005-08-06T00:26:10.000+0000",
            "id": 3
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15908)\nASCIIAnalyzer.java\n\nRequired by TestAnalyzingQueryParser.",
            "date": "2005-08-06T00:27:36.000+0000",
            "id": 4
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15909)\nASCIIFilter.java\n\nUsed by ASCIIAnalyzer.",
            "date": "2005-08-06T00:28:09.000+0000",
            "id": 5
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15910)\nTestASCIIAnalyzer.java\n\nTest case for ASCIIAnalyzer.",
            "date": "2005-08-06T00:28:41.000+0000",
            "id": 6
        },
        {
            "author": "Daniel Naber",
            "body": "Created an attachment (id=15923)\ncleanup version\n\nThanks, here's a cleaned up version (works only with Lucene in SVN).",
            "date": "2005-08-06T04:13:33.000+0000",
            "id": 7
        },
        {
            "author": "Daniel Naber",
            "body": "Created an attachment (id=15924)\ncleanup version\n\nCleaned up version that doesn't require ASCIIAnalyzer.",
            "date": "2005-08-06T04:15:00.000+0000",
            "id": 8
        },
        {
            "author": "Daniel Naber",
            "body": "I cleaned up your files a bit: \n-re-indent according to Lucene standard \n-make it work with Lucene from SVN \n-removed deprecated methods \n-some spam protection for your email address \n \nRemaining issue: \n-hasWildcardSuffix is never read \n \nIf you make further changes please use either my files or provide patches \nagainst your version. \n ",
            "date": "2005-08-06T04:17:30.000+0000",
            "id": 9
        },
        {
            "author": "Ronnie",
            "body": "Created an attachment (id=15925)\nlast cleanup\n\nOh nice :) \nThank you for taking the time looking at the code! I wasn't sure with the\ndeprecated methods and included them just in case.\nI've removed the two lines with unused variable hasWildcardSuffix(boolean),\nit's function was replaced with countTokens (int).",
            "date": "2005-08-06T05:01:23.000+0000",
            "id": 10
        },
        {
            "author": "Daniel Naber",
            "body": "Created an attachment (id=15929)\ncleanup\n\nSome javadoc fixes.",
            "date": "2005-08-06T06:18:37.000+0000",
            "id": 11
        },
        {
            "author": "Daniel Naber",
            "body": "This has now been commited, not to core, but to contrib/miscellaneous. If you \nhave further improvements, please either open a new bug report or re-open this \none and attach a patch against the version now in SVN. Thanks again for your \ncontribution! \n ",
            "date": "2005-08-12T06:32:18.000+0000",
            "id": 12
        }
    ],
    "component": "core/queryparser",
    "description": "Lucenes built-in QueryParser class does not analyze prefix nor wildcard queries.\nAttached is a subclass which passes these queries to the analyzer as well.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-418",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] Contribution: A QueryParser which passes wildcard and prefix queries to analyzer",
    "systemSpecification": true,
    "version": "1.4"
}