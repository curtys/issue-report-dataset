{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "patch with a test, and fixes for SimpleText and PreFlex, but i didn't fix any of the other postings readers.\n\n",
            "date": "2011-11-17T03:33:36.420+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "updated patch fixing the other postings readers... i don't think this will hurt performance, so I plan to commit soon.",
            "date": "2011-11-17T13:45:04.628+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "+1, good catch!",
            "date": "2011-11-17T13:53:04.910+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "+1, thanks Robert! I think DISI as basis/contract for DocsEnum is a good thing, so we should not remove that dependency.",
            "date": "2011-11-17T14:02:25.169+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Same bug in termvectors reader (sorry, i forgot). I'll add tests for those and fix them as well!",
            "date": "2011-11-17T14:23:44.458+0000",
            "id": 4
        },
        {
            "author": "Robert Muir",
            "body": "actually i will reopen the issue: i think we should add a check to QueryUtils to validate this for Scorers too, since they are also DISIs.",
            "date": "2011-11-17T14:26:21.120+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "reopening to add tests/fixes for other DISI impls",
            "date": "2011-11-17T14:26:35.786+0000",
            "id": 6
        },
        {
            "author": "Uwe Schindler",
            "body": "Finally, I think the idea to have two separate state variables is a nice fix for this, I like that! After the first next()/advance() both are synchronous but the undefined state -1 for the docId is solved very elegant.",
            "date": "2011-11-17T14:34:37.012+0000",
            "id": 7
        },
        {
            "author": "Robert Muir",
            "body": "for scorers, i found no bugs at least in core tests... attached is my patch to AssertingIndexSearcher to check.\n",
            "date": "2011-11-17T14:35:56.748+0000",
            "id": 8
        },
        {
            "author": "Robert Muir",
            "body": "here's a patch fixing the TV DISIs and adding tests.\n\nI think we can resolve the issue now.",
            "date": "2011-11-17T15:12:48.004+0000",
            "id": 9
        },
        {
            "author": "Robert Muir",
            "body": "resolving for real this time hopefully :)",
            "date": "2011-11-17T15:21:14.174+0000",
            "id": 10
        }
    ],
    "component": "",
    "description": "While trying to do some refactoring, I noticed funky things going on with some codecs.\n\nOne problem is that DocIdSetIterator says the following:\n{noformat}\nReturns the following:\n   * <ul>\n   * <li>-1 or {@link #NO_MORE_DOCS} if {@link #nextDoc()} or\n   * {@link #advance(int)} were not called yet.\n{noformat}\n\nBut most 4.0 Docs/DocsAndPositionsEnums don't actually do this (e.g. return 0). instead we \nare relying on Scorers to 'cover' for them, which is inconsistent. Some scorers actually rely\nupon this behavior, for example look at ReqExclScorer.toNonExcluded(), it calls docId() on the\nexcluded part before it calls nextDoc()\n\nSo we need to either fix these enums, change these enums to not extend DocIdSetIterator (and redefine\nwhat the actual contract should be for these enums), change DocIdSetIterator, or something else.\n\nFixing the enums to return -1 here when they are uninitialized kinda sucks for the ones summing up\ndocument deltas...\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3580",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Most 4.0 PostingsReaders don't obey DISI contract",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}