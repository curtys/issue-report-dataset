{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Oopps, that's my fault. Good catch Kevin!\n\nI'll fix it later today, unless someone gets to it before me.",
            "date": "2010-06-12T03:42:02.956+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "Committed revision 953986. Thanks Kevin !",
            "date": "2010-06-12T10:59:25.313+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "At revision 949509 in org.apache.lucene.index.SegmentInfo at line 155, there is the following code:\n{noformat} \n    if (format > SegmentInfos.FORMAT_4_0) {\n      // pre-4.0 indexes write a byte if there is a single norms file\n      assert 1 == input.readByte();\n    }\n{noformat} \nNote that the assert statement invokes input.readByte().\nIf asserts are disabled for the JVM, input.readByte() will not be invoked, causing the following readInt() to return a bogus value, and then causing an IOE during the (mistakenly entered) loop at line 165.\nThis can occur when processing old format (format \"-9\") index data under Tomcat (whose startup scripts by default do not turn on asserts).\n\nFull stacktrace:\n{noformat} \nSEVERE: java.lang.RuntimeException: java.io.IOException: read past EOF\n\tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1066)\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:581)\n\tat org.apache.solr.core.CoreContainer.create(CoreContainer.java:431)\n\tat org.apache.solr.core.CoreContainer.load(CoreContainer.java:286)\n\tat org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:125)\n\tat org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:86)\n\tat org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:275)\n\tat org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(ApplicationFilterConfig.java:397)\n\tat org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:108)\n\tat org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3800)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4450)\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:526)\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:850)\n\tat org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:724)\n\tat org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:493)\n\tat org.apache.catalina.startup.HostConfig.start(HostConfig.java:1206)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:314)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)\n\tat org.apache.catalina.core.StandardHost.start(StandardHost.java:722)\n\tat org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n\tat org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)\n\tat org.apache.catalina.core.StandardService.start(StandardService.java:516)\n\tat org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n\tat org.apache.catalina.startup.Catalina.start(Catalina.java:583)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)\n\tat org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)\nCaused by: java.io.IOException: read past EOF\n\tat org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:154)\n\tat org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:39)\n\tat org.apache.lucene.store.ChecksumIndexInput.readByte(ChecksumIndexInput.java:40)\n\tat org.apache.lucene.store.DataInput.readInt(DataInput.java:76)\n\tat org.apache.lucene.store.DataInput.readLong(DataInput.java:99)\n\tat org.apache.lucene.index.SegmentInfo.<init>(SegmentInfo.java:165)\n\tat org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:230)\n\tat org.apache.lucene.index.DirectoryReader$1.doBody(DirectoryReader.java:91)\n\tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:649)\n\tat org.apache.lucene.index.DirectoryReader.open(DirectoryReader.java:87)\n\tat org.apache.lucene.index.IndexReader.open(IndexReader.java:415)\n\tat org.apache.lucene.index.IndexReader.open(IndexReader.java:294)\n\tat org.apache.solr.core.StandardIndexReaderFactory.newReader(StandardIndexReaderFactory.java:38)\n\tat org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1055)\n\t... 32 more\n{noformat} ",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-2497",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Revision 949509 (LUCENE-2480) causes IOE \"read past EOF\" when processing older format SegmentInfo data when JVM assertion processing is disabled.",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}