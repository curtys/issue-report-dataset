{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "This is a patch for Mike's suggestion: It just fixes CheckIndex to not use norms(fieldname) which caches, but uses the uncached 3-arg variant. TestCheckIndex passes.\n\nNo more OOM error with the many-field-index.",
            "date": "2009-01-16T10:37:25.475+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks good; I'll commit shortly.",
            "date": "2009-01-16T10:46:27.137+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "Again a slightly improved patch. byte[] is only allocated one time for all fields in CheckIndex. The length check is unnecessary, because the array is preallocated to maxDoc. Moved this a little bit modified to compare SegmentInfo docCount and Reader maxDoc",
            "date": "2009-01-16T10:48:44.961+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Committed revision 734967.\n\nThanks Uwe!",
            "date": "2009-01-16T10:49:46.347+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Again my last patch with optimized memory usage, now on the current svn trunk after Mike's commit.",
            "date": "2009-01-16T10:58:01.940+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "OK, even better -- I'll commit.",
            "date": "2009-01-16T11:11:00.794+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "Committed revision 734974.  Thanks!",
            "date": "2009-01-16T11:11:37.960+0000",
            "id": 6
        }
    ],
    "component": "core/index",
    "description": "All index readers have a cache of the last used norms (SegmentReader, MultiReader, MultiSegmentReader,...). This cache is never cleaned up, so if you access norms of a field, the norm's byte[maxdoc()] array is not freed until you close/reopen the index.\n\nYou can see this problem, if you create an index with many fields with norms (I tested with about 4,000 fields) and many documents (half a million). If you then call CheckIndex, that calls norms() for each (!) field in the Segment and each of this calls creates a new cache entry, you get OutOfMemoryExceptions after short time (I tested with the above index: I was not able to do a CheckIndex even with \"-Xmx 16GB\" on 64bit Java).\n\nCheckIndex opens and then tests each segment of a index with a separate SegmentReader. The big index with the OutOfMemory problem was optimized, so consisting of one segment with about half a million docs and about 4,000 fields. Each byte[] array takes about a half MiB for this index. The CheckIndex funtion created the norm for 4000 fields and the SegmentReader cached them, which is about 2 GiB RAM. So OOMs are not unusal.\n\nIn my opinion, the best would be to use a Weak- or better a SoftReference so norms.bytes gets java.lang.ref.SoftReference<byte[]> and used for caching. With proper synchronization (which is done on the norms cache in SegmentReader) you can do the best with SoftReference, as this reference is garbage collected only when an OOM may happen. If the byte[] array is freed (but it is only freed if no other references exist), a lter call to getNorms() creates a new array. When code is hard referencing the norms array, it will not be freed, so no problem. The same could be done for the other IndexReaders.\n\nFields without norm() do not have this problem, as all these fields share a one-time allocated dummy norm array. So the same index without norms enabled for most of the fields checked perfectly.\n\nI will prepare a patch tomorrow.\n\nMike proposed another quick fix for CheckIndex:\nbq. we could do something first specifically for CheckIndex (eg it could simply use the 3-arg non-caching bytes method instead) to prevent OOM errors when using it.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1520",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "OOM erros with CheckIndex with indexes containg a lot of fields with norms",
    "systemSpecification": true,
    "version": "2.9"
}