{
    "comments": [
        {
            "author": "Grant Ingersoll",
            "body": "Fix.  Will commit today or tomorrow.  Going to double check logic again.",
            "date": "2010-03-31T21:06:18.789+0000",
            "id": 0
        },
        {
            "author": "Nicolas Helleringer",
            "body": "This is fixed in the pendig re work done by Chris Male\n\nShould be comitted in a whole soon",
            "date": "2010-03-31T22:10:19.097+0000",
            "id": 1
        },
        {
            "author": "Nicolas Helleringer",
            "body": "If you want to check / compare code while waiting for the commit from Chris :\n\nhttp://code.google.com/p/spatial-search-lucene/source/browse/trunk/src/main/java/org/apache/lucene/spatial/tier/CartesianPolyFilterBuilder.java\n\nRegards,\n\nNicolas",
            "date": "2010-03-31T22:14:30.577+0000",
            "id": 2
        },
        {
            "author": "Chris Male",
            "body": "Hi Nicolas,\n\nSorry I hadn't seen that you had been working on this.  I will create a patch based on your work so we can get this fixed up in the next day or two.",
            "date": "2010-03-31T22:20:53.028+0000",
            "id": 3
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed revision 929956.",
            "date": "2010-04-01T13:17:24.987+0000",
            "id": 4
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Here is a patch to import the CartesianPolyFilterBuilder:getBoxShape part of the code from the worked we have done with Chris @ GoogleCode\nI tried to keep it as minimal as possible\n\nNext step is to patch LatLngRectangle in the same way",
            "date": "2010-04-03T07:42:42.605+0000",
            "id": 5
        },
        {
            "author": "Grant Ingersoll",
            "body": "Nicolas,\n\nHow does this compare to what I already committed?  Also, can you put up a patch that doesn't have all the formatting changes and just has the bug fixes?",
            "date": "2010-04-03T11:22:46.137+0000",
            "id": 6
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Here is the re worked patch, sorry for the formatting :s\n\nThis patch  :\n\n- handles East AND West tiles when close to the prime meridian (either by 0 or by 180 values) where yours only catch East ones\n- reworks the logic to have algorithm in the code logic instead of in variables values\n- gives variavbles full names to better understand the code logic\n- separates the logic of handling the prime meridian which stays in getBoxShape from the logic of add boxes to the shape in addBoxes : addBoxes is called one time in normal case and two times for search area crossing the prime meridian (half by half)\n\nHope it better fits your need now",
            "date": "2010-04-03T15:58:30.429+0000",
            "id": 7
        },
        {
            "author": "Grant Ingersoll",
            "body": "bq. handles East AND West tiles when close to the prime meridian (either by 0 or by 180 values) where yours only catch East ones\n\nHow so?",
            "date": "2010-04-03T16:41:33.027+0000",
            "id": 8
        },
        {
            "author": "Nicolas Helleringer",
            "body": "{code}\n    if (longUpperRight < longLowerLeft) { // Box cross the 180 meridian\n      addBoxes(shape, ctp, latLowerLeft, longLowerLeft, latUpperRight, LatLng.LONGITUDE_DEGREE_RANGE / 2);\n      addBoxes(shape, ctp, latLowerLeft, -LatLng.LONGITUDE_DEGREE_RANGE / 2, latUpperRight, longUpperRight);\n    } else {\n      addBoxes(shape, ctp, latLowerLeft, longLowerLeft, latUpperRight, longUpperRight);\n{code}\n\nIf the search area cross the prime meridian we spilt the addBoxes call in two : one half East of the meridian, one half West to handle the jump from -180 degree to 180\nIf not we do a normal addBoxes call",
            "date": "2010-04-03T17:04:16.232+0000",
            "id": 9
        },
        {
            "author": "Grant Ingersoll",
            "body": "AFAICT, that is covered by the current code.",
            "date": "2010-04-03T17:17:27.468+0000",
            "id": 10
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Re checked and you are right.\n\nI read too fast your patch without the global code context.\nWith your fix the code is doing the right thing concerning the prime meridian.\n\nSo, mine should only be considered as a cosmetic one.\nIf you do no find that the logic is clearer with it, you can ignore it.",
            "date": "2010-04-03T17:20:14.511+0000",
            "id": 11
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Worked again around the code in CartesianPolyFilterBuilder and finally set up this test (attached).\n\nHere lies the difference between the two patchs : as I reworked all the logic I did change the code in getShapeLoop that you did not touch.\n\nMaybe it shall be adressed in another issue.",
            "date": "2010-04-06T12:14:02.098+0000",
            "id": 12
        },
        {
            "author": "Grant Ingersoll",
            "body": "Committed Nicolas' updates to trunk",
            "date": "2010-04-13T19:22:24.678+0000",
            "id": 13
        },
        {
            "author": "Grant Ingersoll",
            "body": "Nicolas,\n\nWhy the change in the best fit algorithm?  Do you have a reference to calculation of this?",
            "date": "2010-04-14T14:01:45.022+0000",
            "id": 14
        },
        {
            "author": "Nicolas Helleringer",
            "body": "What my code do :\n\nIt looks how many times you can fit the search diameter (2.0d * range) into the distance that will be split into longitudes range (I-e distanceUnit.earthCircumference()).\n\nAnd then it takes the first biggest level of Tier that will have a range just above the search diameter (int bestFit = (int) Math.ceil(log2(times));)\n\nThis way you ll have the better comprise betwenn  fetching the less number of boxes and not fetching too big boxes with too many documents in them.",
            "date": "2010-04-14T15:24:28.878+0000",
            "id": 15
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Summary tables :\n\n||Tile Level||TierLegnth||TierBoxes||TileXLength (miles)||\n|0|1|1|24902|\n|1|2|4|12451|\n|2|4|16|6225,5|\n|3|8|64|3112,75|\n|4|16|256|1556,375|\n|5|32|1024|778,1875|\n|6|64|4096|389,09375|\n|7|128|16384|194,546875|\n|8|256|65536|97,2734375|\n|9|512|262144|48,63671875|\n|10|1024|1048576|24,31835938|\n|11|2048|4194304|12,15917969|\n|12|4096|16777216|6,079589844|\n|13|8192|67108864|3,039794922|\n|14|16384|268435456|1,519897461|\n|15|32768|1073741824|0,75994873|\n\n||Radius (miles)||legacy bestFit||legacy bestFit TileLength||legacy bestFit max number of Box to fetch||new bestFit||new bestFit TileLength||new bestFit number of Box to fetch||\n|1|18|0,75994873|9|14|1,519897461|4|\n|5|16|0,75994873|64|12|6,079589844|4|\n|10|15|0,75994873|225|11|12,15917969|4|\n|25|13|3,039794922|100|9|48,63671875|4|\n|50|12|6,079589844|100|8|97,2734375|4|\n|100|11|12,15917969|100|7|194,546875|4|\n|250|10|24,31835938|144|6|389,09375|4|\n|500|9|48,63671875|144|5|778,1875|4|\n|1000|8|97,2734375|144|4|1556,375|4|\n|2500|7|194,546875|196|3|3112,75|4|\n|5000|6|389,09375|196|2|6225,5|4|\n|10000|5|778,1875|196|1|12451|4|\n",
            "date": "2010-04-14T16:42:06.177+0000",
            "id": 16
        },
        {
            "author": "Grant Ingersoll",
            "body": "Thanks, Nicolas.  To me, based on these values, the answer is to revert and then refactor.  \n\nAlso, is the 9 in the last column of the second table (radius 25) an outlier or a c & p error?  That seems really odd.",
            "date": "2010-04-14T17:15:38.921+0000",
            "id": 17
        },
        {
            "author": "Nicolas Helleringer",
            "body": "I do agree, it is odd.\n\nI shall go through the process again and watch where it comes from.",
            "date": "2010-04-14T17:38:56.502+0000",
            "id": 18
        },
        {
            "author": "Yonik Seeley",
            "body": "Hi Nicolas, I like the idea of reducing the number of tiles that need to be queried, but it does look like the current reduction might be a little aggressive for the default.  Perhaps we could have some sort of filtering accuracy parameter that could give more precise control over the trade-off?\n",
            "date": "2010-04-14T17:43:56.049+0000",
            "id": 19
        },
        {
            "author": "Nicolas Helleringer",
            "body": "hi Yonik,\n\nI do not aggre : as the 4 tiles requested go cover all the search area there is no gain in beeing less accurate.",
            "date": "2010-04-14T18:10:09.252+0000",
            "id": 20
        },
        {
            "author": "Yonik Seeley",
            "body": "Perhaps I'm misreading the table?  I had assumed that your new algorithm was often less selective (allowed more points through the filter) than the old.  Is this not the case?",
            "date": "2010-04-14T18:22:53.242+0000",
            "id": 21
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Yonik, \n\nIt is the case, but the points left out are for sure not in the search area.\n\nGrant,\n\nYou were right ! It was a c&p error ! As you can see in the above table 'TileLength' for Tier 9 is 48,63671875 not 24,31835938 and then the 'new bestFit number of Box to fetch' becomes ... 4 ! =)",
            "date": "2010-04-14T18:27:41.403+0000",
            "id": 22
        },
        {
            "author": "Grant Ingersoll",
            "body": "So, you're saying then that your approach only ever has to retrieve 4 boxes no matter the radius?  Do you have a reference URL to where we can read more about it?\n\nAlso, please edit your table to reflect the error",
            "date": "2010-04-14T19:53:33.307+0000",
            "id": 23
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Edit done.\n\nI am currently browsing to find a good reference.",
            "date": "2010-04-14T20:41:27.547+0000",
            "id": 24
        },
        {
            "author": "Grant Ingersoll",
            "body": "Reverted the last patch and the other related ones.  Let's have a discussion on the mailing list about coordinating all of this.  I'd like to see the patches be focused on solving the specific issues and then we can open up a new issue for refactoring this to make for pluggable best fit, etc.",
            "date": "2010-04-15T00:18:09.961+0000",
            "id": 25
        },
        {
            "author": "Robert Muir",
            "body": "reopening for possible 2.9.4/3.0.3 backport.\n",
            "date": "2010-10-29T13:15:24.294+0000",
            "id": 26
        },
        {
            "author": "Nicolas Helleringer",
            "body": "Robert,\n\nHere is the patch updated to work on rev 1035291\n\nValidating Unit Tests are included",
            "date": "2010-11-16T14:18:03.912+0000",
            "id": 27
        },
        {
            "author": "Uwe Schindler",
            "body": "Resolving again as this issue will not be backported to 2.9/3.0 branches.",
            "date": "2010-11-27T23:25:35.150+0000",
            "id": 28
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:11.059+0000",
            "id": 29
        }
    ],
    "component": "modules/spatial",
    "description": "Test case:  \nPoints all around the globe, plus two points at 0, 179.9 and 0,-179.9 (on each side of the meridian).  Then, do a Cartesian Tier filter on a point right near those two.  It will return all the points when it should just return those two.\n\nThe flawed logic is in the else clause below:\n{code}\nif (longX2 != 0.0) {\n\t\t//We are around the prime meridian\n\t\tif (longX == 0.0) {\n\t\t\tlongX = longX2;\n\t\t\tlongY = 0.0;\n        \tshape = getShapeLoop(shape,ctp,latX,longX,latY,longY);\n\t\t} else {//we are around the 180th longitude\n\t\t\tlongX = longX2;\n\t\t\tlongY = -180.0;\n\t\t\tshape = getShapeLoop(shape,ctp,latY,longY,latX,longX);\n\t}\n{code}\n\nBasically, the Y and X values are transposed.  This currently says go from longY (-180) all the way around  to longX which is the lower left longitude of the box formed.  Instead, it should go from the lower left long to -180.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2359",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "CartesianPolyFilterBuilder doesn't handle edge case around the 180 meridian",
    "systemSpecification": true,
    "version": "2.9, 2.9.1, 2.9.2, 3.0, 3.0.1"
}