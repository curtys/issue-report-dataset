{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "here is a patch that adds a ScorerContext to replace those two booleans. ScorerContext follows a \"copy on write\" pattern similar to a builder pattern that only modifies the context if the values actually change. Seems pretty straight forward so far.",
            "date": "2011-01-13T13:40:02.284+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "Looks good!\n\nI would make the ctor private and then use ScorerContext.default().x().y() as pattern (default returns the template). I like this design more :-)",
            "date": "2011-01-13T14:27:18.986+0000",
            "id": 1
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. I would make the ctor private and then use ScorerContext.default().x().y() as pattern (default returns the template). I like this design more \nJawohl! :) - Since default is a keyword in java I used ScorerContext#def() instead. I fixed some JDoc issues, made all ScorerContext ctors private and added a changes.txt entry\n\nseems like we are good to go",
            "date": "2011-01-13T14:38:05.314+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "+1 to commit, looks good.\n\nFor later we should fix BooleanQuery.explain() to use default context, too. topScorer=true is wrong for explain (but has no effect here).",
            "date": "2011-01-13T14:53:20.077+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "Committed revision 1058592.\n\nthanks uwe for the review",
            "date": "2011-01-13T14:59:52.296+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "Weight#scorer(AtomicReaderContext, boolean, boolean) is hard to extend if another boolean like \"needsScoring\" or similar flags / information need to be passed to Scorers. An immutable struct would make such an extension trivial / way easier. ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2865",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Pass a context struct to Weight#scorer instead of naked booleans",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}