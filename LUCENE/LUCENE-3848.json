{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "patch fixing the bug in WikipediaTokenizer.\n\nBut i think we just dont have good tests for the removers.\n\nIdeally for tests i think we should have a simple 'MockSynonymsFilter' that is juts stupid and slow and makes certain synonyms (maybe some multi-word) to use in testing.\n\nThen we can write tests to find and fix the bugs in the removingfilter.",
            "date": "2012-03-04T19:41:06.240+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Patch, adding a MockGraphTokenFilter we can use to randomly insert fake graph arcs...",
            "date": "2012-03-04T21:28:22.755+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "updated patch: I think its ready to commit.\n\nI didn't integrate Mike's nice MockGraphTokenFilter *yet* but will do this under a separate issue: its likely to expose a few bugs :)",
            "date": "2012-03-15T17:12:21.978+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "+1\n",
            "date": "2012-03-15T17:29:32.779+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "I think this is ready to go in, ill wait a bit.\n\nI didn't make any changes re: \"graph-restructuring\", though I still feel we should fix this, but it means\ndealing with backwards compatibility, etc.\n\nThe changes in this patch are backwards compatible, in the sense that consumers are already correcting \n'initial posInc=0' to posinc=1 anyway.\n",
            "date": "2012-03-15T20:21:34.161+0000",
            "id": 4
        },
        {
            "author": "Robert Muir",
            "body": "I opened LUCENE-3873 to integrate MockGraphTokenFilter into tests.",
            "date": "2012-03-16T14:29:07.794+0000",
            "id": 5
        }
    ],
    "component": "",
    "description": "This is meaningless for a tokenstream to start with posinc=0,\n\nIts also caused problems and hairiness in the indexer (LUCENE-1255, LUCENE-1542),\nand it makes senseless tokenstreams. We should add a check and fix any that do this.\n\nFurthermore the same bug can exist in removing-filters if they have enablePositionIncrements=false.\nI think this option is useful: but it shouldnt mean 'allow broken tokenstream', it just means we\ndon't add gaps. \n\nIf you remove tokens with enablePositionIncrements=false it should not cause the TS to start with\npositionincrement=0, and it shouldnt 'restructure' the tokenstream (e.g. moving synonyms on top of a different word).\nIt should just not add any 'holes'.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3848",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "basetokenstreamtestcase should fail if tokenstream starts with posinc=0",
    "systemSpecification": true,
    "version": ""
}