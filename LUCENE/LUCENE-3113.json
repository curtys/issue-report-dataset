{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "attached is a patch, the synonyms and shingles tests still fail.",
            "date": "2011-05-17T14:16:41.111+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "updated patch, fixing the bugs in Synonyms and ShingleFilter.\n\nalso, i found two more bugs: the ShingleAnalyzerWrapper was double-resetting, and the PrefixAndSuffixAwareTokenFilter was missing end() also\n",
            "date": "2011-05-17T14:58:17.257+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "I think this patch is ready to commit, i'll wait and see if anyone feels like reviewing it :)",
            "date": "2011-05-17T15:03:54.869+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "A quick check on the fixes in the implementations: all fine. I was just confused about PrefixAndSuffixAwareTF, but thats fine (Robert explained it to me - this Filters are very complicated from the code/class hierarchy design *g*).\n\nI did not verify the Tests, I assume its just dumb search-replacements.",
            "date": "2011-05-17T15:32:46.067+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Uwe, I think i'll open a followup issue to clean up the code about PrefixAndSuffixAwareTF. I don't like how tricky it is.\n",
            "date": "2011-05-17T16:15:10.493+0000",
            "id": 4
        },
        {
            "author": "Steve Rowe",
            "body": "+1\n\nbq. the ShingleAnalyzerWrapper was double-resetting\n\nYour patch just removes the reset call:\n\n{noformat}\n@@ -201,7 +201,6 @@\n       TokenStream result = defaultAnalyzer.reusableTokenStream(fieldName, reader);\n       if (result == streams.wrapped) {\n         /* the wrapped analyzer reused the stream */\n-        streams.shingle.reset(); \n       } else {\n         /* the wrapped analyzer did not, create a new shingle around the new one */\n         streams.wrapped = result;\n{noformat}\n\nbut inverting the condition would read better:\n\n{noformat}\n       TokenStream result = defaultAnalyzer.reusableTokenStream(fieldName, reader);\n-      if (result == streams.wrapped) {\n-        /* the wrapped analyzer reused the stream */\n-        streams.shingle.reset(); \n-      } else {\n-        /* the wrapped analyzer did not, create a new shingle around the new one */\n+      if (result != streams.wrapped) {\n+        // The wrapped analyzer did not reuse the stream. \n+        // Wrap the new stream with a new ShingleFilter.\n         streams.wrapped = result;\n         streams.shingle = new ShingleFilter(streams.wrapped);\n       }\n{noformat}\n",
            "date": "2011-05-17T18:40:36.817+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "thanks for reviewing Steven, I agree! I've made this change and will commit shortly.",
            "date": "2011-05-17T19:53:13.063+0000",
            "id": 6
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1104519, 1124242 (branch_3x)",
            "date": "2011-05-18T13:00:05.036+0000",
            "id": 7
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:11.585+0000",
            "id": 8
        }
    ],
    "component": "modules/analysis",
    "description": "In LUCENE-3064, we beefed up MockTokenizer with assertions, and I've switched over the analysis tests to use MockTokenizer for better coverage.\n\nHowever, this found a few bugs (one of which is LUCENE-3106):\n* incrementToken() after it returns false in CommonGramsQueryFilter, HyphenatedWordsFilter, ShingleFilter, SynonymFilter\n* missing end() implementation for PrefixAwareTokenFilter\n* double reset() in QueryAutoStopWordAnalyzer and ReusableAnalyzerBase\n* missing correctOffset()s in MockTokenizer itself.\n\nI think it would be nice to just fix all the bugs on one issue... I've fixed everything except Shingle and Synonym",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3113",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "fix analyzer bugs found by MockTokenizer",
    "systemSpecification": true,
    "version": ""
}