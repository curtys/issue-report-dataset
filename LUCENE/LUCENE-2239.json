{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "This patch adds documentation to NIOFSDirectory and provides a testcase triggering the behavior. this might be little out of date now but I thought I add it for completeness",
            "date": "2010-01-29T16:17:48.661+0000",
            "id": 0
        },
        {
            "author": "Mark Miller",
            "body": "IMO, unless we see more reports where this is causing an issue, we just leave things as they are by default, with javadoc explaining the issue. We can introduce a windows deletion policy that can be used if you need it, but I don't see why it would need to be used as a default. I don't think many Lucene threads are being interrupted out there - we have seen no other reports and its now the non windows default in both Lucene and Solr.",
            "date": "2010-01-29T16:44:44.265+0000",
            "id": 1
        },
        {
            "author": "Martin Blech",
            "body": "It is causing an issue in a JAX-RS application that uses Sun's Jersey reference implementation and is deployed on the Grizzly servlet container. Apparently, Grizzly's ThreadPool implemenation uses Thread.interrupt() extensively.",
            "date": "2010-05-13T08:50:45.000+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "By the way, seems like this affects MMapDirectory too.\n\nant test-core -Dtestcase=TestIndexWriter -Dtestmethod=testThreadInterruptDeadlock -Dtests.directory=MMapDirectory\n\n{noformat}\n    [junit] ------------- Standard Output ---------------\n    [junit] FAILED; unexpected exception\n    [junit] java.nio.channels.ClosedByInterruptException\n    [junit]     at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n    [junit]     at sun.nio.ch.FileChannelImpl.map(FileChannelImpl.java:772)\n{noformat}\n",
            "date": "2010-08-24T21:02:58.180+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. By the way, seems like this affects MMapDirectory too.\nAll AbstractInterruptibleChannel subclasses are affected unfortunately. We should at least document it in the java docs.\n\nsimon\n\n",
            "date": "2010-08-24T21:09:52.393+0000",
            "id": 4
        },
        {
            "author": "Simon Willnauer",
            "body": "here is a new patch that add the essential information to the NIOFSDirectory and MMapDirectory.\nI wonder if we should refer to this issue in the doc, IMO a link is not necessary. I removed the TestCase from the previous patch since it was only to reproduce the problem in isolation.\n",
            "date": "2010-08-25T20:25:47.122+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Additionally i noticed that several quirks in the implementations (NIOFS, MMap, etc) are mentioned in FSDirectory's javadocs.\n\nThis is something to consider: unless someone really digs thru the documentation, they might think they dont care about\nSimpleFS versus NIOFS and stick with FSDirectory.open.\n\nThen their application might work on windows (perhaps while being developed) but fail on unix (perhaps in production).\nSo it might be nice to put a small mention in the FSDirectory docs too.\n",
            "date": "2010-08-25T20:47:01.646+0000",
            "id": 6
        },
        {
            "author": "Simon Willnauer",
            "body": "Good point Robert  - instead of duplicating documentation we could recommend users to read the implementation specific documentation before using FSDirector#open().\n\nsomething like that:\n\nCurrently this returns {@link NIOFSDirectory} on non-Windows JREs and {@link SimpleFSDirectory} on Windows. Since these directory implementation have slightly different behavior and limitations it is recommended to consult the implementation specific documentation for the platform your application is running on.\n\nsimon",
            "date": "2010-08-25T21:34:30.610+0000",
            "id": 7
        },
        {
            "author": "Simon Willnauer",
            "body": "This patch adds a heads-up to FSDirectory to make uses aware of limitations for certain platforms.",
            "date": "2010-08-26T15:38:06.974+0000",
            "id": 8
        },
        {
            "author": "Simon Willnauer",
            "body": "Committed in revision 989785\n\nI think we should backport too",
            "date": "2010-08-26T15:56:52.236+0000",
            "id": 9
        },
        {
            "author": "Simon Willnauer",
            "body": "Backported this  to 2.9 (rev. 991551), 3.0 (rev. 991548) and 3.x (rev. 989785)\n",
            "date": "2010-09-01T14:36:22.555+0000",
            "id": 10
        }
    ],
    "component": "core/store",
    "description": "I created this issue as a spin off from http://mail-archives.apache.org/mod_mbox/lucene-java-dev/201001.mbox/%3Cf18c9dde1001280051w4af2bc50u1cfd55f85e50914f@mail.gmail.com%3E\n\nWe should decide what to do with NIOFSDirectory, if we want to keep it as the default on none-windows platforms and how we want to document this.\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2239",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "OTHER",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Revise NIOFSDirectory and its usage due to NIO limitations on Thread.interrupt",
    "systemSpecification": true,
    "version": "2.4, 2.4.1, 2.9, 2.9.1, 3.0"
}