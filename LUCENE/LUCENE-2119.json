{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch attached.  In PQ if incoming size is Integer.MAX_VALUE, I don't try to +1 it.  And, in IndexSearcher.search, when I create PQ, I now use min(nDocs, maxDoc()).  I'll commit shortly.",
            "date": "2009-12-06T11:22:49.222+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Paul!",
            "date": "2009-12-06T11:41:49.730+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "backport",
            "date": "2010-05-30T12:35:56.204+0000",
            "id": 2
        }
    ],
    "component": "core/search",
    "description": "Note that this is a nonsense value to pass in, since our PQ impl allocates the array up front.\n\nIt's because PQ takes 1+ this value (which wraps to -1), and attempts to allocate that.  We should bounds check it, and drop PQ size by one in this case.\n\nBetter, maybe: in IndexSearcher, if that n is ever > maxDoc(), set it to maxDoc().\n\nThis trips users up fairly often because they assume our PQ doesn't statically pre-allocate (a reasonable assumption...).",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2119",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "If you pass Integer.MAX_VALUE as 2nd param to search(Query, int) you hit unexpected NegativeArraySizeException",
    "systemSpecification": true,
    "version": ""
}