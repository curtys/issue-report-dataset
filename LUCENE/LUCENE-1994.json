{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "I believe this was the original behavior of EnwikiDocMaker. But anyway, I think that if getNextDocData will be synchronized, this should do it?",
            "date": "2009-10-19T15:06:47.061+0000",
            "id": 0
        },
        {
            "author": "Mark Miller",
            "body": "bq. I believe this was the original behavior of EnwikiDocMaker\n\nProbably - but we should make it work right?\n\nbq. But anyway, I think that if getNextDocData will be synchronized, this should do it?\n\nThats actually what I did locally as a quick fix - seems to work out alright.",
            "date": "2009-10-19T15:18:04.915+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "Yes I agree (to both comments). Basically for a ContentSource to be supported by parallel tasks, its getNextDocData should be made synchronized, or it finds another way to sync on the important stuff (for example TrecContentSource).",
            "date": "2009-10-19T15:21:07.777+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "I think this also affects SortableSingleDocSource (I'm hitting that on LUCENE-1997).  I think the problem is in DocMaker -- if reuseFields is false, it's always using localDocState, which isn't thread-safe.",
            "date": "2009-10-27T23:12:22.369+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Attached patch, making EnwikiContentSource.getNextDocData synchronized, and fixing the doc.reuse.fields=false case to still be thread safe.",
            "date": "2009-10-28T09:11:47.502+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Mike, reuseFields is now used only in this line:\n{code}\nfinal Document doc = reuseFields ? ds.doc : new Document();\n{code}\nShouldn't Document also be per-thread (i.e., ThreadLocal), same as DocState? Otherwise, if reuse.fields = true, the same Document object will be shared by multiple threads, right?\n\nAlso, getDocState() now passes reuseFields = true to DocState always, and I think it should pass reuseFields itself. Since before if reuseFields was false, localDocState was used.",
            "date": "2009-10-28T09:36:27.341+0000",
            "id": 5
        },
        {
            "author": "Shai Erera",
            "body": "bq. Shouldn't Document also be per-thread\n\nSorry, I missed that. Document is per thread, since it's obtained from DocState, which is per-thread.",
            "date": "2009-10-28T09:40:12.292+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "bq. Also, getDocState() now passes reuseFields = true to DocState always\n\nAhh good catch, I'll fix that!",
            "date": "2009-10-28T09:50:04.071+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Shai & Mark!",
            "date": "2009-10-28T10:06:37.361+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Will back-port to 2.9.x...",
            "date": "2009-10-29T10:27:29.814+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "Bulk close all 2.9.1 issues.",
            "date": "2009-11-07T14:57:30.698+0000",
            "id": 10
        }
    ],
    "component": "modules/benchmark",
    "description": null,
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1994",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "EnwikiConentSource does not work with parallel tasks",
    "systemSpecification": true,
    "version": "2.9"
}