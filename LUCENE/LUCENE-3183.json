{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "the seed no longer works, due to some test changes, but here's an updated one:\n\nant test-core -Dtestcase=TestIndexWriter -Dtestmethod=testEmptyFieldName -Dtests.seed=7003434815696736420:-2234731277277241078 -Dtests.codec=PreFlex -Dtests.multiplier=3",
            "date": "2011-06-09T02:27:19.889+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "this bug only affects the preflexcodec in trunk (not 3.x), and only with empty field name and tii=1\n\n",
            "date": "2011-06-09T02:46:23.691+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "i tried to debug this a little last night... its some off-by-one in reset() (this shoves a negative ord into the terms dictionary cache, which jacks things up later)\n\ntest passes on 3.x, also generated 3.x index and checkindex'd it with trunk to verify that the problem isn't in Preflex-RW but is actually in PreFlex-R... but I didn't manage to come up with any non-hacky solution for the off-by-one...",
            "date": "2011-06-09T12:41:10.675+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Patch.\n\nTurns out this is a long standing corner-case bug... the problem only happens if you seek to the empty term (field=\"\" and text=\"\"), and you use termsIndexInterval=1.",
            "date": "2011-06-09T14:45:10.748+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "nice, is there an alternative to if per-scan()?\n\nlike, my hack (not sure if its correct) was to never add -1 to terms cache... so this would affect less queries (e.g. rangequeries and MTQs) since they bypass the cache anyway?",
            "date": "2011-06-09T15:02:22.131+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "bq. nice, is there an alternative to if per-scan()?\n\nI think you're idea should work; the bug is really in STE.scanTo, but, since we only call this method in 2 places, and these classes are package private in 3.x, and I think it's unlikely apps will directly use STE from PreFlex codec on trunk, I think we can work around it in these places.  You're right this saves an if in many cases... I'll put comments explaining it.",
            "date": "2011-06-09T15:21:55.546+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "here's my hack patch",
            "date": "2011-06-09T15:23:13.215+0000",
            "id": 6
        },
        {
            "author": "Michael McCandless",
            "body": "Patch using Robert's idea... I think it's ready to commit.",
            "date": "2011-06-09T15:25:17.629+0000",
            "id": 7
        },
        {
            "author": "Robert Muir",
            "body": "+1, i think the comments are definitely necessary... this code is tricky :)",
            "date": "2011-06-09T15:30:32.393+0000",
            "id": 8
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks selckin!  Keep feeding that awesome random-number-generator you've got over there!!",
            "date": "2011-06-09T15:42:15.261+0000",
            "id": 9
        },
        {
            "author": "Robert Muir",
            "body": "I agree, i guestimated (running -Dtests.iter=10000 and seeing 5 fails) the chance of finding this seed is like 1-in-2000!!!!!",
            "date": "2011-06-09T15:45:40.504+0000",
            "id": 10
        },
        {
            "author": "Michael McCandless",
            "body": "I think the hack is actually correct, but maybe change it to check termEnum.position >= 0?\n\nSo this was a case we missed from LUCENE-3183 (maybe there are more!?), where we decided for the corner case of empty field and term text, the caller must handle that the returned enum is unpositioned (in exchange for not adding an if per next).\n\nAnd maybe add the same comment about LUCENE-3183 on top of that logic?",
            "date": "2011-10-24T16:07:07.989+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "Woops, above comment was meant for LUCENE-3526.",
            "date": "2011-10-24T16:25:20.091+0000",
            "id": 12
        }
    ],
    "component": "",
    "description": "trunk: r1133486 \n{code}\n    [junit] Testsuite: org.apache.lucene.index.TestIndexWriter\n    [junit] Testcase: testEmptyFieldName(org.apache.lucene.index.TestIndexWriter):      Caused an ERROR\n    [junit] CheckIndex failed\n    [junit] java.lang.RuntimeException: CheckIndex failed\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:158)\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:144)\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:477)\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testEmptyFieldName(TestIndexWriter.java:857)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1362)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1280)\n    [junit] \n    [junit] \n    [junit] Tests run: 39, Failures: 0, Errors: 1, Time elapsed: 17.634 sec\n    [junit] \n    [junit] ------------- Standard Output ---------------\n    [junit] CheckIndex failed\n    [junit] Segments file=segments_1 numSegments=1 version=FORMAT_4_0 [Lucene 4.0]\n    [junit]   1 of 1: name=_0 docCount=1\n    [junit]     codec=SegmentCodecs [codecs=[PreFlex], provider=org.apache.lucene.index.codecs.CoreCodecProvider@3f78807]\n    [junit]     compound=false\n    [junit]     hasProx=true\n    [junit]     numFiles=8\n    [junit]     size (MB)=0\n    [junit]     diagnostics = {os.version=2.6.39-gentoo, os=Linux, lucene.version=4.0-SNAPSHOT, source=flush, os.arch=amd64, java.version=1.6.0_25, java.vendor=Sun Microsystems Inc.}\n    [junit]     no deletions\n    [junit]     test: open reader.........OK\n    [junit]     test: fields..............OK [1 fields]\n    [junit]     test: field norms.........OK [1 fields]\n    [junit]     test: terms, freq, prox...ERROR: java.lang.ArrayIndexOutOfBoundsException: -1\n\n    [junit] java.lang.ArrayIndexOutOfBoundsException: -1\n    [junit]     at org.apache.lucene.index.codecs.preflex.TermInfosReader.seekEnum(TermInfosReader.java:212)\n    [junit]     at org.apache.lucene.index.codecs.preflex.TermInfosReader.seekEnum(TermInfosReader.java:301)\n    [junit]     at org.apache.lucene.index.codecs.preflex.TermInfosReader.get(TermInfosReader.java:234)\n    [junit]     at org.apache.lucene.index.codecs.preflex.TermInfosReader.terms(TermInfosReader.java:371)\n    [junit]     at org.apache.lucene.index.codecs.preflex.PreFlexFields$PreTermsEnum.reset(PreFlexFields.java:719)\n    [junit]     at org.apache.lucene.index.codecs.preflex.PreFlexFields$PreTerms.iterator(PreFlexFields.java:249)\n    [junit]     at org.apache.lucene.index.PerFieldCodecWrapper$FieldsReader$FieldsIterator.terms(PerFieldCodecWrapper.java:147)\n    [junit]     at org.apache.lucene.index.CheckIndex.testTermIndex(CheckIndex.java:610)\n    [junit]     at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:495)\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:154)\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:144)\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:477)\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testEmptyFieldName(TestIndexWriter.java:857)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1362)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1280)\n    [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:422)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:931)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:758)\n    [junit]     test: stored fields.......OK [0 total field count; avg 0 fields per doc]\n    [junit]     test: term vectors........OK [0 total vector count; avg 0 term/freq vector fields per doc]\n    [junit] FAILED\n\n    [junit]     WARNING: fixIndex() would remove reference to this segment; full exception:\n    [junit] java.lang.RuntimeException: Term Index test failed\n    [junit]     at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:508)\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:154)\n    [junit]     at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:144)\n    [junit]     at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:477)\n    [junit]     at org.apache.lucene.index.TestIndexWriter.testEmptyFieldName(TestIndexWriter.java:857)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1362)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1280)\n    [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:422)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:931)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:758)\n    [junit] \n    [junit] WARNING: 1 broken segments (containing 1 documents) detected\n    [junit] \n    [junit] ------------- ---------------- ---------------\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestIndexWriter -Dtestmethod=testEmptyFieldName -Dtests.seed=-3770357642070518646:-3121175410586002489 -Dtests.multiplier=3\n    [junit] NOTE: test params are: codec=PreFlex, locale=zh, timezone=Indian/Antananarivo\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestDateTools, TestDeletionPolicy, TestDocsAndPositions, TestFlex, TestIndexReaderCloneNorms, TestIndexWriter]\n    [junit] NOTE: Linux 2.6.39-gentoo amd64/Sun Microsystems Inc. 1.6.0_25 (64-bit)/cpus=8,threads=1,free=85972280,total=232521728\n    [junit] ------------- ---------------- ---------------\n    [junit] TEST org.apache.lucene.index.TestIndexWriter FAILED\n{code}",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3183",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "TestIndexWriter failure: AIOOBE",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}