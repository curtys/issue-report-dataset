{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Simple patch... I'll commit shortly.",
            "date": "2010-10-11T13:19:33.041+0000",
            "id": 0
        },
        {
            "author": "Grant Ingersoll",
            "body": "Bulk close for 3.1",
            "date": "2011-03-30T15:50:22.052+0000",
            "id": 1
        }
    ],
    "component": "",
    "description": "It has this:\n{noformat}\n  @Override\n  public float score() throws IOException {\n    int doc = subScorers[0].docID();\n    float[] sum = { subScorers[0].score() }, max = { sum[0] };\n    int size = numScorers;\n    scoreAll(1, size, doc, sum, max);\n    scoreAll(2, size, doc, sum, max);\n    return max[0] + (sum[0] - max[0]) * tieBreakerMultiplier;\n  }\n{noformat}\n\nThey are thread-private arrays so possibly/likely JVM can optimize this case (allocate only on the stack) but still I think instead it should have private instance vars for the score/max.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2695",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "DisjunctionMaxScorer allocates 2 arrays per scored doc",
    "systemSpecification": true,
    "version": ""
}