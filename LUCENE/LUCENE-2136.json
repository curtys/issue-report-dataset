{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch for trunk.",
            "date": "2009-12-08T11:45:10.011+0000",
            "id": 0
        },
        {
            "author": "Uwe Schindler",
            "body": "+1\nlooks good and is really simple.",
            "date": "2009-12-08T13:03:47.831+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "I have flex version coming shortly, then I'll commit.",
            "date": "2009-12-08T13:10:46.987+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Flex version of patch.  I only patched flex APIs here.... on next merge from trunk we'll pull fix for non-flex over.",
            "date": "2009-12-08T13:19:48.523+0000",
            "id": 3
        }
    ],
    "component": "core/index",
    "description": "Related to LUCENE-2130....\n\nEven though we've switched to segment-based searching, there are still times when the Term/sEnum is used against the top-level reader.  I think Solr does this, and from LUCENE-2130, certain rewrite modes of MTQ will do this as well.\n\nCurrently, on an optimized index, MTQ is still using a PQ to present the terms, which is silly because this just adds a sizable amount of overhead.  In such cases we should simply delecate to the single segment.\n\nNote that the single segment can have deletions, and we should still delegate.  Ie, the index need not be optimized, just have a single segment.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2136",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "MultiReader should not use PQ for its Term/sEnum if it has only 1 reader",
    "systemSpecification": true,
    "version": ""
}