{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "\nbq. I think its best to just change the defaults for this query, since it was so aweful before. We can add notes in migrate.txt that if you care about using the old values, then you should provide them explicitly, and you will get the same results!\n+1 \n\nThanks robert for bringing this up. Changes to the queryparsers look good to me I only have one comment about the harmony code, could you put the svn path and revision into a comment so we can track possible changes later more easily? I personally think moving to 1.6 is far away :)\n\n\nbq. I propose:\n\n+1 to all the proposals \n",
            "date": "2010-09-25T08:45:25.844+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "This looks great!  I'm always confused by the fuzzy distance measure (when it's ~X where X < 1).\n\nYou needed that nextAfter method to ensure that the truncation used when computing initialMaxDistance always \"inverts\" correctly, for the X >= 1.0 case?",
            "date": "2010-09-25T10:01:13.588+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "bq. could you put the svn path and revision into a comment so we can track possible changes later more easily?\n\ngreat idea... i didnt mean to forget it: i put it in my local.\nhttp://svn.apache.org/viewvc/harmony/enhanced/java/branches/java6/classlib/modules/luni/src/main/java/java/lang/StrictMath.java\n\nbq. You needed that nextAfter method to ensure that the truncation used when computing initialMaxDistance always \"inverts\" correctly, for the X >= 1.0 case?\n\nright, our fuzzy's scaling is wierd. and it compares with '>'. so if ed=2 computes to 0.5, we have to nudge the float a bit, because minSimilarity is non-inclusive.",
            "date": "2010-09-25T10:09:34.157+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "here's an updated patch, i think this is ready to commit.\n\n* use integer calculations internally to avoid the tricky float stuff\n* i added tests for the case where the edit distance is greater than the word.\n  previously, it was not possible to issue these type of queries, as noted in the enum\n{noformat}\n      // this will return less than 0.0 when the edit distance is\n      // greater than the number of characters in the shorter word.\n      // but this was the formula that was previously used in FuzzyTermEnum,\n      // so it has not been changed (even though minimumSimilarity must be\n      // greater than 0.0)\n{noformat}\n* i removed a TODO, so the linear enum gets an optimization from the priority queue,\n  in that it uses the updated maxEdits to quickly reject too long/too short terms.\n",
            "date": "2010-09-28T13:50:30.797+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Patch looks great Robert!",
            "date": "2010-09-28T14:29:13.983+0000",
            "id": 4
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1002214",
            "date": "2010-09-28T15:12:02.449+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "i missed some things in the contrib/queryparser when doing this.",
            "date": "2010-10-20T01:53:12.552+0000",
            "id": 6
        },
        {
            "author": "Robert Muir",
            "body": "Committed revision 1024498 for the contrib parsers... hopefully I don't find any more I missed!",
            "date": "2010-10-20T02:14:06.111+0000",
            "id": 7
        },
        {
            "author": "Francisco Alvarez",
            "body": "The Fuzzy Search functionality has been dramatically limited with this new implementation.\n\nBefore it was possible to search with edit distances higher than 2, which is really necessary in many situations.\n\nWe have tried to increase the MAXIMUM_SUPPORTED_DISTANCE value but got the following error:\n\njava.lang.NullPointerException\n     at org.apache.lucene.util.automaton.UTF32ToUTF8.convert(UTF32ToUTF8.java:259)\n     at org.apache.lucene.util.automaton.CompiledAutomaton.<init>(CompiledAutomaton.java:163)\n     at org.apache.lucene.search.FuzzyTermsEnum.initAutomata(FuzzyTermsEnum.java:182)\n     at org.apache.lucene.search.FuzzyTermsEnum.getAutomatonEnum(FuzzyTermsEnum.java:153)\n     at org.apache.lucene.search.FuzzyTermsEnum.maxEditDistanceChanged(FuzzyTermsEnum.java:217)\n\nWe need a solution for fuzzy searches higher than 2 edit distances to keep consistent behaviour with Lucene 3.x\n\n",
            "date": "2012-09-13T09:02:39.581+0000",
            "id": 8
        },
        {
            "author": "Uwe Schindler",
            "body": "Hi Francisco: The core FuzzyQuery does not support edit distances > 2, because the automatons used for this would be too big and slow. If you really want distances > 2, use http://lucene.apache.org/core/4_0_0-BETA/sandbox/org/apache/lucene/sandbox/queries/SlowFuzzyQuery.html from the sandbox module (lucene-sandbox.jar). This one is the same algorithm as the old 3.x FuzzyQuery (and is as slow).",
            "date": "2012-09-13T09:17:05.694+0000",
            "id": 9
        },
        {
            "author": "Francisco Alvarez",
            "body": "I see, thanks for your quick reply!",
            "date": "2012-09-13T10:02:18.784+0000",
            "id": 10
        }
    ],
    "component": "core/search",
    "description": "We worked a lot on FuzzyQuery, but you need to be a rocket scientist to ensure good results.\n\nThe main problem is that the default distance is 0.5f, which doesn't take into account the length of the string.\nTo add insult to injury, the default number of expansions is 1024 (traditionally from BooleanQuery maxClauseCount)\n\nI propose:\n* The syntax of FuzzyQuery is enhanced, so that you can specify raw edits too: such as foobar~2 (all terms within 2 levenshtein edits of foobar). Previously if you specified any amount >=1, you got IllegalArgumentException, so this won't break anyone. You can still use foobar~0.5, and it works just as before\n* The default for minimumSimilarity then becomes LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE, which is 2. This way if you just do foobar~, its always fast.\n* The size of the priority queue is reduced by default from 1024 to a much more reasonable value: 50. This is what FuzzyLikeThis uses.\n\nI think its best to just change the defaults for this query, since it was so aweful before. We can add notes in migrate.txt that if you care about using the old values, then you should provide them explicitly, and you will get the same results!\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2667",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Fix FuzzyQuery's defaults, so its fast.",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}