{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "here is a patch that merges sorted docvalues without loading into main memory. This patch remaps the ordinals, prunes \"unreferenced\" ords during merge and streams the new sorted datastructure into the new segment without loading into memory. Yet, there is still memory used to remap ords etc. but far less than what it used to require. \n\nWe also don't need to hash and later sort the merged values again during merge since they are already sorted.",
            "date": "2011-10-11T15:23:23.620+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "\nWow very impressive!\n\nSo now we don't load any of the byte[] nor ord data for the subs\nduring merging (we use the new DirectSource); we only allocate the ord\nre-mapping per segment, and docToOrd array for the merged segment.\nVery nice!\n\nPatch looks great.  Only a couple tiny things:\n      \n  * In SortedBytesMergeUtils.createOrdMapping, for the deletes case, I\n    think you can move the {{int ord = currentSlice.source.ord(j)}} inside\n    the if?  Ie we don't need to pull the ord unless doc is still live.\n\n  * Typo in SortedBytesMergeUtils: mapps -> maps\n",
            "date": "2011-10-11T16:18:16.277+0000",
            "id": 1
        },
        {
            "author": "Simon Willnauer",
            "body": "next iteration, lots of cleanups & code simplification. Fixed spelling issues etc. I think we are close here.\n",
            "date": "2011-10-11T18:33:45.192+0000",
            "id": 2
        },
        {
            "author": "Simon Willnauer",
            "body": "committed in rev. 1182240 - thanks mike for reviewing",
            "date": "2011-10-12T07:34:29.041+0000",
            "id": 3
        }
    ],
    "component": "core/index",
    "description": "Currently SortedBytes are loaded into memory during merge which could be a potential trap. Instead of loading them into Heap memory we can merge those sorted values with much smaller memory and without loading all values into ram.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3507",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Improve Memory Consumption for merging DocValues SortedBytes variants",
    "systemSpecification": true,
    "version": "4.0-ALPHA"
}