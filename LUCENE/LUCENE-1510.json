{
    "comments": [
        {
            "author": "Robert Newson",
            "body": "\nTest case to demonstrate NPE.",
            "date": "2009-01-02T16:10:21.188+0000",
            "id": 0
        },
        {
            "author": "Karl Wettin",
            "body": "Thanks for the report Robert!\n\nI've committed a fix in revision 732661. Please check it out and let me know how it works for you. There was a bit of discrepancies between how the InstantiatedIndexReader handled null norms compared to a SegmentReader. I think these problems are fixed now.\n\n ",
            "date": "2009-01-08T09:33:25.833+0000",
            "id": 1
        },
        {
            "author": "Robert Newson",
            "body": "Looks good to me. I wonder if you should add;\n\nprivate static final byte[] EMPTY = new byte[0];\n\nand refer to that, as your todo suggests?\n\n",
            "date": "2009-01-08T12:29:38.620+0000",
            "id": 2
        }
    ],
    "component": "modules/other",
    "description": "\nWhen using InstantiatedIndexReader under a MultiReader where the other Reader contains documents, a NullPointerException is thrown here;\n\n public void norms(String field, byte[] bytes, int offset) throws IOException {\n    byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(field);\n    System.arraycopy(norms, 0, bytes, offset, norms.length);\n  }\n\nthe 'norms' variable is null. Performing the copy only when norms is not null does work, though I'm sure it's not the right fix.\n\njava.lang.NullPointerException\n\tat org.apache.lucene.store.instantiated.InstantiatedIndexReader.norms(InstantiatedIndexReader.java:297)\n\tat org.apache.lucene.index.MultiReader.norms(MultiReader.java:273)\n\tat org.apache.lucene.search.TermQuery$TermWeight.scorer(TermQuery.java:70)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:131)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:112)\n\tat org.apache.lucene.search.Searcher.search(Searcher.java:136)\n\tat org.apache.lucene.search.Searcher.search(Searcher.java:146)\n\tat org.apache.lucene.store.instantiated.TestWithMultiReader.test(TestWithMultiReader.java:41)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat junit.framework.TestCase.runTest(TestCase.java:164)\n\tat junit.framework.TestCase.runBare(TestCase.java:130)\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\n\tat junit.framework.TestResult.run(TestResult.java:109)\n\tat junit.framework.TestCase.run(TestCase.java:120)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:230)\n\tat junit.framework.TestSuite.run(TestSuite.java:225)\n\tat org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1510",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "InstantiatedIndexReader throws NullPointerException in norms() when used with a MultiReader",
    "systemSpecification": true,
    "version": "2.4"
}