{
    "comments": [
        {
            "author": "Yonik Seeley",
            "body": "+1",
            "date": "2009-12-10T21:05:42.507+0000",
            "id": 0
        },
        {
            "author": "Earwin Burrfoot",
            "body": "+1",
            "date": "2009-12-11T19:19:01.251+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "backport",
            "date": "2010-05-30T12:29:23.115+0000",
            "id": 2
        },
        {
            "author": "Koji Sekiguchi",
            "body": "{quote}\nI think we should simply remove the test, ie, if you have more terms\nthan docs then the terms simply overwrite one another.\n{quote}\nI think the remove still throws unhandled exception (AIOOBE)?",
            "date": "2010-06-07T01:07:04.930+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I think the remove still throws unhandled exception (AIOOBE)?\n\nDuh, right!\n\nI'm not sure what I was smoking when I did this... the fix makes the exception worse since you now get a cryptic AIOOBE instead of a RuntimeException explaining what's wrong.",
            "date": "2010-06-18T22:12:47.158+0000",
            "id": 4
        },
        {
            "author": "Uwe Schindler",
            "body": "When does it throw AIOOBE (have not tested it...)? For me the code looked fine, too, so I don't think Mike was smoking something. :-)",
            "date": "2010-06-19T06:38:38.266+0000",
            "id": 5
        },
        {
            "author": "Uwe Schindler",
            "body": "After a coffee i have seen the problem, too - stupoid :(\n\nHere is the fix for 3.x (also 3.0 and 2.9) - in trunk the fix is not needed, as there are growable arrays. Maybe we should add a simple test to all branches!\n\n",
            "date": "2010-06-19T07:11:20.459+0000",
            "id": 6
        },
        {
            "author": "Uwe Schindler",
            "body": "Here patch with test for 3.x and before. Trunk patch only contains test, which passes.",
            "date": "2010-06-19T08:15:32.431+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Uwe!\n\nSo your fix avoids any exception altogether.  On 3x, you just stop\nloading when we hit a termOrd > number of docs.  On trunk, we keep\nloading, simply growing the array as needed.\n\nI'm torn on what the best disposition here is.  This API should only\nbe used on single-token (per doc) fields, so this handling we're\nadding/fixing is about how to handle the misuse of the API.\n\nNeither solution is great -- throwing an exception is nasty since you\ncould be fine for some time and then only on indexing enough docs,\nperhaps well into production, trip the exception.  But then silently\npretending nothing is wrong is also not great because the app then has\nno clue.\n\nReally this'd be a great time to use a logging framework -- we'd drop\na error, and then not throw an exception.\n\nNet/net I think your solution (don't throw an exception) is the lesser\nevil at this time, so I think we should go with that.\n\nBut: I think we should also fix trunk?  Ie, if hit termOrd > numDocs,\nsilently break, instead of trying to grow the array.  Because now (on\ntrunk) if you try to load a DocTermsIndex on a large tokenized text\nfield in a large index you'll (try to) use insane amounts of memory...\n\n",
            "date": "2010-06-19T09:08:43.433+0000",
            "id": 8
        },
        {
            "author": "Uwe Schindler",
            "body": "Committed in trunk, 3x, 3.0, 2.9 branches.\n\nTrunk is still missing the escape-branch when term count exceeds doc count.",
            "date": "2010-06-24T10:42:38.783+0000",
            "id": 9
        },
        {
            "author": "Michael McCandless",
            "body": "Patch to fix trunk to stop loading when number of terms > maxDoc.",
            "date": "2010-06-24T11:10:22.370+0000",
            "id": 10
        }
    ],
    "component": "core/search",
    "description": "Spinoff of LUCENE-2133/LUCENE-831.\n\nCurrently FieldCache cannot handle more than one value per field.\nWe may someday want to fix that... but until that day:\n\nFieldCache.getStringIndex currently does a simplistic check to try to\ncatch when you've accidentally allowed more than one term per field,\nby testing if the number of unique terms exceeds the number of\ndocuments.\n\nThe problem is, this is not a perfect check, in that it allows false\nnegatives (you could have more than one term per field for some docs\nand the check won't catch you).\n\nFurther, the exception thrown is the unchecked RuntimeException.\n\nSo this means... you could happily think all is good, until some day,\nwell into production, once you've updated enough docs, suddenly the\ncheck will catch you and throw an unhandled exception, stopping all\nsearches [that need to sort by this string field] in their tracks.\nIt's not gracefully degrading.\n\nI think we should simply remove the test, ie, if you have more terms\nthan docs then the terms simply overwrite one another.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2142",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "FieldCache.getStringIndex should not throw exception if term count exceeds doc count",
    "systemSpecification": true,
    "version": ""
}