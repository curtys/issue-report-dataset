{
    "comments": [
        {
            "author": "Yonik Seeley",
            "body": "That looks like Solr syntax.  The Lucene QueryParser doesn't support open-ended range queries.",
            "date": "2007-09-11T13:04:13.385+0000",
            "id": 0
        },
        {
            "author": "Jonas Gorski",
            "body": "But if it doesn't support them, shouldn't it throw an ParseException? And why does \"[* TO x]\" work? \nThat looks inconsistent in behaviour to me.",
            "date": "2007-09-11T13:21:26.202+0000",
            "id": 1
        },
        {
            "author": "Yonik Seeley",
            "body": "It doesn't support them in that it has no special syntax to specify an open endpoint.  So * is a literal *, and is a valid endpoint for a range query (hence no exception). \n\nFor your date strings, you could use something like \"0\" and \"z\" for your endpoints.\n",
            "date": "2007-09-11T13:28:14.566+0000",
            "id": 2
        },
        {
            "author": "Luis Alves",
            "body": "I propose to improve the syntax to allow the following\n\n\"date>1990\"\n\"date<1990\"\n\"date=1990\"\n\"date>=1990\"\n\"date<=1990\"\n\nWhat do you guys think?\n\nWe probably could do it at same time we implement LUCENE-1823\n",
            "date": "2009-08-25T07:50:12.017+0000",
            "id": 3
        },
        {
            "author": "Luis Alves",
            "body": "The fix I propose, will only be fixed in the new queryparser implementation.",
            "date": "2009-08-25T07:55:19.692+0000",
            "id": 4
        },
        {
            "author": "Adriano Crestani",
            "body": "The patch adds open ended range query to oal.queryParser.QueryParser. By default it's disabled and may be enabled invoking setEnableOpenEndedRangeQueries. I also added the capability to redefine the open ended token, the default is '*'.\n\nI also added some test cases. ",
            "date": "2009-09-22T03:01:49.913+0000",
            "id": 5
        },
        {
            "author": "Yonik Seeley",
            "body": "FYI, this last patch has the same issue as Solr does, described in SOLR-2189.\nI'm going to take a quick crack at fixing it in the QP, before getRangeQuery() is called.",
            "date": "2010-10-22T21:36:46.042+0000",
            "id": 6
        },
        {
            "author": "Yonik Seeley",
            "body": "Here's a draft patch (no tests yet, so I don't know if it works).\nBut the proposal is simple: * in a range query would be an open end.\n\"*\" or \\* would be ways to represent a literal asterisk instead of an open end.\nThe QP will now pass null for an open end to getRangeQuery().  This will match\nthe constructors on our actual range query objects.",
            "date": "2010-10-22T22:04:08.024+0000",
            "id": 7
        },
        {
            "author": "Yonik Seeley",
            "body": "OK, here's the final patch - adds a few tests and changes TermRangeQuery.toString() to output \\* for a literal asterisk.",
            "date": "2010-10-22T22:21:25.010+0000",
            "id": 8
        },
        {
            "author": "Masoud",
            "body": "Is this a fix just for the date fields, or does it work for all fields, for example will   Author:[* TO *]    work to get all Authors that have something in them  (and also, query like  *:* -Author:[* TO *]   to get all records that are missing the Author field?)\n\nAny idea what version of Lucene this will be included with and when it will be released?\n",
            "date": "2010-11-10T23:42:45.937+0000",
            "id": 9
        },
        {
            "author": "Ingo Renner",
            "body": "would it be possible to back port this to 3.x?",
            "date": "2012-01-05T00:15:44.996+0000",
            "id": 10
        },
        {
            "author": "Ingo Renner",
            "body": "BTW, I applied the patch to 3.x, testing now...",
            "date": "2012-01-05T11:42:44.822+0000",
            "id": 11
        },
        {
            "author": "Ingo Renner",
            "body": "Here's the 3.x back port. Unit Test for TestQueryParser is green, but I'd still like someone else to have a look at it as Java is not my primary language.",
            "date": "2012-01-05T14:22:54.646+0000",
            "id": 12
        },
        {
            "author": "Michael McCandless",
            "body": "3.x patch looks great!\n\nOnly thing I noticed is that QueryParser.java has changes not present in QueryParser.jj\n\nAlso, I see a Solr test failure with this patch; just run:\n{noformat}\n  ant test -Dtestcase=ConvertedLegacyTest -Dtestmethod=testABunchOfConvertedStuff -Dtests.seed=-217957745e3f4a9e:-1e9dfcec76c86042:439d76b910f98fee -Dargs=\"-Dfile.encoding=UTF-8\"\n{noformat}\nLooks like the test has a TermRangeQuery whose * need to be escaped as \\ *",
            "date": "2012-01-05T15:31:13.045+0000",
            "id": 13
        },
        {
            "author": "Ingo Renner",
            "body": "As I said I'm not yet that familiar with Java so I actually had to look up what that .jj file is about and now I understand that QueryParser.java actually is compiled/generated from the .jj file using javacc.\n\nI don't know where the other changes come from, all I did was basically applying the 4.x patch and fixing incompatibilities manually.\n\nRegarding the asterisk, could it be that this is related to SOLR-2189 ?",
            "date": "2012-01-05T17:10:44.523+0000",
            "id": 14
        },
        {
            "author": "Ingo Renner",
            "body": "I would guess though, that someone changed QueryParser.java and forgot to apply those changes to the .jj file, too obviously ;)",
            "date": "2012-01-05T17:13:00.099+0000",
            "id": 15
        },
        {
            "author": "Yonik Seeley",
            "body": "bq. Regarding the asterisk, could it be that this is related to SOLR-2189 ?\n\nHmmm, I guess I opened SOLR-2189 before I took a crack at fixing it the right way (so solr no longer needs to check for \"*\" since the QP grammar does).\nI'll close it.\n",
            "date": "2012-01-05T17:53:47.468+0000",
            "id": 16
        },
        {
            "author": "Michael McCandless",
            "body": "OK I see what's causing the test failure ... the 3.x QP has separate code for the inclusive vs exclusive range cases (in trunk they were merged at some point I guess...), so, I'll fix the patch to also fix the exclusive case.\n\nI'll also sync up QueryParser.jj so that when gen'd it matches the QueryParser.java from the patch.",
            "date": "2012-01-05T18:55:09.783+0000",
            "id": 17
        },
        {
            "author": "Michael McCandless",
            "body": "Patch, fixing the above issues.\n\nI also fixed QueryParser.jj to include the [untested] changes to QueryParser.java, from SOLR-2348.",
            "date": "2012-01-05T19:26:31.990+0000",
            "id": 18
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Ingo!",
            "date": "2012-01-07T16:13:21.484+0000",
            "id": 19
        },
        {
            "author": "Ingo Renner",
            "body": "Thanks for committing Michael!",
            "date": "2012-01-09T09:25:11.153+0000",
            "id": 20
        }
    ],
    "component": "core/queryparser",
    "description": "The QueryParser fails to generate open ended range queries.\nParsing e.g. \"date:[1990 TO *]\"  gives zero results,\nbut\nConstantRangeQuery(\"date\",\"1990\",null,true,true)\ndoes produce the expected results.\n\n\"date:[* TO 1990]\" gives the same results as ConstantRangeQuery(\"date\",null,\"1990\",true,true).",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-995",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add open ended range query syntax to QueryParser",
    "systemSpecification": true,
    "version": "1.9, 2.0.0, 2.1, 2.2"
}