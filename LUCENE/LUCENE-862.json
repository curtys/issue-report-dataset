{
    "comments": [
        {
            "author": "Mark Harwood",
            "body": "Thanks for pointing this bug out Antony. Please ignore my earlier suggestion that setting the boost to zero might  be undesirable. I tested the code and it is correct with this fix.",
            "date": "2007-04-17T07:15:09.798+0000",
            "id": 0
        }
    ],
    "component": "core/search",
    "description": "BoostingQuery sets the boost value on the passed context Query\n\n    public BoostingQuery(Query match, Query context, float boost) {\n      this.match = match;\n      this.context = (Query)context.clone();        // clone before boost\n      this.boost = boost;\n\n      context.setBoost(0.0f);                      // ignore context-only matches\n    }\n\nThis should be \n      this.context.setBoost(0.0f);                      // ignore context-only matches\n\nAlso, boost value of 0.0 may have wrong effect - see discussion at\n\nhttp://www.mail-archive.com/java-user@lucene.apache.org/msg12243.html \n\n",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-862",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Contrib query org.apache.lucene.search.BoostingQuery sets boost on constructor Query, not cloned copy",
    "systemSpecification": false,
    "version": "2.1"
}