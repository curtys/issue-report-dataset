{
    "comments": [
        {
            "author": "Michael Busch",
            "body": "- Removes new TokenStream API warnings\n- fixes a javadoc reference in analysis/package.html\n- adds comments to TeeSinkTokenFilter.SinkFilter\n- adds comments to deprecated Token constructors\n\nI'm planning to commit this shortly.",
            "date": "2009-07-25T03:38:56.458+0000",
            "id": 0
        },
        {
            "author": "Michael Busch",
            "body": "Committed revision 797714.",
            "date": "2009-07-25T03:42:01.760+0000",
            "id": 1
        },
        {
            "author": "Mark Miller",
            "body": "tokenstream still says token is deprecated",
            "date": "2009-08-06T17:33:45.328+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Reopening so we don't forget Mark's last comment...",
            "date": "2009-08-06T19:22:29.285+0000",
            "id": 3
        },
        {
            "author": "Mark Miller",
            "body": "I took care of it.",
            "date": "2009-08-10T23:51:08.901+0000",
            "id": 4
        },
        {
            "author": "Michael Busch",
            "body": "Thanks, Mark.",
            "date": "2009-08-11T00:56:18.936+0000",
            "id": 5
        },
        {
            "author": "Mark Miller",
            "body": "Would love to have some sample code, but at a min we have to update javadocs to have full contract (end, close)\n\nand see comment:\n\n{quote}\nAnd close()....\nis there a way these could be consolidated?\n\n-Yonik\n{quote}",
            "date": "2009-08-20T21:38:01.380+0000",
            "id": 6
        },
        {
            "author": "Mark Miller",
            "body": "I also think it couldn't hurt to add some javadoc on AttributeSource hashCode and equals - no subclasses override them that I see (tokenfilter, tokenstream, ...) Thats a somewhat confusing situation that I think merits a comment.",
            "date": "2009-08-20T22:19:15.695+0000",
            "id": 7
        },
        {
            "author": "Mark Miller",
            "body": "Okay - there is some example code ! Its just analysis package.html - so I guess we can point to that from the TokenStream javadoc.\n\npackage.html for analysis is kind of ugly - and at times confusing. After giving an example with the new tokenstream API, there is a section saying, there is also a new API and here is stuff about it - but it was just showing an example with the new API ...",
            "date": "2009-08-24T13:43:09.046+0000",
            "id": 8
        },
        {
            "author": "Michael Busch",
            "body": "Thanks for taking this, Mark. Let me know if you need help.",
            "date": "2009-08-24T22:46:53.193+0000",
            "id": 9
        },
        {
            "author": "Mark Miller",
            "body": "Okay, here is a rough draft. I'd still like to look over and polish a bit - but I think this covers the broad strokes.\n\nOne thing I would like to clear up, but I'm not exactly sure what its saying:\n\n * {@link TokenStream} now extends {@link AttributeSource}, which provides\n * access to all of the token {@link Attribute}s for the {@link TokenStream}.\n * Note that only one instance per {@link AttributeImpl} is created and reused\n * for every token. This approach reduces object creation and allows local\n * caching of references to the {@link AttributeImpl}s. See\n * {@link #incrementToken()} for further details.",
            "date": "2009-08-25T13:49:07.112+0000",
            "id": 10
        },
        {
            "author": "Mark Miller",
            "body": "   * @deprecated This setting will be <code>true</code> per default in Lucene 3.0,\n   * when {@link #incrementToken} is abstract and must be always implemented.\n   */\n  public static void setOnlyUseNewAPI(boolean onlyUseNewAPI) {\n    TokenStream.onlyUseNewAPI = onlyUseNewAPI;\n  }\n\n\nWon't that setting be removed ? Should I add the remove when api is removed reminder here? The Javadoc appears a bit misleading.\n\n*edit\n\nI guess my issue is, it appears ambiguous as to what method must be implemented. @depreacted gives you the hint, but I'm just going to reword to make clear.",
            "date": "2009-08-25T13:58:18.662+0000",
            "id": 11
        },
        {
            "author": "Uwe Schindler",
            "body": "Yes. This setting will be removed, with about half of the whole class :( - what a pity.\nIt will default to true in 3.0 and one must override the abstract incrementToken() method. next() and next(Token) will be removed, too.",
            "date": "2009-08-25T14:04:31.167+0000",
            "id": 12
        },
        {
            "author": "Mark Miller",
            "body": "bq. what a pity.\n\nYes, I put your reflection detection/cache code into Similarity last night - that code is great - really clean, really nice design. But we will zap it soon :)",
            "date": "2009-08-25T14:18:39.636+0000",
            "id": 13
        },
        {
            "author": "Mark Miller",
            "body": "Resolving - I may tweak more, but its got what it needs overall.",
            "date": "2009-08-25T15:20:06.533+0000",
            "id": 14
        }
    ],
    "component": "modules/analysis",
    "description": "- Change or remove experimental warnings of new TokenStream API\n- Improve javadocs for deprecated Token constructors\n- javadocs for TeeSinkTokenStream.SinkFilter",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1760",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "TokenStream API javadoc improvements",
    "systemSpecification": true,
    "version": ""
}