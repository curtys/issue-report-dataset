{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "I like the cleanup patch, but, I think we should not remove close()?  Even though it's basically a no-op, removing it breaks back-compat.\n\nTechnically, changing the members to final is also a break to back-compat, but I think it's acceptable because WildcardTermEnum basically requires that these are final (ie, you can't up and change say \"pre\" after creation, because the enum has already been set).",
            "date": "2009-06-10T11:01:52.161+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "I created a new patch containing the #close() method. \nI 100% believe you about your comment but I have a hard time to understand why it breaks back-compat. Could you give me a quick explanation please I might miss something.\n\nThanks, Simon",
            "date": "2009-06-10T11:44:00.532+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "bq. I created a new patch containing the #close() method. \n\nWoops, sorry, I was wrong: removing close is fine, since super.close is still there, and since we will no longer assign nulls to the members.",
            "date": "2009-06-10T12:44:11.044+0000",
            "id": 2
        },
        {
            "author": "Simon Willnauer",
            "body": "I see. I could not thing of anything which would break the backwards compat. when removing the close method. The only thing I could have thought of was some convention I did not know about. So I assume the WildcardTermEnum_cleanup.patch is fine.\n\nsimon",
            "date": "2009-06-10T13:13:29.013+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Simon!",
            "date": "2009-06-10T14:40:32.014+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "The method WildcardTermEnum#difference() is declared final. I found it very useful to subclass WildcardTermEnum to implement different scoring for exact vs. partial matches. The change is rather trivial (attached)  but I guess it could make life easier for a couple of users.\n\nI attached two patches:\n - one which contains the single change to make difference() non-final (WildcardTermEnum.patch)\n - one which does also contain some minor cleanup of WildcardTermEnum. I removed unnecessary member initialization and made those final. ( WildcardTermEnum_cleanup.patch)\n\nThanks simon",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1679",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Make WildcardTermEnum#difference() non-final",
    "systemSpecification": true,
    "version": "2.9"
}