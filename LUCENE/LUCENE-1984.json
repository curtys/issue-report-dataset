{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "We are converting a lot of these containers to generics currently for Lucene 3.0. In 2.9, we are limited to Java 1.4",
            "date": "2009-10-15T20:59:10.273+0000",
            "id": 0
        },
        {
            "author": "Karthik K",
            "body": "Great - Thanks. \n\nFor the sake of continuity - which branch would this ( Lucene 3.0 ) be located in . \n\nHaving said that  - then I believe this can be closed as redundant. ",
            "date": "2009-10-15T21:01:30.350+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "3.0 is currently trunk. 2.9 is a branch.\n\nPlease leave it open, as I am not yet finished with converting to generics. LUCENE-1257 is the main issue for Java 5.",
            "date": "2009-10-15T21:02:57.777+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "Small updates in Patch (also implemented Iterable). I also generified the other Disjunction classes.\n\nWill commit soon. Thanks Kay Kay!",
            "date": "2009-10-16T13:18:49.689+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Committed revision: 825881\n\nThanks Kay Kay!",
            "date": "2009-10-16T13:21:31.073+0000",
            "id": 4
        },
        {
            "author": "Karthik K",
            "body": "Thanks Uwe. The revised patch looks good as well, with better code readability. ",
            "date": "2009-10-16T16:10:59.472+0000",
            "id": 5
        },
        {
            "author": "Karthik K",
            "body": "As a related patch - LUCENE-1985 added to improve readability to convert   Iterable<?> statements to for loops introduced in java 5 ",
            "date": "2009-10-16T16:26:59.662+0000",
            "id": 6
        }
    ],
    "component": "core/query/scoring",
    "description": "DisjunctionMaxQuery code has containers that are not type-safe . The comments indicate type-safety though. \n\nBetter to express in the API and the internals the explicit type as opposed to type-less containers. \n\nPatch attached. \n\nComments / backward compatibility concerns welcome.  ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1984",
    "issuetypeClassified": "IMPROVEMENT",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "DisjunctionMaxQuery - Type safety  ",
    "systemSpecification": true,
    "version": "2.9"
}