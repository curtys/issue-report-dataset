{
    "comments": [
        {
            "author": "Cheolgoo Kang",
            "body": "Created an attachment (id=14222)\nTestcase for the weird BooleanQuery behavior.\n\nIt has one Lucene document with two fields, \"T\" and \"C\". And each\nfield has one sentence.\n\nIn testBooleanOr() case, 1~3 asserts passes as expected\nbut 4th and 5th assert fails.",
            "date": "2005-02-09T12:32:59.000+0000",
            "id": 0
        },
        {
            "author": "Paul Elschot",
            "body": "Created an attachment (id=14233)\nSame test case: TestBooleanOr.java with APL and in lucene package.\n\nThe test passes in the development version.\n\nI'll try 1.4.3 later.\n\nRegards,\nPaul Elschot.\n",
            "date": "2005-02-10T03:39:55.000+0000",
            "id": 1
        },
        {
            "author": "Paul Elschot",
            "body": "The test case doesn't compile against 1.4.3 because \nBooleanClause.Occur is not available. \n \nIs it possible that the bug occurs in an earlier intermediate \ndevelopment version? \n \nRegards, \nPaul Elschot \n ",
            "date": "2005-02-10T03:47:49.000+0000",
            "id": 2
        },
        {
            "author": "Cheolgoo Kang",
            "body": "I've checked with 1.4.3 and current development snapshot. It passes\nfine. My lucene-x.jar file was packed around 29th Nov, 2004 and some\nintermediate development code could be the cause of that behavior.\n\nI think this issue can be closed.\n\nAnd also, I'll attach a revised test case using RAMDirectory instead\nof FSDirectory, and textX() methods split so it's more clear to\nsee.",
            "date": "2005-02-10T13:35:32.000+0000",
            "id": 3
        },
        {
            "author": "Cheolgoo Kang",
            "body": "Created an attachment (id=14239)\nRevised test case using RAMDirectory and methods split\n\nThis is the revised test case using RAMDirectory, testX() methods\nsplit.\n\nCan you do me a favor of those ASL and lucene packages.",
            "date": "2005-02-10T13:39:32.000+0000",
            "id": 4
        },
        {
            "author": "Paul Elschot",
            "body": "Created an attachment (id=14240)\nTestBooleanOr.java, as revised, with APL, in Lucene package\n\nCould this be added to src/test/org/apache/lucene/search to close the bug?\n\nRegards,\nPaul Elschot",
            "date": "2005-02-10T16:33:57.000+0000",
            "id": 5
        },
        {
            "author": "Otis Gospodnetic",
            "body": "Thanks, I just committed this.",
            "date": "2005-04-05T12:21:11.000+0000",
            "id": 6
        },
        {
            "author": "Otis Gospodnetic",
            "body": "I'm out of practise.  Marking this fixed now.",
            "date": "2005-04-05T12:25:59.000+0000",
            "id": 7
        }
    ],
    "component": "core/search",
    "description": "Here's a simple OR-connected query.\n\nT:files T:deleting C:thanks C:exists\n\nThe query above hits 1 document. But following *same* query only\nwith parenthesis results nothing.\n\n(T:files T:deleting) (C:thanks C:exists)\n\nAnother combinations of MUST and SHOULD.\n\n\"T:files T:deleting +C:production +C:optimize\" hits 1 document.\n\"(T:files T:deleting) (+C:production +C:optimize)\" hits 1 document.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-345",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Weird BooleanQuery behavior",
    "systemSpecification": true,
    "version": ""
}