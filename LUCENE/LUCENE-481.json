{
    "comments": [
        {
            "author": "Luc Vanlerberghe",
            "body": "This should fix the problem.\n\nI didn't use the Lock.With helper class to avoid having to wrap the long or boolean result in a Long or Boolean first.\nThe try ... finally block should be at least as clear to read as the Lock.With construct in this case...\n\nThe problem is not limited to Windows Platforms:\nThe search servers also threw \"java.io.FileNotFoundException: ...\\segments (The system cannot find the file specified)\" once every few days....\n\nThis is because the new segments data is first written to the file \"segments.new\" which is then renamed to \"segments\".\nThe javadoc for Directory says renameTo() should be atomic, but the current implementation in FSDirectory isn't.\nIf the searcher happens to try to read the segments file in the (admittedly very small) time between the \"nu.delete()\" and the \"old.renameTo(nu)\" it gets the FileNotFoundException",
            "date": "2005-12-23T01:35:36.000+0000",
            "id": 0
        },
        {
            "author": "Yonik Seeley",
            "body": "Thanks Luc, i've commited this!",
            "date": "2005-12-23T11:40:36.000+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "There is a race condition if one machine is checking the current version of an index while another wants to update the segments file in IndexWriter.close().\n\njava.io.IOException: Cannot delete segments\n\tat org.apache.lucene.store.FSDirectory.renameFile(FSDirectory.java:213)\n\tat org.apache.lucene.index.SegmentInfos.write(SegmentInfos.java:90)\n\tat org.apache.lucene.index.IndexWriter$3.doBody(IndexWriter.java:503)\n\tat org.apache.lucene.store.Lock$With.run(Lock.java:109)\n\tat org.apache.lucene.index.IndexWriter.mergeSegments(IndexWriter.java:501)\n\tat org.apache.lucene.index.IndexWriter.flushRamSegments(IndexWriter.java:440)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:242)\n\nOn the windows platform reading the contents of a file disallows deleting the file.\n\nI use Lucene to maintain an index of +-700.000 documents, one server adds documents, while other servers handle the searches.\nThe search servers poll the index version regularly to check if they have to reopen their IndexSearcher.\nOnce in a while (about once every two days on average), IndexWriter.close() fails because it cannot delete the previous segments file, even though it hold the commit lock.\nThe reason is probably that search servers are reading the segments file to check the version without using the commit lock.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-481",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "IndexReader.getCurrentVersion() and isCurrent should use commit lock.",
    "systemSpecification": true,
    "version": ""
}