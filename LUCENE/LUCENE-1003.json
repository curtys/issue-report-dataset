{
    "comments": [
        {
            "author": "Nick Menere",
            "body": "Yeah,\nI raised this on the dev list a few months ago and didn't get much response.\n\nI think I might even be responsible for that code above.  It was meant more as hack to [get a customer up and running|http://jira.atlassian.com/browse/JRA-12399].\n\nCheers,\nNick\n",
            "date": "2007-09-19T05:19:52.565+0000",
            "id": 0
        },
        {
            "author": "OpenTeam.ru",
            "body": "Yeah, Nick, the code above was taken from your JIRA issue. We wasn't able to find similar issue in Lucene issue tracker. We're using Lucene a lot so we needed this bug fixed in the core.",
            "date": "2007-09-19T07:50:46.724+0000",
            "id": 1
        },
        {
            "author": "OpenTeam.ru",
            "body": "Patch that adds numbers to RussianCharset\nusage: patch RussianCharsets.java < RussianCharsets.java.patch",
            "date": "2007-09-19T07:54:28.903+0000",
            "id": 2
        },
        {
            "author": "Grant Ingersoll",
            "body": "minor nit, can you add the test case to the patch as well?",
            "date": "2007-09-19T17:27:22.641+0000",
            "id": 3
        },
        {
            "author": "Otis Gospodnetic",
            "body": "TUSUR OpenTeam: would it be possible to get a unit test, too?\n",
            "date": "2008-02-17T08:22:29.345+0000",
            "id": 4
        },
        {
            "author": "Dmitry Lihachev",
            "body": "Patch that adds new test to the  TestRussianAnalyzer\nusage: \npatch TestRussianAnalyzer.java < TestRussianAnalyzer.java.patch",
            "date": "2008-02-19T04:04:00.995+0000",
            "id": 5
        }
    ],
    "component": "modules/analysis",
    "description": "RussianAnalyzer's tokenizer skips numbers from input text, so that resulting token stream miss numbers. Problem can be solved by adding numbers to RussianCharsets.UnicodeRussian. See test case below  for details.\n\n{code:title=TestRussianAnalyzer.java|borderStyle=solid}\n\npublic class TestRussianAnalyzer extends TestCase {\n\n  Reader reader = new StringReader(\"text 1000\");\n\n  // test FAILS\n  public void testStemmer() {\n    testAnalyzer(new RussianAnalyzer());\n  }\n\n  // test PASSES\n  public void testFixedRussianAnalyzer() {\n    testAnalyzer(new RussianAnalyzer(getRussianCharSet()));\n  }\n\n  private void testAnalyzer(RussianAnalyzer analyzer) {\n    try {\n      TokenStream stream = analyzer.tokenStream(\"text\", reader);\n      assertEquals(\"text\", stream.next().termText());\n      assertNotNull(stream.next());\n    } catch (IOException e) {\n      fail(e.getMessage());\n    }\n  }\n\n  private char[] getRussianCharSet() {\n    int length = RussianCharsets.UnicodeRussian.length;\n    final char[] russianChars = new char[length + 10];\n\n    System\n        .arraycopy(RussianCharsets.UnicodeRussian, 0, russianChars, 0, length);\n    russianChars[length++] = '0';\n    russianChars[length++] = '1';\n    russianChars[length++] = '2';\n    russianChars[length++] = '3';\n    russianChars[length++] = '4';\n    russianChars[length++] = '5';\n    russianChars[length++] = '6';\n    russianChars[length++] = '7';\n    russianChars[length++] = '8';\n    russianChars[length] = '9';\n    return russianChars;\n  }\n}\n\n{code} ",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1003",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "[PATCH] RussianAnalyzer's tokenizer skips numbers from input text,",
    "systemSpecification": true,
    "version": "2.2"
}