{
    "comments": [
        {
            "author": "Mark Harwood",
            "body": "Example JUnit",
            "date": "2010-07-13T12:41:52.031+0000",
            "id": 0
        },
        {
            "author": "Mark Harwood",
            "body": "Looks like on the \"close\" call IndexWriter is flushing a superfluous \".del\" file of buffered deletes.\n",
            "date": "2010-07-13T13:32:57.775+0000",
            "id": 1
        },
        {
            "author": "Shai Erera",
            "body": "It did not fail for me on 3.1, however did fail on 3.0.1.\n\nI'm attaching a version of this test, which creates far less docs (5, instead of 10,000) and uses a RAMDirectory). The test still fails, which is expected. I assume if we want to make that an official unit test, the test case which passes should go away? (or not)",
            "date": "2010-07-13T14:18:16.696+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Duh -- in DocumentsWriter.abort, right after deletesInRAM.clear() we must add deletesFlush.clear().  So, indeed, any deletions pending (either due to .updateDoc or .deleteDocs) when segments were flushed, fail to be cleared and are then applied on close.\n\nHow awful!",
            "date": "2010-07-13T14:35:35.656+0000",
            "id": 3
        },
        {
            "author": "Michael McCandless",
            "body": "Attached patch -- started from Shai's patch, tweaked it a bit, added the one line fix & CHANGES entry.\n\nI see the test in fact failing on 3.x.",
            "date": "2010-07-13T14:56:44.702+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Looks good to me. I think now that the test class contains just this method, we can consolidate all the helper ones into 1? It was required before 'cause there were two test cases. And we can remove the first assert in the test, since we're not checking here that the index contains the number of added docs after it was committed - there are plenty of other tests that do that.",
            "date": "2010-07-13T15:09:40.684+0000",
            "id": 5
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Shai -- new patch.",
            "date": "2010-07-13T15:38:19.005+0000",
            "id": 6
        },
        {
            "author": "Mark Harwood",
            "body": "Thanks for the rapid response Mike/Shai.\n\nI'll need to patch a couple of production systems using 2.4.0 and 2.9.1 with this.\nFor the record -  with this same change applied, the test passes OK on these older versions too.",
            "date": "2010-07-13T15:52:34.490+0000",
            "id": 7
        },
        {
            "author": "Michael McCandless",
            "body": "Thanks Mark -- what a doozie!",
            "date": "2010-07-13T16:49:38.773+0000",
            "id": 8
        }
    ],
    "component": "core/index",
    "description": "After several \"updateDocuments\" calls a rollback call does not return the index to the prior state.\nThis seems to occur if the number of updates exceeds the RAM buffer size i.e. when some flushing of updates occurs.\n\nTest fails in Lucene 2.4, 2.9, 3.0.1 and 3.0.2\n\nJUnit to follow.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2536",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Rollback doesn't preserve integrity of original index",
    "systemSpecification": true,
    "version": "3.0.2"
}