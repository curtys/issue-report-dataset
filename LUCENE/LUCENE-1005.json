{
    "comments": [
        {
            "author": "Hoss Man",
            "body": "a cursory glance at the code in o.a.l.gdata.utils.DateFormater indicates that two SimpleDateFormater format strings are used ... they are both documented as \"Date format as it is used in Http Last modified header\", the only difference being between little z and big Z for timezones.\n\nwhile servers are generally suppose to be lenient in parsing, formating of dates is always suppose to end in \" GMT\", so it seems that a maybe a setTimeZone cll on the formater when constructed is in order?\n\n",
            "date": "2007-09-23T03:18:44.080+0000",
            "id": 0
        },
        {
            "author": "Grant Ingersoll",
            "body": "In reading http://java.sun.com/j2se/1.5.0/docs/api/java/text/SimpleDateFormat.html dates do not have to end in just GMT, they can be GMT +/- and offset of hours and minutes.\n\nIt seems like GMT+00:00 should be valid, as the lowercase 'z' symbol gives:\n\nz  \tTime zone \tGeneral time zone  \tPacific Standard Time; PST; GMT-08:00\n\nas an example.  If I put in the Date above (which caused a failure) as a test on my machine it passes.\n\nI think the error is actually in the test in that the Pattern that is used to compare the output does not account for the GMT offset method for time zones.\n\nThoughts?  If not, I will put in a fix for the Regex to account for the GMT offset method.",
            "date": "2007-09-25T18:00:22.374+0000",
            "id": 1
        },
        {
            "author": "Hoss Man",
            "body": "i won't dispute that the SImpleDateFormatter pattern is doing what it says it does ... my point is that according to the HTTP spec that's not the format that should be used ... the test is not buggy, the code is.\n\nNo matter what timezone or locale the test is executed in, formated dates (for the purpose of HTTP headers which is what this says it does) should always end in \" GMT\"\n\ni believe the SimpelDateFormatter can be forced to do this if we use the setTimeZone method on the formatter (by default it uses the system's current timezone)",
            "date": "2007-09-25T18:09:54.232+0000",
            "id": 2
        },
        {
            "author": "Grant Ingersoll",
            "body": "  OK, here is a patch that sets the time zone, I will give it a try on zones.",
            "date": "2007-09-25T19:08:39.503+0000",
            "id": 3
        },
        {
            "author": "Grant Ingersoll",
            "body": "I tried this out on zones and it passes and fails without it, so I am going to apply it.",
            "date": "2007-09-26T19:10:56.091+0000",
            "id": 4
        }
    ],
    "component": "core/other",
    "description": "TestDateFormater.testFormatDate fails when the Date returned is Sun, 23 Sep 2007 01:29:06 GMT+00:00\n\nThe issue lies with the +00:00 at the end of the string.  \n\nThe question is, though, is that a valid date for GData?\n\nThis is marked as major b/c it is causing nightly builds to fail.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1005",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "GData TestDateFormater (sic) fails when the Date returned is: Sun, 23 Sep 2007 01:29:06 GMT+00:00",
    "systemSpecification": true,
    "version": ""
}