{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "here's test with fix to SimilarityBase.\n\nI tried to rearrange this in a way that its not confusing.",
            "date": "2011-08-25T02:41:43.650+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "Also for the record i think its garbage that some stats such as docFreq just silently return 0 here, but for things like sumTotalTermFreq is a hassle...\n\nIts already annoying we have to deal with the -1 preflex case here too... maybe we should add helper methods to IndexSearcher so at least you only have one case?!",
            "date": "2011-08-25T02:46:19.390+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "added another related test, no problems though",
            "date": "2011-08-25T02:52:15.481+0000",
            "id": 2
        }
    ],
    "component": "",
    "description": "Because of things like queryNorm, unfortunately similarities have to handle the case where they are asked to computeStats() for a term, where the field does not exist at all.\n(Note they will never have to actually score anything, but unless we break how queryNorm works for TFIDF, we have to deal with this case).\n\nI noticed this while doing some benchmarking, so i created a test to test some cases like this across all the sims.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3401",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "need to ensure that sims that use collection-level stats (e.g. sumTotalTermFreq) handle non-existent field",
    "systemSpecification": true,
    "version": "flexscoring branch"
}