{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Mike, just to make sure, did you actually see this leads to corruption, or you only suspect it? I ask because a while ago we opened LUCENE-3237 because we didn't think that FSDir.sync() works at all.\n\nYour fix is valid anyway, because if we'll fix sync(), it's good to know that now we always call it.",
            "date": "2011-09-07T07:39:34.614+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nbut I'd love to somehow have a test that can catch such a bad regression in the future\n{quote}\n\nMaybe we can come up with a test for this similar to the 'test' on HDFS-970.\n\nFor example maybe we could have a freebsd-specific twist on that, that we run in our nightly \nbuild or something that uses geom/gnop or iscsi+firewalling or whatever our jail lets us\nget away with.\n\nfailing that we could try to come up with a linux version but we would have to test it\nourselves manually on a periodic basis.\n",
            "date": "2011-09-07T14:41:09.148+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "\nbq. Mike, just to make sure, did you actually see this leads to corruption, or you only suspect it? \n\nMark and I saw real corruption just by pulling the power plug.  Once\nthe machine came back up there were a bunch of 0-length files, and the\nindex was quite definitely corrupt ;) It was trivial to reproduce.  In\none test, I watched 5 commits complete before cutting power and on\nreboot none of those commits were usable.\n\nBut with the fix I committed I can no longer corrupt the index by\npulling the plug.\n\nOn LUCENE-3237: it still makes me somewhat nervous that we close the\nfd, time passes, open a new fd, fsync that.  It would be \"safer\" if we\nfsync'd before closing, but this would be a challenge for Lucene.\n\nBut the most recent POSIX standard (POSIX:2008) seem to suggest this\nis an OK approach:\n\n  http://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html\n\nIe, if the system has _POSIX_SYNCHRONIZED_IO defined (I believe modern\nLinuxes do) then the semantics make it clear that the fsync applies to\nthe underlying file and not just the bytes written to the fd you have\nopen right now.\n",
            "date": "2011-09-07T15:13:35.303+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "I think we should turnaround a 3.4.0 release with this fix.  I'll build an RC.",
            "date": "2011-09-07T17:07:47.594+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "bq. I think we should turnaround a 3.4.0 release with this fix. I'll build an RC.\n+1",
            "date": "2011-09-07T17:47:34.726+0000",
            "id": 4
        },
        {
            "author": "Mark Miller",
            "body": "bq. I think we should turnaround a 3.4.0 release with this fix. I'll build an RC.\n\n+1",
            "date": "2011-09-07T19:27:30.175+0000",
            "id": 5
        },
        {
            "author": "Erick Erickson",
            "body": "File corruptions really scare me, \n+1",
            "date": "2011-09-07T20:23:26.311+0000",
            "id": 6
        },
        {
            "author": "ASF subversion and git services",
            "body": "Commit 1562418 from [~mikemccand] in branch 'dev/branches/lucene5376'\n[ https://svn.apache.org/r1562418 ]\n\nLUCENE-3418: fix corner case: null disi means all docs didn't match",
            "date": "2014-01-29T11:38:44.551+0000",
            "id": 7
        }
    ],
    "component": "core/store",
    "description": "Thanks to hurricane Irene, when Mark's electricity became unreliable, he discovered that on power loss Lucene could easily corrumpt the index, which of course should never happen...\n\nI was able to easily repro, by pulling the plug on an Ubuntu box during indexing.  On digging, I discovered, to my horror, that Lucene is failing to fsync any files, ever!\n\nThis bug was unfortunately created when we committed LUCENE-2328... that issue added tracking, in FSDir, of which files have been closed but not sync'd, so that when sync is called during IW.commit we only sync those files that haven't already been sync'd.\n\nThat tracking is done via the FSDir.onIndexOutputClosed callback, called when an FSIndexOutput is closed.  The bug is that we only call it on exception during close:\n\n{noformat}\n\n    @Override\n    public void close() throws IOException {\n      // only close the file if it has not been closed yet\n      if (isOpen) {\n        boolean success = false;\n        try {\n          super.close();\n          success = true;\n        } finally {\n          isOpen = false;\n          if (!success) {\n            try {\n              file.close();\n              parent.onIndexOutputClosed(this);\n            } catch (Throwable t) {\n              // Suppress so we don't mask original exception\n            }\n          } else\n            file.close();\n        }\n      }\n    }\n{noformat}\n\nAnd so FSDir thinks no files need syncing when its sync method is called....\n\nI think instead we should call it up-front; better to over-sync than under-sync.\n\nThe fix is trivial (move the callback up-front), but I'd love to somehow have a test that can catch such a bad regression in the future.... still I think we can do that test separately and commit this fix first.\n\nNote that even though LUCENE-2328 was backported to 2.9.x and 3.0.x, this bug wasn't, ie the backport was a much simpler fix (to just address the original memory leak); it's 3.1, 3.2, 3.3 and trunk when this bug is present.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-3418",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Blocker",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Lucene is not fsync'ing files on commit",
    "systemSpecification": true,
    "version": "3.1, 3.2, 3.3, 3.4, 4.0-ALPHA"
}