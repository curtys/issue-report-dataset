{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Patch removes code which supports old indexes. If there are more places in the code that you know of, please let me know.",
            "date": "2010-05-29T12:39:31.534+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Great work Shai!\n\nAnother place we can remove is the preUTF8Strings in oal.store.DataInput, and anywhere that calls setModifiedUTF8StringsMode, and I think also FieldsWriter.FORMAT_VERSION_UTF8_LENGTH_IN_BYTES?",
            "date": "2010-05-29T13:54:40.536+0000",
            "id": 1
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Here we go. Pre-utf8/compressed fields support removed, microcleanups/additions to previous patch.",
            "date": "2010-05-29T15:57:13.870+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Thanks Earwin ! Few comments:\n\n* You didn't remove the .zip indexes?\n\n* You removed the code from TestBackwardsCompatibilty which creates the older indexes. While this isn't needed currently for trunk - the code is commented out, and I don't think it bothers anyone - one day, after 4.0 is released, we will need to use it. So I don't think we should remove that piece of code.\n\n* TestIndexFileDeleter failed 'cause of deletable file - fixed it.\n\nAttached is the merged patch, w/ the above fixes. Solr tests fail (*.dataimport.* tests) for some reason. I don't understand this yet - so if someone more knowledgeable about Solr than me cares to take a look, I'd appreciate it. I see many things like that (not sure how those tests are related to this issue):\n\n{code}\n    [junit]\n    [junit]  request was: q=id:500&start=0&qt=standard&version=2.2&rows=20\n    [junit] junit.framework.AssertionFailedError: now it should query failed XPath: //result[@numFound=1]\n    [junit]  xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">16</int></lst><result name=\"response\" numFound=\"0\" start=\"0\"/>\n    [junit] </response>\n    [junit]\n    [junit]  request was: q=id:500&start=0&qt=standard&version=2.2&rows=20\n    [junit]     at org.apache.solr.util.AbstractSolrTestCase.assertQ(AbstractSolrTestCase.java:236)\n    [junit]     at org.apache.solr.update.AutoCommitTest.testMaxTime(AutoCommitTest.java:218)\n{code}",
            "date": "2010-05-29T20:38:22.347+0000",
            "id": 3
        },
        {
            "author": "Shai Erera",
            "body": "* Removed the byte written by SegmentInfo (hasSingleNormsFile - redundant).\n* Added live migration code to SI.ctor to read that byte if pre-4.0 index\n* Renamed FORMAT_FLEX_POSTING to FORMAT_4_0. I think we should do this going forward in more places, so that it's clear to which version this format belongs and will make the task of removing support for old indexes in the future easier. The jdoc of the constant needs to describe what is covered by that format.\n\nBesides the Solr tests, everything passes.\n\nBTW, I don't think we should stop writing that byte in 3.1 - not sure if hasSingleNormsFile is always true, and even if so, 3.0 indexes still need to be supported and they write the byte. And it does not add much of complexity.",
            "date": "2010-05-30T07:32:53.924+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Solr tests pass too ... dunno what happened, but they started to pass. And the dataimport tests do not seem they should be affected by this issue. So I'd like to commit this soon.",
            "date": "2010-05-30T11:31:48.265+0000",
            "id": 5
        },
        {
            "author": "Shai Erera",
            "body": "Thanks Mike and Earwin for your help !\n\nCommitted revision 949509.",
            "date": "2010-05-30T12:26:48.343+0000",
            "id": 6
        },
        {
            "author": "Earwin Burrfoot",
            "body": "Wow! So fast! :)\n\nbq. You didn't remove the .zip indexes?\nYour patch didn't remove them for me, patch file format can't handle binary stuff.\n\nbq. You removed the code from TestBackwardsCompatibilty ...... So I don't think we should remove that piece of code.\nSeveral lines later there sits a piece of absolutely identical commented-out code. The only difference is that it doesn't use \"preLockless\" in method names.\nIf someone really needs it later, the code I left over suits him no less than the code I removed.\n\nbq. TestIndexFileDeleter failed 'cause of deletable file - fixed it.\nCool! It's very strange I missed the failure.\n\nbq. Renamed FORMAT_FLEX_POSTING to FORMAT_4_0\nFORMAT_4_0_FLEX_POSTINGS? I loved the self-descriptiveness :)\n\nAnd, yup. Bye-bye to the byte.",
            "date": "2010-05-30T18:09:37.906+0000",
            "id": 7
        },
        {
            "author": "Shai Erera",
            "body": "bq. Your patch didn't remove them for me, patch file format can't handle binary stuff.\n\nStrange, there were lines in my patch file which indicated they are removed, but were absent from yours. Anyway, they're removed now.\n\nbq. Several lines later there sits a piece of absolutely identical commented-out code. \n\nI don't see it.  All I see is a comment and two methods that are used to generate the old indexes.\n\nbq. FORMAT_4_0_FLEX_POSTINGS\n\nWhile I don't mind that sort of descriptiveness, it does not fit in all cases, such as this case -- this format is related to both flex postings, but also to that byte removed from the SegmentInfo :). So I think we should keep the names simple, and have a useful javadoc. It's the sort of constants no one really cares about in his daily work, only when you handle file format backwards stuff :).\n\nAlso, if by chance (like this case, again) you get to change the file format version twice, by two different people, with long time interval between the two, a FORMAT_4_0 should alert you that that's used for the unreleased index, and so you don't need to bump it up again (here, jumping from -9 to -11) accidentally.",
            "date": "2010-05-30T18:18:30.790+0000",
            "id": 8
        },
        {
            "author": "Earwin Burrfoot",
            "body": "bq. Strange, there were lines in my patch file which indicated they are removed, but were absent from yours.\n{code}\nIndex: lucene/src/test/org/apache/lucene/index/index.19.cfs.zip\n===================================================================\nCannot display: file marked as a binary type.\nsvn:mime-type = application/octet-stream\nIndex: lucene/src/test/org/apache/lucene/index/index.19.nocfs.zip\n===================================================================\nCannot display: file marked as a binary type.\nsvn:mime-type = application/octet-stream\nIndex: lucene/src/test/org/apache/lucene/index/index.20.cfs.zip\n===================================================================\nCannot display: file marked as a binary type.\nsvn:mime-type = application/octet-stream\n{code}\nThese lines in your patch mean that diff noticed the differences, but failed to express them - nothing more. You could modify all these files instead of deleting, and get the same result.\n\nbq. I don't see it.\nCtrl+F, \"testCreateCFS\"\nOk, they're not completely identical. But I don't really care either way.\n\nbq. .... FORMAT stuff .....\nOk.",
            "date": "2010-05-30T18:34:11.837+0000",
            "id": 9
        },
        {
            "author": "Uwe Schindler",
            "body": "I reopen this issue, as the following problem is there:\nWhen somebody tries to open an pre-3.0 index, it should fail with a meaningful exception. At least e.g. FieldsReader (where I found dead code after your removal) does not check that the version is ge the minimum version. We should add a static FORMAT_MINIMUM to all places where formats are used and check it on reading.",
            "date": "2010-07-18T12:34:10.042+0000",
            "id": 10
        },
        {
            "author": "Uwe Schindler",
            "body": "Here a first patch, that handles this in FieldsReader to show how it should be done elsewhere, too. This patch also removes some \"dead\" code in FieldReader, too. I left the method in, as we may need canReadRawDocs() for later format changes, too.",
            "date": "2010-07-18T12:48:59.531+0000",
            "id": 11
        },
        {
            "author": "Michael McCandless",
            "body": "I already opened LUCENE-2523 for this, but it's OK if we do the work here and resolve that one as a dup.\n\nI think you should see an IndexTooOldException instead of CorruptIndexException (though the former could subclass the latter?)",
            "date": "2010-07-18T12:51:09.890+0000",
            "id": 12
        },
        {
            "author": "Uwe Schindler",
            "body": "Oh, I move over to this issue. I am almost finished!",
            "date": "2010-07-18T13:34:09.105+0000",
            "id": 13
        },
        {
            "author": "Uwe Schindler",
            "body": "Closing again.",
            "date": "2010-07-18T13:34:38.052+0000",
            "id": 14
        }
    ],
    "component": "core/index",
    "description": "We should remove support for 2.x (and 1.9) indexes in 4.0. It seems that nothing can be done in 3x because there is no special code which handles 1.9, so we'll leave it there. This issue should cover:\n# Remove the .zip indexes\n# Remove the unnecessary code from SegmentInfo and SegmentInfos. Mike suggests we compare the version headers at the top of SegmentInfos, in 2.9.x vs 3.0.x, to see which ones can go.\n# remove FORMAT_PRE from FieldInfos\n# Remove old format from TermVectorsReader\n\nIf you know of other places where code can be removed, then please post a comment here.\n\nI don't know when I'll have time to handle it, definitely not in the next few days. So if someone wants to take a stab at it, be my guest.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2480",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Remove support for pre-3.0 indexes",
    "systemSpecification": true,
    "version": ""
}