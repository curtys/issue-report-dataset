{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Thanks Sascha!",
            "date": "2008-07-01T15:31:36.525+0000",
            "id": 0
        }
    ],
    "component": "core/index",
    "description": "Spinoff from here:\n\n    http://mail-archives.apache.org/mod_mbox/lucene-java-user/200806.mbox/%3C88F3F6A4-FBFB-43DF-890D-DB5F0D9A2461@gmail.com%3E\n\nBecause MultiReader just holds a reference to the array that was passed in, it's possible to hit scary exceptions (that look like index corruption) if that array is later altered eg by reopening some of the readers.\n\nThe fix is trivial: just make a private copy.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-1323",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Trivial",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "MultiReader should make a private copy of the subReaders array",
    "systemSpecification": true,
    "version": "1.9, 2.0.0, 2.1, 2.2, 2.3, 2.3.1, 2.3.2, 2.4, 2.9, 3.0"
}