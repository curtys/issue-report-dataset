{
    "comments": [
        {
            "author": "Simon Willnauer",
            "body": "Hey Joey, \ngood to see you coming up with patches, nice that you catch up on that TODO. You added support for parallel DocFreq which is good! Did you think about using an interface from the new concurrent utils instead of subclassing thread? I would like to see people using the new features which make code slightly more readable too. You would be able to simply throw the exception in the Callable#call() method and retrieve it once it has terminated.\nyou could also use a Pooled Executor to run those threads so you don't have to spawn them each time you call docFreq on the multi searcher.\n\none more thing, your patch is hard to read as you formated the source code. please try to do not format it - that would make it way easier to read and see what has been added  / changed.",
            "date": "2009-11-06T23:43:42.026+0000",
            "id": 0
        },
        {
            "author": "Simon Willnauer",
            "body": "moving to 3.1 for now. we will see how this turns out",
            "date": "2009-11-06T23:44:33.838+0000",
            "id": 1
        },
        {
            "author": "Joey Surls",
            "body": "I agree with you on the Pooled Executor and concurrent utils, I was actually trying to copy the semantics of the search methods in place so someone could quickly grasp the code.\n\nYa, I thought that's why the patch was full was from the formatted code. Sorry about that. I'll look for that in the future. I noticed the link in the wiki for the formatting under Helpful Resources doesn't work anymore.\n\nhttp://wiki.apache.org/lucene-java/HowToContribute\n\n\n",
            "date": "2009-11-06T23:54:02.779+0000",
            "id": 2
        },
        {
            "author": "Uwe Schindler",
            "body": "bq. Ya, I thought that's why the patch was full was from the formatted code. Sorry about that. I'll look for that in the future. I noticed the link in the wiki for the formatting under Helpful Resources doesn't work anymore.\n\nFixed that and uploaded a new Eclipse Galieo style also containing our way for Java 5 Generics.",
            "date": "2009-11-07T00:09:08.027+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "I drove this a bit further and refactored the whole code to use the java 1.5 concurrent utils. I seem to be somewhat cleaner with executors / callable and a little refactoring.\n\nsimon",
            "date": "2009-11-07T23:59:16.646+0000",
            "id": 4
        },
        {
            "author": "Uwe Schindler",
            "body": "I take it as communicated.",
            "date": "2009-11-09T13:53:55.610+0000",
            "id": 5
        },
        {
            "author": "Simon Willnauer",
            "body": "thanks uwe! ",
            "date": "2009-11-09T13:58:40.516+0000",
            "id": 6
        },
        {
            "author": "Uwe Schindler",
            "body": "String.isEmpty() is Java 6 only, changed this to length() == 0.",
            "date": "2009-11-09T14:07:23.693+0000",
            "id": 7
        },
        {
            "author": "Uwe Schindler",
            "body": "Updated patch.",
            "date": "2009-11-09T14:16:19.763+0000",
            "id": 8
        },
        {
            "author": "Simon Willnauer",
            "body": "Fixed the Java5 issue. \nDamned I should use java 5 on my notebook.\n\nsimon",
            "date": "2009-11-09T14:16:56.168+0000",
            "id": 9
        },
        {
            "author": "Simon Willnauer",
            "body": "hehe - my patch was quicker but you comment appears first :)",
            "date": "2009-11-09T14:20:58.234+0000",
            "id": 10
        },
        {
            "author": "Uwe Schindler",
            "body": "I also changed some formatting, we require whitespace after control statements like for, while, catch,... and before {",
            "date": "2009-11-09T14:27:03.350+0000",
            "id": 11
        },
        {
            "author": "Uwe Schindler",
            "body": "I will also readd support for MaxScore in the fielded case (it is still supported by Searchable.search(SortField))!!!",
            "date": "2009-11-09T14:30:06.596+0000",
            "id": 12
        },
        {
            "author": "Uwe Schindler",
            "body": "Advanced patch:\n- Removed @SuppressWarnings by duplicating some code, but it is type-safe now\n- Added support for maxScore in sorted mode\n- Refactoring: made all internal classes static inner classes\n- Fix thread safety: hq.setFields() synchronized",
            "date": "2009-11-09T23:26:36.709+0000",
            "id": 13
        },
        {
            "author": "Uwe Schindler",
            "body": "Here another possibility, removing more duplicated code: MultiSearcher contains now the merge Callables as static inner classes. These Callables are used directly without Executor in MultiSearcher, but with Executor in ParallelMultiSearcher.",
            "date": "2009-11-09T23:52:32.925+0000",
            "id": 14
        },
        {
            "author": "Simon Willnauer",
            "body": "Added some more final keywords and generalized HitQueue to PriorityQueue<ScoreDoc>  in search (no sort)\n\nI guess we are set with this patch, good team work Uwe! Lets get this out for heavy committing! :)\n\nI get the impression that we should think about moving stuff like the Function interface out to utils. This could be useful in many situations though. Thoughts?",
            "date": "2009-11-10T15:57:17.112+0000",
            "id": 15
        },
        {
            "author": "Uwe Schindler",
            "body": "Here my latest patch, will commit soon.\n\nUwe",
            "date": "2009-11-10T16:15:26.316+0000",
            "id": 16
        },
        {
            "author": "Uwe Schindler",
            "body": "Oh I didn't see your patch. But its not so different, I also did lots of code cleanup.\n\nI also used ReentrantLocks. I added a new DummyLock to utils, that is a replacement for ReentrantLock, but does simply nothing. By this, the synchronized around the HitQueue in MultiSearcher can be ommitted.",
            "date": "2009-11-10T16:18:23.534+0000",
            "id": 17
        },
        {
            "author": "Uwe Schindler",
            "body": "Merged our patches somehow, but left HitQueue generic param (I like this more, because it conforms to the sort inner class). I think this is final now.\n\nReady to commit, all tests are running.",
            "date": "2009-11-10T16:47:12.905+0000",
            "id": 18
        },
        {
            "author": "Simon Willnauer",
            "body": "+1 go for it - seems to be quite pretty compared to the current trunk version. \n\n:)",
            "date": "2009-11-10T17:13:02.220+0000",
            "id": 19
        },
        {
            "author": "Uwe Schindler",
            "body": "(Heavy) committed revision: 834550\n\nThanks Joey & Simon",
            "date": "2009-11-10T17:18:45.054+0000",
            "id": 20
        },
        {
            "author": "Israel Tsadok",
            "body": "This has turned into a complete refactoring of the class, but I'd like to comment that the original intent of this patch was a bit misguided: docFreq() is not called during normal use of ParallelMultiSearcher. What does get called is docFreqs() on the sub-searchers. This is done in MultiSearcher.createWeight(), and is done sequentially.\n\nI created issue LUCENE-2128 to suggest a solution to this.",
            "date": "2009-12-07T14:49:53.831+0000",
            "id": 21
        }
    ],
    "component": "core/search",
    "description": "ParallelMultiSearcher is parallel only for the method signatures of 'search'.\n\nPart of a query process calls the method docFreq(). There was a TODO comment to parallelize this. Parallelizing this method actually increases the performance of a query on multiple indexes, especially remotely.\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2041",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Complete parallelizaton of ParallelMultiSearcher",
    "systemSpecification": true,
    "version": "2.9"
}