{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch.\n\nI think it's basically working, but there are still a bunch of nocommits.",
            "date": "2011-01-18T00:19:48.461+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "New patch -- cleaned up all the nocommits, and cutover to common prefix for all terms in the block.",
            "date": "2011-01-20T00:31:14.660+0000",
            "id": 1
        },
        {
            "author": "Michael McCandless",
            "body": "New patch, specializes read* in ByteArrayDataInput (poached from LUCENE-2824).",
            "date": "2011-01-20T17:33:13.787+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "+1 to commit, the last specialization made all the difference on my benchmarks.\n\nI think this will pave the way for us to fix Sep codec in the branch...\n",
            "date": "2011-01-20T17:53:39.948+0000",
            "id": 3
        },
        {
            "author": "Simon Willnauer",
            "body": "WOW nice mike! do you have benchmark numbers here by any chance? After all those improvements -  FST, TermState, BlockCoded TermDict etc. I wonder if we reached the 10k% in the 3.0 vs. 4.0 united~2.0 benchmark...",
            "date": "2011-01-21T06:56:11.159+0000",
            "id": 4
        },
        {
            "author": "Michael McCandless",
            "body": "I did run the benchmark -- but lost the output :(  I compared standard on trunk vs standard w/ block terms dict.\n\nThere were solid gains, especially for the MTQs that visit many terms but few docs (like the respelling case).",
            "date": "2011-01-21T11:49:15.721+0000",
            "id": 5
        }
    ],
    "component": "core/index",
    "description": "With PrefixCodedTermsReader/Writer we now encode each term standalone,\nie its bytes, metadata, details for postings (frq/prox file pointers),\netc.\n\nBut, this is costly when something wants to visit many terms but pull\nmetadata for only few (eg respelling, certain MTQs).  This is\nparticularly costly for sep codec because it has more metadata to\nstore, per term.\n\nSo instead I think we should block-encode all terms between indexed\nterm, so that the metadata is stored \"column stride\" instead.  This\nmakes it faster to enum just terms.\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2872",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Terms dict should block-encode terms",
    "systemSpecification": true,
    "version": ""
}