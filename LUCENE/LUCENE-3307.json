{
    "comments": [
        {
            "author": "Uwe Schindler",
            "body": "+1",
            "date": "2011-07-12T19:17:52.550+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "+1 !\n\nThis is also weird if you index only NumericFields. You need to pass whatever random analyzer that crosses your mind at the moment, just so that it's used to get the offset gap and posIncr.\n\nRobert, perhaps we should add an explicit test, in core, which ensures we can pass a null Analyzer to IWC when we index only NOT_ANALYZED and NumericFields?",
            "date": "2011-07-13T03:22:30.722+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nRobert, perhaps we should add an explicit test, in core, which ensures we can pass a null Analyzer to IWC when we index only NOT_ANALYZED and NumericFields?\n{quote}\n\nI don't like the idea of any kind of test or documentation that says we explicitly support null.\nThen, suddenly null is an officially supported value for Analyzer and people start wanting it in other places.\n\nIf we must have a test here to proceed, I would instead prefer to cancel as Won't fix.\n",
            "date": "2011-07-13T10:11:06.014+0000",
            "id": 2
        },
        {
            "author": "Michael McCandless",
            "body": "Also, remember we are wanting to fully decouple indexing from analysis (LUCENE-2309) at which point IndexWriter(Config) will no longer even see an Analyzer; the use of an Analyzer (or any other app-specific pipeline/capability/etc.) will be hidden to IW under the IndexableField API.  At that point this \"problem\" of having to pass some random Analyzer or null should go away, because you should then only be required to pass an Analyzer to FieldTypes that do analyze their field text.",
            "date": "2011-07-13T10:17:59.479+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "{quote}\nAt that point this \"problem\" of having to pass some random Analyzer or null should go away, because you should then only be required to pass an Analyzer to FieldTypes that do analyze their field text.\n{quote}\n\nRight, and the last thing i want to see is some sophisticated backwards layer / crappy hacks because we enabled null on this issue!\n\nBasically, I think we should make it work right now, but undocumented and unspecified. If you pass Analyzer=null to IW you need to be prepared for NPE.\n",
            "date": "2011-07-13T10:35:50.926+0000",
            "id": 4
        },
        {
            "author": "Shai Erera",
            "body": "Ok I agree. +1 to commit.",
            "date": "2011-07-13T10:48:55.287+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "Shai you want to take this? I am working on something else at the moment!",
            "date": "2011-07-14T18:46:26.951+0000",
            "id": 6
        },
        {
            "author": "Shai Erera",
            "body": "Yes, I'll commit this. Thanks !",
            "date": "2011-07-14T18:48:07.618+0000",
            "id": 7
        },
        {
            "author": "Shai Erera",
            "body": "Committed revision 1147530 (trunk).\nCommitted revision 1147532 (3x).\n\nI did not include a CHANGES entry, because we don't want to advertise null as a supported value for IW.\n\nThanks Robert !",
            "date": "2011-07-17T05:39:01.076+0000",
            "id": 8
        }
    ],
    "component": "",
    "description": "This seems wierd, if you analyze only NOT_ANALYZED fields, you must have an analyzer (null will not work)\nbecause documentsinverter wants it for things like offsetGap",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3307",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "don't require an analyzer, if all fields are NOT_ANALYZED",
    "systemSpecification": true,
    "version": ""
}