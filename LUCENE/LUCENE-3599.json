{
    "comments": [
        {
            "author": "David Smiley",
            "body": "The attached patch changes the documentation and parameter names of haversine() to reflect how callers are actually calling it -- in lat,lon order. I fixed the algorithm for this as well.  Furthermore, in Solr's HaversineFunction I changed some local variable names to reflect the true order.",
            "date": "2011-11-27T07:01:57.045+0000",
            "id": 0
        },
        {
            "author": "Hoss Man",
            "body": "Oy ... I think my eyes are bleeding trying to make sense of the x/y swaps in this patch.\n\nDavid: thanks for catching this",
            "date": "2011-11-29T22:44:11.871+0000",
            "id": 1
        },
        {
            "author": "Hoss Man",
            "body": "Committed revision 1208118. - trunk\nCommitted revision 1208120. - 3x\n",
            "date": "2011-11-29T22:44:45.081+0000",
            "id": 2
        }
    ],
    "component": "modules/spatial",
    "description": "DistanceUtils.haversine() is coded in a way that is erroneous based on the documented order of the parameters.  The parameters are defined as (x1,y1,x2,y2,radius)  -- i.e. lon,lat order.  The code implementing the algorithm, however, is as if the meaning of x and y are transposed, which means that if you supply the arguments in lat,lon (y,x) order, you will get the correct behavior.  It turns out that all callers of this method do this!\n\nFYI I found out about this bug since it is inherited code in LSP (lucene-spatial-playground) and I have been supplying parameters according to its documented order.  Apparently I shouldn't do that ;-)",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3599",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "haversine() is broken / misdocumented",
    "systemSpecification": true,
    "version": "3.5"
}