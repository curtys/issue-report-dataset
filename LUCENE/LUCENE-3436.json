{
    "comments": [
        {
            "author": "James Dyer",
            "body": "- Creates a new Enum, \"SuggestMode\".  \n- SpellChecker methods that used to take a boolean \"morePopular\" have been converted to use the new Enum.\n- Old SpellChecker methods have been marked as @Deprecated with comments (can be removed entirely for Trunk.  Included here for possible 3.x inclusion)\n- A new Unit Test method for 0.a.l.s.s.SpellChecker tests \"SUGGEST_MORE_POPULAR\" and \"SUGGEST_ALWAYS\" (prior, \"morePopular\" had no test coverage).\n- A new Unit Test scenario added to TestDirectSpellChecker for testing \"SUGGEST_ALWAYS\".",
            "date": "2011-09-14T20:11:49.901+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "Hi James, thanks for this work!\n\nI agree, I think we should do this refactoring (and backport to 3.x so we can nuke the deprecations from trunk).\n\nonly one thing, can we fix the indentation in the patch?\nIn general we use 2 spaces (not tabs) and spaces after if keyword, etc\n\nso instead of:\n{noformat}\nif(suggestMode==SuggestMode.SUGGEST_ALWAYS)\n\t{\n    \t\tir = null;\n    \t\tfield = null;\n    \t}\n{noformat}\n\n{noformat}\nif (suggestMode == SuggestMode.SUGGEST_ALWAYS) {\n  ir = null;\n  field = null;\n}\n{noformat}\n\nfor some of the IDEs (I dont know what editor you use?) we have style configurations: there are some links to these configuration files\nlocated here: http://wiki.apache.org/lucene-java/HowToContribute\n\nThanks again!",
            "date": "2011-09-15T16:12:17.885+0000",
            "id": 1
        },
        {
            "author": "James Dyer",
            "body": "I downloaded Eclipse-lucene-codestyle.xml and re-formatted the lines I changed/added.  Hopefully everything is to spec now.",
            "date": "2011-09-15T18:56:21.414+0000",
            "id": 2
        },
        {
            "author": "Robert Muir",
            "body": "Thanks James!",
            "date": "2011-09-16T14:09:35.309+0000",
            "id": 3
        },
        {
            "author": "Uwe Schindler",
            "body": "Bulk close after release of 3.5",
            "date": "2011-11-27T12:29:28.315+0000",
            "id": 4
        }
    ],
    "component": "modules/spellchecker",
    "description": "This is a spin-off from SOLR-2585.\n\nCurrently o.a.l.s.s.SpellChecker and o.a.l.s.s.DirectSpellChecker support two \"Suggest Modes\":\n1. Suggest for terms that are not in the index.\n2. Suggest \"more popular\" terms.\n\nThis issue is to add a third Suggest Mode:\n3. Suggest always.\n\nThis will assist users in developing context-sensitive spell suggestions and/or did-you-mean suggestions.  See SOLR-2585 for a full discussion.\n\nNote that o.a.l.s.s.SpellChecker already can support this functionality, if the user passes in a NULL term & IndexReader.  This, however, is not intutive.  o.a.l.s.s.DirectSpellChecker currently has no support for this third Suggest Mode.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3436",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Spellchecker \"Suggest Mode\" Support",
    "systemSpecification": true,
    "version": "3.3, 4.0-ALPHA"
}