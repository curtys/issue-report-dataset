{
    "comments": [
        {
            "author": "Doron Cohen",
            "body": "refine summary and beautify description.",
            "date": "2007-12-20T12:35:24.389+0000",
            "id": 0
        },
        {
            "author": "Doron Cohen",
            "body": "Test failing with this bug.",
            "date": "2007-12-20T12:36:53.600+0000",
            "id": 1
        },
        {
            "author": "Doron Cohen",
            "body": "It seems that this is a serious problem with Hits based search. An application deleting returned hits as in this case will actually get \"holes\" in the returned docs, every time getMoreDocs() is internally invoked. \n\nFor instance, say all docs match, and the app deletes doc 50. Hits 0 to 99 are ok, they will contain docs 0 to 99. But because of the deletion, hit 100 will be doc 101, i.e. doc 100 was skipped.\n\nFixing this behavior is possible in the Hits class if only hits are deleted. I.e. if, while getting hit n, hits m where m<=n are deleted. But if a higher doc is deleted, a doc that would be seen later, after more internal calls to getMoreDocs(), things get more messy, and an ArrayIndexOutOfBound exception can be caused, as in this bug.\n\nNote that the latter case can also happen if another thread deletes such a \"front\" hit doc. \n\nI think the proper exception for the latter case is ConcurrentModificationException, and Hits should be changed to distinguish between the two.",
            "date": "2007-12-20T23:21:57.657+0000",
            "id": 2
        },
        {
            "author": "Doron Cohen",
            "body": "Patch with tests for the two scenarios described above, and a fix for Hits.\n\nThe fix works as follows:\n* Records the # deleted docs when the search starts.\n* Records the total number of hits as found in the\n   first call to getMoreDocs(). \n* After every additional call to getMoreDocs(), the # deleted \n   docs is checked again. \n   If it was modified, the new hits are checked to see if some \n   of the old hits are missing, due to deletions in between. \n   The start point for copying new hits into the array of hits \n    is updated accordingly. Also updated is the totalHits count.\n*  Trying to fetch a hit that is not higher than the original # hits\n   but is larger than the current number of hits, triggers \n   a ConcurrentModificationException, because this hit was\n   deleted before we were able to retrieve it.\n\nNote that when searching not with an IndexSearcher,\nthere is no access for counting deletions and so the two\narrays check is always performed - as part of getMoreDocs().\n   \nAll tests pass.\n",
            "date": "2007-12-20T23:54:18.702+0000",
            "id": 3
        },
        {
            "author": "Doron Cohen",
            "body": "An updated patch:\n- more intensive tests.\n- Hits now compares status between iterations so that it checks\n  for hits deletions only if anything changed from previous invocation\n  of getMoreDocs().\n- Javadocs updated explaining when ConcurrentModificationException is thrown.\n",
            "date": "2007-12-21T13:27:49.151+0000",
            "id": 4
        },
        {
            "author": "Doron Cohen",
            "body": "Committed.",
            "date": "2007-12-23T20:57:46.968+0000",
            "id": 5
        }
    ],
    "component": "core/index",
    "description": "For background user discussion:\nhttp://www.nabble.com/document-deletion-problem-to14414351.html\n\n{code}\nHits h = m_indexSearcher.search(q); // Returns 11475 documents \nfor(int i = 0; i < h.length(); i++) \n{ \n  int doc = h.id(i); \n  m_indexSearcher.getIndexReader().deleteDocument(doc);  <-- causes ArrayIndexOutOfBoundsException when i = 6400\n} \n{code}\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1096",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Deleting docs of all returned Hits during search causes ArrayIndexOutOfBoundsException",
    "systemSpecification": true,
    "version": "2.1"
}