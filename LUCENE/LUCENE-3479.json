{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "Thanks for opening this Mike!\nAttached is my recommended \"fix\".\n\nHere is what I think is the issue:\n* the two bose einstein models (Be/G) have practical problems if you go with the original formula (e.g. NaN scores for stopwords)\n* separately, Be is worse because if the normalized tf value (tfn) is larger than the totalTermFreq, it will return NaN. This can happen for a number of reasons, especially since tfn is an arbitrary function (Normalization), forgetting about lucene-specific things like boosts.\n* the workaround I added for this works good on average, but its not perfect: in this case by tweaking the basic model this way, super large tfn values can cause problems with small indexes because the \"hack\" causes it to grow to slow and its overcompensated by the aftereffect.\n* the good news is that model G is a different approximation that doesn't need this second hack, so I think we should just recommend users consider this instead.",
            "date": "2011-10-01T00:39:10.014+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "I think this fix is OK?  Can we commit this?",
            "date": "2011-10-10T23:16:43.759+0000",
            "id": 1
        }
    ],
    "component": "modules/grouping",
    "description": "{noformat}\nant test -Dtestcase=TestGrouping -Dtestmethod=testRandom -Dtests.seed=295cdb78b4a442d4:-4c5d64ef4d698c27:-425d4c1eb87211ba\n{noformat}\n\nfails with this on current trunk:\n\n{noformat}\n\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestGrouping -Dtestmethod=testRandom -Dtests.seed=295cdb78b4a442d4:-4c5d64ef4d698c27:-425d4c1eb87211ba\n    [junit] NOTE: test params are: codec=RandomCodecProvider: {id=MockRandom, content=MockSep, sort2=SimpleText, groupend=Pulsing(freqCutoff=3 minBlockSize=65 maxBlockSize=132), sort1=Memory, group=Memory}, sim=RandomSimilarityProvider(queryNorm=true,coord=false): {id=DFR I(F)L2, content=DFR BeL3(800.0), sort2=DFR GL3(800.0), groupend=DFR G2, sort1=DFR GB3(800.0), group=LM Jelinek-Mercer(0.700000)}, locale=zh_TW, timezone=America/Indiana/Indianapolis\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestGrouping]\n    [junit] NOTE: Linux 2.6.33.6-147.fc13.x86_64 amd64/Sun Microsystems Inc. 1.6.0_21 (64-bit)/cpus=24,threads=1,free=143246344,total=281804800\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testRandom(org.apache.lucene.search.grouping.TestGrouping):\tFAILED\n    [junit] expected:<11> but was:<7>\n    [junit] junit.framework.AssertionFailedError: expected:<11> but was:<7>\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:148)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] \tat org.apache.lucene.search.grouping.TestGrouping.assertEquals(TestGrouping.java:980)\n    [junit] \tat org.apache.lucene.search.grouping.TestGrouping.testRandom(TestGrouping.java:865)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$2$1.evaluate(LuceneTestCase.java:611)\n    [junit] \n    [junit] \n{noformat}\n\nI dug for a while... the test is a bit sneaky because it compares sorted docs (by score) across 2 indexes.  Index #1 has no deletions; Index #2 has same docs, but organized into doc blocks by group, and has some deletions.  In theory (I think) even though the deletions will cause scores to differ across the two indices, it should not alter the sort order of the docs.  Here is the explain output of the docs that sorted differently:\n\n{noformat}\n#1: top hit in the \"has deletes doc-block\" index (id=239):\n\nexplain: 2.394486 = (MATCH) weight(content:real1 in 292)\n[DFRSimilarity], result of:\n 2.394486 = score(DFRSimilarity, doc=292, freq=1.0), computed from:\n   1.0 = termFreq=1\n   41.944084 = NormalizationH3, computed from:\n     1.0 = tf\n     5.3102274 = avgFieldLength\n     2.56 = len\n   102.829 = BasicModelBE, computed from:\n     41.944084 = tfn\n     880.0 = numberOfDocuments\n     239.0 = totalTermFreq\n   0.023286095 = AfterEffectL, computed from:\n     41.944084 = tfn\n\n\n#2: hit in the \"no deletes normal index\" (id=229)\n\nID=229 explain=2.382285 = (MATCH) weight(content:real1 in 225)\n[DFRSimilarity], result of:\n 2.382285 = score(DFRSimilarity, doc=225, freq=1.0), computed from:\n   1.0 = termFreq=1\n   41.765594 = NormalizationH3, computed from:\n     1.0 = tf\n     5.3218827 = avgFieldLength\n     10.24 = len\n   101.879845 = BasicModelBE, computed from:\n     41.765594 = tfn\n     786.0 = numberOfDocuments\n     215.0 = totalTermFreq\n   0.023383282 = AfterEffectL, computed from:\n     41.765594 = tfn\n\nThen I went and called explain on the \"no deletes normal index\" for\nthe top doc (id=239):\n\nexplain: 2.3822558 = (MATCH) weight(content:real1 in 17)\n[DFRSimilarity], result of:\n 2.3822558 = score(DFRSimilarity, doc=17, freq=1.0), computed from:\n   1.0 = termFreq=1\n   42.165264 = NormalizationH3, computed from:\n     1.0 = tf\n     5.3218827 = avgFieldLength\n     2.56 = len\n   102.8307 = BasicModelBE, computed from:\n     42.165264 = tfn\n     786.0 = numberOfDocuments\n     215.0 = totalTermFreq\n   0.023166776 = AfterEffectL, computed from:\n     42.165264 = tfn\n{noformat}",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3479",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "TestGrouping failure",
    "systemSpecification": true,
    "version": ""
}