{
    "comments": [
        {
            "author": "Shai Erera",
            "body": "Patch (3x) adds 'tests.iter.min' which allows stop iterating if at least N instances ran and there was a failure. The last failed iteration is printed.",
            "date": "2011-03-30T13:14:12.518+0000",
            "id": 0
        },
        {
            "author": "Shai Erera",
            "body": "Since it's a trivial change, I plan to commit this either later today or tomorrow.",
            "date": "2011-03-30T14:50:47.824+0000",
            "id": 1
        },
        {
            "author": "Robert Muir",
            "body": "I took a glance, looks good to me!",
            "date": "2011-03-30T15:27:22.826+0000",
            "id": 2
        },
        {
            "author": "Shai Erera",
            "body": "Committed revision 1087033 (3x).\nCommitted revision 1087036 (trunk).",
            "date": "2011-03-30T18:47:59.915+0000",
            "id": 3
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:16.994+0000",
            "id": 4
        }
    ],
    "component": "general/test",
    "description": "As discussed here: http://lucene.472066.n3.nabble.com/Stop-iterating-if-testsFailed-td2747426.html, this issue proposes to add tests.iter.min in order to allow one better control over how many iterations are run:\n\n* Keep tests.iter as it is today\n* Add tests.iter.min (default to tests.iter) to denote that at least N instances of the test should run until there's either a failure or tests.iter is reached.\n\nIf one wants to run until the first failure, he can set tests.iter.min=1 and tests.iter=X -- up to X instances of the test will run, until the first failure.\n\nSimilarly, one can set tests.iter=N to denote that at least N instances should run, regardless if there were failures, but if after N runs a failure occurred, the test should stop.\n\nNote: unlike what's proposed on the thread, tests.iter.max is dropped from this proposal as it's exactly like tests.iter, so no point in having two similar parameters.\n\nI will work on a patch tomorrow.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3002",
    "issuetypeClassified": "OTHER",
    "issuetypeTracker": "OTHER",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Add tests.iter.min to improve controlling tests.iter's behavior",
    "systemSpecification": true,
    "version": ""
}