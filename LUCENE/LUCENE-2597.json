{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.\n\nOnly a few query impls were affected, but many tests were directly passing composite readers to the low level API.  I added a new helper class SlowMultiReaderWrapper that one can use to wrap an existing composite reader to make it [inefficiently] pretend it's an atomic reader.",
            "date": "2010-08-11T16:00:32.226+0000",
            "id": 0
        },
        {
            "author": "Michael McCandless",
            "body": "Forgot to resolve this...",
            "date": "2010-09-24T09:22:27.599+0000",
            "id": 1
        }
    ],
    "component": "core/search",
    "description": "Lucene does all searching/filtering per-segment, today, but there are a number of tests that directly invoke Scorer.scorer or Filter.getDocIdSet on a composite reader.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-2597",
    "issuetypeClassified": "REFACTORING",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Query scorers should not use MultiFields",
    "systemSpecification": true,
    "version": ""
}