{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Attached patch.  I added a unit test showing the issue.  To do this, I\nadded this method to IndexWriter:\n\n  boolean testPoint(String name)\n\nThen in DocumentsWriter.ThreadState.init I added this:\n\n  assert writer.testPoint(\"DocumentsWriter.ThreadState.init start\");\n\nThen, tests can subclass IndexWriter and do interesting things at each\nof these test points.  We can add further test points over time...\n\nThen I fixed the issue and the tests (& all tests) pass.  I'll commit\nin a day or two.",
            "date": "2008-03-01T13:32:19.965+0000",
            "id": 0
        },
        {
            "author": "Hoss Man",
            "body": "targeted for 2.3.2 bug fix release",
            "date": "2008-03-11T19:28:31.687+0000",
            "id": 1
        }
    ],
    "component": "core/index",
    "description": "If an exception is hit in the init method, DocumentsWriter incorrectly\nincrements numDocsInRAM when in fact the document is not added.\n\nSpinoff of this thread:\n\n  http://markmail.org/message/e76hgkgldxhakuaa\n\nThe root cause that led to the exception in init was actually due to\nincorrect use of Lucene's APIs (one thread still modifying the\nDocument while IndexWriter.addDocument is adding it) but still we\nshould protect against any exceptions coming out of init.\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-1198",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Exception in DocumentsWriter.ThreadState.init leads to corruption",
    "systemSpecification": true,
    "version": "2.3"
}