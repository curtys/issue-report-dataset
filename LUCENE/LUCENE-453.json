{
    "comments": [
        {
            "author": "Luc Vanlerberghe",
            "body": "The two assertMatches using the full index will pass.\nThe same assertMatches using a MultiSearcher or a ParallelMultiSearcher will fail.\n",
            "date": "2005-10-13T02:13:08.000+0000",
            "id": 0
        },
        {
            "author": "Luc Vanlerberghe",
            "body": "This fixes the case where both Strings are null.\n",
            "date": "2005-10-13T02:14:58.000+0000",
            "id": 1
        },
        {
            "author": "Daniel Naber",
            "body": "What about the other \"case\" statements in FieldDocSortedHitQueue that return 1 or -1 but never 0. Should these be patched the same way?\n",
            "date": "2005-10-19T04:34:49.000+0000",
            "id": 2
        },
        {
            "author": "Yonik Seeley",
            "body": "most of the other cases are guaranteed to never have null values (except for perhaps CUSTOM)?",
            "date": "2005-10-19T05:17:24.000+0000",
            "id": 3
        },
        {
            "author": "Yonik Seeley",
            "body": "Thanks for the patch Luc!\nI've applied it to the current dev version (1.9).",
            "date": "2005-11-10T14:58:21.000+0000",
            "id": 4
        }
    ],
    "component": "core/search",
    "description": "When using multiple sort criteria the first criterium that indicates a difference should be used.\nWhen a field does not exist for a given document, special rules apply.\nFrom what I see in the code, it is sorted as 0 for integer and float fields, and null Strings are sorted before others.\n\nThis works correctly in both Lucene 1.4.3 and in trunk as long as you use a single IndexSearcher (except perhaps in special cases, see other bug reports like LUCENE-374).\n\nHowever, in MultiSearcher and ParallelMultiSearcher, the results of the separate IndexSearchers are merged and there an error occurs.\nThe bug is located in FieldDocSortedHitQueue.\n\nIt can even be demonstrated by passing a single indexSearcher to a MultiSearcher.\n\nTestCase and patch follow.",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "LUCENE-453",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Using MultiSearcher and ParallelMultiSearcher can change the sort order.",
    "systemSpecification": true,
    "version": ""
}