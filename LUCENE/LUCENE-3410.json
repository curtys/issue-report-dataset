{
    "comments": [
        {
            "author": "Robert Muir",
            "body": "I think flags is a good solution here, its very simple and will improve readability: the backwards compat is obvious too.\n\nI think its a bit scary to use enumset, it will involve complicated generics and the jdk itself does not seem to use enumset anywhere!\ne.g. Pattern.compile(String regex, int flags)\n\nI think a builder is overkill here, if someone wants a builder they can always make a builder on top of flags for their own use.\n",
            "date": "2011-08-31T16:06:41.166+0000",
            "id": 0
        },
        {
            "author": "Yonik Seeley",
            "body": "For historical context, the reason I used an int for stuff like generateWordParts was that I had the idea of using it as a minimum (i.e. only generate word parts that are over a certain size, etc).  This obviously never happened though ;-)",
            "date": "2011-08-31T16:07:55.579+0000",
            "id": 1
        },
        {
            "author": "Uwe Schindler",
            "body": "OK, if those integers are always used only as boolean flags, I would prefer a single (int flags) parameter. No builder pattern needed. I would maybe prefer a long to make it extensibler (but 31 flags should be enough, too).",
            "date": "2011-08-31T16:17:10.699+0000",
            "id": 2
        },
        {
            "author": "Chris Male",
            "body": "Patch for WDF & co, converting them over to int flags.\n\nOld behavior is deprecated but we could do that in 3x and nuke in trunk.",
            "date": "2011-09-01T04:10:08.006+0000",
            "id": 3
        },
        {
            "author": "Chris Male",
            "body": "Plan to commit soon if theres no objections.",
            "date": "2011-09-06T14:35:23.286+0000",
            "id": 4
        },
        {
            "author": "Uwe Schindler",
            "body": "+1",
            "date": "2011-09-06T14:38:55.880+0000",
            "id": 5
        },
        {
            "author": "Robert Muir",
            "body": "looks good overall, a couple tiny nitpicks:\n\n* looks like there is some dead code in WordDelimiterIterator (the booleans)\n* should the iterator maybe keep the booleans and not use flags? just an idea, because the iterator doesn't \"make use\" of all the flags. its also not a public class and just a helper class to simplify the filter, so i think its ok for it to take 3 booleans?",
            "date": "2011-09-06T14:43:00.827+0000",
            "id": 6
        },
        {
            "author": "Chris Male",
            "body": "{quote}\nshould the iterator maybe keep the booleans and not use flags? just an idea, because the iterator doesn't \"make use\" of all the flags. its also not a public class and just a helper class to simplify the filter, so i think its ok for it to take 3 booleans?\n{quote}\n\nYeah I thought about this as well.  It would make the iterator clearer since it wouldn't rely on people looking at the Filter's flags.  I will make the change.",
            "date": "2011-09-06T14:51:20.334+0000",
            "id": 7
        },
        {
            "author": "Chris Male",
            "body": "Patch with the Iterator back to using booleans.  Going to commit.",
            "date": "2011-09-07T04:29:57.045+0000",
            "id": 8
        },
        {
            "author": "Chris Male",
            "body": "Better patch.",
            "date": "2011-09-07T04:39:59.320+0000",
            "id": 9
        },
        {
            "author": "Chris Male",
            "body": "Committed revision 1165995.",
            "date": "2011-09-07T04:43:33.454+0000",
            "id": 10
        },
        {
            "author": "Robert Muir",
            "body": "any objections to backporting? we could then remove the deprecation in trunk.",
            "date": "2011-09-07T14:14:29.198+0000",
            "id": 11
        },
        {
            "author": "Chris Male",
            "body": "None whatsoever.",
            "date": "2011-09-07T14:16:58.972+0000",
            "id": 12
        },
        {
            "author": "Robert Muir",
            "body": "I can take it if you want Chris, unless you want to do the honors?",
            "date": "2011-09-07T14:18:52.062+0000",
            "id": 13
        },
        {
            "author": "Chris Male",
            "body": "Go for it!",
            "date": "2011-09-07T14:20:58.557+0000",
            "id": 14
        },
        {
            "author": "Robert Muir",
            "body": "backported to 3.5",
            "date": "2011-09-08T15:57:26.637+0000",
            "id": 15
        },
        {
            "author": "Uwe Schindler",
            "body": "Bulk close after release of 3.5",
            "date": "2011-11-27T12:29:31.322+0000",
            "id": 16
        }
    ],
    "component": "modules/analysis",
    "description": "Currently WordDelimiterFilter's constructor is:\n\n{code}\npublic WordDelimiterFilter(TokenStream in,\n\t                             byte[] charTypeTable,\n\t                             int generateWordParts,\n\t                             int generateNumberParts,\n\t                             int catenateWords,\n\t                             int catenateNumbers,\n\t                             int catenateAll,\n\t                             int splitOnCaseChange,\n\t                             int preserveOriginal,\n\t                             int splitOnNumerics,\n\t                             int stemEnglishPossessive,\n\t                             CharArraySet protWords) {\n{code}\n\nwhich means its instantiation is an unreadable combination of 1s and 0s.  \n\nWe should improve this by either using a Builder, 'int flags' or an EnumSet.",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3410",
    "issuetypeClassified": "RFE",
    "issuetypeTracker": "IMPROVEMENT",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "Make WordDelimiterFilter's instantiation more readable",
    "systemSpecification": true,
    "version": ""
}