{
    "comments": [
        {
            "author": "Michael McCandless",
            "body": "Patch.",
            "date": "2011-04-14T16:01:54.222+0000",
            "id": 0
        },
        {
            "author": "Robert Muir",
            "body": "Bulk closing for 3.2",
            "date": "2011-06-03T16:37:17.901+0000",
            "id": 1
        }
    ],
    "component": "",
    "description": "If you have two identical docs with tokens a b c all zero pos-incr (ie\nthey occur on the same position), and you run a MultiPhraseQuery with\n[a, b] and [c] (all pos incr 0)... then the two docs will get\ndifferent scores despite being identical.\n\nAdmittedly it's a strange query... but I think the scorer ought to\ncount the phrase as having tf=1 for each doc.\n\nThe problem is that we are missing a tie-breaker for the PhraseQuery\nused by ExactPhraseScorer, and so the PQ ends up flip/flopping such\nthat every other document gets the same score.  Ie, even docIDs all\nget one score and odd docIDs all get another score.\n\nOnce I added the hard tie-breaker (ord) the scores are the same.\n\nHowever... there's a separate bug, that can over-count the tf, such\nthat if I create the MPQ like this:\n{noformat}\n  mpq.add(new Term[] {new Term(\"field\", \"a\")}, 0);\n  mpq.add(new Term[] {new Term(\"field\", \"b\"), new Term(\"field\", \"c\")}, 0);\n{noformat}\n\nI get tf=2 per doc, but if I create it like this:\n\n{noformat}\n  mpq.add(new Term[] {new Term(\"field\", \"b\"), new Term(\"field\", \"c\")}, 0);\n  mpq.add(new Term[] {new Term(\"field\", \"a\")}, 0);\n{noformat}\n\nI get tf=1 (which I think is correct?).\n\nThis happens because MultipleTermPositions freely returns the same\nposition more than once: it just unions the positions of the two\nstreams, so when both have their term at pos=0, you'll get pos=0\ntwice, which is not good and leads to over-counting tf.\n\nUnfortunately, I don't see a performant way to fix that... and I'm not\nsure that it really matters that much in practice.\n\n\n\n\n",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "LUCENE-3029",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Minor",
    "product": "LUCENE",
    "project": "LUCENE",
    "summary": "MultiPhraseQuery assigns different scores to identical docs when using 0 pos-incr",
    "systemSpecification": true,
    "version": ""
}